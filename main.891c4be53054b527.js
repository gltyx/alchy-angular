(self.webpackChunkalchy_angular = self.webpackChunkalchy_angular || []).push([
  [179],
  {
    915: (Qi, Xi, Zr) => {
      "use strict";
      function qe(e) {
        return "function" == typeof e;
      }
      function ii(e) {
        const t = e((i) => {
          Error.call(i), (i.stack = new Error().stack);
        });
        return (
          (t.prototype = Object.create(Error.prototype)),
          (t.prototype.constructor = t),
          t
        );
      }
      const Ke = ii(
        (e) =>
          function (t) {
            e(this),
              (this.message = t
                ? `${t.length} errors occurred during unsubscription:\n${t
                    .map((i, r) => `${r + 1}) ${i.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = t);
          }
      );
      function Qr(e, n) {
        if (e) {
          const t = e.indexOf(n);
          0 <= t && e.splice(t, 1);
        }
      }
      class qt {
        constructor(n) {
          (this.initialTeardown = n),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let n;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: t } = this;
            if (t)
              if (((this._parentage = null), Array.isArray(t)))
                for (const o of t) o.remove(this);
              else t.remove(this);
            const { initialTeardown: i } = this;
            if (qe(i))
              try {
                i();
              } catch (o) {
                n = o instanceof Ke ? o.errors : [o];
              }
            const { _finalizers: r } = this;
            if (r) {
              this._finalizers = null;
              for (const o of r)
                try {
                  Ut(o);
                } catch (s) {
                  (n = n ?? []),
                    s instanceof Ke ? (n = [...n, ...s.errors]) : n.push(s);
                }
            }
            if (n) throw new Ke(n);
          }
        }
        add(n) {
          var t;
          if (n && n !== this)
            if (this.closed) Ut(n);
            else {
              if (n instanceof qt) {
                if (n.closed || n._hasParent(this)) return;
                n._addParent(this);
              }
              (this._finalizers =
                null !== (t = this._finalizers) && void 0 !== t ? t : []).push(
                n
              );
            }
        }
        _hasParent(n) {
          const { _parentage: t } = this;
          return t === n || (Array.isArray(t) && t.includes(n));
        }
        _addParent(n) {
          const { _parentage: t } = this;
          this._parentage = Array.isArray(t) ? (t.push(n), t) : t ? [t, n] : n;
        }
        _removeParent(n) {
          const { _parentage: t } = this;
          t === n ? (this._parentage = null) : Array.isArray(t) && Qr(t, n);
        }
        remove(n) {
          const { _finalizers: t } = this;
          t && Qr(t, n), n instanceof qt && n._removeParent(this);
        }
      }
      qt.EMPTY = (() => {
        const e = new qt();
        return (e.closed = !0), e;
      })();
      const _r = qt.EMPTY;
      function yr(e) {
        return (
          e instanceof qt ||
          (e && "closed" in e && qe(e.remove) && qe(e.add) && qe(e.unsubscribe))
        );
      }
      function Ut(e) {
        qe(e) ? e() : e.unsubscribe();
      }
      const J = {
          onUnhandledError: null,
          onStoppedNotification: null,
          Promise: void 0,
          useDeprecatedSynchronousErrorHandling: !1,
          useDeprecatedNextContext: !1,
        },
        te = {
          setTimeout(e, n, ...t) {
            const { delegate: i } = te;
            return i?.setTimeout
              ? i.setTimeout(e, n, ...t)
              : setTimeout(e, n, ...t);
          },
          clearTimeout(e) {
            const { delegate: n } = te;
            return (n?.clearTimeout || clearTimeout)(e);
          },
          delegate: void 0,
        };
      function Ee(e) {
        te.setTimeout(() => {
          const { onUnhandledError: n } = J;
          if (!n) throw e;
          n(e);
        });
      }
      function A() {}
      const R = j("C", void 0, void 0);
      function j(e, n, t) {
        return { kind: e, value: n, error: t };
      }
      let at = null;
      function tt(e) {
        if (J.useDeprecatedSynchronousErrorHandling) {
          const n = !at;
          if ((n && (at = { errorThrown: !1, error: null }), e(), n)) {
            const { errorThrown: t, error: i } = at;
            if (((at = null), t)) throw i;
          }
        } else e();
      }
      class fe extends qt {
        constructor(n) {
          super(),
            (this.isStopped = !1),
            n
              ? ((this.destination = n), yr(n) && n.add(this))
              : (this.destination = Rd);
        }
        static create(n, t, i) {
          return new Z(n, t, i);
        }
        next(n) {
          this.isStopped
            ? pa(
                (function H(e) {
                  return j("N", e, void 0);
                })(n),
                this
              )
            : this._next(n);
        }
        error(n) {
          this.isStopped
            ? pa(
                (function N(e) {
                  return j("E", void 0, e);
                })(n),
                this
              )
            : ((this.isStopped = !0), this._error(n));
        }
        complete() {
          this.isStopped
            ? pa(R, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(n) {
          this.destination.next(n);
        }
        _error(n) {
          try {
            this.destination.error(n);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const de = Function.prototype.bind;
      function Ve(e, n) {
        return de.call(e, n);
      }
      class ee {
        constructor(n) {
          this.partialObserver = n;
        }
        next(n) {
          const { partialObserver: t } = this;
          if (t.next)
            try {
              t.next(n);
            } catch (i) {
              St(i);
            }
        }
        error(n) {
          const { partialObserver: t } = this;
          if (t.error)
            try {
              t.error(n);
            } catch (i) {
              St(i);
            }
          else St(n);
        }
        complete() {
          const { partialObserver: n } = this;
          if (n.complete)
            try {
              n.complete();
            } catch (t) {
              St(t);
            }
        }
      }
      class Z extends fe {
        constructor(n, t, i) {
          let r;
          if ((super(), qe(n) || !n))
            r = {
              next: n ?? void 0,
              error: t ?? void 0,
              complete: i ?? void 0,
            };
          else {
            let o;
            this && J.useDeprecatedNextContext
              ? ((o = Object.create(n)),
                (o.unsubscribe = () => this.unsubscribe()),
                (r = {
                  next: n.next && Ve(n.next, o),
                  error: n.error && Ve(n.error, o),
                  complete: n.complete && Ve(n.complete, o),
                }))
              : (r = n);
          }
          this.destination = new ee(r);
        }
      }
      function St(e) {
        J.useDeprecatedSynchronousErrorHandling
          ? (function ie(e) {
              J.useDeprecatedSynchronousErrorHandling &&
                at &&
                ((at.errorThrown = !0), (at.error = e));
            })(e)
          : Ee(e);
      }
      function pa(e, n) {
        const { onStoppedNotification: t } = J;
        t && te.setTimeout(() => t(e, n));
      }
      const Rd = {
          closed: !0,
          next: A,
          error: function ce(e) {
            throw e;
          },
          complete: A,
        },
        Ji =
          ("function" == typeof Symbol && Symbol.observable) || "@@observable";
      function pi(e) {
        return e;
      }
      function ws(e) {
        return 0 === e.length
          ? pi
          : 1 === e.length
          ? e[0]
          : function (t) {
              return e.reduce((i, r) => r(i), t);
            };
      }
      let wt = (() => {
        class e {
          constructor(t) {
            t && (this._subscribe = t);
          }
          lift(t) {
            const i = new e();
            return (i.source = this), (i.operator = t), i;
          }
          subscribe(t, i, r) {
            const o = (function ic(e) {
              return (
                (e && e instanceof fe) ||
                ((function nc(e) {
                  return e && qe(e.next) && qe(e.error) && qe(e.complete);
                })(e) &&
                  yr(e))
              );
            })(t)
              ? t
              : new Z(t, i, r);
            return (
              tt(() => {
                const { operator: s, source: a } = this;
                o.add(
                  s
                    ? s.call(o, a)
                    : a
                    ? this._subscribe(o)
                    : this._trySubscribe(o)
                );
              }),
              o
            );
          }
          _trySubscribe(t) {
            try {
              return this._subscribe(t);
            } catch (i) {
              t.error(i);
            }
          }
          forEach(t, i) {
            return new (i = tc(i))((r, o) => {
              const s = new Z({
                next: (a) => {
                  try {
                    t(a);
                  } catch (l) {
                    o(l), s.unsubscribe();
                  }
                },
                error: o,
                complete: r,
              });
              this.subscribe(s);
            });
          }
          _subscribe(t) {
            var i;
            return null === (i = this.source) || void 0 === i
              ? void 0
              : i.subscribe(t);
          }
          [Ji]() {
            return this;
          }
          pipe(...t) {
            return ws(t)(this);
          }
          toPromise(t) {
            return new (t = tc(t))((i, r) => {
              let o;
              this.subscribe(
                (s) => (o = s),
                (s) => r(s),
                () => i(o)
              );
            });
          }
        }
        return (e.create = (n) => new e(n)), e;
      })();
      function tc(e) {
        var n;
        return null !== (n = e ?? J.Promise) && void 0 !== n ? n : Promise;
      }
      const Nd = ii(
        (e) =>
          function () {
            e(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      let Ze = (() => {
        class e extends wt {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(t) {
            const i = new Cs(this, this);
            return (i.operator = t), i;
          }
          _throwIfClosed() {
            if (this.closed) throw new Nd();
          }
          next(t) {
            tt(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const i of this.currentObservers) i.next(t);
              }
            });
          }
          error(t) {
            tt(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = t);
                const { observers: i } = this;
                for (; i.length; ) i.shift().error(t);
              }
            });
          }
          complete() {
            tt(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: t } = this;
                for (; t.length; ) t.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var t;
            return (
              (null === (t = this.observers) || void 0 === t
                ? void 0
                : t.length) > 0
            );
          }
          _trySubscribe(t) {
            return this._throwIfClosed(), super._trySubscribe(t);
          }
          _subscribe(t) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(t),
              this._innerSubscribe(t)
            );
          }
          _innerSubscribe(t) {
            const { hasError: i, isStopped: r, observers: o } = this;
            return i || r
              ? _r
              : ((this.currentObservers = null),
                o.push(t),
                new qt(() => {
                  (this.currentObservers = null), Qr(o, t);
                }));
          }
          _checkFinalizedStatuses(t) {
            const { hasError: i, thrownError: r, isStopped: o } = this;
            i ? t.error(r) : o && t.complete();
          }
          asObservable() {
            const t = new wt();
            return (t.source = this), t;
          }
        }
        return (e.create = (n, t) => new Cs(n, t)), e;
      })();
      class Cs extends Ze {
        constructor(n, t) {
          super(), (this.destination = n), (this.source = t);
        }
        next(n) {
          var t, i;
          null ===
            (i =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.next) ||
            void 0 === i ||
            i.call(t, n);
        }
        error(n) {
          var t, i;
          null ===
            (i =
              null === (t = this.destination) || void 0 === t
                ? void 0
                : t.error) ||
            void 0 === i ||
            i.call(t, n);
        }
        complete() {
          var n, t;
          null ===
            (t =
              null === (n = this.destination) || void 0 === n
                ? void 0
                : n.complete) ||
            void 0 === t ||
            t.call(n);
        }
        _subscribe(n) {
          var t, i;
          return null !==
            (i =
              null === (t = this.source) || void 0 === t
                ? void 0
                : t.subscribe(n)) && void 0 !== i
            ? i
            : _r;
        }
      }
      function rc(e) {
        return qe(e?.lift);
      }
      function kt(e) {
        return (n) => {
          if (rc(n))
            return n.lift(function (t) {
              try {
                return e(t, this);
              } catch (i) {
                this.error(i);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function Tt(e, n, t, i, r) {
        return new oc(e, n, t, i, r);
      }
      class oc extends fe {
        constructor(n, t, i, r, o, s) {
          super(n),
            (this.onFinalize = o),
            (this.shouldUnsubscribe = s),
            (this._next = t
              ? function (a) {
                  try {
                    t(a);
                  } catch (l) {
                    n.error(l);
                  }
                }
              : super._next),
            (this._error = r
              ? function (a) {
                  try {
                    r(a);
                  } catch (l) {
                    n.error(l);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = i
              ? function () {
                  try {
                    i();
                  } catch (a) {
                    n.error(a);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var n;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: t } = this;
            super.unsubscribe(),
              !t &&
                (null === (n = this.onFinalize) ||
                  void 0 === n ||
                  n.call(this));
          }
        }
      }
      function Ae(e, n) {
        return kt((t, i) => {
          let r = 0;
          t.subscribe(
            Tt(i, (o) => {
              i.next(e.call(n, o, r++));
            })
          );
        });
      }
      function Sn(e) {
        return this instanceof Sn ? ((this.v = e), this) : new Sn(e);
      }
      function ge(e) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var t,
          n = e[Symbol.asyncIterator];
        return n
          ? n.call(e)
          : ((e = (function Ao(e) {
              var n = "function" == typeof Symbol && Symbol.iterator,
                t = n && e[n],
                i = 0;
              if (t) return t.call(e);
              if (e && "number" == typeof e.length)
                return {
                  next: function () {
                    return (
                      e && i >= e.length && (e = void 0),
                      { value: e && e[i++], done: !e }
                    );
                  },
                };
              throw new TypeError(
                n
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(e)),
            (t = {}),
            i("next"),
            i("throw"),
            i("return"),
            (t[Symbol.asyncIterator] = function () {
              return this;
            }),
            t);
        function i(o) {
          t[o] =
            e[o] &&
            function (s) {
              return new Promise(function (a, l) {
                !(function r(o, s, a, l) {
                  Promise.resolve(l).then(function (c) {
                    o({ value: c, done: a });
                  }, s);
                })(a, l, (s = e[o](s)).done, s.value);
              });
            };
        }
      }
      "function" == typeof SuppressedError && SuppressedError;
      const pw = (e) =>
        e && "number" == typeof e.length && "function" != typeof e;
      function gw(e) {
        return qe(e?.then);
      }
      function mw(e) {
        return qe(e[Ji]);
      }
      function _w(e) {
        return Symbol.asyncIterator && qe(e?.[Symbol.asyncIterator]);
      }
      function yw(e) {
        return new TypeError(
          `You provided ${
            null !== e && "object" == typeof e ? "an invalid object" : `'${e}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      const vw = (function OF() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
      function bw(e) {
        return qe(e?.[vw]);
      }
      function ww(e) {
        return (function gi(e, n, t) {
          if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
          var r,
            i = t.apply(e, n || []),
            o = [];
          return (
            (r = {}),
            s("next"),
            s("throw"),
            s("return"),
            (r[Symbol.asyncIterator] = function () {
              return this;
            }),
            r
          );
          function s(g) {
            i[g] &&
              (r[g] = function (m) {
                return new Promise(function (_, y) {
                  o.push([g, m, _, y]) > 1 || a(g, m);
                });
              });
          }
          function a(g, m) {
            try {
              !(function l(g) {
                g.value instanceof Sn
                  ? Promise.resolve(g.value.v).then(c, u)
                  : f(o[0][2], g);
              })(i[g](m));
            } catch (_) {
              f(o[0][3], _);
            }
          }
          function c(g) {
            a("next", g);
          }
          function u(g) {
            a("throw", g);
          }
          function f(g, m) {
            g(m), o.shift(), o.length && a(o[0][0], o[0][1]);
          }
        })(this, arguments, function* () {
          const t = e.getReader();
          try {
            for (;;) {
              const { value: i, done: r } = yield Sn(t.read());
              if (r) return yield Sn(void 0);
              yield yield Sn(i);
            }
          } finally {
            t.releaseLock();
          }
        });
      }
      function Cw(e) {
        return qe(e?.getReader);
      }
      function mi(e) {
        if (e instanceof wt) return e;
        if (null != e) {
          if (mw(e))
            return (function AF(e) {
              return new wt((n) => {
                const t = e[Ji]();
                if (qe(t.subscribe)) return t.subscribe(n);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(e);
          if (pw(e))
            return (function PF(e) {
              return new wt((n) => {
                for (let t = 0; t < e.length && !n.closed; t++) n.next(e[t]);
                n.complete();
              });
            })(e);
          if (gw(e))
            return (function FF(e) {
              return new wt((n) => {
                e.then(
                  (t) => {
                    n.closed || (n.next(t), n.complete());
                  },
                  (t) => n.error(t)
                ).then(null, Ee);
              });
            })(e);
          if (_w(e)) return xw(e);
          if (bw(e))
            return (function RF(e) {
              return new wt((n) => {
                for (const t of e) if ((n.next(t), n.closed)) return;
                n.complete();
              });
            })(e);
          if (Cw(e))
            return (function NF(e) {
              return xw(ww(e));
            })(e);
        }
        throw yw(e);
      }
      function xw(e) {
        return new wt((n) => {
          (function LF(e, n) {
            var t, i, r, o;
            return (function ac(e, n, t, i) {
              return new (t || (t = Promise))(function (o, s) {
                function a(u) {
                  try {
                    c(i.next(u));
                  } catch (f) {
                    s(f);
                  }
                }
                function l(u) {
                  try {
                    c(i.throw(u));
                  } catch (f) {
                    s(f);
                  }
                }
                function c(u) {
                  u.done
                    ? o(u.value)
                    : (function r(o) {
                        return o instanceof t
                          ? o
                          : new t(function (s) {
                              s(o);
                            });
                      })(u.value).then(a, l);
                }
                c((i = i.apply(e, n || [])).next());
              });
            })(this, void 0, void 0, function* () {
              try {
                for (t = ge(e); !(i = yield t.next()).done; )
                  if ((n.next(i.value), n.closed)) return;
              } catch (s) {
                r = { error: s };
              } finally {
                try {
                  i && !i.done && (o = t.return) && (yield o.call(t));
                } finally {
                  if (r) throw r.error;
                }
              }
              n.complete();
            });
          })(e, n).catch((t) => n.error(t));
        });
      }
      function Xr(e, n, t, i = 0, r = !1) {
        const o = n.schedule(function () {
          t(), r ? e.add(this.schedule(null, i)) : this.unsubscribe();
        }, i);
        if ((e.add(o), !r)) return o;
      }
      function kn(e, n, t = 1 / 0) {
        return qe(n)
          ? kn((i, r) => Ae((o, s) => n(i, o, r, s))(mi(e(i, r))), t)
          : ("number" == typeof n && (t = n),
            kt((i, r) =>
              (function BF(e, n, t, i, r, o, s, a) {
                const l = [];
                let c = 0,
                  u = 0,
                  f = !1;
                const g = () => {
                    f && !l.length && !c && n.complete();
                  },
                  m = (y) => (c < i ? _(y) : l.push(y)),
                  _ = (y) => {
                    o && n.next(y), c++;
                    let v = !1;
                    mi(t(y, u++)).subscribe(
                      Tt(
                        n,
                        (w) => {
                          r?.(w), o ? m(w) : n.next(w);
                        },
                        () => {
                          v = !0;
                        },
                        void 0,
                        () => {
                          if (v)
                            try {
                              for (c--; l.length && c < i; ) {
                                const w = l.shift();
                                s ? Xr(n, s, () => _(w)) : _(w);
                              }
                              g();
                            } catch (w) {
                              n.error(w);
                            }
                        }
                      )
                    );
                  };
                return (
                  e.subscribe(
                    Tt(n, m, () => {
                      (f = !0), g();
                    })
                  ),
                  () => {
                    a?.();
                  }
                );
              })(i, r, e, t)
            ));
      }
      function ya(e = 1 / 0) {
        return kn(pi, e);
      }
      const vr = new wt((e) => e.complete());
      function Mw(e) {
        return e && qe(e.schedule);
      }
      function Og(e) {
        return e[e.length - 1];
      }
      function Dw(e) {
        return qe(Og(e)) ? e.pop() : void 0;
      }
      function cc(e) {
        return Mw(Og(e)) ? e.pop() : void 0;
      }
      function Sw(e, n = 0) {
        return kt((t, i) => {
          t.subscribe(
            Tt(
              i,
              (r) => Xr(i, e, () => i.next(r), n),
              () => Xr(i, e, () => i.complete(), n),
              (r) => Xr(i, e, () => i.error(r), n)
            )
          );
        });
      }
      function kw(e, n = 0) {
        return kt((t, i) => {
          i.add(e.schedule(() => t.subscribe(i), n));
        });
      }
      function Tw(e, n) {
        if (!e) throw new Error("Iterable cannot be null");
        return new wt((t) => {
          Xr(t, n, () => {
            const i = e[Symbol.asyncIterator]();
            Xr(
              t,
              n,
              () => {
                i.next().then((r) => {
                  r.done ? t.complete() : t.next(r.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      function dn(e, n) {
        return n
          ? (function qF(e, n) {
              if (null != e) {
                if (mw(e))
                  return (function HF(e, n) {
                    return mi(e).pipe(kw(n), Sw(n));
                  })(e, n);
                if (pw(e))
                  return (function UF(e, n) {
                    return new wt((t) => {
                      let i = 0;
                      return n.schedule(function () {
                        i === e.length
                          ? t.complete()
                          : (t.next(e[i++]), t.closed || this.schedule());
                      });
                    });
                  })(e, n);
                if (gw(e))
                  return (function jF(e, n) {
                    return mi(e).pipe(kw(n), Sw(n));
                  })(e, n);
                if (_w(e)) return Tw(e, n);
                if (bw(e))
                  return (function WF(e, n) {
                    return new wt((t) => {
                      let i;
                      return (
                        Xr(t, n, () => {
                          (i = e[vw]()),
                            Xr(
                              t,
                              n,
                              () => {
                                let r, o;
                                try {
                                  ({ value: r, done: o } = i.next());
                                } catch (s) {
                                  return void t.error(s);
                                }
                                o ? t.complete() : t.next(r);
                              },
                              0,
                              !0
                            );
                        }),
                        () => qe(i?.return) && i.return()
                      );
                    });
                  })(e, n);
                if (Cw(e))
                  return (function $F(e, n) {
                    return Tw(ww(e), n);
                  })(e, n);
              }
              throw yw(e);
            })(e, n)
          : mi(e);
      }
      class Tn extends Ze {
        constructor(n) {
          super(), (this._value = n);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(n) {
          const t = super._subscribe(n);
          return !t.closed && n.next(this._value), t;
        }
        getValue() {
          const { hasError: n, thrownError: t, _value: i } = this;
          if (n) throw t;
          return this._throwIfClosed(), i;
        }
        next(n) {
          super.next((this._value = n));
        }
      }
      function me(...e) {
        return dn(e, cc(e));
      }
      function Ew(e = {}) {
        const {
          connector: n = () => new Ze(),
          resetOnError: t = !0,
          resetOnComplete: i = !0,
          resetOnRefCountZero: r = !0,
        } = e;
        return (o) => {
          let s,
            a,
            l,
            c = 0,
            u = !1,
            f = !1;
          const g = () => {
              a?.unsubscribe(), (a = void 0);
            },
            m = () => {
              g(), (s = l = void 0), (u = f = !1);
            },
            _ = () => {
              const y = s;
              m(), y?.unsubscribe();
            };
          return kt((y, v) => {
            c++, !f && !u && g();
            const w = (l = l ?? n());
            v.add(() => {
              c--, 0 === c && !f && !u && (a = Ag(_, r));
            }),
              w.subscribe(v),
              !s &&
                c > 0 &&
                ((s = new Z({
                  next: (C) => w.next(C),
                  error: (C) => {
                    (f = !0), g(), (a = Ag(m, t, C)), w.error(C);
                  },
                  complete: () => {
                    (u = !0), g(), (a = Ag(m, i)), w.complete();
                  },
                })),
                mi(y).subscribe(s));
          })(o);
        };
      }
      function Ag(e, n, ...t) {
        if (!0 === n) return void e();
        if (!1 === n) return;
        const i = new Z({
          next: () => {
            i.unsubscribe(), e();
          },
        });
        return mi(n(...t)).subscribe(i);
      }
      function Oi(e, n) {
        return kt((t, i) => {
          let r = null,
            o = 0,
            s = !1;
          const a = () => s && !r && i.complete();
          t.subscribe(
            Tt(
              i,
              (l) => {
                r?.unsubscribe();
                let c = 0;
                const u = o++;
                mi(e(l, u)).subscribe(
                  (r = Tt(
                    i,
                    (f) => i.next(n ? n(l, f, u, c++) : f),
                    () => {
                      (r = null), a();
                    }
                  ))
                );
              },
              () => {
                (s = !0), a();
              }
            )
          );
        });
      }
      function uc(e, n = pi) {
        return (
          (e = e ?? YF),
          kt((t, i) => {
            let r,
              o = !0;
            t.subscribe(
              Tt(i, (s) => {
                const a = n(s);
                (o || !e(r, a)) && ((o = !1), (r = a), i.next(s));
              })
            );
          })
        );
      }
      function YF(e, n) {
        return e === n;
      }
      function dt(e) {
        for (let n in e) if (e[n] === dt) return n;
        throw Error("Could not find renamed property on target object.");
      }
      function Ud(e, n) {
        for (const t in n)
          n.hasOwnProperty(t) && !e.hasOwnProperty(t) && (e[t] = n[t]);
      }
      function hn(e) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) return "[" + e.map(hn).join(", ") + "]";
        if (null == e) return "" + e;
        if (e.overriddenName) return `${e.overriddenName}`;
        if (e.name) return `${e.name}`;
        const n = e.toString();
        if (null == n) return "" + n;
        const t = n.indexOf("\n");
        return -1 === t ? n : n.substring(0, t);
      }
      function Pg(e, n) {
        return null == e || "" === e
          ? null === n
            ? ""
            : n
          : null == n || "" === n
          ? e
          : e + " " + n;
      }
      const KF = dt({ __forward_ref__: dt });
      function yt(e) {
        return (
          (e.__forward_ref__ = yt),
          (e.toString = function () {
            return hn(this());
          }),
          e
        );
      }
      function ve(e) {
        return Fg(e) ? e() : e;
      }
      function Fg(e) {
        return (
          "function" == typeof e &&
          e.hasOwnProperty(KF) &&
          e.__forward_ref__ === yt
        );
      }
      function Rg(e) {
        return e && !!e.ɵproviders;
      }
      const Iw = "https://g.co/ng/security#xss";
      class P extends Error {
        constructor(n, t) {
          super(
            (function Wd(e, n) {
              return `NG0${Math.abs(e)}${n ? ": " + n : ""}`;
            })(n, t)
          ),
            (this.code = n);
        }
      }
      function Ce(e) {
        return "string" == typeof e ? e : null == e ? "" : String(e);
      }
      function Ng(e, n) {
        throw new P(-201, !1);
      }
      function Ai(e, n) {
        null == e &&
          (function _e(e, n, t, i) {
            throw new Error(
              `ASSERTION ERROR: ${e}` +
                (null == i ? "" : ` [Expected=> ${t} ${i} ${n} <=Actual]`)
            );
          })(n, e, null, "!=");
      }
      function V(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function Rt(e) {
        return { providers: e.providers || [], imports: e.imports || [] };
      }
      function $d(e) {
        return Ow(e, Gd) || Ow(e, Aw);
      }
      function Ow(e, n) {
        return e.hasOwnProperty(n) ? e[n] : null;
      }
      function qd(e) {
        return e && (e.hasOwnProperty(Lg) || e.hasOwnProperty(iR))
          ? e[Lg]
          : null;
      }
      const Gd = dt({ ɵprov: dt }),
        Lg = dt({ ɵinj: dt }),
        Aw = dt({ ngInjectableDef: dt }),
        iR = dt({ ngInjectorDef: dt });
      var ze = (function (e) {
        return (
          (e[(e.Default = 0)] = "Default"),
          (e[(e.Host = 1)] = "Host"),
          (e[(e.Self = 2)] = "Self"),
          (e[(e.SkipSelf = 4)] = "SkipSelf"),
          (e[(e.Optional = 8)] = "Optional"),
          e
        );
      })(ze || {});
      let Bg;
      function ri(e) {
        const n = Bg;
        return (Bg = e), n;
      }
      function Fw(e, n, t) {
        const i = $d(e);
        return i && "root" == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : t & ze.Optional
          ? null
          : void 0 !== n
          ? n
          : void Ng(hn(e));
      }
      const Et = globalThis;
      class Q {
        constructor(n, t) {
          (this._desc = n),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof t
              ? (this.__NG_ELEMENT_ID__ = t)
              : void 0 !== t &&
                (this.ɵprov = V({
                  token: this,
                  providedIn: t.providedIn || "root",
                  factory: t.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const dc = {},
        Ug = "__NG_DI_FLAG__",
        Yd = "ngTempTokenPath",
        sR = /\n/gm,
        Nw = "__source";
      let va;
      function Po(e) {
        const n = va;
        return (va = e), n;
      }
      function cR(e, n = ze.Default) {
        if (void 0 === va) throw new P(-203, !1);
        return null === va
          ? Fw(e, void 0, n)
          : va.get(e, n & ze.Optional ? null : void 0, n);
      }
      function O(e, n = ze.Default) {
        return (
          (function Pw() {
            return Bg;
          })() || cR
        )(ve(e), n);
      }
      function K(e, n = ze.Default) {
        return O(e, Kd(n));
      }
      function Kd(e) {
        return typeof e > "u" || "number" == typeof e
          ? e
          : 0 |
              (e.optional && 8) |
              (e.host && 1) |
              (e.self && 2) |
              (e.skipSelf && 4);
      }
      function Wg(e) {
        const n = [];
        for (let t = 0; t < e.length; t++) {
          const i = ve(e[t]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new P(900, !1);
            let r,
              o = ze.Default;
            for (let s = 0; s < i.length; s++) {
              const a = i[s],
                l = uR(a);
              "number" == typeof l
                ? -1 === l
                  ? (r = a.token)
                  : (o |= l)
                : (r = a);
            }
            n.push(O(r, o));
          } else n.push(O(i));
        }
        return n;
      }
      function hc(e, n) {
        return (e[Ug] = n), (e.prototype[Ug] = n), e;
      }
      function uR(e) {
        return e[Ug];
      }
      function Jr(e) {
        return { toString: e }.toString();
      }
      var Zd = (function (e) {
          return (
            (e[(e.OnPush = 0)] = "OnPush"), (e[(e.Default = 1)] = "Default"), e
          );
        })(Zd || {}),
        Pi = (function (e) {
          return (
            (e[(e.Emulated = 0)] = "Emulated"),
            (e[(e.None = 2)] = "None"),
            (e[(e.ShadowDom = 3)] = "ShadowDom"),
            e
          );
        })(Pi || {});
      const br = {},
        et = [],
        Qd = dt({ ɵcmp: dt }),
        $g = dt({ ɵdir: dt }),
        qg = dt({ ɵpipe: dt }),
        Bw = dt({ ɵmod: dt }),
        eo = dt({ ɵfac: dt }),
        fc = dt({ __NG_ELEMENT_ID__: dt }),
        Vw = dt({ __NG_ENV_ID__: dt });
      function zw(e, n, t) {
        let i = e.length;
        for (;;) {
          const r = e.indexOf(n, t);
          if (-1 === r) return r;
          if (0 === r || e.charCodeAt(r - 1) <= 32) {
            const o = n.length;
            if (r + o === i || e.charCodeAt(r + o) <= 32) return r;
          }
          t = r + 1;
        }
      }
      function Gg(e, n, t) {
        let i = 0;
        for (; i < t.length; ) {
          const r = t[i];
          if ("number" == typeof r) {
            if (0 !== r) break;
            i++;
            const o = t[i++],
              s = t[i++],
              a = t[i++];
            e.setAttribute(n, s, a, o);
          } else {
            const o = r,
              s = t[++i];
            jw(o) ? e.setProperty(n, o, s) : e.setAttribute(n, o, s), i++;
          }
        }
        return i;
      }
      function Hw(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function jw(e) {
        return 64 === e.charCodeAt(0);
      }
      function pc(e, n) {
        if (null !== n && 0 !== n.length)
          if (null === e || 0 === e.length) e = n.slice();
          else {
            let t = -1;
            for (let i = 0; i < n.length; i++) {
              const r = n[i];
              "number" == typeof r
                ? (t = r)
                : 0 === t ||
                  Uw(e, t, r, null, -1 === t || 2 === t ? n[++i] : null);
            }
          }
        return e;
      }
      function Uw(e, n, t, i, r) {
        let o = 0,
          s = e.length;
        if (-1 === n) s = -1;
        else
          for (; o < e.length; ) {
            const a = e[o++];
            if ("number" == typeof a) {
              if (a === n) {
                s = -1;
                break;
              }
              if (a > n) {
                s = o - 1;
                break;
              }
            }
          }
        for (; o < e.length; ) {
          const a = e[o];
          if ("number" == typeof a) break;
          if (a === t) {
            if (null === i) return void (null !== r && (e[o + 1] = r));
            if (i === e[o + 1]) return void (e[o + 2] = r);
          }
          o++, null !== i && o++, null !== r && o++;
        }
        -1 !== s && (e.splice(s, 0, n), (o = s + 1)),
          e.splice(o++, 0, t),
          null !== i && e.splice(o++, 0, i),
          null !== r && e.splice(o++, 0, r);
      }
      const Ww = "ng-template";
      function fR(e, n, t) {
        let i = 0,
          r = !0;
        for (; i < e.length; ) {
          let o = e[i++];
          if ("string" == typeof o && r) {
            const s = e[i++];
            if (t && "class" === o && -1 !== zw(s.toLowerCase(), n, 0))
              return !0;
          } else {
            if (1 === o) {
              for (; i < e.length && "string" == typeof (o = e[i++]); )
                if (o.toLowerCase() === n) return !0;
              return !1;
            }
            "number" == typeof o && (r = !1);
          }
        }
        return !1;
      }
      function $w(e) {
        return 4 === e.type && e.value !== Ww;
      }
      function pR(e, n, t) {
        return n === (4 !== e.type || t ? e.value : Ww);
      }
      function gR(e, n, t) {
        let i = 4;
        const r = e.attrs || [],
          o = (function yR(e) {
            for (let n = 0; n < e.length; n++) if (Hw(e[n])) return n;
            return e.length;
          })(r);
        let s = !1;
        for (let a = 0; a < n.length; a++) {
          const l = n[a];
          if ("number" != typeof l) {
            if (!s)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !pR(e, l, t)) || ("" === l && 1 === n.length))
                ) {
                  if (er(i)) return !1;
                  s = !0;
                }
              } else {
                const c = 8 & i ? l : n[++a];
                if (8 & i && null !== e.attrs) {
                  if (!fR(e.attrs, c, t)) {
                    if (er(i)) return !1;
                    s = !0;
                  }
                  continue;
                }
                const f = mR(8 & i ? "class" : l, r, $w(e), t);
                if (-1 === f) {
                  if (er(i)) return !1;
                  s = !0;
                  continue;
                }
                if ("" !== c) {
                  let g;
                  g = f > o ? "" : r[f + 1].toLowerCase();
                  const m = 8 & i ? g : null;
                  if ((m && -1 !== zw(m, c, 0)) || (2 & i && c !== g)) {
                    if (er(i)) return !1;
                    s = !0;
                  }
                }
              }
          } else {
            if (!s && !er(i) && !er(l)) return !1;
            if (s && er(l)) continue;
            (s = !1), (i = l | (1 & i));
          }
        }
        return er(i) || s;
      }
      function er(e) {
        return 0 == (1 & e);
      }
      function mR(e, n, t, i) {
        if (null === n) return -1;
        let r = 0;
        if (i || !t) {
          let o = !1;
          for (; r < n.length; ) {
            const s = n[r];
            if (s === e) return r;
            if (3 === s || 6 === s) o = !0;
            else {
              if (1 === s || 2 === s) {
                let a = n[++r];
                for (; "string" == typeof a; ) a = n[++r];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                r += 4;
                continue;
              }
            }
            r += o ? 1 : 2;
          }
          return -1;
        }
        return (function vR(e, n) {
          let t = e.indexOf(4);
          if (t > -1)
            for (t++; t < e.length; ) {
              const i = e[t];
              if ("number" == typeof i) return -1;
              if (i === n) return t;
              t++;
            }
          return -1;
        })(n, e);
      }
      function qw(e, n, t = !1) {
        for (let i = 0; i < n.length; i++) if (gR(e, n[i], t)) return !0;
        return !1;
      }
      function bR(e, n) {
        e: for (let t = 0; t < n.length; t++) {
          const i = n[t];
          if (e.length === i.length) {
            for (let r = 0; r < e.length; r++) if (e[r] !== i[r]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function Gw(e, n) {
        return e ? ":not(" + n.trim() + ")" : n;
      }
      function wR(e) {
        let n = e[0],
          t = 1,
          i = 2,
          r = "",
          o = !1;
        for (; t < e.length; ) {
          let s = e[t];
          if ("string" == typeof s)
            if (2 & i) {
              const a = e[++t];
              r += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]";
            } else 8 & i ? (r += "." + s) : 4 & i && (r += " " + s);
          else
            "" !== r && !er(s) && ((n += Gw(o, r)), (r = "")),
              (i = s),
              (o = o || !er(i));
          t++;
        }
        return "" !== r && (n += Gw(o, r)), n;
      }
      function U(e) {
        return Jr(() => {
          const n = Kw(e),
            t = {
              ...n,
              decls: e.decls,
              vars: e.vars,
              template: e.template,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              onPush: e.changeDetection === Zd.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (n.standalone && e.dependencies) || null,
              getStandaloneInjector: null,
              signals: e.signals ?? !1,
              data: e.data || {},
              encapsulation: e.encapsulation || Pi.Emulated,
              styles: e.styles || et,
              _: null,
              schemas: e.schemas || null,
              tView: null,
              id: "",
            };
          Zw(t);
          const i = e.dependencies;
          return (
            (t.directiveDefs = Xd(i, !1)),
            (t.pipeDefs = Xd(i, !0)),
            (t.id = (function ER(e) {
              let n = 0;
              const t = [
                e.selectors,
                e.ngContentSelectors,
                e.hostVars,
                e.hostAttrs,
                e.consts,
                e.vars,
                e.decls,
                e.encapsulation,
                e.standalone,
                e.signals,
                e.exportAs,
                JSON.stringify(e.inputs),
                JSON.stringify(e.outputs),
                Object.getOwnPropertyNames(e.type.prototype),
                !!e.contentQueries,
                !!e.viewQuery,
              ].join("|");
              for (const r of t) n = (Math.imul(31, n) + r.charCodeAt(0)) << 0;
              return (n += 2147483648), "c" + n;
            })(t)),
            t
          );
        });
      }
      function DR(e) {
        return Ge(e) || En(e);
      }
      function SR(e) {
        return null !== e;
      }
      function Vt(e) {
        return Jr(() => ({
          type: e.type,
          bootstrap: e.bootstrap || et,
          declarations: e.declarations || et,
          imports: e.imports || et,
          exports: e.exports || et,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        }));
      }
      function Yw(e, n) {
        if (null == e) return br;
        const t = {};
        for (const i in e)
          if (e.hasOwnProperty(i)) {
            let r = e[i],
              o = r;
            Array.isArray(r) && ((o = r[1]), (r = r[0])),
              (t[r] = i),
              n && (n[r] = o);
          }
        return t;
      }
      function re(e) {
        return Jr(() => {
          const n = Kw(e);
          return Zw(n), n;
        });
      }
      function Rn(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          standalone: !0 === e.standalone,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function Ge(e) {
        return e[Qd] || null;
      }
      function En(e) {
        return e[$g] || null;
      }
      function qn(e) {
        return e[qg] || null;
      }
      function yi(e, n) {
        const t = e[Bw] || null;
        if (!t && !0 === n)
          throw new Error(`Type ${hn(e)} does not have '\u0275mod' property.`);
        return t;
      }
      function Kw(e) {
        const n = {};
        return {
          type: e.type,
          providersResolver: null,
          factory: null,
          hostBindings: e.hostBindings || null,
          hostVars: e.hostVars || 0,
          hostAttrs: e.hostAttrs || null,
          contentQueries: e.contentQueries || null,
          declaredInputs: n,
          inputTransforms: null,
          inputConfig: e.inputs || br,
          exportAs: e.exportAs || null,
          standalone: !0 === e.standalone,
          signals: !0 === e.signals,
          selectors: e.selectors || et,
          viewQuery: e.viewQuery || null,
          features: e.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: Yw(e.inputs, n),
          outputs: Yw(e.outputs),
        };
      }
      function Zw(e) {
        e.features?.forEach((n) => n(e));
      }
      function Xd(e, n) {
        if (!e) return null;
        const t = n ? qn : DR;
        return () =>
          ("function" == typeof e ? e() : e).map((i) => t(i)).filter(SR);
      }
      const Gt = 0,
        Y = 1,
        Ie = 2,
        zt = 3,
        tr = 4,
        gc = 5,
        Nn = 6,
        wa = 7,
        Jt = 8,
        Fo = 9,
        Ca = 10,
        xe = 11,
        mc = 12,
        Qw = 13,
        xa = 14,
        en = 15,
        _c = 16,
        Ma = 17,
        wr = 18,
        yc = 19,
        Xw = 20,
        Ro = 21,
        to = 22,
        vc = 23,
        bc = 24,
        He = 25,
        Yg = 1,
        Jw = 2,
        Cr = 7,
        Da = 9,
        In = 11;
      function oi(e) {
        return Array.isArray(e) && "object" == typeof e[Yg];
      }
      function Gn(e) {
        return Array.isArray(e) && !0 === e[Yg];
      }
      function Kg(e) {
        return 0 != (4 & e.flags);
      }
      function Ds(e) {
        return e.componentOffset > -1;
      }
      function eh(e) {
        return 1 == (1 & e.flags);
      }
      function nr(e) {
        return !!e.template;
      }
      function Zg(e) {
        return 0 != (512 & e[Ie]);
      }
      function Ss(e, n) {
        return e.hasOwnProperty(eo) ? e[eo] : null;
      }
      let On = null,
        th = !1;
      function Fi(e) {
        const n = On;
        return (On = e), n;
      }
      const Qg = {
        version: 0,
        dirty: !1,
        producerNode: void 0,
        producerLastReadVersion: void 0,
        producerIndexOfThis: void 0,
        nextProducerIndex: 0,
        liveConsumerNode: void 0,
        liveConsumerIndexOfThis: void 0,
        consumerAllowSignalWrites: !1,
        consumerIsAlwaysLive: !1,
        producerMustRecompute: () => !1,
        producerRecomputeValue: () => {},
        consumerMarkedDirty: () => {},
      };
      function iC(e) {
        if (!Cc(e) || e.dirty) {
          if (!e.producerMustRecompute(e) && !sC(e)) return void (e.dirty = !1);
          e.producerRecomputeValue(e), (e.dirty = !1);
        }
      }
      function oC(e) {
        (e.dirty = !0),
          (function rC(e) {
            if (void 0 === e.liveConsumerNode) return;
            const n = th;
            th = !0;
            try {
              for (const t of e.liveConsumerNode) t.dirty || oC(t);
            } finally {
              th = n;
            }
          })(e),
          e.consumerMarkedDirty?.(e);
      }
      function Jg(e) {
        return e && (e.nextProducerIndex = 0), Fi(e);
      }
      function em(e, n) {
        if (
          (Fi(n),
          e &&
            void 0 !== e.producerNode &&
            void 0 !== e.producerIndexOfThis &&
            void 0 !== e.producerLastReadVersion)
        ) {
          if (Cc(e))
            for (let t = e.nextProducerIndex; t < e.producerNode.length; t++)
              nh(e.producerNode[t], e.producerIndexOfThis[t]);
          for (; e.producerNode.length > e.nextProducerIndex; )
            e.producerNode.pop(),
              e.producerLastReadVersion.pop(),
              e.producerIndexOfThis.pop();
        }
      }
      function sC(e) {
        Sa(e);
        for (let n = 0; n < e.producerNode.length; n++) {
          const t = e.producerNode[n],
            i = e.producerLastReadVersion[n];
          if (i !== t.version || (iC(t), i !== t.version)) return !0;
        }
        return !1;
      }
      function aC(e) {
        if ((Sa(e), Cc(e)))
          for (let n = 0; n < e.producerNode.length; n++)
            nh(e.producerNode[n], e.producerIndexOfThis[n]);
        (e.producerNode.length =
          e.producerLastReadVersion.length =
          e.producerIndexOfThis.length =
            0),
          e.liveConsumerNode &&
            (e.liveConsumerNode.length = e.liveConsumerIndexOfThis.length = 0);
      }
      function nh(e, n) {
        if (
          ((function cC(e) {
            (e.liveConsumerNode ??= []), (e.liveConsumerIndexOfThis ??= []);
          })(e),
          Sa(e),
          1 === e.liveConsumerNode.length)
        )
          for (let i = 0; i < e.producerNode.length; i++)
            nh(e.producerNode[i], e.producerIndexOfThis[i]);
        const t = e.liveConsumerNode.length - 1;
        if (
          ((e.liveConsumerNode[n] = e.liveConsumerNode[t]),
          (e.liveConsumerIndexOfThis[n] = e.liveConsumerIndexOfThis[t]),
          e.liveConsumerNode.length--,
          e.liveConsumerIndexOfThis.length--,
          n < e.liveConsumerNode.length)
        ) {
          const i = e.liveConsumerIndexOfThis[n],
            r = e.liveConsumerNode[n];
          Sa(r), (r.producerIndexOfThis[i] = n);
        }
      }
      function Cc(e) {
        return e.consumerIsAlwaysLive || (e?.liveConsumerNode?.length ?? 0) > 0;
      }
      function Sa(e) {
        (e.producerNode ??= []),
          (e.producerIndexOfThis ??= []),
          (e.producerLastReadVersion ??= []);
      }
      let uC = function LR() {
        throw new Error();
      };
      function fC(e) {
        const n = Fi(null);
        try {
          return e();
        } finally {
          Fi(n);
        }
      }
      const pC = () => {},
        $R = (() => ({
          ...Qg,
          consumerIsAlwaysLive: !0,
          consumerAllowSignalWrites: !1,
          consumerMarkedDirty: (e) => {
            e.schedule(e.ref);
          },
          hasRun: !1,
          cleanupFn: pC,
        }))();
      class qR {
        constructor(n, t, i) {
          (this.previousValue = n),
            (this.currentValue = t),
            (this.firstChange = i);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function si() {
        return gC;
      }
      function gC(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = YR), GR;
      }
      function GR() {
        const e = _C(this),
          n = e?.current;
        if (n) {
          const t = e.previous;
          if (t === br) e.previous = n;
          else for (let i in n) t[i] = n[i];
          (e.current = null), this.ngOnChanges(n);
        }
      }
      function YR(e, n, t, i) {
        const r = this.declaredInputs[t],
          o =
            _C(e) ||
            (function KR(e, n) {
              return (e[mC] = n);
            })(e, { previous: br, current: null }),
          s = o.current || (o.current = {}),
          a = o.previous,
          l = a[r];
        (s[r] = new qR(l && l.currentValue, n, a === br)), (e[i] = n);
      }
      si.ngInherit = !0;
      const mC = "__ngSimpleChanges__";
      function _C(e) {
        return e[mC] || null;
      }
      const xr = function (e, n, t) {};
      function It(e) {
        for (; Array.isArray(e); ) e = e[Gt];
        return e;
      }
      function ih(e, n) {
        return It(n[e]);
      }
      function ai(e, n) {
        return It(n[e.index]);
      }
      function bC(e, n) {
        return e.data[n];
      }
      function ka(e, n) {
        return e[n];
      }
      function vi(e, n) {
        const t = n[e];
        return oi(t) ? t : t[Gt];
      }
      function Lo(e, n) {
        return null == n ? null : e[n];
      }
      function wC(e) {
        e[Ma] = 0;
      }
      function tN(e) {
        1024 & e[Ie] || ((e[Ie] |= 1024), xC(e, 1));
      }
      function CC(e) {
        1024 & e[Ie] && ((e[Ie] &= -1025), xC(e, -1));
      }
      function xC(e, n) {
        let t = e[zt];
        if (null === t) return;
        t[gc] += n;
        let i = t;
        for (
          t = t[zt];
          null !== t && ((1 === n && 1 === i[gc]) || (-1 === n && 0 === i[gc]));

        )
          (t[gc] += n), (i = t), (t = t[zt]);
      }
      const ye = {
        lFrame: FC(null),
        bindingsEnabled: !0,
        skipHydrationRootTNode: null,
      };
      function SC() {
        return ye.bindingsEnabled;
      }
      function Ta() {
        return null !== ye.skipHydrationRootTNode;
      }
      function B() {
        return ye.lFrame.lView;
      }
      function Ye() {
        return ye.lFrame.tView;
      }
      function oe(e) {
        return (ye.lFrame.contextLView = e), e[Jt];
      }
      function se(e) {
        return (ye.lFrame.contextLView = null), e;
      }
      function An() {
        let e = kC();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function kC() {
        return ye.lFrame.currentTNode;
      }
      function Mr(e, n) {
        const t = ye.lFrame;
        (t.currentTNode = e), (t.isParent = n);
      }
      function om() {
        return ye.lFrame.isParent;
      }
      function sm() {
        ye.lFrame.isParent = !1;
      }
      function Yn() {
        const e = ye.lFrame;
        let n = e.bindingRootIndex;
        return (
          -1 === n && (n = e.bindingRootIndex = e.tView.bindingStartIndex), n
        );
      }
      function Ea() {
        return ye.lFrame.bindingIndex++;
      }
      function io(e) {
        const n = ye.lFrame,
          t = n.bindingIndex;
        return (n.bindingIndex = n.bindingIndex + e), t;
      }
      function fN(e, n) {
        const t = ye.lFrame;
        (t.bindingIndex = t.bindingRootIndex = e), am(n);
      }
      function am(e) {
        ye.lFrame.currentDirectiveIndex = e;
      }
      function OC() {
        return ye.lFrame.currentQueryIndex;
      }
      function cm(e) {
        ye.lFrame.currentQueryIndex = e;
      }
      function gN(e) {
        const n = e[Y];
        return 2 === n.type ? n.declTNode : 1 === n.type ? e[Nn] : null;
      }
      function AC(e, n, t) {
        if (t & ze.SkipSelf) {
          let r = n,
            o = e;
          for (
            ;
            !((r = r.parent),
            null !== r ||
              t & ze.Host ||
              ((r = gN(o)), null === r || ((o = o[xa]), 10 & r.type)));

          );
          if (null === r) return !1;
          (n = r), (e = o);
        }
        const i = (ye.lFrame = PC());
        return (i.currentTNode = n), (i.lView = e), !0;
      }
      function um(e) {
        const n = PC(),
          t = e[Y];
        (ye.lFrame = n),
          (n.currentTNode = t.firstChild),
          (n.lView = e),
          (n.tView = t),
          (n.contextLView = e),
          (n.bindingIndex = t.bindingStartIndex),
          (n.inI18n = !1);
      }
      function PC() {
        const e = ye.lFrame,
          n = null === e ? null : e.child;
        return null === n ? FC(e) : n;
      }
      function FC(e) {
        const n = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = n), n;
      }
      function RC() {
        const e = ye.lFrame;
        return (
          (ye.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const NC = RC;
      function dm() {
        const e = RC();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function Kn() {
        return ye.lFrame.selectedIndex;
      }
      function ks(e) {
        ye.lFrame.selectedIndex = e;
      }
      function Wt() {
        const e = ye.lFrame;
        return bC(e.tView, e.selectedIndex);
      }
      let VC = !0;
      function rh() {
        return VC;
      }
      function Bo(e) {
        VC = e;
      }
      function oh(e, n) {
        for (let t = n.directiveStart, i = n.directiveEnd; t < i; t++) {
          const o = e.data[t].type.prototype,
            {
              ngAfterContentInit: s,
              ngAfterContentChecked: a,
              ngAfterViewInit: l,
              ngAfterViewChecked: c,
              ngOnDestroy: u,
            } = o;
          s && (e.contentHooks ??= []).push(-t, s),
            a &&
              ((e.contentHooks ??= []).push(t, a),
              (e.contentCheckHooks ??= []).push(t, a)),
            l && (e.viewHooks ??= []).push(-t, l),
            c &&
              ((e.viewHooks ??= []).push(t, c),
              (e.viewCheckHooks ??= []).push(t, c)),
            null != u && (e.destroyHooks ??= []).push(t, u);
        }
      }
      function sh(e, n, t) {
        zC(e, n, 3, t);
      }
      function ah(e, n, t, i) {
        (3 & e[Ie]) === t && zC(e, n, t, i);
      }
      function fm(e, n) {
        let t = e[Ie];
        (3 & t) === n && ((t &= 8191), (t += 1), (e[Ie] = t));
      }
      function zC(e, n, t, i) {
        const o = i ?? -1,
          s = n.length - 1;
        let a = 0;
        for (let l = void 0 !== i ? 65535 & e[Ma] : 0; l < s; l++)
          if ("number" == typeof n[l + 1]) {
            if (((a = n[l]), null != i && a >= i)) break;
          } else
            n[l] < 0 && (e[Ma] += 65536),
              (a < o || -1 == o) &&
                (wN(e, t, n, l), (e[Ma] = (4294901760 & e[Ma]) + l + 2)),
              l++;
      }
      function HC(e, n) {
        xr(4, e, n);
        const t = Fi(null);
        try {
          n.call(e);
        } finally {
          Fi(t), xr(5, e, n);
        }
      }
      function wN(e, n, t, i) {
        const r = t[i] < 0,
          o = t[i + 1],
          a = e[r ? -t[i] : t[i]];
        r
          ? e[Ie] >> 13 < e[Ma] >> 16 &&
            (3 & e[Ie]) === n &&
            ((e[Ie] += 8192), HC(a, o))
          : HC(a, o);
      }
      const Ia = -1;
      class Mc {
        constructor(n, t, i) {
          (this.factory = n),
            (this.resolving = !1),
            (this.canSeeViewProviders = t),
            (this.injectImpl = i);
        }
      }
      function gm(e) {
        return e !== Ia;
      }
      function Dc(e) {
        return 32767 & e;
      }
      function Sc(e, n) {
        let t = (function DN(e) {
            return e >> 16;
          })(e),
          i = n;
        for (; t > 0; ) (i = i[xa]), t--;
        return i;
      }
      let mm = !0;
      function lh(e) {
        const n = mm;
        return (mm = e), n;
      }
      const jC = 255,
        UC = 5;
      let SN = 0;
      const Dr = {};
      function ch(e, n) {
        const t = WC(e, n);
        if (-1 !== t) return t;
        const i = n[Y];
        i.firstCreatePass &&
          ((e.injectorIndex = n.length),
          _m(i.data, e),
          _m(n, null),
          _m(i.blueprint, null));
        const r = uh(e, n),
          o = e.injectorIndex;
        if (gm(r)) {
          const s = Dc(r),
            a = Sc(r, n),
            l = a[Y].data;
          for (let c = 0; c < 8; c++) n[o + c] = a[s + c] | l[s + c];
        }
        return (n[o + 8] = r), o;
      }
      function _m(e, n) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, n);
      }
      function WC(e, n) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === n[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function uh(e, n) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let t = 0,
          i = null,
          r = n;
        for (; null !== r; ) {
          if (((i = QC(r)), null === i)) return Ia;
          if ((t++, (r = r[xa]), -1 !== i.injectorIndex))
            return i.injectorIndex | (t << 16);
        }
        return Ia;
      }
      function ym(e, n, t) {
        !(function kN(e, n, t) {
          let i;
          "string" == typeof t
            ? (i = t.charCodeAt(0) || 0)
            : t.hasOwnProperty(fc) && (i = t[fc]),
            null == i && (i = t[fc] = SN++);
          const r = i & jC;
          n.data[e + (r >> UC)] |= 1 << r;
        })(e, n, t);
      }
      function $C(e, n, t) {
        if (t & ze.Optional || void 0 !== e) return e;
        Ng();
      }
      function qC(e, n, t, i) {
        if (
          (t & ze.Optional && void 0 === i && (i = null),
          !(t & (ze.Self | ze.Host)))
        ) {
          const r = e[Fo],
            o = ri(void 0);
          try {
            return r ? r.get(n, i, t & ze.Optional) : Fw(n, i, t & ze.Optional);
          } finally {
            ri(o);
          }
        }
        return $C(i, 0, t);
      }
      function GC(e, n, t, i = ze.Default, r) {
        if (null !== e) {
          if (2048 & n[Ie] && !(i & ze.Self)) {
            const s = (function PN(e, n, t, i, r) {
              let o = e,
                s = n;
              for (
                ;
                null !== o && null !== s && 2048 & s[Ie] && !(512 & s[Ie]);

              ) {
                const a = YC(o, s, t, i | ze.Self, Dr);
                if (a !== Dr) return a;
                let l = o.parent;
                if (!l) {
                  const c = s[Xw];
                  if (c) {
                    const u = c.get(t, Dr, i);
                    if (u !== Dr) return u;
                  }
                  (l = QC(s)), (s = s[xa]);
                }
                o = l;
              }
              return r;
            })(e, n, t, i, Dr);
            if (s !== Dr) return s;
          }
          const o = YC(e, n, t, i, Dr);
          if (o !== Dr) return o;
        }
        return qC(n, t, i, r);
      }
      function YC(e, n, t, i, r) {
        const o = (function IN(e) {
          if ("string" == typeof e) return e.charCodeAt(0) || 0;
          const n = e.hasOwnProperty(fc) ? e[fc] : void 0;
          return "number" == typeof n ? (n >= 0 ? n & jC : AN) : n;
        })(t);
        if ("function" == typeof o) {
          if (!AC(n, e, i)) return i & ze.Host ? $C(r, 0, i) : qC(n, t, i, r);
          try {
            let s;
            if (((s = o(i)), null != s || i & ze.Optional)) return s;
            Ng();
          } finally {
            NC();
          }
        } else if ("number" == typeof o) {
          let s = null,
            a = WC(e, n),
            l = Ia,
            c = i & ze.Host ? n[en][Nn] : null;
          for (
            (-1 === a || i & ze.SkipSelf) &&
            ((l = -1 === a ? uh(e, n) : n[a + 8]),
            l !== Ia && ZC(i, !1)
              ? ((s = n[Y]), (a = Dc(l)), (n = Sc(l, n)))
              : (a = -1));
            -1 !== a;

          ) {
            const u = n[Y];
            if (KC(o, a, u.data)) {
              const f = EN(a, n, t, s, i, c);
              if (f !== Dr) return f;
            }
            (l = n[a + 8]),
              l !== Ia && ZC(i, n[Y].data[a + 8] === c) && KC(o, a, n)
                ? ((s = u), (a = Dc(l)), (n = Sc(l, n)))
                : (a = -1);
          }
        }
        return r;
      }
      function EN(e, n, t, i, r, o) {
        const s = n[Y],
          a = s.data[e + 8],
          u = dh(
            a,
            s,
            t,
            null == i ? Ds(a) && mm : i != s && 0 != (3 & a.type),
            r & ze.Host && o === a
          );
        return null !== u ? Ts(n, s, u, a) : Dr;
      }
      function dh(e, n, t, i, r) {
        const o = e.providerIndexes,
          s = n.data,
          a = 1048575 & o,
          l = e.directiveStart,
          u = o >> 20,
          g = r ? a + u : e.directiveEnd;
        for (let m = i ? a : a + u; m < g; m++) {
          const _ = s[m];
          if ((m < l && t === _) || (m >= l && _.type === t)) return m;
        }
        if (r) {
          const m = s[l];
          if (m && nr(m) && m.type === t) return l;
        }
        return null;
      }
      function Ts(e, n, t, i) {
        let r = e[t];
        const o = n.data;
        if (
          (function CN(e) {
            return e instanceof Mc;
          })(r)
        ) {
          const s = r;
          s.resolving &&
            (function ZF(e, n) {
              const t = n ? `. Dependency path: ${n.join(" > ")} > ${e}` : "";
              throw new P(
                -200,
                `Circular dependency in DI detected for ${e}${t}`
              );
            })(
              (function lt(e) {
                return "function" == typeof e
                  ? e.name || e.toString()
                  : "object" == typeof e &&
                    null != e &&
                    "function" == typeof e.type
                  ? e.type.name || e.type.toString()
                  : Ce(e);
              })(o[t])
            );
          const a = lh(s.canSeeViewProviders);
          s.resolving = !0;
          const c = s.injectImpl ? ri(s.injectImpl) : null;
          AC(e, i, ze.Default);
          try {
            (r = e[t] = s.factory(void 0, o, e, i)),
              n.firstCreatePass &&
                t >= i.directiveStart &&
                (function bN(e, n, t) {
                  const {
                    ngOnChanges: i,
                    ngOnInit: r,
                    ngDoCheck: o,
                  } = n.type.prototype;
                  if (i) {
                    const s = gC(n);
                    (t.preOrderHooks ??= []).push(e, s),
                      (t.preOrderCheckHooks ??= []).push(e, s);
                  }
                  r && (t.preOrderHooks ??= []).push(0 - e, r),
                    o &&
                      ((t.preOrderHooks ??= []).push(e, o),
                      (t.preOrderCheckHooks ??= []).push(e, o));
                })(t, o[t], n);
          } finally {
            null !== c && ri(c), lh(a), (s.resolving = !1), NC();
          }
        }
        return r;
      }
      function KC(e, n, t) {
        return !!(t[n + (e >> UC)] & (1 << e));
      }
      function ZC(e, n) {
        return !(e & ze.Self || (e & ze.Host && n));
      }
      class Zn {
        constructor(n, t) {
          (this._tNode = n), (this._lView = t);
        }
        get(n, t, i) {
          return GC(this._tNode, this._lView, n, Kd(i), t);
        }
      }
      function AN() {
        return new Zn(An(), B());
      }
      function vn(e) {
        return Jr(() => {
          const n = e.prototype.constructor,
            t = n[eo] || vm(n),
            i = Object.prototype;
          let r = Object.getPrototypeOf(e.prototype).constructor;
          for (; r && r !== i; ) {
            const o = r[eo] || vm(r);
            if (o && o !== t) return o;
            r = Object.getPrototypeOf(r);
          }
          return (o) => new o();
        });
      }
      function vm(e) {
        return Fg(e)
          ? () => {
              const n = vm(ve(e));
              return n && n();
            }
          : Ss(e);
      }
      function QC(e) {
        const n = e[Y],
          t = n.type;
        return 2 === t ? n.declTNode : 1 === t ? e[Nn] : null;
      }
      const Aa = "__parameters__";
      function Fa(e, n, t) {
        return Jr(() => {
          const i = (function bm(e) {
            return function (...t) {
              if (e) {
                const i = e(...t);
                for (const r in i) this[r] = i[r];
              }
            };
          })(n);
          function r(...o) {
            if (this instanceof r) return i.apply(this, o), this;
            const s = new r(...o);
            return (a.annotation = s), a;
            function a(l, c, u) {
              const f = l.hasOwnProperty(Aa)
                ? l[Aa]
                : Object.defineProperty(l, Aa, { value: [] })[Aa];
              for (; f.length <= u; ) f.push(null);
              return (f[u] = f[u] || []).push(s), l;
            }
          }
          return (
            t && (r.prototype = Object.create(t.prototype)),
            (r.prototype.ngMetadataName = e),
            (r.annotationCls = r),
            r
          );
        });
      }
      function Na(e, n) {
        e.forEach((t) => (Array.isArray(t) ? Na(t, n) : n(t)));
      }
      function JC(e, n, t) {
        n >= e.length ? e.push(t) : e.splice(n, 0, t);
      }
      function fh(e, n) {
        return n >= e.length - 1 ? e.pop() : e.splice(n, 1)[0];
      }
      function Ec(e, n) {
        const t = [];
        for (let i = 0; i < e; i++) t.push(n);
        return t;
      }
      function bi(e, n, t) {
        let i = La(e, n);
        return (
          i >= 0
            ? (e[1 | i] = t)
            : ((i = ~i),
              (function zN(e, n, t, i) {
                let r = e.length;
                if (r == n) e.push(t, i);
                else if (1 === r) e.push(i, e[0]), (e[0] = t);
                else {
                  for (r--, e.push(e[r - 1], e[r]); r > n; )
                    (e[r] = e[r - 2]), r--;
                  (e[n] = t), (e[n + 1] = i);
                }
              })(e, i, n, t)),
          i
        );
      }
      function wm(e, n) {
        const t = La(e, n);
        if (t >= 0) return e[1 | t];
      }
      function La(e, n) {
        return (function e1(e, n, t) {
          let i = 0,
            r = e.length >> t;
          for (; r !== i; ) {
            const o = i + ((r - i) >> 1),
              s = e[o << t];
            if (n === s) return o << t;
            s > n ? (r = o) : (i = o + 1);
          }
          return ~(r << t);
        })(e, n, 1);
      }
      const gh = hc(Fa("Optional"), 8),
        mh = hc(Fa("SkipSelf"), 4);
      function wh(e) {
        return 128 == (128 & e.flags);
      }
      var Vo = (function (e) {
        return (
          (e[(e.Important = 1)] = "Important"),
          (e[(e.DashCase = 2)] = "DashCase"),
          e
        );
      })(Vo || {});
      const aL = /^>|^->|<!--|-->|--!>|<!-$/g,
        lL = /(<|>)/g,
        cL = "\u200b$1\u200b";
      const Sm = new Map();
      let uL = 0;
      const Tm = "__ngContext__";
      function Ln(e, n) {
        oi(n)
          ? ((e[Tm] = n[yc]),
            (function hL(e) {
              Sm.set(e[yc], e);
            })(n))
          : (e[Tm] = n);
      }
      let Em;
      function Im(e, n) {
        return Em(e, n);
      }
      function Ac(e) {
        const n = e[zt];
        return Gn(n) ? n[zt] : n;
      }
      function w1(e) {
        return x1(e[mc]);
      }
      function C1(e) {
        return x1(e[tr]);
      }
      function x1(e) {
        for (; null !== e && !Gn(e); ) e = e[tr];
        return e;
      }
      function za(e, n, t, i, r) {
        if (null != i) {
          let o,
            s = !1;
          Gn(i) ? (o = i) : oi(i) && ((s = !0), (i = i[Gt]));
          const a = It(i);
          0 === e && null !== t
            ? null == r
              ? k1(n, t, a)
              : Es(n, t, a, r || null, !0)
            : 1 === e && null !== t
            ? Es(n, t, a, r || null, !0)
            : 2 === e
            ? (function Th(e, n, t) {
                const i = Sh(e, n);
                i &&
                  (function OL(e, n, t, i) {
                    e.removeChild(n, t, i);
                  })(e, i, n, t);
              })(n, a, s)
            : 3 === e && n.destroyNode(a),
            null != o &&
              (function FL(e, n, t, i, r) {
                const o = t[Cr];
                o !== It(t) && za(n, e, i, o, r);
                for (let a = In; a < t.length; a++) {
                  const l = t[a];
                  Fc(l[Y], l, e, n, i, o);
                }
              })(n, e, o, t, r);
        }
      }
      function Om(e, n) {
        return e.createComment(
          (function f1(e) {
            return e.replace(aL, (n) => n.replace(lL, cL));
          })(n)
        );
      }
      function Mh(e, n, t) {
        return e.createElement(n, t);
      }
      function D1(e, n) {
        const t = e[Da],
          i = t.indexOf(n);
        CC(n), t.splice(i, 1);
      }
      function Dh(e, n) {
        if (e.length <= In) return;
        const t = In + n,
          i = e[t];
        if (i) {
          const r = i[_c];
          null !== r && r !== e && D1(r, i), n > 0 && (e[t - 1][tr] = i[tr]);
          const o = fh(e, In + n);
          !(function xL(e, n) {
            Fc(e, n, n[xe], 2, null, null), (n[Gt] = null), (n[Nn] = null);
          })(i[Y], i);
          const s = o[wr];
          null !== s && s.detachView(o[Y]),
            (i[zt] = null),
            (i[tr] = null),
            (i[Ie] &= -129);
        }
        return i;
      }
      function Am(e, n) {
        if (!(256 & n[Ie])) {
          const t = n[xe];
          n[vc] && aC(n[vc]),
            n[bc] && aC(n[bc]),
            t.destroyNode && Fc(e, n, t, 3, null, null),
            (function SL(e) {
              let n = e[mc];
              if (!n) return Pm(e[Y], e);
              for (; n; ) {
                let t = null;
                if (oi(n)) t = n[mc];
                else {
                  const i = n[In];
                  i && (t = i);
                }
                if (!t) {
                  for (; n && !n[tr] && n !== e; )
                    oi(n) && Pm(n[Y], n), (n = n[zt]);
                  null === n && (n = e), oi(n) && Pm(n[Y], n), (t = n && n[tr]);
                }
                n = t;
              }
            })(n);
        }
      }
      function Pm(e, n) {
        if (!(256 & n[Ie])) {
          (n[Ie] &= -129),
            (n[Ie] |= 256),
            (function IL(e, n) {
              let t;
              if (null != e && null != (t = e.destroyHooks))
                for (let i = 0; i < t.length; i += 2) {
                  const r = n[t[i]];
                  if (!(r instanceof Mc)) {
                    const o = t[i + 1];
                    if (Array.isArray(o))
                      for (let s = 0; s < o.length; s += 2) {
                        const a = r[o[s]],
                          l = o[s + 1];
                        xr(4, a, l);
                        try {
                          l.call(a);
                        } finally {
                          xr(5, a, l);
                        }
                      }
                    else {
                      xr(4, r, o);
                      try {
                        o.call(r);
                      } finally {
                        xr(5, r, o);
                      }
                    }
                  }
                }
            })(e, n),
            (function EL(e, n) {
              const t = e.cleanup,
                i = n[wa];
              if (null !== t)
                for (let o = 0; o < t.length - 1; o += 2)
                  if ("string" == typeof t[o]) {
                    const s = t[o + 3];
                    s >= 0 ? i[s]() : i[-s].unsubscribe(), (o += 2);
                  } else t[o].call(i[t[o + 1]]);
              null !== i && (n[wa] = null);
              const r = n[Ro];
              if (null !== r) {
                n[Ro] = null;
                for (let o = 0; o < r.length; o++) (0, r[o])();
              }
            })(e, n),
            1 === n[Y].type && n[xe].destroy();
          const t = n[_c];
          if (null !== t && Gn(n[zt])) {
            t !== n[zt] && D1(t, n);
            const i = n[wr];
            null !== i && i.detachView(e);
          }
          !(function fL(e) {
            Sm.delete(e[yc]);
          })(n);
        }
      }
      function Fm(e, n, t) {
        return (function S1(e, n, t) {
          let i = n;
          for (; null !== i && 40 & i.type; ) i = (n = i).parent;
          if (null === i) return t[Gt];
          {
            const { componentOffset: r } = i;
            if (r > -1) {
              const { encapsulation: o } = e.data[i.directiveStart + r];
              if (o === Pi.None || o === Pi.Emulated) return null;
            }
            return ai(i, t);
          }
        })(e, n.parent, t);
      }
      function Es(e, n, t, i, r) {
        e.insertBefore(n, t, i, r);
      }
      function k1(e, n, t) {
        e.appendChild(n, t);
      }
      function T1(e, n, t, i, r) {
        null !== i ? Es(e, n, t, i, r) : k1(e, n, t);
      }
      function Sh(e, n) {
        return e.parentNode(n);
      }
      function E1(e, n, t) {
        return O1(e, n, t);
      }
      let Rm,
        Eh,
        Vm,
        Ih,
        O1 = function I1(e, n, t) {
          return 40 & e.type ? ai(e, t) : null;
        };
      function kh(e, n, t, i) {
        const r = Fm(e, i, n),
          o = n[xe],
          a = E1(i.parent || n[Nn], i, n);
        if (null != r)
          if (Array.isArray(t))
            for (let l = 0; l < t.length; l++) T1(o, r, t[l], a, !1);
          else T1(o, r, t, a, !1);
        void 0 !== Rm && Rm(o, i, n, t, r);
      }
      function Pc(e, n) {
        if (null !== n) {
          const t = n.type;
          if (3 & t) return ai(n, e);
          if (4 & t) return Nm(-1, e[n.index]);
          if (8 & t) {
            const i = n.child;
            if (null !== i) return Pc(e, i);
            {
              const r = e[n.index];
              return Gn(r) ? Nm(-1, r) : It(r);
            }
          }
          if (32 & t) return Im(n, e)() || It(e[n.index]);
          {
            const i = P1(e, n);
            return null !== i
              ? Array.isArray(i)
                ? i[0]
                : Pc(Ac(e[en]), i)
              : Pc(e, n.next);
          }
        }
        return null;
      }
      function P1(e, n) {
        return null !== n ? e[en][Nn].projection[n.projection] : null;
      }
      function Nm(e, n) {
        const t = In + e + 1;
        if (t < n.length) {
          const i = n[t],
            r = i[Y].firstChild;
          if (null !== r) return Pc(i, r);
        }
        return n[Cr];
      }
      function Lm(e, n, t, i, r, o, s) {
        for (; null != t; ) {
          const a = i[t.index],
            l = t.type;
          if (
            (s && 0 === n && (a && Ln(It(a), i), (t.flags |= 2)),
            32 != (32 & t.flags))
          )
            if (8 & l) Lm(e, n, t.child, i, r, o, !1), za(n, e, r, a, o);
            else if (32 & l) {
              const c = Im(t, i);
              let u;
              for (; (u = c()); ) za(n, e, r, u, o);
              za(n, e, r, a, o);
            } else 16 & l ? R1(e, n, i, t, r, o) : za(n, e, r, a, o);
          t = s ? t.projectionNext : t.next;
        }
      }
      function Fc(e, n, t, i, r, o) {
        Lm(t, i, e.firstChild, n, r, o, !1);
      }
      function R1(e, n, t, i, r, o) {
        const s = t[en],
          l = s[Nn].projection[i.projection];
        if (Array.isArray(l))
          for (let c = 0; c < l.length; c++) za(n, e, r, l[c], o);
        else {
          let c = l;
          const u = s[zt];
          wh(i) && (c.flags |= 128), Lm(e, n, c, u, r, o, !0);
        }
      }
      function N1(e, n, t) {
        "" === t
          ? e.removeAttribute(n, "class")
          : e.setAttribute(n, "class", t);
      }
      function L1(e, n, t) {
        const { mergedAttrs: i, classes: r, styles: o } = t;
        null !== i && Gg(e, n, i),
          null !== r && N1(e, n, r),
          null !== o &&
            (function NL(e, n, t) {
              e.setAttribute(n, "style", t);
            })(e, n, o);
      }
      function Ha(e) {
        return (
          (function Bm() {
            if (void 0 === Eh && ((Eh = null), Et.trustedTypes))
              try {
                Eh = Et.trustedTypes.createPolicy("angular", {
                  createHTML: (e) => e,
                  createScript: (e) => e,
                  createScriptURL: (e) => e,
                });
              } catch {}
            return Eh;
          })()?.createHTML(e) || e
        );
      }
      function ja() {
        if (void 0 !== Vm) return Vm;
        if (typeof document < "u") return document;
        throw new P(210, !1);
      }
      function zm() {
        if (void 0 === Ih && ((Ih = null), Et.trustedTypes))
          try {
            Ih = Et.trustedTypes.createPolicy("angular#unsafe-bypass", {
              createHTML: (e) => e,
              createScript: (e) => e,
              createScriptURL: (e) => e,
            });
          } catch {}
        return Ih;
      }
      function B1(e) {
        return zm()?.createHTML(e) || e;
      }
      function z1(e) {
        return zm()?.createScriptURL(e) || e;
      }
      class Is {
        constructor(n) {
          this.changingThisBreaksApplicationSecurity = n;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Iw})`;
        }
      }
      class HL extends Is {
        getTypeName() {
          return "HTML";
        }
      }
      class jL extends Is {
        getTypeName() {
          return "Style";
        }
      }
      class UL extends Is {
        getTypeName() {
          return "Script";
        }
      }
      class WL extends Is {
        getTypeName() {
          return "URL";
        }
      }
      class $L extends Is {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function wi(e) {
        return e instanceof Is ? e.changingThisBreaksApplicationSecurity : e;
      }
      function Sr(e, n) {
        const t = (function qL(e) {
          return (e instanceof Is && e.getTypeName()) || null;
        })(e);
        if (null != t && t !== n) {
          if ("ResourceURL" === t && "URL" === n) return !0;
          throw new Error(`Required a safe ${n}, got a ${t} (see ${Iw})`);
        }
        return t === n;
      }
      class XL {
        constructor(n) {
          this.inertDocumentHelper = n;
        }
        getInertBodyElement(n) {
          n = "<body><remove></remove>" + n;
          try {
            const t = new window.DOMParser().parseFromString(
              Ha(n),
              "text/html"
            ).body;
            return null === t
              ? this.inertDocumentHelper.getInertBodyElement(n)
              : (t.removeChild(t.firstChild), t);
          } catch {
            return null;
          }
        }
      }
      class JL {
        constructor(n) {
          (this.defaultDoc = n),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              ));
        }
        getInertBodyElement(n) {
          const t = this.inertDocument.createElement("template");
          return (t.innerHTML = Ha(n)), t;
        }
      }
      const t3 = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function Oh(e) {
        return (e = String(e)).match(t3) ? e : "unsafe:" + e;
      }
      function ro(e) {
        const n = {};
        for (const t of e.split(",")) n[t] = !0;
        return n;
      }
      function Rc(...e) {
        const n = {};
        for (const t of e)
          for (const i in t) t.hasOwnProperty(i) && (n[i] = !0);
        return n;
      }
      const j1 = ro("area,br,col,hr,img,wbr"),
        U1 = ro("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        W1 = ro("rp,rt"),
        Hm = Rc(
          j1,
          Rc(
            U1,
            ro(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          Rc(
            W1,
            ro(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          Rc(W1, U1)
        ),
        jm = ro("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        $1 = Rc(
          jm,
          ro(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          ro(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        n3 = ro("script,style,template");
      class i3 {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(n) {
          let t = n.firstChild,
            i = !0;
          for (; t; )
            if (
              (t.nodeType === Node.ELEMENT_NODE
                ? (i = this.startElement(t))
                : t.nodeType === Node.TEXT_NODE
                ? this.chars(t.nodeValue)
                : (this.sanitizedSomething = !0),
              i && t.firstChild)
            )
              t = t.firstChild;
            else
              for (; t; ) {
                t.nodeType === Node.ELEMENT_NODE && this.endElement(t);
                let r = this.checkClobberedElement(t, t.nextSibling);
                if (r) {
                  t = r;
                  break;
                }
                t = this.checkClobberedElement(t, t.parentNode);
              }
          return this.buf.join("");
        }
        startElement(n) {
          const t = n.nodeName.toLowerCase();
          if (!Hm.hasOwnProperty(t))
            return (this.sanitizedSomething = !0), !n3.hasOwnProperty(t);
          this.buf.push("<"), this.buf.push(t);
          const i = n.attributes;
          for (let r = 0; r < i.length; r++) {
            const o = i.item(r),
              s = o.name,
              a = s.toLowerCase();
            if (!$1.hasOwnProperty(a)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let l = o.value;
            jm[a] && (l = Oh(l)), this.buf.push(" ", s, '="', q1(l), '"');
          }
          return this.buf.push(">"), !0;
        }
        endElement(n) {
          const t = n.nodeName.toLowerCase();
          Hm.hasOwnProperty(t) &&
            !j1.hasOwnProperty(t) &&
            (this.buf.push("</"), this.buf.push(t), this.buf.push(">"));
        }
        chars(n) {
          this.buf.push(q1(n));
        }
        checkClobberedElement(n, t) {
          if (
            t &&
            (n.compareDocumentPosition(t) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${n.outerHTML}`
            );
          return t;
        }
      }
      const r3 = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        o3 = /([^\#-~ |!])/g;
      function q1(e) {
        return e
          .replace(/&/g, "&amp;")
          .replace(r3, function (n) {
            return (
              "&#" +
              (1024 * (n.charCodeAt(0) - 55296) +
                (n.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(o3, function (n) {
            return "&#" + n.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let Ah;
      function G1(e, n) {
        let t = null;
        try {
          Ah =
            Ah ||
            (function H1(e) {
              const n = new JL(e);
              return (function e3() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    Ha(""),
                    "text/html"
                  );
                } catch {
                  return !1;
                }
              })()
                ? new XL(n)
                : n;
            })(e);
          let i = n ? String(n) : "";
          t = Ah.getInertBodyElement(i);
          let r = 5,
            o = i;
          do {
            if (0 === r)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            r--, (i = o), (o = t.innerHTML), (t = Ah.getInertBodyElement(i));
          } while (i !== o);
          return Ha(new i3().sanitizeChildren(Um(t) || t));
        } finally {
          if (t) {
            const i = Um(t) || t;
            for (; i.firstChild; ) i.removeChild(i.firstChild);
          }
        }
      }
      function Um(e) {
        return "content" in e &&
          (function s3(e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Ni = (function (e) {
        return (
          (e[(e.NONE = 0)] = "NONE"),
          (e[(e.HTML = 1)] = "HTML"),
          (e[(e.STYLE = 2)] = "STYLE"),
          (e[(e.SCRIPT = 3)] = "SCRIPT"),
          (e[(e.URL = 4)] = "URL"),
          (e[(e.RESOURCE_URL = 5)] = "RESOURCE_URL"),
          e
        );
      })(Ni || {});
      function zo(e) {
        const n = Nc();
        return n
          ? B1(n.sanitize(Ni.HTML, e) || "")
          : Sr(e, "HTML")
          ? B1(wi(e))
          : G1(ja(), Ce(e));
      }
      function Ho(e) {
        const n = Nc();
        return n
          ? n.sanitize(Ni.URL, e) || ""
          : Sr(e, "URL")
          ? wi(e)
          : Oh(Ce(e));
      }
      function Y1(e) {
        const n = Nc();
        if (n) return z1(n.sanitize(Ni.RESOURCE_URL, e) || "");
        if (Sr(e, "ResourceURL")) return z1(wi(e));
        throw new P(904, !1);
      }
      function Nc() {
        const e = B();
        return e && e[Ca].sanitizer;
      }
      const Lc = new Q("ENVIRONMENT_INITIALIZER"),
        Z1 = new Q("INJECTOR", -1),
        Q1 = new Q("INJECTOR_DEF_TYPES");
      class Wm {
        get(n, t = dc) {
          if (t === dc) {
            const i = new Error(`NullInjectorError: No provider for ${hn(n)}!`);
            throw ((i.name = "NullInjectorError"), i);
          }
          return t;
        }
      }
      function h3(...e) {
        return { ɵproviders: X1(0, e), ɵfromNgModule: !0 };
      }
      function X1(e, ...n) {
        const t = [],
          i = new Set();
        let r;
        const o = (s) => {
          t.push(s);
        };
        return (
          Na(n, (s) => {
            const a = s;
            Ph(a, o, [], i) && ((r ||= []), r.push(a));
          }),
          void 0 !== r && J1(r, o),
          t
        );
      }
      function J1(e, n) {
        for (let t = 0; t < e.length; t++) {
          const { ngModule: i, providers: r } = e[t];
          qm(r, (o) => {
            n(o, i);
          });
        }
      }
      function Ph(e, n, t, i) {
        if (!(e = ve(e))) return !1;
        let r = null,
          o = qd(e);
        const s = !o && Ge(e);
        if (o || s) {
          if (s && !s.standalone) return !1;
          r = e;
        } else {
          const l = e.ngModule;
          if (((o = qd(l)), !o)) return !1;
          r = l;
        }
        const a = i.has(r);
        if (s) {
          if (a) return !1;
          if ((i.add(r), s.dependencies)) {
            const l =
              "function" == typeof s.dependencies
                ? s.dependencies()
                : s.dependencies;
            for (const c of l) Ph(c, n, t, i);
          }
        } else {
          if (!o) return !1;
          {
            if (null != o.imports && !a) {
              let c;
              i.add(r);
              try {
                Na(o.imports, (u) => {
                  Ph(u, n, t, i) && ((c ||= []), c.push(u));
                });
              } finally {
              }
              void 0 !== c && J1(c, n);
            }
            if (!a) {
              const c = Ss(r) || (() => new r());
              n({ provide: r, useFactory: c, deps: et }, r),
                n({ provide: Q1, useValue: r, multi: !0 }, r),
                n({ provide: Lc, useValue: () => O(r), multi: !0 }, r);
            }
            const l = o.providers;
            if (null != l && !a) {
              const c = e;
              qm(l, (u) => {
                n(u, c);
              });
            }
          }
        }
        return r !== e && void 0 !== e.providers;
      }
      function qm(e, n) {
        for (let t of e)
          Rg(t) && (t = t.ɵproviders), Array.isArray(t) ? qm(t, n) : n(t);
      }
      const f3 = dt({ provide: String, useValue: dt });
      function Gm(e) {
        return null !== e && "object" == typeof e && f3 in e;
      }
      function Os(e) {
        return "function" == typeof e;
      }
      const Ym = new Q("Set Injector scope."),
        Fh = {},
        g3 = {};
      let Km;
      function Rh() {
        return void 0 === Km && (Km = new Wm()), Km;
      }
      class Ci {}
      class Ua extends Ci {
        get destroyed() {
          return this._destroyed;
        }
        constructor(n, t, i, r) {
          super(),
            (this.parent = t),
            (this.source = i),
            (this.scopes = r),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            Qm(n, (s) => this.processProvider(s)),
            this.records.set(Z1, Wa(void 0, this)),
            r.has("environment") && this.records.set(Ci, Wa(void 0, this));
          const o = this.records.get(Ym);
          null != o && "string" == typeof o.value && this.scopes.add(o.value),
            (this.injectorDefTypes = new Set(this.get(Q1.multi, et, ze.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const t of this._ngOnDestroyHooks) t.ngOnDestroy();
            const n = this._onDestroyHooks;
            this._onDestroyHooks = [];
            for (const t of n) t();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear();
          }
        }
        onDestroy(n) {
          return (
            this.assertNotDestroyed(),
            this._onDestroyHooks.push(n),
            () => this.removeOnDestroy(n)
          );
        }
        runInContext(n) {
          this.assertNotDestroyed();
          const t = Po(this),
            i = ri(void 0);
          try {
            return n();
          } finally {
            Po(t), ri(i);
          }
        }
        get(n, t = dc, i = ze.Default) {
          if ((this.assertNotDestroyed(), n.hasOwnProperty(Vw)))
            return n[Vw](this);
          i = Kd(i);
          const o = Po(this),
            s = ri(void 0);
          try {
            if (!(i & ze.SkipSelf)) {
              let l = this.records.get(n);
              if (void 0 === l) {
                const c =
                  (function b3(e) {
                    return (
                      "function" == typeof e ||
                      ("object" == typeof e && e instanceof Q)
                    );
                  })(n) && $d(n);
                (l = c && this.injectableDefInScope(c) ? Wa(Zm(n), Fh) : null),
                  this.records.set(n, l);
              }
              if (null != l) return this.hydrate(n, l);
            }
            return (i & ze.Self ? Rh() : this.parent).get(
              n,
              (t = i & ze.Optional && t === dc ? null : t)
            );
          } catch (a) {
            if ("NullInjectorError" === a.name) {
              if (((a[Yd] = a[Yd] || []).unshift(hn(n)), o)) throw a;
              return (function dR(e, n, t, i) {
                const r = e[Yd];
                throw (
                  (n[Nw] && r.unshift(n[Nw]),
                  (e.message = (function hR(e, n, t, i = null) {
                    e =
                      e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1)
                        ? e.slice(2)
                        : e;
                    let r = hn(n);
                    if (Array.isArray(n)) r = n.map(hn).join(" -> ");
                    else if ("object" == typeof n) {
                      let o = [];
                      for (let s in n)
                        if (n.hasOwnProperty(s)) {
                          let a = n[s];
                          o.push(
                            s +
                              ":" +
                              ("string" == typeof a ? JSON.stringify(a) : hn(a))
                          );
                        }
                      r = `{${o.join(", ")}}`;
                    }
                    return `${t}${i ? "(" + i + ")" : ""}[${r}]: ${e.replace(
                      sR,
                      "\n  "
                    )}`;
                  })("\n" + e.message, r, t, i)),
                  (e.ngTokenPath = r),
                  (e[Yd] = null),
                  e)
                );
              })(a, n, "R3InjectorError", this.source);
            }
            throw a;
          } finally {
            ri(s), Po(o);
          }
        }
        resolveInjectorInitializers() {
          const n = Po(this),
            t = ri(void 0);
          try {
            const r = this.get(Lc.multi, et, ze.Self);
            for (const o of r) o();
          } finally {
            Po(n), ri(t);
          }
        }
        toString() {
          const n = [],
            t = this.records;
          for (const i of t.keys()) n.push(hn(i));
          return `R3Injector[${n.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new P(205, !1);
        }
        processProvider(n) {
          let t = Os((n = ve(n))) ? n : ve(n && n.provide);
          const i = (function _3(e) {
            return Gm(e) ? Wa(void 0, e.useValue) : Wa(nx(e), Fh);
          })(n);
          if (Os(n) || !0 !== n.multi) this.records.get(t);
          else {
            let r = this.records.get(t);
            r ||
              ((r = Wa(void 0, Fh, !0)),
              (r.factory = () => Wg(r.multi)),
              this.records.set(t, r)),
              (t = n),
              r.multi.push(n);
          }
          this.records.set(t, i);
        }
        hydrate(n, t) {
          return (
            t.value === Fh && ((t.value = g3), (t.value = t.factory())),
            "object" == typeof t.value &&
              t.value &&
              (function v3(e) {
                return (
                  null !== e &&
                  "object" == typeof e &&
                  "function" == typeof e.ngOnDestroy
                );
              })(t.value) &&
              this._ngOnDestroyHooks.add(t.value),
            t.value
          );
        }
        injectableDefInScope(n) {
          if (!n.providedIn) return !1;
          const t = ve(n.providedIn);
          return "string" == typeof t
            ? "any" === t || this.scopes.has(t)
            : this.injectorDefTypes.has(t);
        }
        removeOnDestroy(n) {
          const t = this._onDestroyHooks.indexOf(n);
          -1 !== t && this._onDestroyHooks.splice(t, 1);
        }
      }
      function Zm(e) {
        const n = $d(e),
          t = null !== n ? n.factory : Ss(e);
        if (null !== t) return t;
        if (e instanceof Q) throw new P(204, !1);
        if (e instanceof Function)
          return (function m3(e) {
            const n = e.length;
            if (n > 0) throw (Ec(n, "?"), new P(204, !1));
            const t = (function nR(e) {
              return (e && (e[Gd] || e[Aw])) || null;
            })(e);
            return null !== t ? () => t.factory(e) : () => new e();
          })(e);
        throw new P(204, !1);
      }
      function nx(e, n, t) {
        let i;
        if (Os(e)) {
          const r = ve(e);
          return Ss(r) || Zm(r);
        }
        if (Gm(e)) i = () => ve(e.useValue);
        else if (
          (function tx(e) {
            return !(!e || !e.useFactory);
          })(e)
        )
          i = () => e.useFactory(...Wg(e.deps || []));
        else if (
          (function ex(e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          i = () => O(ve(e.useExisting));
        else {
          const r = ve(e && (e.useClass || e.provide));
          if (
            !(function y3(e) {
              return !!e.deps;
            })(e)
          )
            return Ss(r) || Zm(r);
          i = () => new r(...Wg(e.deps));
        }
        return i;
      }
      function Wa(e, n, t = !1) {
        return { factory: e, value: n, multi: t ? [] : void 0 };
      }
      function Qm(e, n) {
        for (const t of e)
          Array.isArray(t) ? Qm(t, n) : t && Rg(t) ? Qm(t.ɵproviders, n) : n(t);
      }
      const Nh = new Q("AppId", { providedIn: "root", factory: () => w3 }),
        w3 = "ng",
        ix = new Q("Platform Initializer"),
        As = new Q("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        rx = new Q("AnimationModuleType"),
        ox = new Q("CSP nonce", {
          providedIn: "root",
          factory: () =>
            ja()
              .body?.querySelector("[ngCspNonce]")
              ?.getAttribute("ngCspNonce") || null,
        });
      let sx = (e, n, t) => null;
      function o_(e, n, t = !1) {
        return sx(e, n, t);
      }
      class O3 {}
      class cx {}
      class P3 {
        resolveComponentFactory(n) {
          throw (function A3(e) {
            const n = Error(`No component factory found for ${hn(e)}.`);
            return (n.ngComponent = e), n;
          })(n);
        }
      }
      let Ga = (() => {
        class e {
          static #e = (this.NULL = new P3());
        }
        return e;
      })();
      function F3() {
        return Ya(An(), B());
      }
      function Ya(e, n) {
        return new pn(ai(e, n));
      }
      let pn = (() => {
        class e {
          constructor(t) {
            this.nativeElement = t;
          }
          static #e = (this.__NG_ELEMENT_ID__ = F3);
        }
        return e;
      })();
      function R3(e) {
        return e instanceof pn ? e.nativeElement : e;
      }
      class Ka {}
      let oo = (() => {
          class e {
            constructor() {
              this.destroyNode = null;
            }
            static #e = (this.__NG_ELEMENT_ID__ = () =>
              (function N3() {
                const e = B(),
                  t = vi(An().index, e);
                return (oi(t) ? t : e)[xe];
              })());
          }
          return e;
        })(),
        L3 = (() => {
          class e {
            static #e = (this.ɵprov = V({
              token: e,
              providedIn: "root",
              factory: () => null,
            }));
          }
          return e;
        })();
      class zc {
        constructor(n) {
          (this.full = n),
            (this.major = n.split(".")[0]),
            (this.minor = n.split(".")[1]),
            (this.patch = n.split(".").slice(2).join("."));
        }
      }
      const B3 = new zc("16.2.12"),
        l_ = {};
      function px(e, n = null, t = null, i) {
        const r = gx(e, n, t, i);
        return r.resolveInjectorInitializers(), r;
      }
      function gx(e, n = null, t = null, i, r = new Set()) {
        const o = [t || et, h3(e)];
        return (
          (i = i || ("object" == typeof e ? void 0 : hn(e))),
          new Ua(o, n || Rh(), i || null, r)
        );
      }
      let ci = (() => {
        class e {
          static #e = (this.THROW_IF_NOT_FOUND = dc);
          static #t = (this.NULL = new Wm());
          static create(t, i) {
            if (Array.isArray(t)) return px({ name: "" }, i, t, "");
            {
              const r = t.name ?? "";
              return px({ name: r }, t.parent, t.providers, r);
            }
          }
          static #n = (this.ɵprov = V({
            token: e,
            providedIn: "any",
            factory: () => O(Z1),
          }));
          static #i = (this.__NG_ELEMENT_ID__ = -1);
        }
        return e;
      })();
      function u_(e) {
        return e.ngOriginalError;
      }
      class so {
        constructor() {
          this._console = console;
        }
        handleError(n) {
          const t = this._findOriginalError(n);
          this._console.error("ERROR", n),
            t && this._console.error("ORIGINAL ERROR", t);
        }
        _findOriginalError(n) {
          let t = n && u_(n);
          for (; t && u_(t); ) t = u_(t);
          return t || null;
        }
      }
      function h_(e) {
        return (n) => {
          setTimeout(e, void 0, n);
        };
      }
      const le = class $3 extends Ze {
        constructor(n = !1) {
          super(), (this.__isAsync = n);
        }
        emit(n) {
          super.next(n);
        }
        subscribe(n, t, i) {
          let r = n,
            o = t || (() => null),
            s = i;
          if (n && "object" == typeof n) {
            const l = n;
            (r = l.next?.bind(l)),
              (o = l.error?.bind(l)),
              (s = l.complete?.bind(l));
          }
          this.__isAsync && ((o = h_(o)), r && (r = h_(r)), s && (s = h_(s)));
          const a = super.subscribe({ next: r, error: o, complete: s });
          return n instanceof qt && n.add(a), a;
        }
      };
      function _x(...e) {}
      class ht {
        constructor({
          enableLongStackTrace: n = !1,
          shouldCoalesceEventChangeDetection: t = !1,
          shouldCoalesceRunChangeDetection: i = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new le(!1)),
            (this.onMicrotaskEmpty = new le(!1)),
            (this.onStable = new le(!1)),
            (this.onError = new le(!1)),
            typeof Zone > "u")
          )
            throw new P(908, !1);
          Zone.assertZonePatched();
          const r = this;
          (r._nesting = 0),
            (r._outer = r._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (r._inner = r._inner.fork(new Zone.TaskTrackingZoneSpec())),
            n &&
              Zone.longStackTraceZoneSpec &&
              (r._inner = r._inner.fork(Zone.longStackTraceZoneSpec)),
            (r.shouldCoalesceEventChangeDetection = !i && t),
            (r.shouldCoalesceRunChangeDetection = i),
            (r.lastRequestAnimationFrameId = -1),
            (r.nativeRequestAnimationFrame = (function q3() {
              const e = "function" == typeof Et.requestAnimationFrame;
              let n = Et[e ? "requestAnimationFrame" : "setTimeout"],
                t = Et[e ? "cancelAnimationFrame" : "clearTimeout"];
              if (typeof Zone < "u" && n && t) {
                const i = n[Zone.__symbol__("OriginalDelegate")];
                i && (n = i);
                const r = t[Zone.__symbol__("OriginalDelegate")];
                r && (t = r);
              }
              return {
                nativeRequestAnimationFrame: n,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function K3(e) {
              const n = () => {
                !(function Y3(e) {
                  e.isCheckStableRunning ||
                    -1 !== e.lastRequestAnimationFrameId ||
                    ((e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(Et, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                p_(e),
                                (e.isCheckStableRunning = !0),
                                f_(e),
                                (e.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                    p_(e));
                })(e);
              };
              e._inner = e._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (t, i, r, o, s, a) => {
                  if (
                    (function Q3(e) {
                      return (
                        !(!Array.isArray(e) || 1 !== e.length) &&
                        !0 === e[0].data?.__ignore_ng_zone__
                      );
                    })(a)
                  )
                    return t.invokeTask(r, o, s, a);
                  try {
                    return yx(e), t.invokeTask(r, o, s, a);
                  } finally {
                    ((e.shouldCoalesceEventChangeDetection &&
                      "eventTask" === o.type) ||
                      e.shouldCoalesceRunChangeDetection) &&
                      n(),
                      vx(e);
                  }
                },
                onInvoke: (t, i, r, o, s, a, l) => {
                  try {
                    return yx(e), t.invoke(r, o, s, a, l);
                  } finally {
                    e.shouldCoalesceRunChangeDetection && n(), vx(e);
                  }
                },
                onHasTask: (t, i, r, o) => {
                  t.hasTask(r, o),
                    i === r &&
                      ("microTask" == o.change
                        ? ((e._hasPendingMicrotasks = o.microTask),
                          p_(e),
                          f_(e))
                        : "macroTask" == o.change &&
                          (e.hasPendingMacrotasks = o.macroTask));
                },
                onHandleError: (t, i, r, o) => (
                  t.handleError(r, o),
                  e.runOutsideAngular(() => e.onError.emit(o)),
                  !1
                ),
              });
            })(r);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!ht.isInAngularZone()) throw new P(909, !1);
        }
        static assertNotInAngularZone() {
          if (ht.isInAngularZone()) throw new P(909, !1);
        }
        run(n, t, i) {
          return this._inner.run(n, t, i);
        }
        runTask(n, t, i, r) {
          const o = this._inner,
            s = o.scheduleEventTask("NgZoneEvent: " + r, n, G3, _x, _x);
          try {
            return o.runTask(s, t, i);
          } finally {
            o.cancelTask(s);
          }
        }
        runGuarded(n, t, i) {
          return this._inner.runGuarded(n, t, i);
        }
        runOutsideAngular(n) {
          return this._outer.run(n);
        }
      }
      const G3 = {};
      function f_(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function p_(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          ((e.shouldCoalesceEventChangeDetection ||
            e.shouldCoalesceRunChangeDetection) &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function yx(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function vx(e) {
        e._nesting--, f_(e);
      }
      class Z3 {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new le()),
            (this.onMicrotaskEmpty = new le()),
            (this.onStable = new le()),
            (this.onError = new le());
        }
        run(n, t, i) {
          return n.apply(t, i);
        }
        runGuarded(n, t, i) {
          return n.apply(t, i);
        }
        runOutsideAngular(n) {
          return n();
        }
        runTask(n, t, i, r) {
          return n.apply(t, i);
        }
      }
      const bx = new Q("", { providedIn: "root", factory: wx });
      function wx() {
        const e = K(ht);
        let n = !0;
        return (function GF(...e) {
          const n = cc(e),
            t = (function zF(e, n) {
              return "number" == typeof Og(e) ? e.pop() : n;
            })(e, 1 / 0),
            i = e;
          return i.length ? (1 === i.length ? mi(i[0]) : ya(t)(dn(i, n))) : vr;
        })(
          new wt((r) => {
            (n =
              e.isStable && !e.hasPendingMacrotasks && !e.hasPendingMicrotasks),
              e.runOutsideAngular(() => {
                r.next(n), r.complete();
              });
          }),
          new wt((r) => {
            let o;
            e.runOutsideAngular(() => {
              o = e.onStable.subscribe(() => {
                ht.assertNotInAngularZone(),
                  queueMicrotask(() => {
                    !n &&
                      !e.hasPendingMacrotasks &&
                      !e.hasPendingMicrotasks &&
                      ((n = !0), r.next(!0));
                  });
              });
            });
            const s = e.onUnstable.subscribe(() => {
              ht.assertInAngularZone(),
                n &&
                  ((n = !1),
                  e.runOutsideAngular(() => {
                    r.next(!1);
                  }));
            });
            return () => {
              o.unsubscribe(), s.unsubscribe();
            };
          }).pipe(Ew())
        );
      }
      function ao(e) {
        return e.ownerDocument;
      }
      function lo(e) {
        return e instanceof Function ? e() : e;
      }
      let m_ = (() => {
        class e {
          constructor() {
            (this.renderDepth = 0), (this.handler = null);
          }
          begin() {
            this.handler?.validateBegin(), this.renderDepth++;
          }
          end() {
            this.renderDepth--,
              0 === this.renderDepth && this.handler?.execute();
          }
          ngOnDestroy() {
            this.handler?.destroy(), (this.handler = null);
          }
          static #e = (this.ɵprov = V({
            token: e,
            providedIn: "root",
            factory: () => new e(),
          }));
        }
        return e;
      })();
      function Hc(e) {
        for (; e; ) {
          e[Ie] |= 64;
          const n = Ac(e);
          if (Zg(e) && !n) return e;
          e = n;
        }
        return null;
      }
      const Sx = new Q("", { providedIn: "root", factory: () => !1 });
      let Uh = null;
      function Ix(e, n) {
        return e[n] ?? Px();
      }
      function Ox(e, n) {
        const t = Px();
        t.producerNode?.length && ((e[n] = Uh), (t.lView = e), (Uh = Ax()));
      }
      const s4 = {
        ...Qg,
        consumerIsAlwaysLive: !0,
        consumerMarkedDirty: (e) => {
          Hc(e.lView);
        },
        lView: null,
      };
      function Ax() {
        return Object.create(s4);
      }
      function Px() {
        return (Uh ??= Ax()), Uh;
      }
      const ke = {};
      function b(e) {
        Fx(Ye(), B(), Kn() + e, !1);
      }
      function Fx(e, n, t, i) {
        if (!i)
          if (3 == (3 & n[Ie])) {
            const o = e.preOrderCheckHooks;
            null !== o && sh(n, o, t);
          } else {
            const o = e.preOrderHooks;
            null !== o && ah(n, o, 0, t);
          }
        ks(t);
      }
      function M(e, n = ze.Default) {
        const t = B();
        return null === t ? O(e, n) : GC(An(), t, ve(e), n);
      }
      function Wh(e, n, t, i, r, o, s, a, l, c, u) {
        const f = n.blueprint.slice();
        return (
          (f[Gt] = r),
          (f[Ie] = 140 | i),
          (null !== c || (e && 2048 & e[Ie])) && (f[Ie] |= 2048),
          wC(f),
          (f[zt] = f[xa] = e),
          (f[Jt] = t),
          (f[Ca] = s || (e && e[Ca])),
          (f[xe] = a || (e && e[xe])),
          (f[Fo] = l || (e && e[Fo]) || null),
          (f[Nn] = o),
          (f[yc] = (function dL() {
            return uL++;
          })()),
          (f[to] = u),
          (f[Xw] = c),
          (f[en] = 2 == n.type ? e[en] : f),
          f
        );
      }
      function Xa(e, n, t, i, r) {
        let o = e.data[n];
        if (null === o)
          (o = (function __(e, n, t, i, r) {
            const o = kC(),
              s = om(),
              l = (e.data[n] = (function p4(e, n, t, i, r, o) {
                let s = n ? n.injectorIndex : -1,
                  a = 0;
                return (
                  Ta() && (a |= 128),
                  {
                    type: t,
                    index: i,
                    insertBeforeIndex: null,
                    injectorIndex: s,
                    directiveStart: -1,
                    directiveEnd: -1,
                    directiveStylingLast: -1,
                    componentOffset: -1,
                    propertyBindings: null,
                    flags: a,
                    providerIndexes: 0,
                    value: r,
                    attrs: o,
                    mergedAttrs: null,
                    localNames: null,
                    initialInputs: void 0,
                    inputs: null,
                    outputs: null,
                    tView: null,
                    next: null,
                    prev: null,
                    projectionNext: null,
                    child: null,
                    parent: n,
                    projection: null,
                    styles: null,
                    stylesWithoutHost: null,
                    residualStyles: void 0,
                    classes: null,
                    classesWithoutHost: null,
                    residualClasses: void 0,
                    classBindings: 0,
                    styleBindings: 0,
                  }
                );
              })(0, s ? o : o && o.parent, t, n, i, r));
            return (
              null === e.firstChild && (e.firstChild = l),
              null !== o &&
                (s
                  ? null == o.child && null !== l.parent && (o.child = l)
                  : null === o.next && ((o.next = l), (l.prev = o))),
              l
            );
          })(e, n, t, i, r)),
            (function hN() {
              return ye.lFrame.inI18n;
            })() && (o.flags |= 32);
        else if (64 & o.type) {
          (o.type = t), (o.value = i), (o.attrs = r);
          const s = (function xc() {
            const e = ye.lFrame,
              n = e.currentTNode;
            return e.isParent ? n : n.parent;
          })();
          o.injectorIndex = null === s ? -1 : s.injectorIndex;
        }
        return Mr(o, !0), o;
      }
      function jc(e, n, t, i) {
        if (0 === t) return -1;
        const r = n.length;
        for (let o = 0; o < t; o++)
          n.push(i), e.blueprint.push(i), e.data.push(null);
        return r;
      }
      function Nx(e, n, t, i, r) {
        const o = Ix(n, vc),
          s = Kn(),
          a = 2 & i;
        try {
          ks(-1), a && n.length > He && Fx(e, n, He, !1), xr(a ? 2 : 0, r);
          const c = a ? o : null,
            u = Jg(c);
          try {
            null !== c && (c.dirty = !1), t(i, r);
          } finally {
            em(c, u);
          }
        } finally {
          a && null === n[vc] && Ox(n, vc), ks(s), xr(a ? 3 : 1, r);
        }
      }
      function y_(e, n, t) {
        if (Kg(n)) {
          const i = Fi(null);
          try {
            const o = n.directiveEnd;
            for (let s = n.directiveStart; s < o; s++) {
              const a = e.data[s];
              a.contentQueries && a.contentQueries(1, t[s], s);
            }
          } finally {
            Fi(i);
          }
        }
      }
      function v_(e, n, t) {
        SC() &&
          ((function w4(e, n, t, i) {
            const r = t.directiveStart,
              o = t.directiveEnd;
            Ds(t) &&
              (function T4(e, n, t) {
                const i = ai(n, e),
                  r = Lx(t);
                let s = 16;
                t.signals ? (s = 4096) : t.onPush && (s = 64);
                const a = $h(
                  e,
                  Wh(
                    e,
                    r,
                    null,
                    s,
                    i,
                    n,
                    null,
                    e[Ca].rendererFactory.createRenderer(i, t),
                    null,
                    null,
                    null
                  )
                );
                e[n.index] = a;
              })(n, t, e.data[r + t.componentOffset]),
              e.firstCreatePass || ch(t, n),
              Ln(i, n);
            const s = t.initialInputs;
            for (let a = r; a < o; a++) {
              const l = e.data[a],
                c = Ts(n, e, a, t);
              Ln(c, n),
                null !== s && E4(0, a - r, c, l, 0, s),
                nr(l) && (vi(t.index, n)[Jt] = Ts(n, e, a, t));
            }
          })(e, n, t, ai(t, n)),
          64 == (64 & t.flags) && jx(e, n, t));
      }
      function b_(e, n, t = ai) {
        const i = n.localNames;
        if (null !== i) {
          let r = n.index + 1;
          for (let o = 0; o < i.length; o += 2) {
            const s = i[o + 1],
              a = -1 === s ? t(n, e) : e[s];
            e[r++] = a;
          }
        }
      }
      function Lx(e) {
        const n = e.tView;
        return null === n || n.incompleteFirstPass
          ? (e.tView = w_(
              1,
              null,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts,
              e.id
            ))
          : n;
      }
      function w_(e, n, t, i, r, o, s, a, l, c, u) {
        const f = He + i,
          g = f + r,
          m = (function l4(e, n) {
            const t = [];
            for (let i = 0; i < n; i++) t.push(i < e ? null : ke);
            return t;
          })(f, g),
          _ = "function" == typeof c ? c() : c;
        return (m[Y] = {
          type: e,
          blueprint: m,
          template: t,
          queries: null,
          viewQuery: a,
          declTNode: n,
          data: m.slice().fill(null, f),
          bindingStartIndex: f,
          expandoStartIndex: g,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof o ? o() : o,
          pipeRegistry: "function" == typeof s ? s() : s,
          firstChild: null,
          schemas: l,
          consts: _,
          incompleteFirstPass: !1,
          ssrId: u,
        });
      }
      let Bx = (e) => null;
      function Vx(e, n, t, i) {
        for (let r in e)
          if (e.hasOwnProperty(r)) {
            t = null === t ? {} : t;
            const o = e[r];
            null === i
              ? zx(t, n, r, o)
              : i.hasOwnProperty(r) && zx(t, n, i[r], o);
          }
        return t;
      }
      function zx(e, n, t, i) {
        e.hasOwnProperty(t) ? e[t].push(n, i) : (e[t] = [n, i]);
      }
      function C_(e, n, t, i) {
        if (SC()) {
          const r = null === i ? null : { "": -1 },
            o = (function x4(e, n) {
              const t = e.directiveRegistry;
              let i = null,
                r = null;
              if (t)
                for (let o = 0; o < t.length; o++) {
                  const s = t[o];
                  if (qw(n, s.selectors, !1))
                    if ((i || (i = []), nr(s)))
                      if (null !== s.findHostDirectiveDefs) {
                        const a = [];
                        (r = r || new Map()),
                          s.findHostDirectiveDefs(s, a, r),
                          i.unshift(...a, s),
                          x_(e, n, a.length);
                      } else i.unshift(s), x_(e, n, 0);
                    else
                      (r = r || new Map()),
                        s.findHostDirectiveDefs?.(s, i, r),
                        i.push(s);
                }
              return null === i ? null : [i, r];
            })(e, t);
          let s, a;
          null === o ? (s = a = null) : ([s, a] = o),
            null !== s && Hx(e, n, t, s, r, a),
            r &&
              (function M4(e, n, t) {
                if (n) {
                  const i = (e.localNames = []);
                  for (let r = 0; r < n.length; r += 2) {
                    const o = t[n[r + 1]];
                    if (null == o) throw new P(-301, !1);
                    i.push(n[r], o);
                  }
                }
              })(t, i, r);
        }
        t.mergedAttrs = pc(t.mergedAttrs, t.attrs);
      }
      function Hx(e, n, t, i, r, o) {
        for (let c = 0; c < i.length; c++) ym(ch(t, n), e, i[c].type);
        !(function S4(e, n, t) {
          (e.flags |= 1),
            (e.directiveStart = n),
            (e.directiveEnd = n + t),
            (e.providerIndexes = n);
        })(t, e.data.length, i.length);
        for (let c = 0; c < i.length; c++) {
          const u = i[c];
          u.providersResolver && u.providersResolver(u);
        }
        let s = !1,
          a = !1,
          l = jc(e, n, i.length, null);
        for (let c = 0; c < i.length; c++) {
          const u = i[c];
          (t.mergedAttrs = pc(t.mergedAttrs, u.hostAttrs)),
            k4(e, t, n, l, u),
            D4(l, u, r),
            null !== u.contentQueries && (t.flags |= 4),
            (null !== u.hostBindings ||
              null !== u.hostAttrs ||
              0 !== u.hostVars) &&
              (t.flags |= 64);
          const f = u.type.prototype;
          !s &&
            (f.ngOnChanges || f.ngOnInit || f.ngDoCheck) &&
            ((e.preOrderHooks ??= []).push(t.index), (s = !0)),
            !a &&
              (f.ngOnChanges || f.ngDoCheck) &&
              ((e.preOrderCheckHooks ??= []).push(t.index), (a = !0)),
            l++;
        }
        !(function g4(e, n, t) {
          const r = n.directiveEnd,
            o = e.data,
            s = n.attrs,
            a = [];
          let l = null,
            c = null;
          for (let u = n.directiveStart; u < r; u++) {
            const f = o[u],
              g = t ? t.get(f) : null,
              _ = g ? g.outputs : null;
            (l = Vx(f.inputs, u, l, g ? g.inputs : null)),
              (c = Vx(f.outputs, u, c, _));
            const y = null === l || null === s || $w(n) ? null : I4(l, u, s);
            a.push(y);
          }
          null !== l &&
            (l.hasOwnProperty("class") && (n.flags |= 8),
            l.hasOwnProperty("style") && (n.flags |= 16)),
            (n.initialInputs = a),
            (n.inputs = l),
            (n.outputs = c);
        })(e, t, o);
      }
      function jx(e, n, t) {
        const i = t.directiveStart,
          r = t.directiveEnd,
          o = t.index,
          s = (function pN() {
            return ye.lFrame.currentDirectiveIndex;
          })();
        try {
          ks(o);
          for (let a = i; a < r; a++) {
            const l = e.data[a],
              c = n[a];
            am(a),
              (null !== l.hostBindings ||
                0 !== l.hostVars ||
                null !== l.hostAttrs) &&
                C4(l, c);
          }
        } finally {
          ks(-1), am(s);
        }
      }
      function C4(e, n) {
        null !== e.hostBindings && e.hostBindings(1, n);
      }
      function x_(e, n, t) {
        (n.componentOffset = t), (e.components ??= []).push(n.index);
      }
      function D4(e, n, t) {
        if (t) {
          if (n.exportAs)
            for (let i = 0; i < n.exportAs.length; i++) t[n.exportAs[i]] = e;
          nr(n) && (t[""] = e);
        }
      }
      function k4(e, n, t, i, r) {
        e.data[i] = r;
        const o = r.factory || (r.factory = Ss(r.type)),
          s = new Mc(o, nr(r), M);
        (e.blueprint[i] = s),
          (t[i] = s),
          (function v4(e, n, t, i, r) {
            const o = r.hostBindings;
            if (o) {
              let s = e.hostBindingOpCodes;
              null === s && (s = e.hostBindingOpCodes = []);
              const a = ~n.index;
              (function b4(e) {
                let n = e.length;
                for (; n > 0; ) {
                  const t = e[--n];
                  if ("number" == typeof t && t < 0) return t;
                }
                return 0;
              })(s) != a && s.push(a),
                s.push(t, i, o);
            }
          })(e, n, i, jc(e, t, r.hostVars, ke), r);
      }
      function kr(e, n, t, i, r, o) {
        const s = ai(e, n);
        !(function M_(e, n, t, i, r, o, s) {
          if (null == o) e.removeAttribute(n, r, t);
          else {
            const a = null == s ? Ce(o) : s(o, i || "", r);
            e.setAttribute(n, r, a, t);
          }
        })(n[xe], s, o, e.value, t, i, r);
      }
      function E4(e, n, t, i, r, o) {
        const s = o[n];
        if (null !== s)
          for (let a = 0; a < s.length; ) Ux(i, t, s[a++], s[a++], s[a++]);
      }
      function Ux(e, n, t, i, r) {
        const o = Fi(null);
        try {
          const s = e.inputTransforms;
          null !== s && s.hasOwnProperty(i) && (r = s[i].call(n, r)),
            null !== e.setInput ? e.setInput(n, r, t, i) : (n[i] = r);
        } finally {
          Fi(o);
        }
      }
      function I4(e, n, t) {
        let i = null,
          r = 0;
        for (; r < t.length; ) {
          const o = t[r];
          if (0 !== o)
            if (5 !== o) {
              if ("number" == typeof o) break;
              if (e.hasOwnProperty(o)) {
                null === i && (i = []);
                const s = e[o];
                for (let a = 0; a < s.length; a += 2)
                  if (s[a] === n) {
                    i.push(o, s[a + 1], t[r + 1]);
                    break;
                  }
              }
              r += 2;
            } else r += 2;
          else r += 4;
        }
        return i;
      }
      function Wx(e, n, t, i) {
        return [e, !0, !1, n, null, 0, i, t, null, null, null];
      }
      function $x(e, n) {
        const t = e.contentQueries;
        if (null !== t)
          for (let i = 0; i < t.length; i += 2) {
            const o = t[i + 1];
            if (-1 !== o) {
              const s = e.data[o];
              cm(t[i]), s.contentQueries(2, n[o], o);
            }
          }
      }
      function $h(e, n) {
        return e[mc] ? (e[Qw][tr] = n) : (e[mc] = n), (e[Qw] = n), n;
      }
      function D_(e, n, t) {
        cm(0);
        const i = Fi(null);
        try {
          n(e, t);
        } finally {
          Fi(i);
        }
      }
      function qx(e) {
        return e[wa] || (e[wa] = []);
      }
      function Gx(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Kx(e, n) {
        const t = e[Fo],
          i = t ? t.get(so, null) : null;
        i && i.handleError(n);
      }
      function S_(e, n, t, i, r) {
        for (let o = 0; o < t.length; ) {
          const s = t[o++],
            a = t[o++];
          Ux(e.data[s], n[s], i, a, r);
        }
      }
      function co(e, n, t) {
        const i = ih(n, e);
        !(function M1(e, n, t) {
          e.setValue(n, t);
        })(e[xe], i, t);
      }
      function O4(e, n) {
        const t = vi(n, e),
          i = t[Y];
        !(function A4(e, n) {
          for (let t = n.length; t < e.blueprint.length; t++)
            n.push(e.blueprint[t]);
        })(i, t);
        const r = t[Gt];
        null !== r && null === t[to] && (t[to] = o_(r, t[Fo])), k_(i, t, t[Jt]);
      }
      function k_(e, n, t) {
        um(n);
        try {
          const i = e.viewQuery;
          null !== i && D_(1, i, t);
          const r = e.template;
          null !== r && Nx(e, n, r, 1, t),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && $x(e, n),
            e.staticViewQueries && D_(2, e.viewQuery, t);
          const o = e.components;
          null !== o &&
            (function P4(e, n) {
              for (let t = 0; t < n.length; t++) O4(e, n[t]);
            })(n, o);
        } catch (i) {
          throw (
            (e.firstCreatePass &&
              ((e.incompleteFirstPass = !0), (e.firstCreatePass = !1)),
            i)
          );
        } finally {
          (n[Ie] &= -5), dm();
        }
      }
      let Zx = (() => {
        class e {
          constructor() {
            (this.all = new Set()), (this.queue = new Map());
          }
          create(t, i, r) {
            const o = typeof Zone > "u" ? null : Zone.current,
              s = (function WR(e, n, t) {
                const i = Object.create($R);
                t && (i.consumerAllowSignalWrites = !0),
                  (i.fn = e),
                  (i.schedule = n);
                const r = (s) => {
                  i.cleanupFn = s;
                };
                return (
                  (i.ref = {
                    notify: () => oC(i),
                    run: () => {
                      if (((i.dirty = !1), i.hasRun && !sC(i))) return;
                      i.hasRun = !0;
                      const s = Jg(i);
                      try {
                        i.cleanupFn(), (i.cleanupFn = pC), i.fn(r);
                      } finally {
                        em(i, s);
                      }
                    },
                    cleanup: () => i.cleanupFn(),
                  }),
                  i.ref
                );
              })(
                t,
                (c) => {
                  this.all.has(c) && this.queue.set(c, o);
                },
                r
              );
            let a;
            this.all.add(s), s.notify();
            const l = () => {
              s.cleanup(), a?.(), this.all.delete(s), this.queue.delete(s);
            };
            return (a = i?.onDestroy(l)), { destroy: l };
          }
          flush() {
            if (0 !== this.queue.size)
              for (const [t, i] of this.queue)
                this.queue.delete(t), i ? i.run(() => t.run()) : t.run();
          }
          get isQueueEmpty() {
            return 0 === this.queue.size;
          }
          static #e = (this.ɵprov = V({
            token: e,
            providedIn: "root",
            factory: () => new e(),
          }));
        }
        return e;
      })();
      function qh(e, n, t) {
        let i = t ? e.styles : null,
          r = t ? e.classes : null,
          o = 0;
        if (null !== n)
          for (let s = 0; s < n.length; s++) {
            const a = n[s];
            "number" == typeof a
              ? (o = a)
              : 1 == o
              ? (r = Pg(r, a))
              : 2 == o && (i = Pg(i, a + ": " + n[++s] + ";"));
          }
        t ? (e.styles = i) : (e.stylesWithoutHost = i),
          t ? (e.classes = r) : (e.classesWithoutHost = r);
      }
      function Uc(e, n, t, i, r = !1) {
        for (; null !== t; ) {
          const o = n[t.index];
          null !== o && i.push(It(o)), Gn(o) && Qx(o, i);
          const s = t.type;
          if (8 & s) Uc(e, n, t.child, i);
          else if (32 & s) {
            const a = Im(t, n);
            let l;
            for (; (l = a()); ) i.push(l);
          } else if (16 & s) {
            const a = P1(n, t);
            if (Array.isArray(a)) i.push(...a);
            else {
              const l = Ac(n[en]);
              Uc(l[Y], l, a, i, !0);
            }
          }
          t = r ? t.projectionNext : t.next;
        }
        return i;
      }
      function Qx(e, n) {
        for (let t = In; t < e.length; t++) {
          const i = e[t],
            r = i[Y].firstChild;
          null !== r && Uc(i[Y], i, r, n);
        }
        e[Cr] !== e[Gt] && n.push(e[Cr]);
      }
      function Gh(e, n, t, i = !0) {
        const r = n[Ca],
          o = r.rendererFactory,
          s = r.afterRenderEventManager;
        o.begin?.(), s?.begin();
        try {
          Xx(e, n, e.template, t);
        } catch (l) {
          throw (i && Kx(n, l), l);
        } finally {
          o.end?.(), r.effectManager?.flush(), s?.end();
        }
      }
      function Xx(e, n, t, i) {
        const r = n[Ie];
        if (256 != (256 & r)) {
          n[Ca].effectManager?.flush(), um(n);
          try {
            wC(n),
              (function EC(e) {
                return (ye.lFrame.bindingIndex = e);
              })(e.bindingStartIndex),
              null !== t && Nx(e, n, t, 2, i);
            const s = 3 == (3 & r);
            if (s) {
              const c = e.preOrderCheckHooks;
              null !== c && sh(n, c, null);
            } else {
              const c = e.preOrderHooks;
              null !== c && ah(n, c, 0, null), fm(n, 0);
            }
            if (
              ((function N4(e) {
                for (let n = w1(e); null !== n; n = C1(n)) {
                  if (!n[Jw]) continue;
                  const t = n[Da];
                  for (let i = 0; i < t.length; i++) {
                    tN(t[i]);
                  }
                }
              })(n),
              Jx(n, 2),
              null !== e.contentQueries && $x(e, n),
              s)
            ) {
              const c = e.contentCheckHooks;
              null !== c && sh(n, c);
            } else {
              const c = e.contentHooks;
              null !== c && ah(n, c, 1), fm(n, 1);
            }
            !(function a4(e, n) {
              const t = e.hostBindingOpCodes;
              if (null === t) return;
              const i = Ix(n, bc);
              try {
                for (let r = 0; r < t.length; r++) {
                  const o = t[r];
                  if (o < 0) ks(~o);
                  else {
                    const s = o,
                      a = t[++r],
                      l = t[++r];
                    fN(a, s), (i.dirty = !1);
                    const c = Jg(i);
                    try {
                      l(2, n[s]);
                    } finally {
                      em(i, c);
                    }
                  }
                }
              } finally {
                null === n[bc] && Ox(n, bc), ks(-1);
              }
            })(e, n);
            const a = e.components;
            null !== a && tM(n, a, 0);
            const l = e.viewQuery;
            if ((null !== l && D_(2, l, i), s)) {
              const c = e.viewCheckHooks;
              null !== c && sh(n, c);
            } else {
              const c = e.viewHooks;
              null !== c && ah(n, c, 2), fm(n, 2);
            }
            !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
              (n[Ie] &= -73),
              CC(n);
          } finally {
            dm();
          }
        }
      }
      function Jx(e, n) {
        for (let t = w1(e); null !== t; t = C1(t))
          for (let i = In; i < t.length; i++) eM(t[i], n);
      }
      function L4(e, n, t) {
        eM(vi(n, e), t);
      }
      function eM(e, n) {
        if (
          !(function JR(e) {
            return 128 == (128 & e[Ie]);
          })(e)
        )
          return;
        const t = e[Y],
          i = e[Ie];
        if ((80 & i && 0 === n) || 1024 & i || 2 === n)
          Xx(t, e, t.template, e[Jt]);
        else if (e[gc] > 0) {
          Jx(e, 1);
          const r = t.components;
          null !== r && tM(e, r, 1);
        }
      }
      function tM(e, n, t) {
        for (let i = 0; i < n.length; i++) L4(e, n[i], t);
      }
      class Wc {
        get rootNodes() {
          const n = this._lView,
            t = n[Y];
          return Uc(t, n, t.firstChild, []);
        }
        constructor(n, t) {
          (this._lView = n),
            (this._cdRefInjectingView = t),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[Jt];
        }
        set context(n) {
          this._lView[Jt] = n;
        }
        get destroyed() {
          return 256 == (256 & this._lView[Ie]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const n = this._lView[zt];
            if (Gn(n)) {
              const t = n[8],
                i = t ? t.indexOf(this) : -1;
              i > -1 && (Dh(n, i), fh(t, i));
            }
            this._attachedToViewContainer = !1;
          }
          Am(this._lView[Y], this._lView);
        }
        onDestroy(n) {
          !(function MC(e, n) {
            if (256 == (256 & e[Ie])) throw new P(911, !1);
            null === e[Ro] && (e[Ro] = []), e[Ro].push(n);
          })(this._lView, n);
        }
        markForCheck() {
          Hc(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[Ie] &= -129;
        }
        reattach() {
          this._lView[Ie] |= 128;
        }
        detectChanges() {
          Gh(this._lView[Y], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new P(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function DL(e, n) {
              Fc(e, n, n[xe], 2, null, null);
            })(this._lView[Y], this._lView);
        }
        attachToAppRef(n) {
          if (this._attachedToViewContainer) throw new P(902, !1);
          this._appRef = n;
        }
      }
      class B4 extends Wc {
        constructor(n) {
          super(n), (this._view = n);
        }
        detectChanges() {
          const n = this._view;
          Gh(n[Y], n, n[Jt], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class nM extends Ga {
        constructor(n) {
          super(), (this.ngModule = n);
        }
        resolveComponentFactory(n) {
          const t = Ge(n);
          return new $c(t, this.ngModule);
        }
      }
      function iM(e) {
        const n = [];
        for (let t in e)
          e.hasOwnProperty(t) && n.push({ propName: e[t], templateName: t });
        return n;
      }
      class z4 {
        constructor(n, t) {
          (this.injector = n), (this.parentInjector = t);
        }
        get(n, t, i) {
          i = Kd(i);
          const r = this.injector.get(n, l_, i);
          return r !== l_ || t === l_ ? r : this.parentInjector.get(n, t, i);
        }
      }
      class $c extends cx {
        get inputs() {
          const n = this.componentDef,
            t = n.inputTransforms,
            i = iM(n.inputs);
          if (null !== t)
            for (const r of i)
              t.hasOwnProperty(r.propName) && (r.transform = t[r.propName]);
          return i;
        }
        get outputs() {
          return iM(this.componentDef.outputs);
        }
        constructor(n, t) {
          super(),
            (this.componentDef = n),
            (this.ngModule = t),
            (this.componentType = n.type),
            (this.selector = (function CR(e) {
              return e.map(wR).join(",");
            })(n.selectors)),
            (this.ngContentSelectors = n.ngContentSelectors
              ? n.ngContentSelectors
              : []),
            (this.isBoundToModule = !!t);
        }
        create(n, t, i, r) {
          let o = (r = r || this.ngModule) instanceof Ci ? r : r?.injector;
          o &&
            null !== this.componentDef.getStandaloneInjector &&
            (o = this.componentDef.getStandaloneInjector(o) || o);
          const s = o ? new z4(n, o) : n,
            a = s.get(Ka, null);
          if (null === a) throw new P(407, !1);
          const f = {
              rendererFactory: a,
              sanitizer: s.get(L3, null),
              effectManager: s.get(Zx, null),
              afterRenderEventManager: s.get(m_, null),
            },
            g = a.createRenderer(null, this.componentDef),
            m = this.componentDef.selectors[0][0] || "div",
            _ = i
              ? (function c4(e, n, t, i) {
                  const o = i.get(Sx, !1) || t === Pi.ShadowDom,
                    s = e.selectRootElement(n, o);
                  return (
                    (function u4(e) {
                      Bx(e);
                    })(s),
                    s
                  );
                })(g, i, this.componentDef.encapsulation, s)
              : Mh(
                  g,
                  m,
                  (function V4(e) {
                    const n = e.toLowerCase();
                    return "svg" === n ? "svg" : "math" === n ? "math" : null;
                  })(m)
                ),
            w = this.componentDef.signals
              ? 4608
              : this.componentDef.onPush
              ? 576
              : 528;
          let C = null;
          null !== _ && (C = o_(_, s, !0));
          const D = w_(0, null, null, 1, 0, null, null, null, null, null, null),
            S = Wh(null, D, null, w, null, null, f, g, s, null, C);
          let T, L;
          um(S);
          try {
            const z = this.componentDef;
            let $,
              q = null;
            z.findHostDirectiveDefs
              ? (($ = []),
                (q = new Map()),
                z.findHostDirectiveDefs(z, $, q),
                $.push(z))
              : ($ = [z]);
            const we = (function j4(e, n) {
                const t = e[Y],
                  i = He;
                return (e[i] = n), Xa(t, i, 2, "#host", null);
              })(S, _),
              Be = (function U4(e, n, t, i, r, o, s) {
                const a = r[Y];
                !(function W4(e, n, t, i) {
                  for (const r of e)
                    n.mergedAttrs = pc(n.mergedAttrs, r.hostAttrs);
                  null !== n.mergedAttrs &&
                    (qh(n, n.mergedAttrs, !0), null !== t && L1(i, t, n));
                })(i, e, n, s);
                let l = null;
                null !== n && (l = o_(n, r[Fo]));
                const c = o.rendererFactory.createRenderer(n, t);
                let u = 16;
                t.signals ? (u = 4096) : t.onPush && (u = 64);
                const f = Wh(
                  r,
                  Lx(t),
                  null,
                  u,
                  r[e.index],
                  e,
                  o,
                  c,
                  null,
                  null,
                  l
                );
                return (
                  a.firstCreatePass && x_(a, e, i.length - 1),
                  $h(r, f),
                  (r[e.index] = f)
                );
              })(we, _, z, $, S, f, g);
            (L = bC(D, He)),
              _ &&
                (function q4(e, n, t, i) {
                  if (i) Gg(e, t, ["ng-version", B3.full]);
                  else {
                    const { attrs: r, classes: o } = (function xR(e) {
                      const n = [],
                        t = [];
                      let i = 1,
                        r = 2;
                      for (; i < e.length; ) {
                        let o = e[i];
                        if ("string" == typeof o)
                          2 === r
                            ? "" !== o && n.push(o, e[++i])
                            : 8 === r && t.push(o);
                        else {
                          if (!er(r)) break;
                          r = o;
                        }
                        i++;
                      }
                      return { attrs: n, classes: t };
                    })(n.selectors[0]);
                    r && Gg(e, t, r),
                      o && o.length > 0 && N1(e, t, o.join(" "));
                  }
                })(g, z, _, i),
              void 0 !== t &&
                (function G4(e, n, t) {
                  const i = (e.projection = []);
                  for (let r = 0; r < n.length; r++) {
                    const o = t[r];
                    i.push(null != o ? Array.from(o) : null);
                  }
                })(L, this.ngContentSelectors, t),
              (T = (function $4(e, n, t, i, r, o) {
                const s = An(),
                  a = r[Y],
                  l = ai(s, r);
                Hx(a, r, s, t, null, i);
                for (let u = 0; u < t.length; u++)
                  Ln(Ts(r, a, s.directiveStart + u, s), r);
                jx(a, r, s), l && Ln(l, r);
                const c = Ts(r, a, s.directiveStart + s.componentOffset, s);
                if (((e[Jt] = r[Jt] = c), null !== o))
                  for (const u of o) u(c, n);
                return y_(a, s, e), c;
              })(Be, z, $, q, S, [Y4])),
              k_(D, S, null);
          } finally {
            dm();
          }
          return new H4(this.componentType, T, Ya(L, S), S, L);
        }
      }
      class H4 extends O3 {
        constructor(n, t, i, r, o) {
          super(),
            (this.location = i),
            (this._rootLView = r),
            (this._tNode = o),
            (this.previousInputValues = null),
            (this.instance = t),
            (this.hostView = this.changeDetectorRef = new B4(r)),
            (this.componentType = n);
        }
        setInput(n, t) {
          const i = this._tNode.inputs;
          let r;
          if (null !== i && (r = i[n])) {
            if (
              ((this.previousInputValues ??= new Map()),
              this.previousInputValues.has(n) &&
                Object.is(this.previousInputValues.get(n), t))
            )
              return;
            const o = this._rootLView;
            S_(o[Y], o, r, n, t),
              this.previousInputValues.set(n, t),
              Hc(vi(this._tNode.index, o));
          }
        }
        get injector() {
          return new Zn(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(n) {
          this.hostView.onDestroy(n);
        }
      }
      function Y4() {
        const e = An();
        oh(B()[Y], e);
      }
      function ft(e) {
        let n = (function rM(e) {
            return Object.getPrototypeOf(e.prototype).constructor;
          })(e.type),
          t = !0;
        const i = [e];
        for (; n; ) {
          let r;
          if (nr(e)) r = n.ɵcmp || n.ɵdir;
          else {
            if (n.ɵcmp) throw new P(903, !1);
            r = n.ɵdir;
          }
          if (r) {
            if (t) {
              i.push(r);
              const s = e;
              (s.inputs = Yh(e.inputs)),
                (s.inputTransforms = Yh(e.inputTransforms)),
                (s.declaredInputs = Yh(e.declaredInputs)),
                (s.outputs = Yh(e.outputs));
              const a = r.hostBindings;
              a && X4(e, a);
              const l = r.viewQuery,
                c = r.contentQueries;
              if (
                (l && Z4(e, l),
                c && Q4(e, c),
                Ud(e.inputs, r.inputs),
                Ud(e.declaredInputs, r.declaredInputs),
                Ud(e.outputs, r.outputs),
                null !== r.inputTransforms &&
                  (null === s.inputTransforms && (s.inputTransforms = {}),
                  Ud(s.inputTransforms, r.inputTransforms)),
                nr(r) && r.data.animation)
              ) {
                const u = e.data;
                u.animation = (u.animation || []).concat(r.data.animation);
              }
            }
            const o = r.features;
            if (o)
              for (let s = 0; s < o.length; s++) {
                const a = o[s];
                a && a.ngInherit && a(e), a === ft && (t = !1);
              }
          }
          n = Object.getPrototypeOf(n);
        }
        !(function K4(e) {
          let n = 0,
            t = null;
          for (let i = e.length - 1; i >= 0; i--) {
            const r = e[i];
            (r.hostVars = n += r.hostVars),
              (r.hostAttrs = pc(r.hostAttrs, (t = pc(t, r.hostAttrs))));
          }
        })(i);
      }
      function Yh(e) {
        return e === br ? {} : e === et ? [] : e;
      }
      function Z4(e, n) {
        const t = e.viewQuery;
        e.viewQuery = t
          ? (i, r) => {
              n(i, r), t(i, r);
            }
          : n;
      }
      function Q4(e, n) {
        const t = e.contentQueries;
        e.contentQueries = t
          ? (i, r, o) => {
              n(i, r, o), t(i, r, o);
            }
          : n;
      }
      function X4(e, n) {
        const t = e.hostBindings;
        e.hostBindings = t
          ? (i, r) => {
              n(i, r), t(i, r);
            }
          : n;
      }
      function lM(e) {
        const n = e.inputConfig,
          t = {};
        for (const i in n)
          if (n.hasOwnProperty(i)) {
            const r = n[i];
            Array.isArray(r) && r[2] && (t[i] = r[2]);
          }
        e.inputTransforms = t;
      }
      function Kh(e) {
        return (
          !!T_(e) &&
          (Array.isArray(e) || (!(e instanceof Map) && Symbol.iterator in e))
        );
      }
      function T_(e) {
        return null !== e && ("function" == typeof e || "object" == typeof e);
      }
      function Tr(e, n, t) {
        return (e[n] = t);
      }
      function Bn(e, n, t) {
        return !Object.is(e[n], t) && ((e[n] = t), !0);
      }
      function Ps(e, n, t, i) {
        const r = Bn(e, n, t);
        return Bn(e, n + 1, i) || r;
      }
      function sn(e, n, t, i) {
        const r = B();
        return Bn(r, Ea(), n) && (Ye(), kr(Wt(), r, e, n, t, i)), sn;
      }
      function tl(e, n, t, i, r, o) {
        const a = Ps(
          e,
          (function no() {
            return ye.lFrame.bindingIndex;
          })(),
          t,
          r
        );
        return io(2), a ? n + Ce(t) + i + Ce(r) + o : ke;
      }
      function E(e, n, t, i, r, o, s, a) {
        const l = B(),
          c = Ye(),
          u = e + He,
          f = c.firstCreatePass
            ? (function xB(e, n, t, i, r, o, s, a, l) {
                const c = n.consts,
                  u = Xa(n, e, 4, s || null, Lo(c, a));
                C_(n, t, u, Lo(c, l)), oh(n, u);
                const f = (u.tView = w_(
                  2,
                  u,
                  i,
                  r,
                  o,
                  n.directiveRegistry,
                  n.pipeRegistry,
                  null,
                  n.schemas,
                  c,
                  null
                ));
                return (
                  null !== n.queries &&
                    (n.queries.template(n, u),
                    (f.queries = n.queries.embeddedTView(u))),
                  u
                );
              })(u, c, l, n, t, i, r, o, s)
            : c.data[u];
        Mr(f, !1);
        const g = wM(c, l, f, e);
        rh() && kh(c, l, g, f),
          Ln(g, l),
          $h(l, (l[u] = Wx(g, l, g, f))),
          eh(f) && v_(c, l, f),
          null != s && b_(l, f, a);
      }
      let wM = function CM(e, n, t, i) {
        return Bo(!0), n[xe].createComment("");
      };
      function ll(e) {
        return ka(
          (function dN() {
            return ye.lFrame.contextLView;
          })(),
          He + e
        );
      }
      function x(e, n, t) {
        const i = B();
        return (
          Bn(i, Ea(), n) &&
            (function xi(e, n, t, i, r, o, s, a) {
              const l = ai(n, t);
              let u,
                c = n.inputs;
              !a && null != c && (u = c[i])
                ? (S_(e, t, u, i, r),
                  Ds(n) &&
                    (function _4(e, n) {
                      const t = vi(n, e);
                      16 & t[Ie] || (t[Ie] |= 64);
                    })(t, n.index))
                : 3 & n.type &&
                  ((i = (function m4(e) {
                    return "class" === e
                      ? "className"
                      : "for" === e
                      ? "htmlFor"
                      : "formaction" === e
                      ? "formAction"
                      : "innerHtml" === e
                      ? "innerHTML"
                      : "readonly" === e
                      ? "readOnly"
                      : "tabindex" === e
                      ? "tabIndex"
                      : e;
                  })(i)),
                  (r = null != s ? s(r, n.value || "", i) : r),
                  o.setProperty(l, i, r));
            })(Ye(), Wt(), i, e, n, i[xe], t, !1),
          x
        );
      }
      function F_(e, n, t, i, r) {
        const s = r ? "class" : "style";
        S_(e, t, n.inputs[s], s, i);
      }
      function p(e, n, t, i) {
        const r = B(),
          o = Ye(),
          s = He + e,
          a = r[xe],
          l = o.firstCreatePass
            ? (function kB(e, n, t, i, r, o) {
                const s = n.consts,
                  l = Xa(n, e, 2, i, Lo(s, r));
                return (
                  C_(n, t, l, Lo(s, o)),
                  null !== l.attrs && qh(l, l.attrs, !1),
                  null !== l.mergedAttrs && qh(l, l.mergedAttrs, !0),
                  null !== n.queries && n.queries.elementStart(n, l),
                  l
                );
              })(s, o, r, n, t, i)
            : o.data[s],
          c = xM(o, r, l, a, n, e);
        r[s] = c;
        const u = eh(l);
        return (
          Mr(l, !0),
          L1(a, c, l),
          32 != (32 & l.flags) && rh() && kh(o, r, c, l),
          0 ===
            (function iN() {
              return ye.lFrame.elementDepthCount;
            })() && Ln(c, r),
          (function rN() {
            ye.lFrame.elementDepthCount++;
          })(),
          u && (v_(o, r, l), y_(o, l, r)),
          null !== i && b_(r, l),
          p
        );
      }
      function d() {
        let e = An();
        om() ? sm() : ((e = e.parent), Mr(e, !1));
        const n = e;
        (function sN(e) {
          return ye.skipHydrationRootTNode === e;
        })(n) &&
          (function uN() {
            ye.skipHydrationRootTNode = null;
          })(),
          (function oN() {
            ye.lFrame.elementDepthCount--;
          })();
        const t = Ye();
        return (
          t.firstCreatePass && (oh(t, e), Kg(e) && t.queries.elementEnd(e)),
          null != n.classesWithoutHost &&
            (function xN(e) {
              return 0 != (8 & e.flags);
            })(n) &&
            F_(t, n, B(), n.classesWithoutHost, !0),
          null != n.stylesWithoutHost &&
            (function MN(e) {
              return 0 != (16 & e.flags);
            })(n) &&
            F_(t, n, B(), n.stylesWithoutHost, !1),
          d
        );
      }
      function k(e, n, t, i) {
        return p(e, n, t, i), d(), k;
      }
      let xM = (e, n, t, i, r, o) => (
        Bo(!0),
        Mh(
          i,
          r,
          (function BC() {
            return ye.lFrame.currentNamespace;
          })()
        )
      );
      function Ct(e, n, t) {
        const i = B(),
          r = Ye(),
          o = e + He,
          s = r.firstCreatePass
            ? (function IB(e, n, t, i, r) {
                const o = n.consts,
                  s = Lo(o, i),
                  a = Xa(n, e, 8, "ng-container", s);
                return (
                  null !== s && qh(a, s, !0),
                  C_(n, t, a, Lo(o, r)),
                  null !== n.queries && n.queries.elementStart(n, a),
                  a
                );
              })(o, r, i, n, t)
            : r.data[o];
        Mr(s, !0);
        const a = MM(r, i, s, e);
        return (
          (i[o] = a),
          rh() && kh(r, i, a, s),
          Ln(a, i),
          eh(s) && (v_(r, i, s), y_(r, s, i)),
          null != t && b_(i, s),
          Ct
        );
      }
      function xt() {
        let e = An();
        const n = Ye();
        return (
          om() ? sm() : ((e = e.parent), Mr(e, !1)),
          n.firstCreatePass && (oh(n, e), Kg(e) && n.queries.elementEnd(e)),
          xt
        );
      }
      function Zc(e, n, t) {
        return Ct(e, n, t), xt(), Zc;
      }
      let MM = (e, n, t, i) => (Bo(!0), Om(n[xe], ""));
      function Ne() {
        return B();
      }
      function Qc(e) {
        return !!e && "function" == typeof e.then;
      }
      function DM(e) {
        return !!e && "function" == typeof e.subscribe;
      }
      function F(e, n, t, i) {
        const r = B(),
          o = Ye(),
          s = An();
        return (
          (function kM(e, n, t, i, r, o, s) {
            const a = eh(i),
              c = e.firstCreatePass && Gx(e),
              u = n[Jt],
              f = qx(n);
            let g = !0;
            if (3 & i.type || s) {
              const y = ai(i, n),
                v = s ? s(y) : y,
                w = f.length,
                C = s ? (S) => s(It(S[i.index])) : i.index;
              let D = null;
              if (
                (!s &&
                  a &&
                  (D = (function PB(e, n, t, i) {
                    const r = e.cleanup;
                    if (null != r)
                      for (let o = 0; o < r.length - 1; o += 2) {
                        const s = r[o];
                        if (s === t && r[o + 1] === i) {
                          const a = n[wa],
                            l = r[o + 2];
                          return a.length > l ? a[l] : null;
                        }
                        "string" == typeof s && (o += 2);
                      }
                    return null;
                  })(e, n, r, i.index)),
                null !== D)
              )
                ((D.__ngLastListenerFn__ || D).__ngNextListenerFn__ = o),
                  (D.__ngLastListenerFn__ = o),
                  (g = !1);
              else {
                o = EM(i, n, u, o, !1);
                const S = t.listen(v, r, o);
                f.push(o, S), c && c.push(r, C, w, w + 1);
              }
            } else o = EM(i, n, u, o, !1);
            const m = i.outputs;
            let _;
            if (g && null !== m && (_ = m[r])) {
              const y = _.length;
              if (y)
                for (let v = 0; v < y; v += 2) {
                  const T = n[_[v]][_[v + 1]].subscribe(o),
                    L = f.length;
                  f.push(o, T), c && c.push(r, i.index, L, -(L + 1));
                }
            }
          })(o, r, r[xe], s, e, n, i),
          F
        );
      }
      function TM(e, n, t, i) {
        try {
          return xr(6, n, t), !1 !== t(i);
        } catch (r) {
          return Kx(e, r), !1;
        } finally {
          xr(7, n, t);
        }
      }
      function EM(e, n, t, i, r) {
        return function o(s) {
          if (s === Function) return i;
          Hc(e.componentOffset > -1 ? vi(e.index, n) : n);
          let l = TM(n, t, i, s),
            c = o.__ngNextListenerFn__;
          for (; c; ) (l = TM(n, t, c, s) && l), (c = c.__ngNextListenerFn__);
          return r && !1 === l && s.preventDefault(), l;
        };
      }
      function I(e = 1) {
        return (function mN(e) {
          return (ye.lFrame.contextLView = (function _N(e, n) {
            for (; e > 0; ) (n = n[xa]), e--;
            return n;
          })(e, ye.lFrame.contextLView))[Jt];
        })(e);
      }
      function FB(e, n) {
        let t = null;
        const i = (function _R(e) {
          const n = e.attrs;
          if (null != n) {
            const t = n.indexOf(5);
            if (!(1 & t)) return n[t + 1];
          }
          return null;
        })(e);
        for (let r = 0; r < n.length; r++) {
          const o = n[r];
          if ("*" !== o) {
            if (null === i ? qw(e, o, !0) : bR(i, o)) return r;
          } else t = r;
        }
        return t;
      }
      function Er(e) {
        const n = B()[en][Nn];
        if (!n.projection) {
          const i = (n.projection = Ec(e ? e.length : 1, null)),
            r = i.slice();
          let o = n.child;
          for (; null !== o; ) {
            const s = e ? FB(o, e) : 0;
            null !== s &&
              (r[s] ? (r[s].projectionNext = o) : (i[s] = o), (r[s] = o)),
              (o = o.next);
          }
        }
      }
      function ir(e, n = 0, t) {
        const i = B(),
          r = Ye(),
          o = Xa(r, He + e, 16, null, t || null);
        null === o.projection && (o.projection = n),
          sm(),
          (!i[to] || Ta()) &&
            32 != (32 & o.flags) &&
            (function PL(e, n, t) {
              R1(n[xe], 0, n, t, Fm(e, t, n), E1(t.parent || n[Nn], t, n));
            })(r, i, o);
      }
      function ef(e, n) {
        return (e << 17) | (n << 2);
      }
      function jo(e) {
        return (e >> 17) & 32767;
      }
      function N_(e) {
        return 2 | e;
      }
      function Fs(e) {
        return (131068 & e) >> 2;
      }
      function L_(e, n) {
        return (-131069 & e) | (n << 2);
      }
      function B_(e) {
        return 1 | e;
      }
      function VM(e, n, t, i, r) {
        const o = e[t + 1],
          s = null === n;
        let a = i ? jo(o) : Fs(o),
          l = !1;
        for (; 0 !== a && (!1 === l || s); ) {
          const u = e[a + 1];
          zB(e[a], n) && ((l = !0), (e[a + 1] = i ? B_(u) : N_(u))),
            (a = i ? jo(u) : Fs(u));
        }
        l && (e[t + 1] = i ? N_(o) : B_(o));
      }
      function zB(e, n) {
        return (
          null === e ||
          null == n ||
          (Array.isArray(e) ? e[1] : e) === n ||
          (!(!Array.isArray(e) || "string" != typeof n) && La(e, n) >= 0)
        );
      }
      const gn = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function zM(e) {
        return e.substring(gn.key, gn.keyEnd);
      }
      function HM(e, n) {
        const t = gn.textEnd;
        return t === n
          ? -1
          : ((n = gn.keyEnd =
              (function WB(e, n, t) {
                for (; n < t && e.charCodeAt(n) > 32; ) n++;
                return n;
              })(e, (gn.key = n), t)),
            cl(e, n, t));
      }
      function cl(e, n, t) {
        for (; n < t && e.charCodeAt(n) <= 32; ) n++;
        return n;
      }
      function rr(e, n, t) {
        return or(e, n, t, !1), rr;
      }
      function Le(e, n) {
        return or(e, n, null, !0), Le;
      }
      function Te(e) {
        !(function sr(e, n, t, i) {
          const r = Ye(),
            o = io(2);
          r.firstUpdatePass && GM(r, null, o, i);
          const s = B();
          if (t !== ke && Bn(s, o, t)) {
            const a = r.data[Kn()];
            if (QM(a, i) && !qM(r, o)) {
              let l = i ? a.classesWithoutHost : a.stylesWithoutHost;
              null !== l && (t = Pg(l, t || "")), F_(r, a, s, t, i);
            } else
              !(function e5(e, n, t, i, r, o, s, a) {
                r === ke && (r = et);
                let l = 0,
                  c = 0,
                  u = 0 < r.length ? r[0] : null,
                  f = 0 < o.length ? o[0] : null;
                for (; null !== u || null !== f; ) {
                  const g = l < r.length ? r[l + 1] : void 0,
                    m = c < o.length ? o[c + 1] : void 0;
                  let y,
                    _ = null;
                  u === f
                    ? ((l += 2), (c += 2), g !== m && ((_ = f), (y = m)))
                    : null === f || (null !== u && u < f)
                    ? ((l += 2), (_ = u))
                    : ((c += 2), (_ = f), (y = m)),
                    null !== _ && KM(e, n, t, i, _, y, s, a),
                    (u = l < r.length ? r[l] : null),
                    (f = c < o.length ? o[c] : null);
                }
              })(
                r,
                a,
                s,
                s[xe],
                s[o + 1],
                (s[o + 1] = (function XB(e, n, t) {
                  if (null == t || "" === t) return et;
                  const i = [],
                    r = wi(t);
                  if (Array.isArray(r))
                    for (let o = 0; o < r.length; o++) e(i, r[o], !0);
                  else if ("object" == typeof r)
                    for (const o in r) r.hasOwnProperty(o) && e(i, o, r[o]);
                  else "string" == typeof r && n(i, r);
                  return i;
                })(e, n, t)),
                i,
                o
              );
          }
        })(JB, Or, e, !0);
      }
      function Or(e, n) {
        for (
          let t = (function jB(e) {
            return (
              (function UM(e) {
                (gn.key = 0),
                  (gn.keyEnd = 0),
                  (gn.value = 0),
                  (gn.valueEnd = 0),
                  (gn.textEnd = e.length);
              })(e),
              HM(e, cl(e, 0, gn.textEnd))
            );
          })(n);
          t >= 0;
          t = HM(n, t)
        )
          bi(e, zM(n), !0);
      }
      function or(e, n, t, i) {
        const r = B(),
          o = Ye(),
          s = io(2);
        o.firstUpdatePass && GM(o, e, s, i),
          n !== ke &&
            Bn(r, s, n) &&
            KM(
              o,
              o.data[Kn()],
              r,
              r[xe],
              e,
              (r[s + 1] = (function t5(e, n) {
                return (
                  null == e ||
                    "" === e ||
                    ("string" == typeof n
                      ? (e += n)
                      : "object" == typeof e && (e = hn(wi(e)))),
                  e
                );
              })(n, t)),
              i,
              s
            );
      }
      function qM(e, n) {
        return n >= e.expandoStartIndex;
      }
      function GM(e, n, t, i) {
        const r = e.data;
        if (null === r[t + 1]) {
          const o = r[Kn()],
            s = qM(e, t);
          QM(o, i) && null === n && !s && (n = !1),
            (n = (function YB(e, n, t, i) {
              const r = (function lm(e) {
                const n = ye.lFrame.currentDirectiveIndex;
                return -1 === n ? null : e[n];
              })(e);
              let o = i ? n.residualClasses : n.residualStyles;
              if (null === r)
                0 === (i ? n.classBindings : n.styleBindings) &&
                  ((t = Xc((t = V_(null, e, n, t, i)), n.attrs, i)),
                  (o = null));
              else {
                const s = n.directiveStylingLast;
                if (-1 === s || e[s] !== r)
                  if (((t = V_(r, e, n, t, i)), null === o)) {
                    let l = (function KB(e, n, t) {
                      const i = t ? n.classBindings : n.styleBindings;
                      if (0 !== Fs(i)) return e[jo(i)];
                    })(e, n, i);
                    void 0 !== l &&
                      Array.isArray(l) &&
                      ((l = V_(null, e, n, l[1], i)),
                      (l = Xc(l, n.attrs, i)),
                      (function ZB(e, n, t, i) {
                        e[jo(t ? n.classBindings : n.styleBindings)] = i;
                      })(e, n, i, l));
                  } else
                    o = (function QB(e, n, t) {
                      let i;
                      const r = n.directiveEnd;
                      for (let o = 1 + n.directiveStylingLast; o < r; o++)
                        i = Xc(i, e[o].hostAttrs, t);
                      return Xc(i, n.attrs, t);
                    })(e, n, i);
              }
              return (
                void 0 !== o &&
                  (i ? (n.residualClasses = o) : (n.residualStyles = o)),
                t
              );
            })(r, o, n, i)),
            (function BB(e, n, t, i, r, o) {
              let s = o ? n.classBindings : n.styleBindings,
                a = jo(s),
                l = Fs(s);
              e[i] = t;
              let u,
                c = !1;
              if (
                (Array.isArray(t)
                  ? ((u = t[1]), (null === u || La(t, u) > 0) && (c = !0))
                  : (u = t),
                r)
              )
                if (0 !== l) {
                  const g = jo(e[a + 1]);
                  (e[i + 1] = ef(g, a)),
                    0 !== g && (e[g + 1] = L_(e[g + 1], i)),
                    (e[a + 1] = (function NB(e, n) {
                      return (131071 & e) | (n << 17);
                    })(e[a + 1], i));
                } else
                  (e[i + 1] = ef(a, 0)),
                    0 !== a && (e[a + 1] = L_(e[a + 1], i)),
                    (a = i);
              else
                (e[i + 1] = ef(l, 0)),
                  0 === a ? (a = i) : (e[l + 1] = L_(e[l + 1], i)),
                  (l = i);
              c && (e[i + 1] = N_(e[i + 1])),
                VM(e, u, i, !0),
                VM(e, u, i, !1),
                (function VB(e, n, t, i, r) {
                  const o = r ? e.residualClasses : e.residualStyles;
                  null != o &&
                    "string" == typeof n &&
                    La(o, n) >= 0 &&
                    (t[i + 1] = B_(t[i + 1]));
                })(n, u, e, i, o),
                (s = ef(a, l)),
                o ? (n.classBindings = s) : (n.styleBindings = s);
            })(r, o, n, t, s, i);
        }
      }
      function V_(e, n, t, i, r) {
        let o = null;
        const s = t.directiveEnd;
        let a = t.directiveStylingLast;
        for (
          -1 === a ? (a = t.directiveStart) : a++;
          a < s && ((o = n[a]), (i = Xc(i, o.hostAttrs, r)), o !== e);

        )
          a++;
        return null !== e && (t.directiveStylingLast = a), i;
      }
      function Xc(e, n, t) {
        const i = t ? 1 : 2;
        let r = -1;
        if (null !== n)
          for (let o = 0; o < n.length; o++) {
            const s = n[o];
            "number" == typeof s
              ? (r = s)
              : r === i &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]),
                bi(e, s, !!t || n[++o]));
          }
        return void 0 === e ? null : e;
      }
      function JB(e, n, t) {
        const i = String(n);
        "" !== i && !i.includes(" ") && bi(e, i, t);
      }
      function KM(e, n, t, i, r, o, s, a) {
        if (!(3 & n.type)) return;
        const l = e.data,
          c = l[a + 1],
          u = (function LB(e) {
            return 1 == (1 & e);
          })(c)
            ? ZM(l, n, t, r, Fs(c), s)
            : void 0;
        tf(u) ||
          (tf(o) ||
            ((function RB(e) {
              return 2 == (2 & e);
            })(c) &&
              (o = ZM(l, null, t, r, a, s))),
          (function RL(e, n, t, i, r) {
            if (n) r ? e.addClass(t, i) : e.removeClass(t, i);
            else {
              let o = -1 === i.indexOf("-") ? void 0 : Vo.DashCase;
              null == r
                ? e.removeStyle(t, i, o)
                : ("string" == typeof r &&
                    r.endsWith("!important") &&
                    ((r = r.slice(0, -10)), (o |= Vo.Important)),
                  e.setStyle(t, i, r, o));
            }
          })(i, s, ih(Kn(), t), r, o));
      }
      function ZM(e, n, t, i, r, o) {
        const s = null === n;
        let a;
        for (; r > 0; ) {
          const l = e[r],
            c = Array.isArray(l),
            u = c ? l[1] : l,
            f = null === u;
          let g = t[r + 1];
          g === ke && (g = f ? et : void 0);
          let m = f ? wm(g, i) : u === i ? g : void 0;
          if ((c && !tf(m) && (m = wm(l, i)), tf(m) && ((a = m), s))) return a;
          const _ = e[r + 1];
          r = s ? jo(_) : Fs(_);
        }
        if (null !== n) {
          let l = o ? n.residualClasses : n.residualStyles;
          null != l && (a = wm(l, i));
        }
        return a;
      }
      function tf(e) {
        return void 0 !== e;
      }
      function QM(e, n) {
        return 0 != (e.flags & (n ? 8 : 16));
      }
      function h(e, n = "") {
        const t = B(),
          i = Ye(),
          r = e + He,
          o = i.firstCreatePass ? Xa(i, r, 1, n, null) : i.data[r],
          s = XM(i, t, o, n, e);
        (t[r] = s), rh() && kh(i, t, s, o), Mr(o, !1);
      }
      let XM = (e, n, t, i, r) => (
        Bo(!0),
        (function xh(e, n) {
          return e.createText(n);
        })(n[xe], i)
      );
      function bn(e) {
        return ne("", e, ""), bn;
      }
      function ne(e, n, t) {
        const i = B(),
          r = (function el(e, n, t, i) {
            return Bn(e, Ea(), t) ? n + Ce(t) + i : ke;
          })(i, e, n, t);
        return r !== ke && co(i, Kn(), r), ne;
      }
      function mn(e, n, t, i, r) {
        const o = B(),
          s = tl(o, e, n, t, i, r);
        return s !== ke && co(o, Kn(), s), mn;
      }
      const Rs = void 0;
      var x5 = [
        "en",
        [["a", "p"], ["AM", "PM"], Rs],
        [["AM", "PM"], Rs, Rs],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        Rs,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        Rs,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", Rs, "{1} 'at' {0}", Rs],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function C5(e) {
          const t = Math.floor(Math.abs(e)),
            i = e.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === t && 0 === i ? 1 : 5;
        },
      ];
      let ul = {};
      function Qn(e) {
        const n = (function M5(e) {
          return e.toLowerCase().replace(/_/g, "-");
        })(e);
        let t = yD(n);
        if (t) return t;
        const i = n.split("-")[0];
        if (((t = yD(i)), t)) return t;
        if ("en" === i) return x5;
        throw new P(701, !1);
      }
      function yD(e) {
        return (
          e in ul ||
            (ul[e] =
              Et.ng &&
              Et.ng.common &&
              Et.ng.common.locales &&
              Et.ng.common.locales[e]),
          ul[e]
        );
      }
      var Ot = (function (e) {
        return (
          (e[(e.LocaleId = 0)] = "LocaleId"),
          (e[(e.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
          (e[(e.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
          (e[(e.DaysFormat = 3)] = "DaysFormat"),
          (e[(e.DaysStandalone = 4)] = "DaysStandalone"),
          (e[(e.MonthsFormat = 5)] = "MonthsFormat"),
          (e[(e.MonthsStandalone = 6)] = "MonthsStandalone"),
          (e[(e.Eras = 7)] = "Eras"),
          (e[(e.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
          (e[(e.WeekendRange = 9)] = "WeekendRange"),
          (e[(e.DateFormat = 10)] = "DateFormat"),
          (e[(e.TimeFormat = 11)] = "TimeFormat"),
          (e[(e.DateTimeFormat = 12)] = "DateTimeFormat"),
          (e[(e.NumberSymbols = 13)] = "NumberSymbols"),
          (e[(e.NumberFormats = 14)] = "NumberFormats"),
          (e[(e.CurrencyCode = 15)] = "CurrencyCode"),
          (e[(e.CurrencySymbol = 16)] = "CurrencySymbol"),
          (e[(e.CurrencyName = 17)] = "CurrencyName"),
          (e[(e.Currencies = 18)] = "Currencies"),
          (e[(e.Directionality = 19)] = "Directionality"),
          (e[(e.PluralCase = 20)] = "PluralCase"),
          (e[(e.ExtraData = 21)] = "ExtraData"),
          e
        );
      })(Ot || {});
      const dl = "en-US";
      let vD = dl;
      function j_(e, n, t, i, r) {
        if (((e = ve(e)), Array.isArray(e)))
          for (let o = 0; o < e.length; o++) j_(e[o], n, t, i, r);
        else {
          const o = Ye(),
            s = B(),
            a = An();
          let l = Os(e) ? e : ve(e.provide);
          const c = nx(e),
            u = 1048575 & a.providerIndexes,
            f = a.directiveStart,
            g = a.providerIndexes >> 20;
          if (Os(e) || !e.multi) {
            const m = new Mc(c, r, M),
              _ = W_(l, n, r ? u : u + g, f);
            -1 === _
              ? (ym(ch(a, s), o, l),
                U_(o, e, n.length),
                n.push(l),
                a.directiveStart++,
                a.directiveEnd++,
                r && (a.providerIndexes += 1048576),
                t.push(m),
                s.push(m))
              : ((t[_] = m), (s[_] = m));
          } else {
            const m = W_(l, n, u + g, f),
              _ = W_(l, n, u, u + g),
              v = _ >= 0 && t[_];
            if ((r && !v) || (!r && !(m >= 0 && t[m]))) {
              ym(ch(a, s), o, l);
              const w = (function CV(e, n, t, i, r) {
                const o = new Mc(e, t, M);
                return (
                  (o.multi = []),
                  (o.index = n),
                  (o.componentProviders = 0),
                  WD(o, r, i && !t),
                  o
                );
              })(r ? wV : bV, t.length, r, i, c);
              !r && v && (t[_].providerFactory = w),
                U_(o, e, n.length, 0),
                n.push(l),
                a.directiveStart++,
                a.directiveEnd++,
                r && (a.providerIndexes += 1048576),
                t.push(w),
                s.push(w);
            } else U_(o, e, m > -1 ? m : _, WD(t[r ? _ : m], c, !r && i));
            !r && i && v && t[_].componentProviders++;
          }
        }
      }
      function U_(e, n, t, i) {
        const r = Os(n),
          o = (function p3(e) {
            return !!e.useClass;
          })(n);
        if (r || o) {
          const l = (o ? ve(n.useClass) : n).prototype.ngOnDestroy;
          if (l) {
            const c = e.destroyHooks || (e.destroyHooks = []);
            if (!r && n.multi) {
              const u = c.indexOf(t);
              -1 === u ? c.push(t, [i, l]) : c[u + 1].push(i, l);
            } else c.push(t, l);
          }
        }
      }
      function WD(e, n, t) {
        return t && e.componentProviders++, e.multi.push(n) - 1;
      }
      function W_(e, n, t, i) {
        for (let r = t; r < i; r++) if (n[r] === e) return r;
        return -1;
      }
      function bV(e, n, t, i) {
        return $_(this.multi, []);
      }
      function wV(e, n, t, i) {
        const r = this.multi;
        let o;
        if (this.providerFactory) {
          const s = this.providerFactory.componentProviders,
            a = Ts(t, t[Y], this.providerFactory.index, i);
          (o = a.slice(0, s)), $_(r, o);
          for (let l = s; l < a.length; l++) o.push(a[l]);
        } else (o = []), $_(r, o);
        return o;
      }
      function $_(e, n) {
        for (let t = 0; t < e.length; t++) n.push((0, e[t])());
        return n;
      }
      function it(e, n = []) {
        return (t) => {
          t.providersResolver = (i, r) =>
            (function vV(e, n, t) {
              const i = Ye();
              if (i.firstCreatePass) {
                const r = nr(e);
                j_(t, i.data, i.blueprint, r, !0),
                  j_(n, i.data, i.blueprint, r, !1);
              }
            })(i, r ? r(e) : e, n);
        };
      }
      class Ns {}
      class $D {}
      class q_ extends Ns {
        constructor(n, t, i) {
          super(),
            (this._parent = t),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new nM(this));
          const r = yi(n);
          (this._bootstrapComponents = lo(r.bootstrap)),
            (this._r3Injector = gx(
              n,
              t,
              [
                { provide: Ns, useValue: this },
                { provide: Ga, useValue: this.componentFactoryResolver },
                ...i,
              ],
              hn(n),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(n));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const n = this._r3Injector;
          !n.destroyed && n.destroy(),
            this.destroyCbs.forEach((t) => t()),
            (this.destroyCbs = null);
        }
        onDestroy(n) {
          this.destroyCbs.push(n);
        }
      }
      class G_ extends $D {
        constructor(n) {
          super(), (this.moduleType = n);
        }
        create(n) {
          return new q_(this.moduleType, n, []);
        }
      }
      class qD extends Ns {
        constructor(n) {
          super(),
            (this.componentFactoryResolver = new nM(this)),
            (this.instance = null);
          const t = new Ua(
            [
              ...n.providers,
              { provide: Ns, useValue: this },
              { provide: Ga, useValue: this.componentFactoryResolver },
            ],
            n.parent || Rh(),
            n.debugName,
            new Set(["environment"])
          );
          (this.injector = t),
            n.runEnvironmentInitializers && t.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(n) {
          this.injector.onDestroy(n);
        }
      }
      function Y_(e, n, t = null) {
        return new qD({
          providers: e,
          parent: n,
          debugName: t,
          runEnvironmentInitializers: !0,
        }).injector;
      }
      let DV = (() => {
        class e {
          constructor(t) {
            (this._injector = t), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(t) {
            if (!t.standalone) return null;
            if (!this.cachedInjectors.has(t)) {
              const i = X1(0, t.type),
                r =
                  i.length > 0
                    ? Y_([i], this._injector, `Standalone[${t.type.name}]`)
                    : null;
              this.cachedInjectors.set(t, r);
            }
            return this.cachedInjectors.get(t);
          }
          ngOnDestroy() {
            try {
              for (const t of this.cachedInjectors.values())
                null !== t && t.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
          static #e = (this.ɵprov = V({
            token: e,
            providedIn: "environment",
            factory: () => new e(O(Ci)),
          }));
        }
        return e;
      })();
      function GD(e) {
        e.getStandaloneInjector = (n) =>
          n.get(DV).getOrCreateStandaloneInjector(e);
      }
      function Xn(e, n, t, i) {
        return eS(B(), Yn(), e, n, t, i);
      }
      function Ar(e, n, t, i, r) {
        return tS(B(), Yn(), e, n, t, i, r);
      }
      function ru(e, n) {
        const t = e[n];
        return t === ke ? void 0 : t;
      }
      function eS(e, n, t, i, r, o) {
        const s = n + t;
        return Bn(e, s, r)
          ? Tr(e, s + 1, o ? i.call(o, r) : i(r))
          : ru(e, s + 1);
      }
      function tS(e, n, t, i, r, o, s) {
        const a = n + t;
        return Ps(e, a, r, o)
          ? Tr(e, a + 2, s ? i.call(s, r, o) : i(r, o))
          : ru(e, a + 2);
      }
      function nS(e, n, t, i, r, o, s, a) {
        const l = n + t;
        return (function Zh(e, n, t, i, r) {
          const o = Ps(e, n, t, i);
          return Bn(e, n + 2, r) || o;
        })(e, l, r, o, s)
          ? Tr(e, l + 3, a ? i.call(a, r, o, s) : i(r, o, s))
          : ru(e, l + 3);
      }
      function pe(e, n) {
        const t = Ye();
        let i;
        const r = e + He;
        t.firstCreatePass
          ? ((i = (function HV(e, n) {
              if (n)
                for (let t = n.length - 1; t >= 0; t--) {
                  const i = n[t];
                  if (e === i.name) return i;
                }
            })(n, t.pipeRegistry)),
            (t.data[r] = i),
            i.onDestroy && (t.destroyHooks ??= []).push(r, i.onDestroy))
          : (i = t.data[r]);
        const o = i.factory || (i.factory = Ss(i.type)),
          a = ri(M);
        try {
          const l = lh(!1),
            c = o();
          return (
            lh(l),
            (function SB(e, n, t, i) {
              t >= e.data.length &&
                ((e.data[t] = null), (e.blueprint[t] = null)),
                (n[t] = i);
            })(t, B(), r, c),
            c
          );
        } finally {
          ri(a);
        }
      }
      function Me(e, n, t) {
        const i = e + He,
          r = B(),
          o = ka(r, i);
        return ou(r, i) ? eS(r, Yn(), n, o.transform, t, o) : o.transform(t);
      }
      function lf(e, n, t, i) {
        const r = e + He,
          o = B(),
          s = ka(o, r);
        return ou(o, r)
          ? tS(o, Yn(), n, s.transform, t, i, s)
          : s.transform(t, i);
      }
      function ou(e, n) {
        return e[Y].data[n].pure;
      }
      function WV() {
        return this._results[Symbol.iterator]();
      }
      class Q_ {
        static #e = Symbol.iterator;
        get changes() {
          return this._changes || (this._changes = new le());
        }
        constructor(n = !1) {
          (this._emitDistinctChangesOnly = n),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const t = Q_.prototype;
          t[Symbol.iterator] || (t[Symbol.iterator] = WV);
        }
        get(n) {
          return this._results[n];
        }
        map(n) {
          return this._results.map(n);
        }
        filter(n) {
          return this._results.filter(n);
        }
        find(n) {
          return this._results.find(n);
        }
        reduce(n, t) {
          return this._results.reduce(n, t);
        }
        forEach(n) {
          this._results.forEach(n);
        }
        some(n) {
          return this._results.some(n);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(n, t) {
          const i = this;
          i.dirty = !1;
          const r = (function Ri(e) {
            return e.flat(Number.POSITIVE_INFINITY);
          })(n);
          (this._changesDetected = !(function BN(e, n, t) {
            if (e.length !== n.length) return !1;
            for (let i = 0; i < e.length; i++) {
              let r = e[i],
                o = n[i];
              if ((t && ((r = t(r)), (o = t(o))), o !== r)) return !1;
            }
            return !0;
          })(i._results, r, t)) &&
            ((i._results = r),
            (i.length = r.length),
            (i.last = r[this.length - 1]),
            (i.first = r[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      function qV(e, n, t, i = !0) {
        const r = n[Y];
        if (
          ((function kL(e, n, t, i) {
            const r = In + i,
              o = t.length;
            i > 0 && (t[r - 1][tr] = n),
              i < o - In
                ? ((n[tr] = t[r]), JC(t, In + i, n))
                : (t.push(n), (n[tr] = null)),
              (n[zt] = t);
            const s = n[_c];
            null !== s &&
              t !== s &&
              (function TL(e, n) {
                const t = e[Da];
                n[en] !== n[zt][zt][en] && (e[Jw] = !0),
                  null === t ? (e[Da] = [n]) : t.push(n);
              })(s, n);
            const a = n[wr];
            null !== a && a.insertView(e), (n[Ie] |= 128);
          })(r, n, e, t),
          i)
        ) {
          const o = Nm(t, e),
            s = n[xe],
            a = Sh(s, e[Cr]);
          null !== a &&
            (function ML(e, n, t, i, r, o) {
              (i[Gt] = r), (i[Nn] = n), Fc(e, i, t, 1, r, o);
            })(r, e[Nn], s, n, a, o);
        }
      }
      let uo = (() => {
        class e {
          static #e = (this.__NG_ELEMENT_ID__ = KV);
        }
        return e;
      })();
      const GV = uo,
        YV = class extends GV {
          constructor(n, t, i) {
            super(),
              (this._declarationLView = n),
              (this._declarationTContainer = t),
              (this.elementRef = i);
          }
          get ssrId() {
            return this._declarationTContainer.tView?.ssrId || null;
          }
          createEmbeddedView(n, t) {
            return this.createEmbeddedViewImpl(n, t);
          }
          createEmbeddedViewImpl(n, t, i) {
            const r = (function $V(e, n, t, i) {
              const r = n.tView,
                a = Wh(
                  e,
                  r,
                  t,
                  4096 & e[Ie] ? 4096 : 16,
                  null,
                  n,
                  null,
                  null,
                  null,
                  i?.injector ?? null,
                  i?.hydrationInfo ?? null
                );
              a[_c] = e[n.index];
              const c = e[wr];
              return (
                null !== c && (a[wr] = c.createEmbeddedView(r)), k_(r, a, t), a
              );
            })(this._declarationLView, this._declarationTContainer, n, {
              injector: t,
              hydrationInfo: i,
            });
            return new Wc(r);
          }
        };
      function KV() {
        return cf(An(), B());
      }
      function cf(e, n) {
        return 4 & e.type ? new YV(n, e, Ya(e, n)) : null;
      }
      let Vn = (() => {
        class e {
          static #e = (this.__NG_ELEMENT_ID__ = tz);
        }
        return e;
      })();
      function tz() {
        return hS(An(), B());
      }
      const nz = Vn,
        uS = class extends nz {
          constructor(n, t, i) {
            super(),
              (this._lContainer = n),
              (this._hostTNode = t),
              (this._hostLView = i);
          }
          get element() {
            return Ya(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Zn(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const n = uh(this._hostTNode, this._hostLView);
            if (gm(n)) {
              const t = Sc(n, this._hostLView),
                i = Dc(n);
              return new Zn(t[Y].data[i + 8], t);
            }
            return new Zn(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(n) {
            const t = dS(this._lContainer);
            return (null !== t && t[n]) || null;
          }
          get length() {
            return this._lContainer.length - In;
          }
          createEmbeddedView(n, t, i) {
            let r, o;
            "number" == typeof i
              ? (r = i)
              : null != i && ((r = i.index), (o = i.injector));
            const a = n.createEmbeddedViewImpl(t || {}, o, null);
            return this.insertImpl(a, r, false), a;
          }
          createComponent(n, t, i, r, o) {
            const s =
              n &&
              !(function Tc(e) {
                return "function" == typeof e;
              })(n);
            let a;
            if (s) a = t;
            else {
              const y = t || {};
              (a = y.index),
                (i = y.injector),
                (r = y.projectableNodes),
                (o = y.environmentInjector || y.ngModuleRef);
            }
            const l = s ? n : new $c(Ge(n)),
              c = i || this.parentInjector;
            if (!o && null == l.ngModule) {
              const v = (s ? c : this.parentInjector).get(Ci, null);
              v && (o = v);
            }
            Ge(l.componentType ?? {});
            const m = l.create(c, r, null, o);
            return this.insertImpl(m.hostView, a, false), m;
          }
          insert(n, t) {
            return this.insertImpl(n, t, !1);
          }
          insertImpl(n, t, i) {
            const r = n._lView;
            if (
              (function eN(e) {
                return Gn(e[zt]);
              })(r)
            ) {
              const l = this.indexOf(n);
              if (-1 !== l) this.detach(l);
              else {
                const c = r[zt],
                  u = new uS(c, c[Nn], c[zt]);
                u.detach(u.indexOf(n));
              }
            }
            const s = this._adjustIndex(t),
              a = this._lContainer;
            return (
              qV(a, r, s, !i), n.attachToViewContainerRef(), JC(X_(a), s, n), n
            );
          }
          move(n, t) {
            return this.insert(n, t);
          }
          indexOf(n) {
            const t = dS(this._lContainer);
            return null !== t ? t.indexOf(n) : -1;
          }
          remove(n) {
            const t = this._adjustIndex(n, -1),
              i = Dh(this._lContainer, t);
            i && (fh(X_(this._lContainer), t), Am(i[Y], i));
          }
          detach(n) {
            const t = this._adjustIndex(n, -1),
              i = Dh(this._lContainer, t);
            return i && null != fh(X_(this._lContainer), t) ? new Wc(i) : null;
          }
          _adjustIndex(n, t = 0) {
            return n ?? this.length + t;
          }
        };
      function dS(e) {
        return e[8];
      }
      function X_(e) {
        return e[8] || (e[8] = []);
      }
      function hS(e, n) {
        let t;
        const i = n[e.index];
        return (
          Gn(i)
            ? (t = i)
            : ((t = Wx(i, n, null, e)), (n[e.index] = t), $h(n, t)),
          fS(t, n, e, i),
          new uS(t, e, n)
        );
      }
      let fS = function pS(e, n, t, i) {
        if (e[Cr]) return;
        let r;
        (r =
          8 & t.type
            ? It(i)
            : (function iz(e, n) {
                const t = e[xe],
                  i = t.createComment(""),
                  r = ai(n, e);
                return (
                  Es(
                    t,
                    Sh(t, r),
                    i,
                    (function AL(e, n) {
                      return e.nextSibling(n);
                    })(t, r),
                    !1
                  ),
                  i
                );
              })(n, t)),
          (e[Cr] = r);
      };
      class J_ {
        constructor(n) {
          (this.queryList = n), (this.matches = null);
        }
        clone() {
          return new J_(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class ey {
        constructor(n = []) {
          this.queries = n;
        }
        createEmbeddedView(n) {
          const t = n.queries;
          if (null !== t) {
            const i =
                null !== n.contentQueries ? n.contentQueries[0] : t.length,
              r = [];
            for (let o = 0; o < i; o++) {
              const s = t.getByIndex(o);
              r.push(this.queries[s.indexInDeclarationView].clone());
            }
            return new ey(r);
          }
          return null;
        }
        insertView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        detachView(n) {
          this.dirtyQueriesWithMatches(n);
        }
        dirtyQueriesWithMatches(n) {
          for (let t = 0; t < this.queries.length; t++)
            null !== vS(n, t).matches && this.queries[t].setDirty();
        }
      }
      class gS {
        constructor(n, t, i = null) {
          (this.predicate = n), (this.flags = t), (this.read = i);
        }
      }
      class ty {
        constructor(n = []) {
          this.queries = n;
        }
        elementStart(n, t) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].elementStart(n, t);
        }
        elementEnd(n) {
          for (let t = 0; t < this.queries.length; t++)
            this.queries[t].elementEnd(n);
        }
        embeddedTView(n) {
          let t = null;
          for (let i = 0; i < this.length; i++) {
            const r = null !== t ? t.length : 0,
              o = this.getByIndex(i).embeddedTView(n, r);
            o &&
              ((o.indexInDeclarationView = i),
              null !== t ? t.push(o) : (t = [o]));
          }
          return null !== t ? new ty(t) : null;
        }
        template(n, t) {
          for (let i = 0; i < this.queries.length; i++)
            this.queries[i].template(n, t);
        }
        getByIndex(n) {
          return this.queries[n];
        }
        get length() {
          return this.queries.length;
        }
        track(n) {
          this.queries.push(n);
        }
      }
      class ny {
        constructor(n, t = -1) {
          (this.metadata = n),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = t);
        }
        elementStart(n, t) {
          this.isApplyingToNode(t) && this.matchTNode(n, t);
        }
        elementEnd(n) {
          this._declarationNodeIndex === n.index &&
            (this._appliesToNextNode = !1);
        }
        template(n, t) {
          this.elementStart(n, t);
        }
        embeddedTView(n, t) {
          return this.isApplyingToNode(n)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-n.index, t),
              new ny(this.metadata))
            : null;
        }
        isApplyingToNode(n) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const t = this._declarationNodeIndex;
            let i = n.parent;
            for (; null !== i && 8 & i.type && i.index !== t; ) i = i.parent;
            return t === (null !== i ? i.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(n, t) {
          const i = this.metadata.predicate;
          if (Array.isArray(i))
            for (let r = 0; r < i.length; r++) {
              const o = i[r];
              this.matchTNodeWithReadOption(n, t, sz(t, o)),
                this.matchTNodeWithReadOption(n, t, dh(t, n, o, !1, !1));
            }
          else
            i === uo
              ? 4 & t.type && this.matchTNodeWithReadOption(n, t, -1)
              : this.matchTNodeWithReadOption(n, t, dh(t, n, i, !1, !1));
        }
        matchTNodeWithReadOption(n, t, i) {
          if (null !== i) {
            const r = this.metadata.read;
            if (null !== r)
              if (r === pn || r === Vn || (r === uo && 4 & t.type))
                this.addMatch(t.index, -2);
              else {
                const o = dh(t, n, r, !1, !1);
                null !== o && this.addMatch(t.index, o);
              }
            else this.addMatch(t.index, i);
          }
        }
        addMatch(n, t) {
          null === this.matches
            ? (this.matches = [n, t])
            : this.matches.push(n, t);
        }
      }
      function sz(e, n) {
        const t = e.localNames;
        if (null !== t)
          for (let i = 0; i < t.length; i += 2) if (t[i] === n) return t[i + 1];
        return null;
      }
      function lz(e, n, t, i) {
        return -1 === t
          ? (function az(e, n) {
              return 11 & e.type ? Ya(e, n) : 4 & e.type ? cf(e, n) : null;
            })(n, e)
          : -2 === t
          ? (function cz(e, n, t) {
              return t === pn
                ? Ya(n, e)
                : t === uo
                ? cf(n, e)
                : t === Vn
                ? hS(n, e)
                : void 0;
            })(e, n, i)
          : Ts(e, e[Y], t, n);
      }
      function mS(e, n, t, i) {
        const r = n[wr].queries[i];
        if (null === r.matches) {
          const o = e.data,
            s = t.matches,
            a = [];
          for (let l = 0; l < s.length; l += 2) {
            const c = s[l];
            a.push(c < 0 ? null : lz(n, o[c], s[l + 1], t.metadata.read));
          }
          r.matches = a;
        }
        return r.matches;
      }
      function iy(e, n, t, i) {
        const r = e.queries.getByIndex(t),
          o = r.matches;
        if (null !== o) {
          const s = mS(e, n, r, t);
          for (let a = 0; a < o.length; a += 2) {
            const l = o[a];
            if (l > 0) i.push(s[a / 2]);
            else {
              const c = o[a + 1],
                u = n[-l];
              for (let f = In; f < u.length; f++) {
                const g = u[f];
                g[_c] === g[zt] && iy(g[Y], g, c, i);
              }
              if (null !== u[Da]) {
                const f = u[Da];
                for (let g = 0; g < f.length; g++) {
                  const m = f[g];
                  iy(m[Y], m, c, i);
                }
              }
            }
          }
        }
        return i;
      }
      function an(e) {
        const n = B(),
          t = Ye(),
          i = OC();
        cm(i + 1);
        const r = vS(t, i);
        if (
          e.dirty &&
          (function XR(e) {
            return 4 == (4 & e[Ie]);
          })(n) ===
            (2 == (2 & r.metadata.flags))
        ) {
          if (null === r.matches) e.reset([]);
          else {
            const o = r.crossesNgTemplate ? iy(t, n, i, []) : mS(t, n, r, i);
            e.reset(o, R3), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function wn(e, n, t) {
        const i = Ye();
        i.firstCreatePass &&
          (yS(i, new gS(e, n, t), -1),
          2 == (2 & n) && (i.staticViewQueries = !0)),
          _S(i, B(), n);
      }
      function ln() {
        return (function uz(e, n) {
          return e[wr].queries[n].queryList;
        })(B(), OC());
      }
      function _S(e, n, t) {
        const i = new Q_(4 == (4 & t));
        (function f4(e, n, t, i) {
          const r = qx(n);
          r.push(t), e.firstCreatePass && Gx(e).push(i, r.length - 1);
        })(e, n, i, i.destroy),
          null === n[wr] && (n[wr] = new ey()),
          n[wr].queries.push(new J_(i));
      }
      function yS(e, n, t) {
        null === e.queries && (e.queries = new ty()),
          e.queries.track(new ny(n, t));
      }
      function vS(e, n) {
        return e.queries.getByIndex(n);
      }
      function hl(e, n) {
        return cf(e, n);
      }
      const hf = new Q("Application Initializer");
      let uy = (() => {
          class e {
            constructor() {
              (this.initialized = !1),
                (this.done = !1),
                (this.donePromise = new Promise((t, i) => {
                  (this.resolve = t), (this.reject = i);
                })),
                (this.appInits = K(hf, { optional: !0 }) ?? []);
            }
            runInitializers() {
              if (this.initialized) return;
              const t = [];
              for (const r of this.appInits) {
                const o = r();
                if (Qc(o)) t.push(o);
                else if (DM(o)) {
                  const s = new Promise((a, l) => {
                    o.subscribe({ complete: a, error: l });
                  });
                  t.push(s);
                }
              }
              const i = () => {
                (this.done = !0), this.resolve();
              };
              Promise.all(t)
                .then(() => {
                  i();
                })
                .catch((r) => {
                  this.reject(r);
                }),
                0 === t.length && i(),
                (this.initialized = !0);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        NS = (() => {
          class e {
            log(t) {
              console.log(t);
            }
            warn(t) {
              console.warn(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "platform",
            }));
          }
          return e;
        })();
      const ho = new Q("LocaleId", {
        providedIn: "root",
        factory: () =>
          K(ho, ze.Optional | ze.SkipSelf) ||
          (function Az() {
            return (typeof $localize < "u" && $localize.locale) || dl;
          })(),
      });
      let ff = (() => {
        class e {
          constructor() {
            (this.taskId = 0),
              (this.pendingTasks = new Set()),
              (this.hasPendingTasks = new Tn(!1));
          }
          add() {
            this.hasPendingTasks.next(!0);
            const t = this.taskId++;
            return this.pendingTasks.add(t), t;
          }
          remove(t) {
            this.pendingTasks.delete(t),
              0 === this.pendingTasks.size && this.hasPendingTasks.next(!1);
          }
          ngOnDestroy() {
            this.pendingTasks.clear(), this.hasPendingTasks.next(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      class Rz {
        constructor(n, t) {
          (this.ngModuleFactory = n), (this.componentFactories = t);
        }
      }
      let LS = (() => {
        class e {
          compileModuleSync(t) {
            return new G_(t);
          }
          compileModuleAsync(t) {
            return Promise.resolve(this.compileModuleSync(t));
          }
          compileModuleAndAllComponentsSync(t) {
            const i = this.compileModuleSync(t),
              o = lo(yi(t).declarations).reduce((s, a) => {
                const l = Ge(a);
                return l && s.push(new $c(l)), s;
              }, []);
            return new Rz(i, o);
          }
          compileModuleAndAllComponentsAsync(t) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(t));
          }
          clearCache() {}
          clearCacheFor(t) {}
          getModuleId(t) {}
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const HS = new Q(""),
        gf = new Q("");
      let gy,
        fy = (() => {
          class e {
            constructor(t, i, r) {
              (this._ngZone = t),
                (this.registry = i),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                gy ||
                  ((function i6(e) {
                    gy = e;
                  })(r),
                  r.addToWindow(i)),
                this._watchAngularEvents(),
                t.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      ht.assertNotInAngularZone(),
                        queueMicrotask(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                queueMicrotask(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let t = this._callbacks.pop();
                    clearTimeout(t.timeoutId), t.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let t = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (i) =>
                    !i.updateCb ||
                    !i.updateCb(t) ||
                    (clearTimeout(i.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((t) => ({
                    source: t.source,
                    creationLocation: t.creationLocation,
                    data: t.data,
                  }))
                : [];
            }
            addCallback(t, i, r) {
              let o = -1;
              i &&
                i > 0 &&
                (o = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (s) => s.timeoutId !== o
                  )),
                    t(this._didWork, this.getPendingTasks());
                }, i)),
                this._callbacks.push({ doneCb: t, timeoutId: o, updateCb: r });
            }
            whenStable(t, i, r) {
              if (r && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(t, i, r), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(t) {
              this.registry.registerApplication(t, this);
            }
            unregisterApplication(t) {
              this.registry.unregisterApplication(t);
            }
            findProviders(t, i, r) {
              return [];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(ht), O(py), O(gf));
            });
            static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
          }
          return e;
        })(),
        py = (() => {
          class e {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(t, i) {
              this._applications.set(t, i);
            }
            unregisterApplication(t) {
              this._applications.delete(t);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(t) {
              return this._applications.get(t) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(t, i = !0) {
              return gy?.findTestabilityInTree(this, t, i) ?? null;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "platform",
            }));
          }
          return e;
        })(),
        Uo = null;
      const jS = new Q("AllowMultipleToken"),
        my = new Q("PlatformDestroyListeners"),
        _y = new Q("appBootstrapListener");
      class WS {
        constructor(n, t) {
          (this.name = n), (this.token = t);
        }
      }
      function qS(e, n, t = []) {
        const i = `Platform: ${n}`,
          r = new Q(i);
        return (o = []) => {
          let s = yy();
          if (!s || s.injector.get(jS, !1)) {
            const a = [...t, ...o, { provide: r, useValue: !0 }];
            e
              ? e(a)
              : (function s6(e) {
                  if (Uo && !Uo.get(jS, !1)) throw new P(400, !1);
                  (function US() {
                    !(function BR(e) {
                      uC = e;
                    })(() => {
                      throw new P(600, !1);
                    });
                  })(),
                    (Uo = e);
                  const n = e.get(YS);
                  (function $S(e) {
                    e.get(ix, null)?.forEach((t) => t());
                  })(e);
                })(
                  (function GS(e = [], n) {
                    return ci.create({
                      name: n,
                      providers: [
                        { provide: Ym, useValue: "platform" },
                        { provide: my, useValue: new Set([() => (Uo = null)]) },
                        ...e,
                      ],
                    });
                  })(a, i)
                );
          }
          return (function l6(e) {
            const n = yy();
            if (!n) throw new P(401, !1);
            return n;
          })();
        };
      }
      function yy() {
        return Uo?.get(YS) ?? null;
      }
      let YS = (() => {
        class e {
          constructor(t) {
            (this._injector = t),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(t, i) {
            const r = (function c6(e = "zone.js", n) {
              return "noop" === e ? new Z3() : "zone.js" === e ? new ht(n) : e;
            })(
              i?.ngZone,
              (function KS(e) {
                return {
                  enableLongStackTrace: !1,
                  shouldCoalesceEventChangeDetection: e?.eventCoalescing ?? !1,
                  shouldCoalesceRunChangeDetection: e?.runCoalescing ?? !1,
                };
              })({
                eventCoalescing: i?.ngZoneEventCoalescing,
                runCoalescing: i?.ngZoneRunCoalescing,
              })
            );
            return r.run(() => {
              const o = (function MV(e, n, t) {
                  return new q_(e, n, t);
                })(
                  t.moduleType,
                  this.injector,
                  (function ek(e) {
                    return [
                      { provide: ht, useFactory: e },
                      {
                        provide: Lc,
                        multi: !0,
                        useFactory: () => {
                          const n = K(d6, { optional: !0 });
                          return () => n.initialize();
                        },
                      },
                      { provide: JS, useFactory: u6 },
                      { provide: bx, useFactory: wx },
                    ];
                  })(() => r)
                ),
                s = o.injector.get(so, null);
              return (
                r.runOutsideAngular(() => {
                  const a = r.onError.subscribe({
                    next: (l) => {
                      s.handleError(l);
                    },
                  });
                  o.onDestroy(() => {
                    mf(this._modules, o), a.unsubscribe();
                  });
                }),
                (function ZS(e, n, t) {
                  try {
                    const i = t();
                    return Qc(i)
                      ? i.catch((r) => {
                          throw (
                            (n.runOutsideAngular(() => e.handleError(r)), r)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (n.runOutsideAngular(() => e.handleError(i)), i);
                  }
                })(s, r, () => {
                  const a = o.injector.get(uy);
                  return (
                    a.runInitializers(),
                    a.donePromise.then(
                      () => (
                        (function bD(e) {
                          Ai(e, "Expected localeId to be defined"),
                            "string" == typeof e &&
                              (vD = e.toLowerCase().replace(/_/g, "-"));
                        })(o.injector.get(ho, dl) || dl),
                        this._moduleDoBootstrap(o),
                        o
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(t, i = []) {
            const r = QS({}, i);
            return (function r6(e, n, t) {
              const i = new G_(t);
              return Promise.resolve(i);
            })(0, 0, t).then((o) => this.bootstrapModuleFactory(o, r));
          }
          _moduleDoBootstrap(t) {
            const i = t.injector.get(Ls);
            if (t._bootstrapComponents.length > 0)
              t._bootstrapComponents.forEach((r) => i.bootstrap(r));
            else {
              if (!t.instance.ngDoBootstrap) throw new P(-403, !1);
              t.instance.ngDoBootstrap(i);
            }
            this._modules.push(t);
          }
          onDestroy(t) {
            this._destroyListeners.push(t);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new P(404, !1);
            this._modules.slice().forEach((i) => i.destroy()),
              this._destroyListeners.forEach((i) => i());
            const t = this._injector.get(my, null);
            t && (t.forEach((i) => i()), t.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(ci));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "platform",
          }));
        }
        return e;
      })();
      function QS(e, n) {
        return Array.isArray(n) ? n.reduce(QS, e) : { ...e, ...n };
      }
      let Ls = (() => {
        class e {
          constructor() {
            (this._bootstrapListeners = []),
              (this._runningTick = !1),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this._views = []),
              (this.internalErrorHandler = K(JS)),
              (this.zoneIsStable = K(bx)),
              (this.componentTypes = []),
              (this.components = []),
              (this.isStable = K(ff).hasPendingTasks.pipe(
                Oi((t) => (t ? me(!1) : this.zoneIsStable)),
                uc(),
                Ew()
              )),
              (this._injector = K(Ci));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(t, i) {
            const r = t instanceof cx;
            if (!this._injector.get(uy).done)
              throw (
                (!r &&
                  (function ba(e) {
                    const n = Ge(e) || En(e) || qn(e);
                    return null !== n && n.standalone;
                  })(t),
                new P(405, !1))
              );
            let s;
            (s = r ? t : this._injector.get(Ga).resolveComponentFactory(t)),
              this.componentTypes.push(s.componentType);
            const a = (function o6(e) {
                return e.isBoundToModule;
              })(s)
                ? void 0
                : this._injector.get(Ns),
              c = s.create(ci.NULL, [], i || s.selector, a),
              u = c.location.nativeElement,
              f = c.injector.get(HS, null);
            return (
              f?.registerApplication(u),
              c.onDestroy(() => {
                this.detachView(c.hostView),
                  mf(this.components, c),
                  f?.unregisterApplication(u);
              }),
              this._loadComponent(c),
              c
            );
          }
          tick() {
            if (this._runningTick) throw new P(101, !1);
            try {
              this._runningTick = !0;
              for (let t of this._views) t.detectChanges();
            } catch (t) {
              this.internalErrorHandler(t);
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(t) {
            const i = t;
            this._views.push(i), i.attachToAppRef(this);
          }
          detachView(t) {
            const i = t;
            mf(this._views, i), i.detachFromAppRef();
          }
          _loadComponent(t) {
            this.attachView(t.hostView), this.tick(), this.components.push(t);
            const i = this._injector.get(_y, []);
            i.push(...this._bootstrapListeners), i.forEach((r) => r(t));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((t) => t()),
                  this._views.slice().forEach((t) => t.destroy());
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(t) {
            return (
              this._destroyListeners.push(t),
              () => mf(this._destroyListeners, t)
            );
          }
          destroy() {
            if (this._destroyed) throw new P(406, !1);
            const t = this._injector;
            t.destroy && !t.destroyed && t.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      function mf(e, n) {
        const t = e.indexOf(n);
        t > -1 && e.splice(t, 1);
      }
      const JS = new Q("", {
        providedIn: "root",
        factory: () => K(so).handleError.bind(void 0),
      });
      function u6() {
        const e = K(ht),
          n = K(so);
        return (t) => e.runOutsideAngular(() => n.handleError(t));
      }
      let d6 = (() => {
        class e {
          constructor() {
            (this.zone = K(ht)), (this.applicationRef = K(Ls));
          }
          initialize() {
            this._onMicrotaskEmptySubscription ||
              (this._onMicrotaskEmptySubscription =
                this.zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this.zone.run(() => {
                      this.applicationRef.tick();
                    });
                  },
                }));
          }
          ngOnDestroy() {
            this._onMicrotaskEmptySubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      let Wo = (() => {
        class e {
          static #e = (this.__NG_ELEMENT_ID__ = f6);
        }
        return e;
      })();
      function f6(e) {
        return (function p6(e, n, t) {
          if (Ds(e) && !t) {
            const i = vi(e.index, n);
            return new Wc(i, i);
          }
          return 47 & e.type ? new Wc(n[en], n) : null;
        })(An(), B(), 16 == (16 & e));
      }
      class rk {
        constructor() {}
        supports(n) {
          return Kh(n);
        }
        create(n) {
          return new b6(n);
        }
      }
      const v6 = (e, n) => n;
      class b6 {
        constructor(n) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = n || v6);
        }
        forEachItem(n) {
          let t;
          for (t = this._itHead; null !== t; t = t._next) n(t);
        }
        forEachOperation(n) {
          let t = this._itHead,
            i = this._removalsHead,
            r = 0,
            o = null;
          for (; t || i; ) {
            const s = !i || (t && t.currentIndex < sk(i, r, o)) ? t : i,
              a = sk(s, r, o),
              l = s.currentIndex;
            if (s === i) r--, (i = i._nextRemoved);
            else if (((t = t._next), null == s.previousIndex)) r++;
            else {
              o || (o = []);
              const c = a - r,
                u = l - r;
              if (c != u) {
                for (let g = 0; g < c; g++) {
                  const m = g < o.length ? o[g] : (o[g] = 0),
                    _ = m + g;
                  u <= _ && _ < c && (o[g] = m + 1);
                }
                o[s.previousIndex] = u - c;
              }
            }
            a !== l && n(s, a, l);
          }
        }
        forEachPreviousItem(n) {
          let t;
          for (t = this._previousItHead; null !== t; t = t._nextPrevious) n(t);
        }
        forEachAddedItem(n) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) n(t);
        }
        forEachMovedItem(n) {
          let t;
          for (t = this._movesHead; null !== t; t = t._nextMoved) n(t);
        }
        forEachRemovedItem(n) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) n(t);
        }
        forEachIdentityChange(n) {
          let t;
          for (
            t = this._identityChangesHead;
            null !== t;
            t = t._nextIdentityChange
          )
            n(t);
        }
        diff(n) {
          if ((null == n && (n = []), !Kh(n))) throw new P(900, !1);
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let r,
            o,
            s,
            t = this._itHead,
            i = !1;
          if (Array.isArray(n)) {
            this.length = n.length;
            for (let a = 0; a < this.length; a++)
              (o = n[a]),
                (s = this._trackByFn(a, o)),
                null !== t && Object.is(t.trackById, s)
                  ? (i && (t = this._verifyReinsertion(t, o, s, a)),
                    Object.is(t.item, o) || this._addIdentityChange(t, o))
                  : ((t = this._mismatch(t, o, s, a)), (i = !0)),
                (t = t._next);
          } else
            (r = 0),
              (function oB(e, n) {
                if (Array.isArray(e))
                  for (let t = 0; t < e.length; t++) n(e[t]);
                else {
                  const t = e[Symbol.iterator]();
                  let i;
                  for (; !(i = t.next()).done; ) n(i.value);
                }
              })(n, (a) => {
                (s = this._trackByFn(r, a)),
                  null !== t && Object.is(t.trackById, s)
                    ? (i && (t = this._verifyReinsertion(t, a, s, r)),
                      Object.is(t.item, a) || this._addIdentityChange(t, a))
                    : ((t = this._mismatch(t, a, s, r)), (i = !0)),
                  (t = t._next),
                  r++;
              }),
              (this.length = r);
          return this._truncate(t), (this.collection = n), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              n = this._previousItHead = this._itHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._additionsHead; null !== n; n = n._nextAdded)
              n.previousIndex = n.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                n = this._movesHead;
              null !== n;
              n = n._nextMoved
            )
              n.previousIndex = n.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(n, t, i, r) {
          let o;
          return (
            null === n ? (o = this._itTail) : ((o = n._prev), this._remove(n)),
            null !==
            (n =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(i, null))
              ? (Object.is(n.item, t) || this._addIdentityChange(n, t),
                this._reinsertAfter(n, o, r))
              : null !==
                (n =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(i, r))
              ? (Object.is(n.item, t) || this._addIdentityChange(n, t),
                this._moveAfter(n, o, r))
              : (n = this._addAfter(new w6(t, i), o, r)),
            n
          );
        }
        _verifyReinsertion(n, t, i, r) {
          let o =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(i, null);
          return (
            null !== o
              ? (n = this._reinsertAfter(o, n._prev, r))
              : n.currentIndex != r &&
                ((n.currentIndex = r), this._addToMoves(n, r)),
            n
          );
        }
        _truncate(n) {
          for (; null !== n; ) {
            const t = n._next;
            this._addToRemovals(this._unlink(n)), (n = t);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(n, t, i) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
          const r = n._prevRemoved,
            o = n._nextRemoved;
          return (
            null === r ? (this._removalsHead = o) : (r._nextRemoved = o),
            null === o ? (this._removalsTail = r) : (o._prevRemoved = r),
            this._insertAfter(n, t, i),
            this._addToMoves(n, i),
            n
          );
        }
        _moveAfter(n, t, i) {
          return (
            this._unlink(n),
            this._insertAfter(n, t, i),
            this._addToMoves(n, i),
            n
          );
        }
        _addAfter(n, t, i) {
          return (
            this._insertAfter(n, t, i),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = n)
                : (this._additionsTail._nextAdded = n)),
            n
          );
        }
        _insertAfter(n, t, i) {
          const r = null === t ? this._itHead : t._next;
          return (
            (n._next = r),
            (n._prev = t),
            null === r ? (this._itTail = n) : (r._prev = n),
            null === t ? (this._itHead = n) : (t._next = n),
            null === this._linkedRecords && (this._linkedRecords = new ok()),
            this._linkedRecords.put(n),
            (n.currentIndex = i),
            n
          );
        }
        _remove(n) {
          return this._addToRemovals(this._unlink(n));
        }
        _unlink(n) {
          null !== this._linkedRecords && this._linkedRecords.remove(n);
          const t = n._prev,
            i = n._next;
          return (
            null === t ? (this._itHead = i) : (t._next = i),
            null === i ? (this._itTail = t) : (i._prev = t),
            n
          );
        }
        _addToMoves(n, t) {
          return (
            n.previousIndex === t ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = n)
                  : (this._movesTail._nextMoved = n)),
            n
          );
        }
        _addToRemovals(n) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new ok()),
            this._unlinkedRecords.put(n),
            (n.currentIndex = null),
            (n._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = n),
                (n._prevRemoved = null))
              : ((n._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = n)),
            n
          );
        }
        _addIdentityChange(n, t) {
          return (
            (n.item = t),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = n)
                : (this._identityChangesTail._nextIdentityChange = n)),
            n
          );
        }
      }
      class w6 {
        constructor(n, t) {
          (this.item = n),
            (this.trackById = t),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class C6 {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(n) {
          null === this._head
            ? ((this._head = this._tail = n),
              (n._nextDup = null),
              (n._prevDup = null))
            : ((this._tail._nextDup = n),
              (n._prevDup = this._tail),
              (n._nextDup = null),
              (this._tail = n));
        }
        get(n, t) {
          let i;
          for (i = this._head; null !== i; i = i._nextDup)
            if (
              (null === t || t <= i.currentIndex) &&
              Object.is(i.trackById, n)
            )
              return i;
          return null;
        }
        remove(n) {
          const t = n._prevDup,
            i = n._nextDup;
          return (
            null === t ? (this._head = i) : (t._nextDup = i),
            null === i ? (this._tail = t) : (i._prevDup = t),
            null === this._head
          );
        }
      }
      class ok {
        constructor() {
          this.map = new Map();
        }
        put(n) {
          const t = n.trackById;
          let i = this.map.get(t);
          i || ((i = new C6()), this.map.set(t, i)), i.add(n);
        }
        get(n, t) {
          const r = this.map.get(n);
          return r ? r.get(n, t) : null;
        }
        remove(n) {
          const t = n.trackById;
          return this.map.get(t).remove(n) && this.map.delete(t), n;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function sk(e, n, t) {
        const i = e.previousIndex;
        if (null === i) return i;
        let r = 0;
        return t && i < t.length && (r = t[i]), i + n + r;
      }
      class ak {
        constructor() {}
        supports(n) {
          return n instanceof Map || T_(n);
        }
        create() {
          return new x6();
        }
      }
      class x6 {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(n) {
          let t;
          for (t = this._mapHead; null !== t; t = t._next) n(t);
        }
        forEachPreviousItem(n) {
          let t;
          for (t = this._previousMapHead; null !== t; t = t._nextPrevious) n(t);
        }
        forEachChangedItem(n) {
          let t;
          for (t = this._changesHead; null !== t; t = t._nextChanged) n(t);
        }
        forEachAddedItem(n) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) n(t);
        }
        forEachRemovedItem(n) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) n(t);
        }
        diff(n) {
          if (n) {
            if (!(n instanceof Map || T_(n))) throw new P(900, !1);
          } else n = new Map();
          return this.check(n) ? this : null;
        }
        onDestroy() {}
        check(n) {
          this._reset();
          let t = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(n, (i, r) => {
              if (t && t.key === r)
                this._maybeAddToChanges(t, i),
                  (this._appendAfter = t),
                  (t = t._next);
              else {
                const o = this._getOrCreateRecordForKey(r, i);
                t = this._insertBeforeOrAppend(t, o);
              }
            }),
            t)
          ) {
            t._prev && (t._prev._next = null), (this._removalsHead = t);
            for (let i = t; null !== i; i = i._nextRemoved)
              i === this._mapHead && (this._mapHead = null),
                this._records.delete(i.key),
                (i._nextRemoved = i._next),
                (i.previousValue = i.currentValue),
                (i.currentValue = null),
                (i._prev = null),
                (i._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(n, t) {
          if (n) {
            const i = n._prev;
            return (
              (t._next = n),
              (t._prev = i),
              (n._prev = t),
              i && (i._next = t),
              n === this._mapHead && (this._mapHead = t),
              (this._appendAfter = n),
              n
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = t), (t._prev = this._appendAfter))
              : (this._mapHead = t),
            (this._appendAfter = t),
            null
          );
        }
        _getOrCreateRecordForKey(n, t) {
          if (this._records.has(n)) {
            const r = this._records.get(n);
            this._maybeAddToChanges(r, t);
            const o = r._prev,
              s = r._next;
            return (
              o && (o._next = s),
              s && (s._prev = o),
              (r._next = null),
              (r._prev = null),
              r
            );
          }
          const i = new M6(n);
          return (
            this._records.set(n, i),
            (i.currentValue = t),
            this._addToAdditions(i),
            i
          );
        }
        _reset() {
          if (this.isDirty) {
            let n;
            for (
              this._previousMapHead = this._mapHead, n = this._previousMapHead;
              null !== n;
              n = n._next
            )
              n._nextPrevious = n._next;
            for (n = this._changesHead; null !== n; n = n._nextChanged)
              n.previousValue = n.currentValue;
            for (n = this._additionsHead; null != n; n = n._nextAdded)
              n.previousValue = n.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(n, t) {
          Object.is(t, n.currentValue) ||
            ((n.previousValue = n.currentValue),
            (n.currentValue = t),
            this._addToChanges(n));
        }
        _addToAdditions(n) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = n)
            : ((this._additionsTail._nextAdded = n), (this._additionsTail = n));
        }
        _addToChanges(n) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = n)
            : ((this._changesTail._nextChanged = n), (this._changesTail = n));
        }
        _forEach(n, t) {
          n instanceof Map
            ? n.forEach(t)
            : Object.keys(n).forEach((i) => t(n[i], i));
        }
      }
      class M6 {
        constructor(n) {
          (this.key = n),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function lk() {
        return new vf([new rk()]);
      }
      let vf = (() => {
        class e {
          static #e = (this.ɵprov = V({
            token: e,
            providedIn: "root",
            factory: lk,
          }));
          constructor(t) {
            this.factories = t;
          }
          static create(t, i) {
            if (null != i) {
              const r = i.factories.slice();
              t = t.concat(r);
            }
            return new e(t);
          }
          static extend(t) {
            return {
              provide: e,
              useFactory: (i) => e.create(t, i || lk()),
              deps: [[e, new mh(), new gh()]],
            };
          }
          find(t) {
            const i = this.factories.find((r) => r.supports(t));
            if (null != i) return i;
            throw new P(901, !1);
          }
        }
        return e;
      })();
      function ck() {
        return new lu([new ak()]);
      }
      let lu = (() => {
        class e {
          static #e = (this.ɵprov = V({
            token: e,
            providedIn: "root",
            factory: ck,
          }));
          constructor(t) {
            this.factories = t;
          }
          static create(t, i) {
            if (i) {
              const r = i.factories.slice();
              t = t.concat(r);
            }
            return new e(t);
          }
          static extend(t) {
            return {
              provide: e,
              useFactory: (i) => e.create(t, i || ck()),
              deps: [[e, new mh(), new gh()]],
            };
          }
          find(t) {
            const i = this.factories.find((r) => r.supports(t));
            if (i) return i;
            throw new P(901, !1);
          }
        }
        return e;
      })();
      const k6 = qS(null, "core", []);
      let T6 = (() => {
        class e {
          constructor(t) {}
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ls));
          });
          static #t = (this.ɵmod = Vt({ type: e }));
          static #n = (this.ɵinj = Rt({}));
        }
        return e;
      })();
      function gl(e) {
        return "boolean" == typeof e ? e : null != e && "false" !== e;
      }
      let My = null;
      function $o() {
        return My;
      }
      class j6 {}
      const Ht = new Q("DocumentToken");
      let Dy = (() => {
        class e {
          historyGo(t) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: function () {
              return K(W6);
            },
            providedIn: "platform",
          }));
        }
        return e;
      })();
      const U6 = new Q("Location Initialized");
      let W6 = (() => {
        class e extends Dy {
          constructor() {
            super(),
              (this._doc = K(Ht)),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return $o().getBaseHref(this._doc);
          }
          onPopState(t) {
            const i = $o().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("popstate", t, !1),
              () => i.removeEventListener("popstate", t)
            );
          }
          onHashChange(t) {
            const i = $o().getGlobalEventTarget(this._doc, "window");
            return (
              i.addEventListener("hashchange", t, !1),
              () => i.removeEventListener("hashchange", t)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(t) {
            this._location.pathname = t;
          }
          pushState(t, i, r) {
            this._history.pushState(t, i, r);
          }
          replaceState(t, i, r) {
            this._history.replaceState(t, i, r);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(t = 0) {
            this._history.go(t);
          }
          getState() {
            return this._history.state;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: function () {
              return new e();
            },
            providedIn: "platform",
          }));
        }
        return e;
      })();
      function Sy(e, n) {
        if (0 == e.length) return n;
        if (0 == n.length) return e;
        let t = 0;
        return (
          e.endsWith("/") && t++,
          n.startsWith("/") && t++,
          2 == t ? e + n.substring(1) : 1 == t ? e + n : e + "/" + n
        );
      }
      function yk(e) {
        const n = e.match(/#|\?|$/),
          t = (n && n.index) || e.length;
        return e.slice(0, t - ("/" === e[t - 1] ? 1 : 0)) + e.slice(t);
      }
      function fo(e) {
        return e && "?" !== e[0] ? "?" + e : e;
      }
      let Vs = (() => {
        class e {
          historyGo(t) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: function () {
              return K(bk);
            },
            providedIn: "root",
          }));
        }
        return e;
      })();
      const vk = new Q("appBaseHref");
      let bk = (() => {
          class e extends Vs {
            constructor(t, i) {
              super(),
                (this._platformLocation = t),
                (this._removeListenerFns = []),
                (this._baseHref =
                  i ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  K(Ht).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(t) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(t),
                this._platformLocation.onHashChange(t)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(t) {
              return Sy(this._baseHref, t);
            }
            path(t = !1) {
              const i =
                  this._platformLocation.pathname +
                  fo(this._platformLocation.search),
                r = this._platformLocation.hash;
              return r && t ? `${i}${r}` : i;
            }
            pushState(t, i, r, o) {
              const s = this.prepareExternalUrl(r + fo(o));
              this._platformLocation.pushState(t, i, s);
            }
            replaceState(t, i, r, o) {
              const s = this.prepareExternalUrl(r + fo(o));
              this._platformLocation.replaceState(t, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(t = 0) {
              this._platformLocation.historyGo?.(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(Dy), O(vk, 8));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        $6 = (() => {
          class e extends Vs {
            constructor(t, i) {
              super(),
                (this._platformLocation = t),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != i && (this._baseHref = i);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(t) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(t),
                this._platformLocation.onHashChange(t)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(t = !1) {
              let i = this._platformLocation.hash;
              return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i;
            }
            prepareExternalUrl(t) {
              const i = Sy(this._baseHref, t);
              return i.length > 0 ? "#" + i : i;
            }
            pushState(t, i, r, o) {
              let s = this.prepareExternalUrl(r + fo(o));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.pushState(t, i, s);
            }
            replaceState(t, i, r, o) {
              let s = this.prepareExternalUrl(r + fo(o));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.replaceState(t, i, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(t = 0) {
              this._platformLocation.historyGo?.(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(Dy), O(vk, 8));
            });
            static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
          }
          return e;
        })(),
        ky = (() => {
          class e {
            constructor(t) {
              (this._subject = new le()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = t);
              const i = this._locationStrategy.getBaseHref();
              (this._basePath = (function Y6(e) {
                if (new RegExp("^(https?:)?//").test(e)) {
                  const [, t] = e.split(/\/\/[^\/]+/);
                  return t;
                }
                return e;
              })(yk(wk(i)))),
                this._locationStrategy.onPopState((r) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: r.state,
                    type: r.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(t = !1) {
              return this.normalize(this._locationStrategy.path(t));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(t, i = "") {
              return this.path() == this.normalize(t + fo(i));
            }
            normalize(t) {
              return e.stripTrailingSlash(
                (function G6(e, n) {
                  if (!e || !n.startsWith(e)) return n;
                  const t = n.substring(e.length);
                  return "" === t || ["/", ";", "?", "#"].includes(t[0])
                    ? t
                    : n;
                })(this._basePath, wk(t))
              );
            }
            prepareExternalUrl(t) {
              return (
                t && "/" !== t[0] && (t = "/" + t),
                this._locationStrategy.prepareExternalUrl(t)
              );
            }
            go(t, i = "", r = null) {
              this._locationStrategy.pushState(r, "", t, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(t + fo(i)),
                  r
                );
            }
            replaceState(t, i = "", r = null) {
              this._locationStrategy.replaceState(r, "", t, i),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(t + fo(i)),
                  r
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(t = 0) {
              this._locationStrategy.historyGo?.(t);
            }
            onUrlChange(t) {
              return (
                this._urlChangeListeners.push(t),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((i) => {
                    this._notifyUrlChangeListeners(i.url, i.state);
                  })),
                () => {
                  const i = this._urlChangeListeners.indexOf(t);
                  this._urlChangeListeners.splice(i, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(t = "", i) {
              this._urlChangeListeners.forEach((r) => r(t, i));
            }
            subscribe(t, i, r) {
              return this._subject.subscribe({
                next: t,
                error: i,
                complete: r,
              });
            }
            static #e = (this.normalizeQueryParams = fo);
            static #t = (this.joinWithSlash = Sy);
            static #n = (this.stripTrailingSlash = yk);
            static #i = (this.ɵfac = function (i) {
              return new (i || e)(O(Vs));
            });
            static #r = (this.ɵprov = V({
              token: e,
              factory: function () {
                return (function q6() {
                  return new ky(O(Vs));
                })();
              },
              providedIn: "root",
            }));
          }
          return e;
        })();
      function wk(e) {
        return e.replace(/\/index.html$/, "");
      }
      var wf = (function (e) {
          return (
            (e[(e.Decimal = 0)] = "Decimal"),
            (e[(e.Percent = 1)] = "Percent"),
            (e[(e.Currency = 2)] = "Currency"),
            (e[(e.Scientific = 3)] = "Scientific"),
            e
          );
        })(wf || {}),
        ei = (function (e) {
          return (
            (e[(e.Format = 0)] = "Format"),
            (e[(e.Standalone = 1)] = "Standalone"),
            e
          );
        })(ei || {}),
        Mt = (function (e) {
          return (
            (e[(e.Narrow = 0)] = "Narrow"),
            (e[(e.Abbreviated = 1)] = "Abbreviated"),
            (e[(e.Wide = 2)] = "Wide"),
            (e[(e.Short = 3)] = "Short"),
            e
          );
        })(Mt || {}),
        Mi = (function (e) {
          return (
            (e[(e.Short = 0)] = "Short"),
            (e[(e.Medium = 1)] = "Medium"),
            (e[(e.Long = 2)] = "Long"),
            (e[(e.Full = 3)] = "Full"),
            e
          );
        })(Mi || {}),
        tn = (function (e) {
          return (
            (e[(e.Decimal = 0)] = "Decimal"),
            (e[(e.Group = 1)] = "Group"),
            (e[(e.List = 2)] = "List"),
            (e[(e.PercentSign = 3)] = "PercentSign"),
            (e[(e.PlusSign = 4)] = "PlusSign"),
            (e[(e.MinusSign = 5)] = "MinusSign"),
            (e[(e.Exponential = 6)] = "Exponential"),
            (e[(e.SuperscriptingExponent = 7)] = "SuperscriptingExponent"),
            (e[(e.PerMille = 8)] = "PerMille"),
            (e[(e.Infinity = 9)] = "Infinity"),
            (e[(e.NaN = 10)] = "NaN"),
            (e[(e.TimeSeparator = 11)] = "TimeSeparator"),
            (e[(e.CurrencyDecimal = 12)] = "CurrencyDecimal"),
            (e[(e.CurrencyGroup = 13)] = "CurrencyGroup"),
            e
          );
        })(tn || {});
      function Cf(e, n) {
        return Vi(Qn(e)[Ot.DateFormat], n);
      }
      function xf(e, n) {
        return Vi(Qn(e)[Ot.TimeFormat], n);
      }
      function Mf(e, n) {
        return Vi(Qn(e)[Ot.DateTimeFormat], n);
      }
      function Bi(e, n) {
        const t = Qn(e),
          i = t[Ot.NumberSymbols][n];
        if (typeof i > "u") {
          if (n === tn.CurrencyDecimal) return t[Ot.NumberSymbols][tn.Decimal];
          if (n === tn.CurrencyGroup) return t[Ot.NumberSymbols][tn.Group];
        }
        return i;
      }
      function xk(e) {
        if (!e[Ot.ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${
              e[Ot.LocaleId]
            }". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`
          );
      }
      function Vi(e, n) {
        for (let t = n; t > -1; t--) if (typeof e[t] < "u") return e[t];
        throw new Error("Locale data API: locale data undefined");
      }
      function Ey(e) {
        const [n, t] = e.split(":");
        return { hours: +n, minutes: +t };
      }
      const lH =
          /^(\d{4,})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        cu = {},
        cH =
          /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
      var po = (function (e) {
          return (
            (e[(e.Short = 0)] = "Short"),
            (e[(e.ShortGMT = 1)] = "ShortGMT"),
            (e[(e.Long = 2)] = "Long"),
            (e[(e.Extended = 3)] = "Extended"),
            e
          );
        })(po || {}),
        rt = (function (e) {
          return (
            (e[(e.FullYear = 0)] = "FullYear"),
            (e[(e.Month = 1)] = "Month"),
            (e[(e.Date = 2)] = "Date"),
            (e[(e.Hours = 3)] = "Hours"),
            (e[(e.Minutes = 4)] = "Minutes"),
            (e[(e.Seconds = 5)] = "Seconds"),
            (e[(e.FractionalSeconds = 6)] = "FractionalSeconds"),
            (e[(e.Day = 7)] = "Day"),
            e
          );
        })(rt || {}),
        ot = (function (e) {
          return (
            (e[(e.DayPeriods = 0)] = "DayPeriods"),
            (e[(e.Days = 1)] = "Days"),
            (e[(e.Months = 2)] = "Months"),
            (e[(e.Eras = 3)] = "Eras"),
            e
          );
        })(ot || {});
      function uH(e, n, t, i) {
        let r = (function vH(e) {
          if (Sk(e)) return e;
          if ("number" == typeof e && !isNaN(e)) return new Date(e);
          if ("string" == typeof e) {
            if (((e = e.trim()), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(e))) {
              const [r, o = 1, s = 1] = e.split("-").map((a) => +a);
              return Df(r, o - 1, s);
            }
            const t = parseFloat(e);
            if (!isNaN(e - t)) return new Date(t);
            let i;
            if ((i = e.match(lH)))
              return (function bH(e) {
                const n = new Date(0);
                let t = 0,
                  i = 0;
                const r = e[8] ? n.setUTCFullYear : n.setFullYear,
                  o = e[8] ? n.setUTCHours : n.setHours;
                e[9] &&
                  ((t = Number(e[9] + e[10])), (i = Number(e[9] + e[11]))),
                  r.call(n, Number(e[1]), Number(e[2]) - 1, Number(e[3]));
                const s = Number(e[4] || 0) - t,
                  a = Number(e[5] || 0) - i,
                  l = Number(e[6] || 0),
                  c = Math.floor(1e3 * parseFloat("0." + (e[7] || 0)));
                return o.call(n, s, a, l, c), n;
              })(i);
          }
          const n = new Date(e);
          if (!Sk(n)) throw new Error(`Unable to convert "${e}" into a date`);
          return n;
        })(e);
        n = go(t, n) || n;
        let a,
          s = [];
        for (; n; ) {
          if (((a = cH.exec(n)), !a)) {
            s.push(n);
            break;
          }
          {
            s = s.concat(a.slice(1));
            const u = s.pop();
            if (!u) break;
            n = u;
          }
        }
        let l = r.getTimezoneOffset();
        i &&
          ((l = Dk(i, l)),
          (r = (function yH(e, n, t) {
            const i = t ? -1 : 1,
              r = e.getTimezoneOffset();
            return (function _H(e, n) {
              return (
                (e = new Date(e.getTime())).setMinutes(e.getMinutes() + n), e
              );
            })(e, i * (Dk(n, r) - r));
          })(r, i, !0)));
        let c = "";
        return (
          s.forEach((u) => {
            const f = (function mH(e) {
              if (Oy[e]) return Oy[e];
              let n;
              switch (e) {
                case "G":
                case "GG":
                case "GGG":
                  n = At(ot.Eras, Mt.Abbreviated);
                  break;
                case "GGGG":
                  n = At(ot.Eras, Mt.Wide);
                  break;
                case "GGGGG":
                  n = At(ot.Eras, Mt.Narrow);
                  break;
                case "y":
                  n = cn(rt.FullYear, 1, 0, !1, !0);
                  break;
                case "yy":
                  n = cn(rt.FullYear, 2, 0, !0, !0);
                  break;
                case "yyy":
                  n = cn(rt.FullYear, 3, 0, !1, !0);
                  break;
                case "yyyy":
                  n = cn(rt.FullYear, 4, 0, !1, !0);
                  break;
                case "Y":
                  n = Ef(1);
                  break;
                case "YY":
                  n = Ef(2, !0);
                  break;
                case "YYY":
                  n = Ef(3);
                  break;
                case "YYYY":
                  n = Ef(4);
                  break;
                case "M":
                case "L":
                  n = cn(rt.Month, 1, 1);
                  break;
                case "MM":
                case "LL":
                  n = cn(rt.Month, 2, 1);
                  break;
                case "MMM":
                  n = At(ot.Months, Mt.Abbreviated);
                  break;
                case "MMMM":
                  n = At(ot.Months, Mt.Wide);
                  break;
                case "MMMMM":
                  n = At(ot.Months, Mt.Narrow);
                  break;
                case "LLL":
                  n = At(ot.Months, Mt.Abbreviated, ei.Standalone);
                  break;
                case "LLLL":
                  n = At(ot.Months, Mt.Wide, ei.Standalone);
                  break;
                case "LLLLL":
                  n = At(ot.Months, Mt.Narrow, ei.Standalone);
                  break;
                case "w":
                  n = Iy(1);
                  break;
                case "ww":
                  n = Iy(2);
                  break;
                case "W":
                  n = Iy(1, !0);
                  break;
                case "d":
                  n = cn(rt.Date, 1);
                  break;
                case "dd":
                  n = cn(rt.Date, 2);
                  break;
                case "c":
                case "cc":
                  n = cn(rt.Day, 1);
                  break;
                case "ccc":
                  n = At(ot.Days, Mt.Abbreviated, ei.Standalone);
                  break;
                case "cccc":
                  n = At(ot.Days, Mt.Wide, ei.Standalone);
                  break;
                case "ccccc":
                  n = At(ot.Days, Mt.Narrow, ei.Standalone);
                  break;
                case "cccccc":
                  n = At(ot.Days, Mt.Short, ei.Standalone);
                  break;
                case "E":
                case "EE":
                case "EEE":
                  n = At(ot.Days, Mt.Abbreviated);
                  break;
                case "EEEE":
                  n = At(ot.Days, Mt.Wide);
                  break;
                case "EEEEE":
                  n = At(ot.Days, Mt.Narrow);
                  break;
                case "EEEEEE":
                  n = At(ot.Days, Mt.Short);
                  break;
                case "a":
                case "aa":
                case "aaa":
                  n = At(ot.DayPeriods, Mt.Abbreviated);
                  break;
                case "aaaa":
                  n = At(ot.DayPeriods, Mt.Wide);
                  break;
                case "aaaaa":
                  n = At(ot.DayPeriods, Mt.Narrow);
                  break;
                case "b":
                case "bb":
                case "bbb":
                  n = At(ot.DayPeriods, Mt.Abbreviated, ei.Standalone, !0);
                  break;
                case "bbbb":
                  n = At(ot.DayPeriods, Mt.Wide, ei.Standalone, !0);
                  break;
                case "bbbbb":
                  n = At(ot.DayPeriods, Mt.Narrow, ei.Standalone, !0);
                  break;
                case "B":
                case "BB":
                case "BBB":
                  n = At(ot.DayPeriods, Mt.Abbreviated, ei.Format, !0);
                  break;
                case "BBBB":
                  n = At(ot.DayPeriods, Mt.Wide, ei.Format, !0);
                  break;
                case "BBBBB":
                  n = At(ot.DayPeriods, Mt.Narrow, ei.Format, !0);
                  break;
                case "h":
                  n = cn(rt.Hours, 1, -12);
                  break;
                case "hh":
                  n = cn(rt.Hours, 2, -12);
                  break;
                case "H":
                  n = cn(rt.Hours, 1);
                  break;
                case "HH":
                  n = cn(rt.Hours, 2);
                  break;
                case "m":
                  n = cn(rt.Minutes, 1);
                  break;
                case "mm":
                  n = cn(rt.Minutes, 2);
                  break;
                case "s":
                  n = cn(rt.Seconds, 1);
                  break;
                case "ss":
                  n = cn(rt.Seconds, 2);
                  break;
                case "S":
                  n = cn(rt.FractionalSeconds, 1);
                  break;
                case "SS":
                  n = cn(rt.FractionalSeconds, 2);
                  break;
                case "SSS":
                  n = cn(rt.FractionalSeconds, 3);
                  break;
                case "Z":
                case "ZZ":
                case "ZZZ":
                  n = kf(po.Short);
                  break;
                case "ZZZZZ":
                  n = kf(po.Extended);
                  break;
                case "O":
                case "OO":
                case "OOO":
                case "z":
                case "zz":
                case "zzz":
                  n = kf(po.ShortGMT);
                  break;
                case "OOOO":
                case "ZZZZ":
                case "zzzz":
                  n = kf(po.Long);
                  break;
                default:
                  return null;
              }
              return (Oy[e] = n), n;
            })(u);
            c += f
              ? f(r, t, l)
              : "''" === u
              ? "'"
              : u.replace(/(^'|'$)/g, "").replace(/''/g, "'");
          }),
          c
        );
      }
      function Df(e, n, t) {
        const i = new Date(0);
        return i.setFullYear(e, n, t), i.setHours(0, 0, 0), i;
      }
      function go(e, n) {
        const t = (function Z6(e) {
          return Qn(e)[Ot.LocaleId];
        })(e);
        if (((cu[t] = cu[t] || {}), cu[t][n])) return cu[t][n];
        let i = "";
        switch (n) {
          case "shortDate":
            i = Cf(e, Mi.Short);
            break;
          case "mediumDate":
            i = Cf(e, Mi.Medium);
            break;
          case "longDate":
            i = Cf(e, Mi.Long);
            break;
          case "fullDate":
            i = Cf(e, Mi.Full);
            break;
          case "shortTime":
            i = xf(e, Mi.Short);
            break;
          case "mediumTime":
            i = xf(e, Mi.Medium);
            break;
          case "longTime":
            i = xf(e, Mi.Long);
            break;
          case "fullTime":
            i = xf(e, Mi.Full);
            break;
          case "short":
            const r = go(e, "shortTime"),
              o = go(e, "shortDate");
            i = Sf(Mf(e, Mi.Short), [r, o]);
            break;
          case "medium":
            const s = go(e, "mediumTime"),
              a = go(e, "mediumDate");
            i = Sf(Mf(e, Mi.Medium), [s, a]);
            break;
          case "long":
            const l = go(e, "longTime"),
              c = go(e, "longDate");
            i = Sf(Mf(e, Mi.Long), [l, c]);
            break;
          case "full":
            const u = go(e, "fullTime"),
              f = go(e, "fullDate");
            i = Sf(Mf(e, Mi.Full), [u, f]);
        }
        return i && (cu[t][n] = i), i;
      }
      function Sf(e, n) {
        return (
          n &&
            (e = e.replace(/\{([^}]+)}/g, function (t, i) {
              return null != n && i in n ? n[i] : t;
            })),
          e
        );
      }
      function ar(e, n, t = "-", i, r) {
        let o = "";
        (e < 0 || (r && e <= 0)) && (r ? (e = 1 - e) : ((e = -e), (o = t)));
        let s = String(e);
        for (; s.length < n; ) s = "0" + s;
        return i && (s = s.slice(s.length - n)), o + s;
      }
      function cn(e, n, t = 0, i = !1, r = !1) {
        return function (o, s) {
          let a = (function hH(e, n) {
            switch (e) {
              case rt.FullYear:
                return n.getFullYear();
              case rt.Month:
                return n.getMonth();
              case rt.Date:
                return n.getDate();
              case rt.Hours:
                return n.getHours();
              case rt.Minutes:
                return n.getMinutes();
              case rt.Seconds:
                return n.getSeconds();
              case rt.FractionalSeconds:
                return n.getMilliseconds();
              case rt.Day:
                return n.getDay();
              default:
                throw new Error(`Unknown DateType value "${e}".`);
            }
          })(e, o);
          if (((t > 0 || a > -t) && (a += t), e === rt.Hours))
            0 === a && -12 === t && (a = 12);
          else if (e === rt.FractionalSeconds)
            return (function dH(e, n) {
              return ar(e, 3).substring(0, n);
            })(a, n);
          const l = Bi(s, tn.MinusSign);
          return ar(a, n, l, i, r);
        };
      }
      function At(e, n, t = ei.Format, i = !1) {
        return function (r, o) {
          return (function fH(e, n, t, i, r, o) {
            switch (t) {
              case ot.Months:
                return (function J6(e, n, t) {
                  const i = Qn(e),
                    o = Vi([i[Ot.MonthsFormat], i[Ot.MonthsStandalone]], n);
                  return Vi(o, t);
                })(n, r, i)[e.getMonth()];
              case ot.Days:
                return (function X6(e, n, t) {
                  const i = Qn(e),
                    o = Vi([i[Ot.DaysFormat], i[Ot.DaysStandalone]], n);
                  return Vi(o, t);
                })(n, r, i)[e.getDay()];
              case ot.DayPeriods:
                const s = e.getHours(),
                  a = e.getMinutes();
                if (o) {
                  const c = (function iH(e) {
                      const n = Qn(e);
                      return (
                        xk(n),
                        (n[Ot.ExtraData][2] || []).map((i) =>
                          "string" == typeof i ? Ey(i) : [Ey(i[0]), Ey(i[1])]
                        )
                      );
                    })(n),
                    u = (function rH(e, n, t) {
                      const i = Qn(e);
                      xk(i);
                      const o =
                        Vi([i[Ot.ExtraData][0], i[Ot.ExtraData][1]], n) || [];
                      return Vi(o, t) || [];
                    })(n, r, i),
                    f = c.findIndex((g) => {
                      if (Array.isArray(g)) {
                        const [m, _] = g,
                          y = s >= m.hours && a >= m.minutes,
                          v = s < _.hours || (s === _.hours && a < _.minutes);
                        if (m.hours < _.hours) {
                          if (y && v) return !0;
                        } else if (y || v) return !0;
                      } else if (g.hours === s && g.minutes === a) return !0;
                      return !1;
                    });
                  if (-1 !== f) return u[f];
                }
                return (function Q6(e, n, t) {
                  const i = Qn(e),
                    o = Vi(
                      [i[Ot.DayPeriodsFormat], i[Ot.DayPeriodsStandalone]],
                      n
                    );
                  return Vi(o, t);
                })(n, r, i)[s < 12 ? 0 : 1];
              case ot.Eras:
                return (function eH(e, n) {
                  return Vi(Qn(e)[Ot.Eras], n);
                })(n, i)[e.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error(`unexpected translation type ${t}`);
            }
          })(r, o, e, n, t, i);
        };
      }
      function kf(e) {
        return function (n, t, i) {
          const r = -1 * i,
            o = Bi(t, tn.MinusSign),
            s = r > 0 ? Math.floor(r / 60) : Math.ceil(r / 60);
          switch (e) {
            case po.Short:
              return (
                (r >= 0 ? "+" : "") + ar(s, 2, o) + ar(Math.abs(r % 60), 2, o)
              );
            case po.ShortGMT:
              return "GMT" + (r >= 0 ? "+" : "") + ar(s, 1, o);
            case po.Long:
              return (
                "GMT" +
                (r >= 0 ? "+" : "") +
                ar(s, 2, o) +
                ":" +
                ar(Math.abs(r % 60), 2, o)
              );
            case po.Extended:
              return 0 === i
                ? "Z"
                : (r >= 0 ? "+" : "") +
                    ar(s, 2, o) +
                    ":" +
                    ar(Math.abs(r % 60), 2, o);
            default:
              throw new Error(`Unknown zone width "${e}"`);
          }
        };
      }
      const pH = 0,
        Tf = 4;
      function Mk(e) {
        return Df(
          e.getFullYear(),
          e.getMonth(),
          e.getDate() + (Tf - e.getDay())
        );
      }
      function Iy(e, n = !1) {
        return function (t, i) {
          let r;
          if (n) {
            const o = new Date(t.getFullYear(), t.getMonth(), 1).getDay() - 1,
              s = t.getDate();
            r = 1 + Math.floor((s + o) / 7);
          } else {
            const o = Mk(t),
              s = (function gH(e) {
                const n = Df(e, pH, 1).getDay();
                return Df(e, 0, 1 + (n <= Tf ? Tf : Tf + 7) - n);
              })(o.getFullYear()),
              a = o.getTime() - s.getTime();
            r = 1 + Math.round(a / 6048e5);
          }
          return ar(r, e, Bi(i, tn.MinusSign));
        };
      }
      function Ef(e, n = !1) {
        return function (t, i) {
          return ar(Mk(t).getFullYear(), e, Bi(i, tn.MinusSign), n);
        };
      }
      const Oy = {};
      function Dk(e, n) {
        e = e.replace(/:/g, "");
        const t = Date.parse("Jan 01, 1970 00:00:00 " + e) / 6e4;
        return isNaN(t) ? n : t;
      }
      function Sk(e) {
        return e instanceof Date && !isNaN(e.valueOf());
      }
      const wH = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
      function Ry(e) {
        const n = parseInt(e);
        if (isNaN(n))
          throw new Error("Invalid integer literal when parsing " + e);
        return n;
      }
      function Ik(e, n) {
        n = encodeURIComponent(n);
        for (const t of e.split(";")) {
          const i = t.indexOf("="),
            [r, o] = -1 == i ? [t, ""] : [t.slice(0, i), t.slice(i + 1)];
          if (r.trim() === n) return decodeURIComponent(o);
        }
        return null;
      }
      const Ly = /\s+/,
        Ok = [];
      let qo = (() => {
        class e {
          constructor(t, i, r, o) {
            (this._iterableDiffers = t),
              (this._keyValueDiffers = i),
              (this._ngEl = r),
              (this._renderer = o),
              (this.initialClasses = Ok),
              (this.stateMap = new Map());
          }
          set klass(t) {
            this.initialClasses = null != t ? t.trim().split(Ly) : Ok;
          }
          set ngClass(t) {
            this.rawClass = "string" == typeof t ? t.trim().split(Ly) : t;
          }
          ngDoCheck() {
            for (const i of this.initialClasses) this._updateState(i, !0);
            const t = this.rawClass;
            if (Array.isArray(t) || t instanceof Set)
              for (const i of t) this._updateState(i, !0);
            else if (null != t)
              for (const i of Object.keys(t)) this._updateState(i, !!t[i]);
            this._applyStateDiff();
          }
          _updateState(t, i) {
            const r = this.stateMap.get(t);
            void 0 !== r
              ? (r.enabled !== i && ((r.changed = !0), (r.enabled = i)),
                (r.touched = !0))
              : this.stateMap.set(t, { enabled: i, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const t of this.stateMap) {
              const i = t[0],
                r = t[1];
              r.changed
                ? (this._toggleClass(i, r.enabled), (r.changed = !1))
                : r.touched ||
                  (r.enabled && this._toggleClass(i, !1),
                  this.stateMap.delete(i)),
                (r.touched = !1);
            }
          }
          _toggleClass(t, i) {
            (t = t.trim()).length > 0 &&
              t.split(Ly).forEach((r) => {
                i
                  ? this._renderer.addClass(this._ngEl.nativeElement, r)
                  : this._renderer.removeClass(this._ngEl.nativeElement, r);
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(vf), M(lu), M(pn), M(oo));
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          }));
        }
        return e;
      })();
      class PH {
        constructor(n, t, i, r) {
          (this.$implicit = n),
            (this.ngForOf = t),
            (this.index = i),
            (this.count = r);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Qe = (() => {
        class e {
          set ngForOf(t) {
            (this._ngForOf = t), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(t) {
            this._trackByFn = t;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(t, i, r) {
            (this._viewContainer = t),
              (this._template = i),
              (this._differs = r),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(t) {
            t && (this._template = t);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const t = this._ngForOf;
              !this._differ &&
                t &&
                (this._differ = this._differs
                  .find(t)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const t = this._differ.diff(this._ngForOf);
              t && this._applyChanges(t);
            }
          }
          _applyChanges(t) {
            const i = this._viewContainer;
            t.forEachOperation((r, o, s) => {
              if (null == r.previousIndex)
                i.createEmbeddedView(
                  this._template,
                  new PH(r.item, this._ngForOf, -1, -1),
                  null === s ? void 0 : s
                );
              else if (null == s) i.remove(null === o ? void 0 : o);
              else if (null !== o) {
                const a = i.get(o);
                i.move(a, s), Pk(a, r);
              }
            });
            for (let r = 0, o = i.length; r < o; r++) {
              const a = i.get(r).context;
              (a.index = r), (a.count = o), (a.ngForOf = this._ngForOf);
            }
            t.forEachIdentityChange((r) => {
              Pk(i.get(r.currentIndex), r);
            });
          }
          static ngTemplateContextGuard(t, i) {
            return !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Vn), M(uo), M(vf));
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          }));
        }
        return e;
      })();
      function Pk(e, n) {
        e.context.$implicit = n.item;
      }
      let be = (() => {
        class e {
          constructor(t, i) {
            (this._viewContainer = t),
              (this._context = new FH()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = i);
          }
          set ngIf(t) {
            (this._context.$implicit = this._context.ngIf = t),
              this._updateView();
          }
          set ngIfThen(t) {
            Fk("ngIfThen", t),
              (this._thenTemplateRef = t),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(t) {
            Fk("ngIfElse", t),
              (this._elseTemplateRef = t),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(t, i) {
            return !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Vn), M(uo));
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          }));
        }
        return e;
      })();
      class FH {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Fk(e, n) {
        if (n && !n.createEmbeddedView)
          throw new Error(
            `${e} must be a TemplateRef, but received '${hn(n)}'.`
          );
      }
      let Di = (() => {
          class e {
            constructor(t, i, r) {
              (this._ngEl = t),
                (this._differs = i),
                (this._renderer = r),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(t) {
              (this._ngStyle = t),
                !this._differ &&
                  t &&
                  (this._differ = this._differs.find(t).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const t = this._differ.diff(this._ngStyle);
                t && this._applyChanges(t);
              }
            }
            _setStyle(t, i) {
              const [r, o] = t.split("."),
                s = -1 === r.indexOf("-") ? void 0 : Vo.DashCase;
              null != i
                ? this._renderer.setStyle(
                    this._ngEl.nativeElement,
                    r,
                    o ? `${i}${o}` : i,
                    s
                  )
                : this._renderer.removeStyle(this._ngEl.nativeElement, r, s);
            }
            _applyChanges(t) {
              t.forEachRemovedItem((i) => this._setStyle(i.key, null)),
                t.forEachAddedItem((i) =>
                  this._setStyle(i.key, i.currentValue)
                ),
                t.forEachChangedItem((i) =>
                  this._setStyle(i.key, i.currentValue)
                );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(pn), M(lu), M(oo));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
              standalone: !0,
            }));
          }
          return e;
        })(),
        zy = (() => {
          class e {
            constructor(t) {
              (this._viewContainerRef = t),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null),
                (this.ngTemplateOutletInjector = null);
            }
            ngOnChanges(t) {
              if (t.ngTemplateOutlet || t.ngTemplateOutletInjector) {
                const i = this._viewContainerRef;
                if (
                  (this._viewRef && i.remove(i.indexOf(this._viewRef)),
                  this.ngTemplateOutlet)
                ) {
                  const {
                    ngTemplateOutlet: r,
                    ngTemplateOutletContext: o,
                    ngTemplateOutletInjector: s,
                  } = this;
                  this._viewRef = i.createEmbeddedView(
                    r,
                    o,
                    s ? { injector: s } : void 0
                  );
                } else this._viewRef = null;
              } else
                this._viewRef &&
                  t.ngTemplateOutletContext &&
                  this.ngTemplateOutletContext &&
                  (this._viewRef.context = this.ngTemplateOutletContext);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(Vn));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
                ngTemplateOutletInjector: "ngTemplateOutletInjector",
              },
              standalone: !0,
              features: [si],
            }));
          }
          return e;
        })();
      function lr(e, n) {
        return new P(2100, !1);
      }
      class BH {
        createSubscription(n, t) {
          return fC(() =>
            n.subscribe({
              next: t,
              error: (i) => {
                throw i;
              },
            })
          );
        }
        dispose(n) {
          fC(() => n.unsubscribe());
        }
      }
      class VH {
        createSubscription(n, t) {
          return n.then(t, (i) => {
            throw i;
          });
        }
        dispose(n) {}
      }
      const zH = new VH(),
        HH = new BH();
      let Hy = (() => {
        class e {
          constructor(t) {
            (this._latestValue = null),
              (this._subscription = null),
              (this._obj = null),
              (this._strategy = null),
              (this._ref = t);
          }
          ngOnDestroy() {
            this._subscription && this._dispose(), (this._ref = null);
          }
          transform(t) {
            return this._obj
              ? t !== this._obj
                ? (this._dispose(), this.transform(t))
                : this._latestValue
              : (t && this._subscribe(t), this._latestValue);
          }
          _subscribe(t) {
            (this._obj = t),
              (this._strategy = this._selectStrategy(t)),
              (this._subscription = this._strategy.createSubscription(t, (i) =>
                this._updateLatestValue(t, i)
              ));
          }
          _selectStrategy(t) {
            if (Qc(t)) return zH;
            if (DM(t)) return HH;
            throw lr();
          }
          _dispose() {
            this._strategy.dispose(this._subscription),
              (this._latestValue = null),
              (this._subscription = null),
              (this._obj = null);
          }
          _updateLatestValue(t, i) {
            t === this._obj &&
              ((this._latestValue = i), this._ref.markForCheck());
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Wo, 16));
          });
          static #t = (this.ɵpipe = Rn({
            name: "async",
            type: e,
            pure: !1,
            standalone: !0,
          }));
        }
        return e;
      })();
      const UH =
        /(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])\S*/g;
      let Nk = (() => {
        class e {
          transform(t) {
            if (null == t) return null;
            if ("string" != typeof t) throw lr();
            return t.replace(
              UH,
              (i) => i[0].toUpperCase() + i.slice(1).toLowerCase()
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵpipe = Rn({
            name: "titlecase",
            type: e,
            pure: !0,
            standalone: !0,
          }));
        }
        return e;
      })();
      const qH = new Q("DATE_PIPE_DEFAULT_TIMEZONE"),
        GH = new Q("DATE_PIPE_DEFAULT_OPTIONS");
      let Lk = (() => {
          class e {
            constructor(t, i, r) {
              (this.locale = t),
                (this.defaultTimezone = i),
                (this.defaultOptions = r);
            }
            transform(t, i, r, o) {
              if (null == t || "" === t || t != t) return null;
              try {
                return uH(
                  t,
                  i ?? this.defaultOptions?.dateFormat ?? "mediumDate",
                  o || this.locale,
                  r ??
                    this.defaultOptions?.timezone ??
                    this.defaultTimezone ??
                    void 0
                );
              } catch (s) {
                throw lr();
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(ho, 16), M(qH, 24), M(GH, 24));
            });
            static #t = (this.ɵpipe = Rn({
              name: "date",
              type: e,
              pure: !0,
              standalone: !0,
            }));
          }
          return e;
        })(),
        Vk = (() => {
          class e {
            constructor(t) {
              this._locale = t;
            }
            transform(t, i, r) {
              if (
                !(function jy(e) {
                  return !(null == e || "" === e || e != e);
                })(t)
              )
                return null;
              r = r || this._locale;
              try {
                return (function kH(e, n, t) {
                  return (function Py(e, n, t, i, r, o, s = !1) {
                    let a = "",
                      l = !1;
                    if (isFinite(e)) {
                      let c = (function EH(e) {
                        let i,
                          r,
                          o,
                          s,
                          a,
                          n = Math.abs(e) + "",
                          t = 0;
                        for (
                          (r = n.indexOf(".")) > -1 && (n = n.replace(".", "")),
                            (o = n.search(/e/i)) > 0
                              ? (r < 0 && (r = o),
                                (r += +n.slice(o + 1)),
                                (n = n.substring(0, o)))
                              : r < 0 && (r = n.length),
                            o = 0;
                          "0" === n.charAt(o);
                          o++
                        );
                        if (o === (a = n.length)) (i = [0]), (r = 1);
                        else {
                          for (a--; "0" === n.charAt(a); ) a--;
                          for (r -= o, i = [], s = 0; o <= a; o++, s++)
                            i[s] = Number(n.charAt(o));
                        }
                        return (
                          r > 22 &&
                            ((i = i.splice(0, 21)), (t = r - 1), (r = 1)),
                          { digits: i, exponent: t, integerLen: r }
                        );
                      })(e);
                      s &&
                        (c = (function TH(e) {
                          if (0 === e.digits[0]) return e;
                          const n = e.digits.length - e.integerLen;
                          return (
                            e.exponent
                              ? (e.exponent += 2)
                              : (0 === n
                                  ? e.digits.push(0, 0)
                                  : 1 === n && e.digits.push(0),
                                (e.integerLen += 2)),
                            e
                          );
                        })(c));
                      let u = n.minInt,
                        f = n.minFrac,
                        g = n.maxFrac;
                      if (o) {
                        const C = o.match(wH);
                        if (null === C)
                          throw new Error(`${o} is not a valid digit info`);
                        const D = C[1],
                          S = C[3],
                          T = C[5];
                        null != D && (u = Ry(D)),
                          null != S && (f = Ry(S)),
                          null != T
                            ? (g = Ry(T))
                            : null != S && f > g && (g = f);
                      }
                      !(function IH(e, n, t) {
                        if (n > t)
                          throw new Error(
                            `The minimum number of digits after fraction (${n}) is higher than the maximum (${t}).`
                          );
                        let i = e.digits,
                          r = i.length - e.integerLen;
                        const o = Math.min(Math.max(n, r), t);
                        let s = o + e.integerLen,
                          a = i[s];
                        if (s > 0) {
                          i.splice(Math.max(e.integerLen, s));
                          for (let f = s; f < i.length; f++) i[f] = 0;
                        } else {
                          (r = Math.max(0, r)),
                            (e.integerLen = 1),
                            (i.length = Math.max(1, (s = o + 1))),
                            (i[0] = 0);
                          for (let f = 1; f < s; f++) i[f] = 0;
                        }
                        if (a >= 5)
                          if (s - 1 < 0) {
                            for (let f = 0; f > s; f--)
                              i.unshift(0), e.integerLen++;
                            i.unshift(1), e.integerLen++;
                          } else i[s - 1]++;
                        for (; r < Math.max(0, o); r++) i.push(0);
                        let l = 0 !== o;
                        const c = n + e.integerLen,
                          u = i.reduceRight(function (f, g, m, _) {
                            return (
                              (_[m] = (g += f) < 10 ? g : g - 10),
                              l && (0 === _[m] && m >= c ? _.pop() : (l = !1)),
                              g >= 10 ? 1 : 0
                            );
                          }, 0);
                        u && (i.unshift(u), e.integerLen++);
                      })(c, f, g);
                      let m = c.digits,
                        _ = c.integerLen;
                      const y = c.exponent;
                      let v = [];
                      for (l = m.every((C) => !C); _ < u; _++) m.unshift(0);
                      for (; _ < 0; _++) m.unshift(0);
                      _ > 0
                        ? (v = m.splice(_, m.length))
                        : ((v = m), (m = [0]));
                      const w = [];
                      for (
                        m.length >= n.lgSize &&
                        w.unshift(m.splice(-n.lgSize, m.length).join(""));
                        m.length > n.gSize;

                      )
                        w.unshift(m.splice(-n.gSize, m.length).join(""));
                      m.length && w.unshift(m.join("")),
                        (a = w.join(Bi(t, i))),
                        v.length && (a += Bi(t, r) + v.join("")),
                        y && (a += Bi(t, tn.Exponential) + "+" + y);
                    } else a = Bi(t, tn.Infinity);
                    return (
                      (a =
                        e < 0 && !l
                          ? n.negPre + a + n.negSuf
                          : n.posPre + a + n.posSuf),
                      a
                    );
                  })(
                    e,
                    (function Fy(e, n = "-") {
                      const t = {
                          minInt: 1,
                          minFrac: 0,
                          maxFrac: 0,
                          posPre: "",
                          posSuf: "",
                          negPre: "",
                          negSuf: "",
                          gSize: 0,
                          lgSize: 0,
                        },
                        i = e.split(";"),
                        r = i[0],
                        o = i[1],
                        s =
                          -1 !== r.indexOf(".")
                            ? r.split(".")
                            : [
                                r.substring(0, r.lastIndexOf("0") + 1),
                                r.substring(r.lastIndexOf("0") + 1),
                              ],
                        a = s[0],
                        l = s[1] || "";
                      t.posPre = a.substring(0, a.indexOf("#"));
                      for (let u = 0; u < l.length; u++) {
                        const f = l.charAt(u);
                        "0" === f
                          ? (t.minFrac = t.maxFrac = u + 1)
                          : "#" === f
                          ? (t.maxFrac = u + 1)
                          : (t.posSuf += f);
                      }
                      const c = a.split(",");
                      if (
                        ((t.gSize = c[1] ? c[1].length : 0),
                        (t.lgSize = c[2] || c[1] ? (c[2] || c[1]).length : 0),
                        o)
                      ) {
                        const u = r.length - t.posPre.length - t.posSuf.length,
                          f = o.indexOf("#");
                        (t.negPre = o.substring(0, f).replace(/'/g, "")),
                          (t.negSuf = o.slice(f + u).replace(/'/g, ""));
                      } else (t.negPre = n + t.posPre), (t.negSuf = t.posSuf);
                      return t;
                    })(
                      (function Ty(e, n) {
                        return Qn(e)[Ot.NumberFormats][n];
                      })(n, wf.Decimal),
                      Bi(n, tn.MinusSign)
                    ),
                    n,
                    tn.Group,
                    tn.Decimal,
                    t
                  );
                })(
                  (function Uy(e) {
                    if (
                      "string" == typeof e &&
                      !isNaN(Number(e) - parseFloat(e))
                    )
                      return Number(e);
                    if ("number" != typeof e)
                      throw new Error(`${e} is not a number`);
                    return e;
                  })(t),
                  r,
                  i
                );
              } catch (o) {
                throw lr();
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(ho, 16));
            });
            static #t = (this.ɵpipe = Rn({
              name: "number",
              type: e,
              pure: !0,
              standalone: !0,
            }));
          }
          return e;
        })();
      let Pr = (() => {
        class e {
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵmod = Vt({ type: e }));
          static #n = (this.ɵinj = Rt({}));
        }
        return e;
      })();
      function Hk(e) {
        return "server" === e;
      }
      let oj = (() => {
        class e {
          static #e = (this.ɵprov = V({
            token: e,
            providedIn: "root",
            factory: () => new sj(O(Ht), window),
          }));
        }
        return e;
      })();
      class sj {
        constructor(n, t) {
          (this.document = n), (this.window = t), (this.offset = () => [0, 0]);
        }
        setOffset(n) {
          this.offset = Array.isArray(n) ? () => n : n;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(n) {
          this.supportsScrolling() && this.window.scrollTo(n[0], n[1]);
        }
        scrollToAnchor(n) {
          if (!this.supportsScrolling()) return;
          const t = (function aj(e, n) {
            const t = e.getElementById(n) || e.getElementsByName(n)[0];
            if (t) return t;
            if (
              "function" == typeof e.createTreeWalker &&
              e.body &&
              "function" == typeof e.body.attachShadow
            ) {
              const i = e.createTreeWalker(e.body, NodeFilter.SHOW_ELEMENT);
              let r = i.currentNode;
              for (; r; ) {
                const o = r.shadowRoot;
                if (o) {
                  const s =
                    o.getElementById(n) || o.querySelector(`[name="${n}"]`);
                  if (s) return s;
                }
                r = i.nextNode();
              }
            }
            return null;
          })(this.document, n);
          t && (this.scrollToElement(t), t.focus());
        }
        setHistoryScrollRestoration(n) {
          this.supportsScrolling() &&
            (this.window.history.scrollRestoration = n);
        }
        scrollToElement(n) {
          const t = n.getBoundingClientRect(),
            i = t.left + this.window.pageXOffset,
            r = t.top + this.window.pageYOffset,
            o = this.offset();
          this.window.scrollTo(i - o[0], r - o[1]);
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      class jk {}
      class Ij extends j6 {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class qy extends Ij {
        static makeCurrent() {
          !(function H6(e) {
            My || (My = e);
          })(new qy());
        }
        onAndCancel(n, t, i) {
          return (
            n.addEventListener(t, i),
            () => {
              n.removeEventListener(t, i);
            }
          );
        }
        dispatchEvent(n, t) {
          n.dispatchEvent(t);
        }
        remove(n) {
          n.parentNode && n.parentNode.removeChild(n);
        }
        createElement(n, t) {
          return (t = t || this.getDefaultDocument()).createElement(n);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(n) {
          return n.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(n) {
          return n instanceof DocumentFragment;
        }
        getGlobalEventTarget(n, t) {
          return "window" === t
            ? window
            : "document" === t
            ? n
            : "body" === t
            ? n.body
            : null;
        }
        getBaseHref(n) {
          const t = (function Oj() {
            return (
              (hu = hu || document.querySelector("base")),
              hu ? hu.getAttribute("href") : null
            );
          })();
          return null == t
            ? null
            : (function Aj(e) {
                (Pf = Pf || document.createElement("a")),
                  Pf.setAttribute("href", e);
                const n = Pf.pathname;
                return "/" === n.charAt(0) ? n : `/${n}`;
              })(t);
        }
        resetBaseElement() {
          hu = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(n) {
          return Ik(document.cookie, n);
        }
      }
      let Pf,
        hu = null,
        Fj = (() => {
          class e {
            build() {
              return new XMLHttpRequest();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
          }
          return e;
        })();
      const Gy = new Q("EventManagerPlugins");
      let Gk = (() => {
        class e {
          constructor(t, i) {
            (this._zone = i),
              (this._eventNameToPlugin = new Map()),
              t.forEach((r) => {
                r.manager = this;
              }),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, i, r) {
            return this._findPluginFor(i).addEventListener(t, i, r);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            let i = this._eventNameToPlugin.get(t);
            if (i) return i;
            if (((i = this._plugins.find((o) => o.supports(t))), !i))
              throw new P(5101, !1);
            return this._eventNameToPlugin.set(t, i), i;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Gy), O(ht));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      class Yk {
        constructor(n) {
          this._doc = n;
        }
      }
      const Yy = "ng-app-id";
      let Kk = (() => {
        class e {
          constructor(t, i, r, o = {}) {
            (this.doc = t),
              (this.appId = i),
              (this.nonce = r),
              (this.platformId = o),
              (this.styleRef = new Map()),
              (this.hostNodes = new Set()),
              (this.styleNodesInDOM = this.collectServerRenderedStyles()),
              (this.platformIsServer = Hk(o)),
              this.resetHostNodes();
          }
          addStyles(t) {
            for (const i of t)
              1 === this.changeUsageCount(i, 1) && this.onStyleAdded(i);
          }
          removeStyles(t) {
            for (const i of t)
              this.changeUsageCount(i, -1) <= 0 && this.onStyleRemoved(i);
          }
          ngOnDestroy() {
            const t = this.styleNodesInDOM;
            t && (t.forEach((i) => i.remove()), t.clear());
            for (const i of this.getAllStyles()) this.onStyleRemoved(i);
            this.resetHostNodes();
          }
          addHost(t) {
            this.hostNodes.add(t);
            for (const i of this.getAllStyles()) this.addStyleToHost(t, i);
          }
          removeHost(t) {
            this.hostNodes.delete(t);
          }
          getAllStyles() {
            return this.styleRef.keys();
          }
          onStyleAdded(t) {
            for (const i of this.hostNodes) this.addStyleToHost(i, t);
          }
          onStyleRemoved(t) {
            const i = this.styleRef;
            i.get(t)?.elements?.forEach((r) => r.remove()), i.delete(t);
          }
          collectServerRenderedStyles() {
            const t = this.doc.head?.querySelectorAll(
              `style[${Yy}="${this.appId}"]`
            );
            if (t?.length) {
              const i = new Map();
              return (
                t.forEach((r) => {
                  null != r.textContent && i.set(r.textContent, r);
                }),
                i
              );
            }
            return null;
          }
          changeUsageCount(t, i) {
            const r = this.styleRef;
            if (r.has(t)) {
              const o = r.get(t);
              return (o.usage += i), o.usage;
            }
            return r.set(t, { usage: i, elements: [] }), i;
          }
          getStyleElement(t, i) {
            const r = this.styleNodesInDOM,
              o = r?.get(i);
            if (o?.parentNode === t)
              return r.delete(i), o.removeAttribute(Yy), o;
            {
              const s = this.doc.createElement("style");
              return (
                this.nonce && s.setAttribute("nonce", this.nonce),
                (s.textContent = i),
                this.platformIsServer && s.setAttribute(Yy, this.appId),
                s
              );
            }
          }
          addStyleToHost(t, i) {
            const r = this.getStyleElement(t, i);
            t.appendChild(r);
            const o = this.styleRef,
              s = o.get(i)?.elements;
            s ? s.push(r) : o.set(i, { elements: [r], usage: 1 });
          }
          resetHostNodes() {
            const t = this.hostNodes;
            t.clear(), t.add(this.doc.head);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ht), O(Nh), O(ox, 8), O(As));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      const Ky = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Zy = /%COMP%/g,
        Bj = new Q("RemoveStylesOnCompDestroy", {
          providedIn: "root",
          factory: () => !1,
        });
      function Qk(e, n) {
        return n.map((t) => t.replace(Zy, e));
      }
      let Qy = (() => {
        class e {
          constructor(t, i, r, o, s, a, l, c = null) {
            (this.eventManager = t),
              (this.sharedStylesHost = i),
              (this.appId = r),
              (this.removeStylesOnCompDestroy = o),
              (this.doc = s),
              (this.platformId = a),
              (this.ngZone = l),
              (this.nonce = c),
              (this.rendererByCompId = new Map()),
              (this.platformIsServer = Hk(a)),
              (this.defaultRenderer = new Xy(t, s, l, this.platformIsServer));
          }
          createRenderer(t, i) {
            if (!t || !i) return this.defaultRenderer;
            this.platformIsServer &&
              i.encapsulation === Pi.ShadowDom &&
              (i = { ...i, encapsulation: Pi.Emulated });
            const r = this.getOrCreateRenderer(t, i);
            return (
              r instanceof Jk
                ? r.applyToHost(t)
                : r instanceof Jy && r.applyStyles(),
              r
            );
          }
          getOrCreateRenderer(t, i) {
            const r = this.rendererByCompId;
            let o = r.get(i.id);
            if (!o) {
              const s = this.doc,
                a = this.ngZone,
                l = this.eventManager,
                c = this.sharedStylesHost,
                u = this.removeStylesOnCompDestroy,
                f = this.platformIsServer;
              switch (i.encapsulation) {
                case Pi.Emulated:
                  o = new Jk(l, c, i, this.appId, u, s, a, f);
                  break;
                case Pi.ShadowDom:
                  return new jj(l, c, t, i, s, a, this.nonce, f);
                default:
                  o = new Jy(l, c, i, u, s, a, f);
              }
              r.set(i.id, o);
            }
            return o;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(
              O(Gk),
              O(Kk),
              O(Nh),
              O(Bj),
              O(Ht),
              O(As),
              O(ht),
              O(ox)
            );
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      class Xy {
        constructor(n, t, i, r) {
          (this.eventManager = n),
            (this.doc = t),
            (this.ngZone = i),
            (this.platformIsServer = r),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(n, t) {
          return t
            ? this.doc.createElementNS(Ky[t] || t, n)
            : this.doc.createElement(n);
        }
        createComment(n) {
          return this.doc.createComment(n);
        }
        createText(n) {
          return this.doc.createTextNode(n);
        }
        appendChild(n, t) {
          (Xk(n) ? n.content : n).appendChild(t);
        }
        insertBefore(n, t, i) {
          n && (Xk(n) ? n.content : n).insertBefore(t, i);
        }
        removeChild(n, t) {
          n && n.removeChild(t);
        }
        selectRootElement(n, t) {
          let i = "string" == typeof n ? this.doc.querySelector(n) : n;
          if (!i) throw new P(-5104, !1);
          return t || (i.textContent = ""), i;
        }
        parentNode(n) {
          return n.parentNode;
        }
        nextSibling(n) {
          return n.nextSibling;
        }
        setAttribute(n, t, i, r) {
          if (r) {
            t = r + ":" + t;
            const o = Ky[r];
            o ? n.setAttributeNS(o, t, i) : n.setAttribute(t, i);
          } else n.setAttribute(t, i);
        }
        removeAttribute(n, t, i) {
          if (i) {
            const r = Ky[i];
            r ? n.removeAttributeNS(r, t) : n.removeAttribute(`${i}:${t}`);
          } else n.removeAttribute(t);
        }
        addClass(n, t) {
          n.classList.add(t);
        }
        removeClass(n, t) {
          n.classList.remove(t);
        }
        setStyle(n, t, i, r) {
          r & (Vo.DashCase | Vo.Important)
            ? n.style.setProperty(t, i, r & Vo.Important ? "important" : "")
            : (n.style[t] = i);
        }
        removeStyle(n, t, i) {
          i & Vo.DashCase ? n.style.removeProperty(t) : (n.style[t] = "");
        }
        setProperty(n, t, i) {
          n[t] = i;
        }
        setValue(n, t) {
          n.nodeValue = t;
        }
        listen(n, t, i) {
          if (
            "string" == typeof n &&
            !(n = $o().getGlobalEventTarget(this.doc, n))
          )
            throw new Error(`Unsupported event target ${n} for event ${t}`);
          return this.eventManager.addEventListener(
            n,
            t,
            this.decoratePreventDefault(i)
          );
        }
        decoratePreventDefault(n) {
          return (t) => {
            if ("__ngUnwrap__" === t) return n;
            !1 ===
              (this.platformIsServer
                ? this.ngZone.runGuarded(() => n(t))
                : n(t)) && t.preventDefault();
          };
        }
      }
      function Xk(e) {
        return "TEMPLATE" === e.tagName && void 0 !== e.content;
      }
      class jj extends Xy {
        constructor(n, t, i, r, o, s, a, l) {
          super(n, o, s, l),
            (this.sharedStylesHost = t),
            (this.hostEl = i),
            (this.shadowRoot = i.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const c = Qk(r.id, r.styles);
          for (const u of c) {
            const f = document.createElement("style");
            a && f.setAttribute("nonce", a),
              (f.textContent = u),
              this.shadowRoot.appendChild(f);
          }
        }
        nodeOrShadowRoot(n) {
          return n === this.hostEl ? this.shadowRoot : n;
        }
        appendChild(n, t) {
          return super.appendChild(this.nodeOrShadowRoot(n), t);
        }
        insertBefore(n, t, i) {
          return super.insertBefore(this.nodeOrShadowRoot(n), t, i);
        }
        removeChild(n, t) {
          return super.removeChild(this.nodeOrShadowRoot(n), t);
        }
        parentNode(n) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(n))
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class Jy extends Xy {
        constructor(n, t, i, r, o, s, a, l) {
          super(n, o, s, a),
            (this.sharedStylesHost = t),
            (this.removeStylesOnCompDestroy = r),
            (this.styles = l ? Qk(l, i.styles) : i.styles);
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles);
        }
        destroy() {
          this.removeStylesOnCompDestroy &&
            this.sharedStylesHost.removeStyles(this.styles);
        }
      }
      class Jk extends Jy {
        constructor(n, t, i, r, o, s, a, l) {
          const c = r + "-" + i.id;
          super(n, t, i, o, s, a, l, c),
            (this.contentAttr = (function Vj(e) {
              return "_ngcontent-%COMP%".replace(Zy, e);
            })(c)),
            (this.hostAttr = (function zj(e) {
              return "_nghost-%COMP%".replace(Zy, e);
            })(c));
        }
        applyToHost(n) {
          this.applyStyles(), this.setAttribute(n, this.hostAttr, "");
        }
        createElement(n, t) {
          const i = super.createElement(n, t);
          return super.setAttribute(i, this.contentAttr, ""), i;
        }
      }
      let Uj = (() => {
        class e extends Yk {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return !0;
          }
          addEventListener(t, i, r) {
            return (
              t.addEventListener(i, r, !1),
              () => this.removeEventListener(t, i, r)
            );
          }
          removeEventListener(t, i, r) {
            return t.removeEventListener(i, r);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ht));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      const eT = ["alt", "control", "meta", "shift"],
        Wj = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        $j = {
          alt: (e) => e.altKey,
          control: (e) => e.ctrlKey,
          meta: (e) => e.metaKey,
          shift: (e) => e.shiftKey,
        };
      let qj = (() => {
        class e extends Yk {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return null != e.parseEventName(t);
          }
          addEventListener(t, i, r) {
            const o = e.parseEventName(i),
              s = e.eventCallback(o.fullKey, r, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() => $o().onAndCancel(t, o.domEventName, s));
          }
          static parseEventName(t) {
            const i = t.toLowerCase().split("."),
              r = i.shift();
            if (0 === i.length || ("keydown" !== r && "keyup" !== r))
              return null;
            const o = e._normalizeKey(i.pop());
            let s = "",
              a = i.indexOf("code");
            if (
              (a > -1 && (i.splice(a, 1), (s = "code.")),
              eT.forEach((c) => {
                const u = i.indexOf(c);
                u > -1 && (i.splice(u, 1), (s += c + "."));
              }),
              (s += o),
              0 != i.length || 0 === o.length)
            )
              return null;
            const l = {};
            return (l.domEventName = r), (l.fullKey = s), l;
          }
          static matchEventFullKeyCode(t, i) {
            let r = Wj[t.key] || t.key,
              o = "";
            return (
              i.indexOf("code.") > -1 && ((r = t.code), (o = "code.")),
              !(null == r || !r) &&
                ((r = r.toLowerCase()),
                " " === r ? (r = "space") : "." === r && (r = "dot"),
                eT.forEach((s) => {
                  s !== r && (0, $j[s])(t) && (o += s + ".");
                }),
                (o += r),
                o === i)
            );
          }
          static eventCallback(t, i, r) {
            return (o) => {
              e.matchEventFullKeyCode(o, t) && r.runGuarded(() => i(o));
            };
          }
          static _normalizeKey(t) {
            return "esc" === t ? "escape" : t;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ht));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      const nT = [
          { provide: As, useValue: "browser" },
          {
            provide: ix,
            useValue: function Gj() {
              qy.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: Ht,
            useFactory: function Kj() {
              return (
                (function zL(e) {
                  Vm = e;
                })(document),
                document
              );
            },
            deps: [],
          },
        ],
        Zj = qS(k6, "browser", nT),
        Qj = new Q(""),
        iT = [
          {
            provide: gf,
            useClass: class Pj {
              addToWindow(n) {
                (Et.getAngularTestability = (i, r = !0) => {
                  const o = n.findTestabilityInTree(i, r);
                  if (null == o) throw new P(5103, !1);
                  return o;
                }),
                  (Et.getAllAngularTestabilities = () =>
                    n.getAllTestabilities()),
                  (Et.getAllAngularRootElements = () => n.getAllRootElements()),
                  Et.frameworkStabilizers || (Et.frameworkStabilizers = []),
                  Et.frameworkStabilizers.push((i) => {
                    const r = Et.getAllAngularTestabilities();
                    let o = r.length,
                      s = !1;
                    const a = function (l) {
                      (s = s || l), o--, 0 == o && i(s);
                    };
                    r.forEach((l) => {
                      l.whenStable(a);
                    });
                  });
              }
              findTestabilityInTree(n, t, i) {
                return null == t
                  ? null
                  : n.getTestability(t) ??
                      (i
                        ? $o().isShadowRoot(t)
                          ? this.findTestabilityInTree(n, t.host, !0)
                          : this.findTestabilityInTree(n, t.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: HS, useClass: fy, deps: [ht, py, gf] },
          { provide: fy, useClass: fy, deps: [ht, py, gf] },
        ],
        rT = [
          { provide: Ym, useValue: "root" },
          {
            provide: so,
            useFactory: function Yj() {
              return new so();
            },
            deps: [],
          },
          { provide: Gy, useClass: Uj, multi: !0, deps: [Ht, ht, As] },
          { provide: Gy, useClass: qj, multi: !0, deps: [Ht] },
          Qy,
          Kk,
          Gk,
          { provide: Ka, useExisting: Qy },
          { provide: jk, useClass: Fj, deps: [] },
          [],
        ];
      let oT = (() => {
          class e {
            constructor(t) {}
            static withServerTransition(t) {
              return {
                ngModule: e,
                providers: [{ provide: Nh, useValue: t.appId }],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(Qj, 12));
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({
              providers: [...rT, ...iT],
              imports: [Pr, T6],
            }));
          }
          return e;
        })(),
        sT = (() => {
          class e {
            constructor(t) {
              this._doc = t;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(t) {
              this._doc.title = t || "";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(Ht));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: function (i) {
                let r = null;
                return (
                  (r = i
                    ? new i()
                    : (function Jj() {
                        return new sT(O(Ht));
                      })()),
                  r
                );
              },
              providedIn: "root",
            }));
          }
          return e;
        })();
      typeof window < "u" && window;
      let tv = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: function (i) {
                let r = null;
                return (r = i ? new (i || e)() : O(cT)), r;
              },
              providedIn: "root",
            }));
          }
          return e;
        })(),
        cT = (() => {
          class e extends tv {
            constructor(t) {
              super(), (this._doc = t);
            }
            sanitize(t, i) {
              if (null == i) return null;
              switch (t) {
                case Ni.NONE:
                  return i;
                case Ni.HTML:
                  return Sr(i, "HTML")
                    ? wi(i)
                    : G1(this._doc, String(i)).toString();
                case Ni.STYLE:
                  return Sr(i, "Style") ? wi(i) : i;
                case Ni.SCRIPT:
                  if (Sr(i, "Script")) return wi(i);
                  throw new P(5200, !1);
                case Ni.URL:
                  return Sr(i, "URL") ? wi(i) : Oh(String(i));
                case Ni.RESOURCE_URL:
                  if (Sr(i, "ResourceURL")) return wi(i);
                  throw new P(5201, !1);
                default:
                  throw new P(5202, !1);
              }
            }
            bypassSecurityTrustHtml(t) {
              return (function GL(e) {
                return new HL(e);
              })(t);
            }
            bypassSecurityTrustStyle(t) {
              return (function YL(e) {
                return new jL(e);
              })(t);
            }
            bypassSecurityTrustScript(t) {
              return (function KL(e) {
                return new UL(e);
              })(t);
            }
            bypassSecurityTrustUrl(t) {
              return (function ZL(e) {
                return new WL(e);
              })(t);
            }
            bypassSecurityTrustResourceUrl(t) {
              return (function QL(e) {
                return new $L(e);
              })(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(Ht));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: function (i) {
                let r = null;
                return (
                  (r = i
                    ? new i()
                    : (function iU(e) {
                        return new cT(e.get(Ht));
                      })(O(ci))),
                  r
                );
              },
              providedIn: "root",
            }));
          }
          return e;
        })();
      const { isArray: rU } = Array,
        { getPrototypeOf: oU, prototype: sU, keys: aU } = Object;
      function dT(e) {
        if (1 === e.length) {
          const n = e[0];
          if (rU(n)) return { args: n, keys: null };
          if (
            (function lU(e) {
              return e && "object" == typeof e && oU(e) === sU;
            })(n)
          ) {
            const t = aU(n);
            return { args: t.map((i) => n[i]), keys: t };
          }
        }
        return { args: e, keys: null };
      }
      const { isArray: cU } = Array;
      function hT(e) {
        return Ae((n) =>
          (function uU(e, n) {
            return cU(n) ? e(...n) : e(n);
          })(e, n)
        );
      }
      function fT(e, n) {
        return e.reduce((t, i, r) => ((t[i] = n[r]), t), {});
      }
      let pT = (() => {
          class e {
            constructor(t, i) {
              (this._renderer = t),
                (this._elementRef = i),
                (this.onChange = (r) => {}),
                (this.onTouched = () => {});
            }
            setProperty(t, i) {
              this._renderer.setProperty(this._elementRef.nativeElement, t, i);
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            registerOnChange(t) {
              this.onChange = t;
            }
            setDisabledState(t) {
              this.setProperty("disabled", t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(oo), M(pn));
            });
            static #t = (this.ɵdir = re({ type: e }));
          }
          return e;
        })(),
        zs = (() => {
          class e extends pT {
            static #e = (this.ɵfac = (function () {
              let t;
              return function (r) {
                return (t || (t = vn(e)))(r || e);
              };
            })());
            static #t = (this.ɵdir = re({ type: e, features: [ft] }));
          }
          return e;
        })();
      const Pn = new Q("NgValueAccessor"),
        fU = { provide: Pn, useExisting: yt(() => Ff), multi: !0 },
        gU = new Q("CompositionEventMode");
      let Ff = (() => {
        class e extends pT {
          constructor(t, i, r) {
            super(t, i),
              (this._compositionMode = r),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function pU() {
                  const e = $o() ? $o().getUserAgent() : "";
                  return /android (\d+)/.test(e.toLowerCase());
                })());
          }
          writeValue(t) {
            this.setProperty("value", t ?? "");
          }
          _handleInput(t) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(t);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(t) {
            (this._composing = !1), this._compositionMode && this.onChange(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(oo), M(pn), M(gU, 8));
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (i, r) {
              1 & i &&
                F("input", function (s) {
                  return r._handleInput(s.target.value);
                })("blur", function () {
                  return r.onTouched();
                })("compositionstart", function () {
                  return r._compositionStart();
                })("compositionend", function (s) {
                  return r._compositionEnd(s.target.value);
                });
            },
            features: [it([fU]), ft],
          }));
        }
        return e;
      })();
      const zn = new Q("NgValidators"),
        Ko = new Q("NgAsyncValidators");
      function DT(e) {
        return null != e;
      }
      function ST(e) {
        return Qc(e) ? dn(e) : e;
      }
      function kT(e) {
        let n = {};
        return (
          e.forEach((t) => {
            n = null != t ? { ...n, ...t } : n;
          }),
          0 === Object.keys(n).length ? null : n
        );
      }
      function TT(e, n) {
        return n.map((t) => t(e));
      }
      function ET(e) {
        return e.map((n) =>
          (function _U(e) {
            return !e.validate;
          })(n)
            ? n
            : (t) => n.validate(t)
        );
      }
      function nv(e) {
        return null != e
          ? (function IT(e) {
              if (!e) return null;
              const n = e.filter(DT);
              return 0 == n.length
                ? null
                : function (t) {
                    return kT(TT(t, n));
                  };
            })(ET(e))
          : null;
      }
      function iv(e) {
        return null != e
          ? (function OT(e) {
              if (!e) return null;
              const n = e.filter(DT);
              return 0 == n.length
                ? null
                : function (t) {
                    return (function dU(...e) {
                      const n = Dw(e),
                        { args: t, keys: i } = dT(e),
                        r = new wt((o) => {
                          const { length: s } = t;
                          if (!s) return void o.complete();
                          const a = new Array(s);
                          let l = s,
                            c = s;
                          for (let u = 0; u < s; u++) {
                            let f = !1;
                            mi(t[u]).subscribe(
                              Tt(
                                o,
                                (g) => {
                                  f || ((f = !0), c--), (a[u] = g);
                                },
                                () => l--,
                                void 0,
                                () => {
                                  (!l || !f) &&
                                    (c || o.next(i ? fT(i, a) : a),
                                    o.complete());
                                }
                              )
                            );
                          }
                        });
                      return n ? r.pipe(hT(n)) : r;
                    })(TT(t, n).map(ST)).pipe(Ae(kT));
                  };
            })(ET(e))
          : null;
      }
      function AT(e, n) {
        return null === e ? [n] : Array.isArray(e) ? [...e, n] : [e, n];
      }
      function PT(e) {
        return e._rawValidators;
      }
      function FT(e) {
        return e._rawAsyncValidators;
      }
      function rv(e) {
        return e ? (Array.isArray(e) ? e : [e]) : [];
      }
      function Nf(e, n) {
        return Array.isArray(e) ? e.includes(n) : e === n;
      }
      function RT(e, n) {
        const t = rv(n);
        return (
          rv(e).forEach((r) => {
            Nf(t, r) || t.push(r);
          }),
          t
        );
      }
      function NT(e, n) {
        return rv(n).filter((t) => !Nf(e, t));
      }
      class LT {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(n) {
          (this._rawValidators = n || []),
            (this._composedValidatorFn = nv(this._rawValidators));
        }
        _setAsyncValidators(n) {
          (this._rawAsyncValidators = n || []),
            (this._composedAsyncValidatorFn = iv(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(n) {
          this._onDestroyCallbacks.push(n);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((n) => n()),
            (this._onDestroyCallbacks = []);
        }
        reset(n = void 0) {
          this.control && this.control.reset(n);
        }
        hasError(n, t) {
          return !!this.control && this.control.hasError(n, t);
        }
        getError(n, t) {
          return this.control ? this.control.getError(n, t) : null;
        }
      }
      class ti extends LT {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Zo extends LT {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class BT {
        constructor(n) {
          this._cd = n;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let _l = (() => {
          class e extends BT {
            constructor(t) {
              super(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(Zo, 2));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (i, r) {
                2 & i &&
                  Le("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                    "ng-pristine",
                    r.isPristine
                  )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                    "ng-invalid",
                    r.isInvalid
                  )("ng-pending", r.isPending);
              },
              features: [ft],
            }));
          }
          return e;
        })(),
        VT = (() => {
          class e extends BT {
            constructor(t) {
              super(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(ti, 10));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (i, r) {
                2 & i &&
                  Le("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)(
                    "ng-pristine",
                    r.isPristine
                  )("ng-dirty", r.isDirty)("ng-valid", r.isValid)(
                    "ng-invalid",
                    r.isInvalid
                  )("ng-pending", r.isPending)("ng-submitted", r.isSubmitted);
              },
              features: [ft],
            }));
          }
          return e;
        })();
      const fu = "VALID",
        Bf = "INVALID",
        yl = "PENDING",
        pu = "DISABLED";
      function av(e) {
        return (Vf(e) ? e.validators : e) || null;
      }
      function lv(e, n) {
        return (Vf(n) ? n.asyncValidators : e) || null;
      }
      function Vf(e) {
        return null != e && !Array.isArray(e) && "object" == typeof e;
      }
      function HT(e, n, t) {
        const i = e.controls;
        if (!(n ? Object.keys(i) : i).length) throw new P(1e3, "");
        if (!i[t]) throw new P(1001, "");
      }
      function jT(e, n, t) {
        e._forEachChild((i, r) => {
          if (void 0 === t[r]) throw new P(1002, "");
        });
      }
      class zf {
        constructor(n, t) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(n),
            this._assignAsyncValidators(t);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(n) {
          this._rawValidators = this._composedValidatorFn = n;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(n) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = n;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === fu;
        }
        get invalid() {
          return this.status === Bf;
        }
        get pending() {
          return this.status == yl;
        }
        get disabled() {
          return this.status === pu;
        }
        get enabled() {
          return this.status !== pu;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(n) {
          this._assignValidators(n);
        }
        setAsyncValidators(n) {
          this._assignAsyncValidators(n);
        }
        addValidators(n) {
          this.setValidators(RT(n, this._rawValidators));
        }
        addAsyncValidators(n) {
          this.setAsyncValidators(RT(n, this._rawAsyncValidators));
        }
        removeValidators(n) {
          this.setValidators(NT(n, this._rawValidators));
        }
        removeAsyncValidators(n) {
          this.setAsyncValidators(NT(n, this._rawAsyncValidators));
        }
        hasValidator(n) {
          return Nf(this._rawValidators, n);
        }
        hasAsyncValidator(n) {
          return Nf(this._rawAsyncValidators, n);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(n = {}) {
          (this.touched = !0),
            this._parent && !n.onlySelf && this._parent.markAsTouched(n);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((n) => n.markAllAsTouched());
        }
        markAsUntouched(n = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((t) => {
              t.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !n.onlySelf && this._parent._updateTouched(n);
        }
        markAsDirty(n = {}) {
          (this.pristine = !1),
            this._parent && !n.onlySelf && this._parent.markAsDirty(n);
        }
        markAsPristine(n = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((t) => {
              t.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !n.onlySelf && this._parent._updatePristine(n);
        }
        markAsPending(n = {}) {
          (this.status = yl),
            !1 !== n.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !n.onlySelf && this._parent.markAsPending(n);
        }
        disable(n = {}) {
          const t = this._parentMarkedDirty(n.onlySelf);
          (this.status = pu),
            (this.errors = null),
            this._forEachChild((i) => {
              i.disable({ ...n, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== n.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...n, skipPristineCheck: t }),
            this._onDisabledChange.forEach((i) => i(!0));
        }
        enable(n = {}) {
          const t = this._parentMarkedDirty(n.onlySelf);
          (this.status = fu),
            this._forEachChild((i) => {
              i.enable({ ...n, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: n.emitEvent,
            }),
            this._updateAncestors({ ...n, skipPristineCheck: t }),
            this._onDisabledChange.forEach((i) => i(!1));
        }
        _updateAncestors(n) {
          this._parent &&
            !n.onlySelf &&
            (this._parent.updateValueAndValidity(n),
            n.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(n) {
          this._parent = n;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(n = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === fu || this.status === yl) &&
                this._runAsyncValidator(n.emitEvent)),
            !1 !== n.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !n.onlySelf &&
              this._parent.updateValueAndValidity(n);
        }
        _updateTreeValidity(n = { emitEvent: !0 }) {
          this._forEachChild((t) => t._updateTreeValidity(n)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: n.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? pu : fu;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(n) {
          if (this.asyncValidator) {
            (this.status = yl), (this._hasOwnPendingAsyncValidator = !0);
            const t = ST(this.asyncValidator(this));
            this._asyncValidationSubscription = t.subscribe((i) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(i, { emitEvent: n });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(n, t = {}) {
          (this.errors = n), this._updateControlsErrors(!1 !== t.emitEvent);
        }
        get(n) {
          let t = n;
          return null == t ||
            (Array.isArray(t) || (t = t.split(".")), 0 === t.length)
            ? null
            : t.reduce((i, r) => i && i._find(r), this);
        }
        getError(n, t) {
          const i = t ? this.get(t) : this;
          return i && i.errors ? i.errors[n] : null;
        }
        hasError(n, t) {
          return !!this.getError(n, t);
        }
        get root() {
          let n = this;
          for (; n._parent; ) n = n._parent;
          return n;
        }
        _updateControlsErrors(n) {
          (this.status = this._calculateStatus()),
            n && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(n);
        }
        _initObservables() {
          (this.valueChanges = new le()), (this.statusChanges = new le());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? pu
            : this.errors
            ? Bf
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(yl)
            ? yl
            : this._anyControlsHaveStatus(Bf)
            ? Bf
            : fu;
        }
        _anyControlsHaveStatus(n) {
          return this._anyControls((t) => t.status === n);
        }
        _anyControlsDirty() {
          return this._anyControls((n) => n.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((n) => n.touched);
        }
        _updatePristine(n = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !n.onlySelf && this._parent._updatePristine(n);
        }
        _updateTouched(n = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !n.onlySelf && this._parent._updateTouched(n);
        }
        _registerOnCollectionChange(n) {
          this._onCollectionChange = n;
        }
        _setUpdateStrategy(n) {
          Vf(n) && null != n.updateOn && (this._updateOn = n.updateOn);
        }
        _parentMarkedDirty(n) {
          return (
            !n &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(n) {
          return null;
        }
        _assignValidators(n) {
          (this._rawValidators = Array.isArray(n) ? n.slice() : n),
            (this._composedValidatorFn = (function wU(e) {
              return Array.isArray(e) ? nv(e) : e || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(n) {
          (this._rawAsyncValidators = Array.isArray(n) ? n.slice() : n),
            (this._composedAsyncValidatorFn = (function CU(e) {
              return Array.isArray(e) ? iv(e) : e || null;
            })(this._rawAsyncValidators));
        }
      }
      class gu extends zf {
        constructor(n, t, i) {
          super(av(t), lv(i, t)),
            (this.controls = n),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(n, t) {
          return this.controls[n]
            ? this.controls[n]
            : ((this.controls[n] = t),
              t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange),
              t);
        }
        addControl(n, t, i = {}) {
          this.registerControl(n, t),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(n, t = {}) {
          this.controls[n] &&
            this.controls[n]._registerOnCollectionChange(() => {}),
            delete this.controls[n],
            this.updateValueAndValidity({ emitEvent: t.emitEvent }),
            this._onCollectionChange();
        }
        setControl(n, t, i = {}) {
          this.controls[n] &&
            this.controls[n]._registerOnCollectionChange(() => {}),
            delete this.controls[n],
            t && this.registerControl(n, t),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        contains(n) {
          return this.controls.hasOwnProperty(n) && this.controls[n].enabled;
        }
        setValue(n, t = {}) {
          jT(this, 0, n),
            Object.keys(n).forEach((i) => {
              HT(this, !0, i),
                this.controls[i].setValue(n[i], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(n, t = {}) {
          null != n &&
            (Object.keys(n).forEach((i) => {
              const r = this.controls[i];
              r && r.patchValue(n[i], { onlySelf: !0, emitEvent: t.emitEvent });
            }),
            this.updateValueAndValidity(t));
        }
        reset(n = {}, t = {}) {
          this._forEachChild((i, r) => {
            i.reset(n ? n[r] : null, { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (n, t, i) => ((n[i] = t.getRawValue()), n)
          );
        }
        _syncPendingControls() {
          let n = this._reduceChildren(
            !1,
            (t, i) => !!i._syncPendingControls() || t
          );
          return n && this.updateValueAndValidity({ onlySelf: !0 }), n;
        }
        _forEachChild(n) {
          Object.keys(this.controls).forEach((t) => {
            const i = this.controls[t];
            i && n(i, t);
          });
        }
        _setUpControls() {
          this._forEachChild((n) => {
            n.setParent(this),
              n._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(n) {
          for (const [t, i] of Object.entries(this.controls))
            if (this.contains(t) && n(i)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (t, i, r) => ((i.enabled || this.disabled) && (t[r] = i.value), t)
          );
        }
        _reduceChildren(n, t) {
          let i = n;
          return (
            this._forEachChild((r, o) => {
              i = t(i, r, o);
            }),
            i
          );
        }
        _allControlsDisabled() {
          for (const n of Object.keys(this.controls))
            if (this.controls[n].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(n) {
          return this.controls.hasOwnProperty(n) ? this.controls[n] : null;
        }
      }
      class UT extends gu {}
      const Hs = new Q("CallSetDisabledState", {
          providedIn: "root",
          factory: () => mu,
        }),
        mu = "always";
      function Hf(e, n) {
        return [...n.path, e];
      }
      function _u(e, n, t = mu) {
        cv(e, n),
          n.valueAccessor.writeValue(e.value),
          (e.disabled || "always" === t) &&
            n.valueAccessor.setDisabledState?.(e.disabled),
          (function MU(e, n) {
            n.valueAccessor.registerOnChange((t) => {
              (e._pendingValue = t),
                (e._pendingChange = !0),
                (e._pendingDirty = !0),
                "change" === e.updateOn && WT(e, n);
            });
          })(e, n),
          (function SU(e, n) {
            const t = (i, r) => {
              n.valueAccessor.writeValue(i), r && n.viewToModelUpdate(i);
            };
            e.registerOnChange(t),
              n._registerOnDestroy(() => {
                e._unregisterOnChange(t);
              });
          })(e, n),
          (function DU(e, n) {
            n.valueAccessor.registerOnTouched(() => {
              (e._pendingTouched = !0),
                "blur" === e.updateOn && e._pendingChange && WT(e, n),
                "submit" !== e.updateOn && e.markAsTouched();
            });
          })(e, n),
          (function xU(e, n) {
            if (n.valueAccessor.setDisabledState) {
              const t = (i) => {
                n.valueAccessor.setDisabledState(i);
              };
              e.registerOnDisabledChange(t),
                n._registerOnDestroy(() => {
                  e._unregisterOnDisabledChange(t);
                });
            }
          })(e, n);
      }
      function jf(e, n, t = !0) {
        const i = () => {};
        n.valueAccessor &&
          (n.valueAccessor.registerOnChange(i),
          n.valueAccessor.registerOnTouched(i)),
          Wf(e, n),
          e &&
            (n._invokeOnDestroyCallbacks(),
            e._registerOnCollectionChange(() => {}));
      }
      function Uf(e, n) {
        e.forEach((t) => {
          t.registerOnValidatorChange && t.registerOnValidatorChange(n);
        });
      }
      function cv(e, n) {
        const t = PT(e);
        null !== n.validator
          ? e.setValidators(AT(t, n.validator))
          : "function" == typeof t && e.setValidators([t]);
        const i = FT(e);
        null !== n.asyncValidator
          ? e.setAsyncValidators(AT(i, n.asyncValidator))
          : "function" == typeof i && e.setAsyncValidators([i]);
        const r = () => e.updateValueAndValidity();
        Uf(n._rawValidators, r), Uf(n._rawAsyncValidators, r);
      }
      function Wf(e, n) {
        let t = !1;
        if (null !== e) {
          if (null !== n.validator) {
            const r = PT(e);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((s) => s !== n.validator);
              o.length !== r.length && ((t = !0), e.setValidators(o));
            }
          }
          if (null !== n.asyncValidator) {
            const r = FT(e);
            if (Array.isArray(r) && r.length > 0) {
              const o = r.filter((s) => s !== n.asyncValidator);
              o.length !== r.length && ((t = !0), e.setAsyncValidators(o));
            }
          }
        }
        const i = () => {};
        return Uf(n._rawValidators, i), Uf(n._rawAsyncValidators, i), t;
      }
      function WT(e, n) {
        e._pendingDirty && e.markAsDirty(),
          e.setValue(e._pendingValue, { emitModelToViewChange: !1 }),
          n.viewToModelUpdate(e._pendingValue),
          (e._pendingChange = !1);
      }
      function dv(e, n) {
        if (!e.hasOwnProperty("model")) return !1;
        const t = e.model;
        return !!t.isFirstChange() || !Object.is(n, t.currentValue);
      }
      function hv(e, n) {
        if (!n) return null;
        let t, i, r;
        return (
          Array.isArray(n),
          n.forEach((o) => {
            o.constructor === Ff
              ? (t = o)
              : (function EU(e) {
                  return Object.getPrototypeOf(e.constructor) === zs;
                })(o)
              ? (i = o)
              : (r = o);
          }),
          r || i || t || null
        );
      }
      function GT(e, n) {
        const t = e.indexOf(n);
        t > -1 && e.splice(t, 1);
      }
      function YT(e) {
        return (
          "object" == typeof e &&
          null !== e &&
          2 === Object.keys(e).length &&
          "value" in e &&
          "disabled" in e
        );
      }
      const vu = class extends zf {
          constructor(n = null, t, i) {
            super(av(t), lv(i, t)),
              (this.defaultValue = null),
              (this._onChange = []),
              (this._pendingChange = !1),
              this._applyFormState(n),
              this._setUpdateStrategy(t),
              this._initObservables(),
              this.updateValueAndValidity({
                onlySelf: !0,
                emitEvent: !!this.asyncValidator,
              }),
              Vf(t) &&
                (t.nonNullable || t.initialValueIsDefault) &&
                (this.defaultValue = YT(n) ? n.value : n);
          }
          setValue(n, t = {}) {
            (this.value = this._pendingValue = n),
              this._onChange.length &&
                !1 !== t.emitModelToViewChange &&
                this._onChange.forEach((i) =>
                  i(this.value, !1 !== t.emitViewToModelChange)
                ),
              this.updateValueAndValidity(t);
          }
          patchValue(n, t = {}) {
            this.setValue(n, t);
          }
          reset(n = this.defaultValue, t = {}) {
            this._applyFormState(n),
              this.markAsPristine(t),
              this.markAsUntouched(t),
              this.setValue(this.value, t),
              (this._pendingChange = !1);
          }
          _updateValue() {}
          _anyControls(n) {
            return !1;
          }
          _allControlsDisabled() {
            return this.disabled;
          }
          registerOnChange(n) {
            this._onChange.push(n);
          }
          _unregisterOnChange(n) {
            GT(this._onChange, n);
          }
          registerOnDisabledChange(n) {
            this._onDisabledChange.push(n);
          }
          _unregisterOnDisabledChange(n) {
            GT(this._onDisabledChange, n);
          }
          _forEachChild(n) {}
          _syncPendingControls() {
            return !(
              "submit" !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange) ||
              (this.setValue(this._pendingValue, {
                onlySelf: !0,
                emitModelToViewChange: !1,
              }),
              0)
            );
          }
          _applyFormState(n) {
            YT(n)
              ? ((this.value = this._pendingValue = n.value),
                n.disabled
                  ? this.disable({ onlySelf: !0, emitEvent: !1 })
                  : this.enable({ onlySelf: !0, emitEvent: !1 }))
              : (this.value = this._pendingValue = n);
          }
        },
        FU = { provide: Zo, useExisting: yt(() => vl) },
        QT = (() => Promise.resolve())();
      let vl = (() => {
          class e extends Zo {
            constructor(t, i, r, o, s, a) {
              super(),
                (this._changeDetectorRef = s),
                (this.callSetDisabledState = a),
                (this.control = new vu()),
                (this._registered = !1),
                (this.name = ""),
                (this.update = new le()),
                (this._parent = t),
                this._setValidators(i),
                this._setAsyncValidators(r),
                (this.valueAccessor = hv(0, o));
            }
            ngOnChanges(t) {
              if ((this._checkForErrors(), !this._registered || "name" in t)) {
                if (
                  this._registered &&
                  (this._checkName(), this.formDirective)
                ) {
                  const i = t.name.previousValue;
                  this.formDirective.removeControl({
                    name: i,
                    path: this._getPath(i),
                  });
                }
                this._setUpControl();
              }
              "isDisabled" in t && this._updateDisabled(t),
                dv(t, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._getPath(this.name);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(t) {
              (this.viewModel = t), this.update.emit(t);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              _u(this.control, this, this.callSetDisabledState),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone();
            }
            _updateValue(t) {
              QT.then(() => {
                this.control.setValue(t, { emitViewToModelChange: !1 }),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _updateDisabled(t) {
              const i = t.isDisabled.currentValue,
                r = 0 !== i && gl(i);
              QT.then(() => {
                r && !this.control.disabled
                  ? this.control.disable()
                  : !r && this.control.disabled && this.control.enable(),
                  this._changeDetectorRef?.markForCheck();
              });
            }
            _getPath(t) {
              return this._parent ? Hf(t, this._parent) : [t];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(
                M(ti, 9),
                M(zn, 10),
                M(Ko, 10),
                M(Pn, 10),
                M(Wo, 8),
                M(Hs, 8)
              );
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                [
                  "",
                  "ngModel",
                  "",
                  3,
                  "formControlName",
                  "",
                  3,
                  "formControl",
                  "",
                ],
              ],
              inputs: {
                name: "name",
                isDisabled: ["disabled", "isDisabled"],
                model: ["ngModel", "model"],
                options: ["ngModelOptions", "options"],
              },
              outputs: { update: "ngModelChange" },
              exportAs: ["ngModel"],
              features: [it([FU]), ft, si],
            }));
          }
          return e;
        })(),
        XT = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            }));
          }
          return e;
        })();
      const RU = { provide: Pn, useExisting: yt(() => pv), multi: !0 };
      let pv = (() => {
          class e extends zs {
            writeValue(t) {
              this.setProperty("value", t ?? "");
            }
            registerOnChange(t) {
              this.onChange = (i) => {
                t("" == i ? null : parseFloat(i));
              };
            }
            static #e = (this.ɵfac = (function () {
              let t;
              return function (r) {
                return (t || (t = vn(e)))(r || e);
              };
            })());
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                ["input", "type", "number", "formControlName", ""],
                ["input", "type", "number", "formControl", ""],
                ["input", "type", "number", "ngModel", ""],
              ],
              hostBindings: function (i, r) {
                1 & i &&
                  F("input", function (s) {
                    return r.onChange(s.target.value);
                  })("blur", function () {
                    return r.onTouched();
                  });
              },
              features: [it([RU]), ft],
            }));
          }
          return e;
        })(),
        JT = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({}));
          }
          return e;
        })();
      const gv = new Q("NgModelWithFormControlWarning"),
        zU = { provide: ti, useExisting: yt(() => $f) };
      let $f = (() => {
        class e extends ti {
          constructor(t, i, r) {
            super(),
              (this.callSetDisabledState = r),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new le()),
              this._setValidators(t),
              this._setAsyncValidators(i);
          }
          ngOnChanges(t) {
            this._checkFormPresent(),
              t.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (Wf(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(t) {
            const i = this.form.get(t.path);
            return (
              _u(i, t, this.callSetDisabledState),
              i.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(t),
              i
            );
          }
          getControl(t) {
            return this.form.get(t.path);
          }
          removeControl(t) {
            jf(t.control || null, t, !1),
              (function IU(e, n) {
                const t = e.indexOf(n);
                t > -1 && e.splice(t, 1);
              })(this.directives, t);
          }
          addFormGroup(t) {
            this._setUpFormContainer(t);
          }
          removeFormGroup(t) {
            this._cleanUpFormContainer(t);
          }
          getFormGroup(t) {
            return this.form.get(t.path);
          }
          addFormArray(t) {
            this._setUpFormContainer(t);
          }
          removeFormArray(t) {
            this._cleanUpFormContainer(t);
          }
          getFormArray(t) {
            return this.form.get(t.path);
          }
          updateModel(t, i) {
            this.form.get(t.path).setValue(i);
          }
          onSubmit(t) {
            return (
              (this.submitted = !0),
              (function qT(e, n) {
                e._syncPendingControls(),
                  n.forEach((t) => {
                    const i = t.control;
                    "submit" === i.updateOn &&
                      i._pendingChange &&
                      (t.viewToModelUpdate(i._pendingValue),
                      (i._pendingChange = !1));
                  });
              })(this.form, this.directives),
              this.ngSubmit.emit(t),
              "dialog" === t?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(t = void 0) {
            this.form.reset(t), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((t) => {
              const i = t.control,
                r = this.form.get(t.path);
              i !== r &&
                (jf(i || null, t),
                ((e) => e instanceof vu)(r) &&
                  (_u(r, t, this.callSetDisabledState), (t.control = r)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(t) {
            const i = this.form.get(t.path);
            (function $T(e, n) {
              cv(e, n);
            })(i, t),
              i.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(t) {
            if (this.form) {
              const i = this.form.get(t.path);
              i &&
                (function kU(e, n) {
                  return Wf(e, n);
                })(i, t) &&
                i.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            cv(this.form, this), this._oldForm && Wf(this._oldForm, this);
          }
          _checkFormPresent() {}
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(zn, 10), M(Ko, 10), M(Hs, 8));
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (i, r) {
              1 & i &&
                F("submit", function (s) {
                  return r.onSubmit(s);
                })("reset", function () {
                  return r.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [it([zU]), ft, si],
          }));
        }
        return e;
      })();
      const UU = { provide: Zo, useExisting: yt(() => yv) };
      let yv = (() => {
        class e extends Zo {
          set isDisabled(t) {}
          static #e = (this._ngModelWarningSentOnce = !1);
          constructor(t, i, r, o, s) {
            super(),
              (this._ngModelWarningConfig = s),
              (this._added = !1),
              (this.name = null),
              (this.update = new le()),
              (this._ngModelWarningSent = !1),
              (this._parent = t),
              this._setValidators(i),
              this._setAsyncValidators(r),
              (this.valueAccessor = hv(0, o));
          }
          ngOnChanges(t) {
            this._added || this._setUpControl(),
              dv(t, this.viewModel) &&
                ((this.viewModel = this.model),
                this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(t) {
            (this.viewModel = t), this.update.emit(t);
          }
          get path() {
            return Hf(
              null == this.name ? this.name : this.name.toString(),
              this._parent
            );
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              (this._added = !0);
          }
          static #t = (this.ɵfac = function (i) {
            return new (i || e)(
              M(ti, 13),
              M(zn, 10),
              M(Ko, 10),
              M(Pn, 10),
              M(gv, 8)
            );
          });
          static #n = (this.ɵdir = re({
            type: e,
            selectors: [["", "formControlName", ""]],
            inputs: {
              name: ["formControlName", "name"],
              isDisabled: ["disabled", "isDisabled"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            features: [it([UU]), ft, si],
          }));
        }
        return e;
      })();
      const WU = { provide: Pn, useExisting: yt(() => vv), multi: !0 };
      function rE(e, n) {
        return null == e
          ? `${n}`
          : (n && "object" == typeof n && (n = "Object"),
            `${e}: ${n}`.slice(0, 50));
      }
      let vv = (() => {
          class e extends zs {
            constructor() {
              super(...arguments),
                (this._optionMap = new Map()),
                (this._idCounter = 0),
                (this._compareWith = Object.is);
            }
            set compareWith(t) {
              this._compareWith = t;
            }
            writeValue(t) {
              this.value = t;
              const r = rE(this._getOptionId(t), t);
              this.setProperty("value", r);
            }
            registerOnChange(t) {
              this.onChange = (i) => {
                (this.value = this._getOptionValue(i)), t(this.value);
              };
            }
            _registerOption() {
              return (this._idCounter++).toString();
            }
            _getOptionId(t) {
              for (const i of this._optionMap.keys())
                if (this._compareWith(this._optionMap.get(i), t)) return i;
              return null;
            }
            _getOptionValue(t) {
              const i = (function $U(e) {
                return e.split(":")[0];
              })(t);
              return this._optionMap.has(i) ? this._optionMap.get(i) : t;
            }
            static #e = (this.ɵfac = (function () {
              let t;
              return function (r) {
                return (t || (t = vn(e)))(r || e);
              };
            })());
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                ["select", "formControlName", "", 3, "multiple", ""],
                ["select", "formControl", "", 3, "multiple", ""],
                ["select", "ngModel", "", 3, "multiple", ""],
              ],
              hostBindings: function (i, r) {
                1 & i &&
                  F("change", function (s) {
                    return r.onChange(s.target.value);
                  })("blur", function () {
                    return r.onTouched();
                  });
              },
              inputs: { compareWith: "compareWith" },
              features: [it([WU]), ft],
            }));
          }
          return e;
        })(),
        oE = (() => {
          class e {
            constructor(t, i, r) {
              (this._element = t),
                (this._renderer = i),
                (this._select = r),
                this._select && (this.id = this._select._registerOption());
            }
            set ngValue(t) {
              null != this._select &&
                (this._select._optionMap.set(this.id, t),
                this._setElementValue(rE(this.id, t)),
                this._select.writeValue(this._select.value));
            }
            set value(t) {
              this._setElementValue(t),
                this._select && this._select.writeValue(this._select.value);
            }
            _setElementValue(t) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "value",
                t
              );
            }
            ngOnDestroy() {
              this._select &&
                (this._select._optionMap.delete(this.id),
                this._select.writeValue(this._select.value));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(pn), M(oo), M(vv, 9));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["option"]],
              inputs: { ngValue: "ngValue", value: "value" },
            }));
          }
          return e;
        })();
      const qU = { provide: Pn, useExisting: yt(() => bv), multi: !0 };
      function sE(e, n) {
        return null == e
          ? `${n}`
          : ("string" == typeof n && (n = `'${n}'`),
            n && "object" == typeof n && (n = "Object"),
            `${e}: ${n}`.slice(0, 50));
      }
      let bv = (() => {
          class e extends zs {
            constructor() {
              super(...arguments),
                (this._optionMap = new Map()),
                (this._idCounter = 0),
                (this._compareWith = Object.is);
            }
            set compareWith(t) {
              this._compareWith = t;
            }
            writeValue(t) {
              let i;
              if (((this.value = t), Array.isArray(t))) {
                const r = t.map((o) => this._getOptionId(o));
                i = (o, s) => {
                  o._setSelected(r.indexOf(s.toString()) > -1);
                };
              } else
                i = (r, o) => {
                  r._setSelected(!1);
                };
              this._optionMap.forEach(i);
            }
            registerOnChange(t) {
              this.onChange = (i) => {
                const r = [],
                  o = i.selectedOptions;
                if (void 0 !== o) {
                  const s = o;
                  for (let a = 0; a < s.length; a++) {
                    const c = this._getOptionValue(s[a].value);
                    r.push(c);
                  }
                } else {
                  const s = i.options;
                  for (let a = 0; a < s.length; a++) {
                    const l = s[a];
                    if (l.selected) {
                      const c = this._getOptionValue(l.value);
                      r.push(c);
                    }
                  }
                }
                (this.value = r), t(r);
              };
            }
            _registerOption(t) {
              const i = (this._idCounter++).toString();
              return this._optionMap.set(i, t), i;
            }
            _getOptionId(t) {
              for (const i of this._optionMap.keys())
                if (this._compareWith(this._optionMap.get(i)._value, t))
                  return i;
              return null;
            }
            _getOptionValue(t) {
              const i = (function GU(e) {
                return e.split(":")[0];
              })(t);
              return this._optionMap.has(i) ? this._optionMap.get(i)._value : t;
            }
            static #e = (this.ɵfac = (function () {
              let t;
              return function (r) {
                return (t || (t = vn(e)))(r || e);
              };
            })());
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [
                ["select", "multiple", "", "formControlName", ""],
                ["select", "multiple", "", "formControl", ""],
                ["select", "multiple", "", "ngModel", ""],
              ],
              hostBindings: function (i, r) {
                1 & i &&
                  F("change", function (s) {
                    return r.onChange(s.target);
                  })("blur", function () {
                    return r.onTouched();
                  });
              },
              inputs: { compareWith: "compareWith" },
              features: [it([qU]), ft],
            }));
          }
          return e;
        })(),
        aE = (() => {
          class e {
            constructor(t, i, r) {
              (this._element = t),
                (this._renderer = i),
                (this._select = r),
                this._select && (this.id = this._select._registerOption(this));
            }
            set ngValue(t) {
              null != this._select &&
                ((this._value = t),
                this._setElementValue(sE(this.id, t)),
                this._select.writeValue(this._select.value));
            }
            set value(t) {
              this._select
                ? ((this._value = t),
                  this._setElementValue(sE(this.id, t)),
                  this._select.writeValue(this._select.value))
                : this._setElementValue(t);
            }
            _setElementValue(t) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "value",
                t
              );
            }
            _setSelected(t) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "selected",
                t
              );
            }
            ngOnDestroy() {
              this._select &&
                (this._select._optionMap.delete(this.id),
                this._select.writeValue(this._select.value));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(pn), M(oo), M(bv, 9));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["option"]],
              inputs: { ngValue: "ngValue", value: "value" },
            }));
          }
          return e;
        })(),
        _E = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [JT] }));
          }
          return e;
        })();
      class yE extends zf {
        constructor(n, t, i) {
          super(av(t), lv(i, t)),
            (this.controls = n),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        at(n) {
          return this.controls[this._adjustIndex(n)];
        }
        push(n, t = {}) {
          this.controls.push(n),
            this._registerControl(n),
            this.updateValueAndValidity({ emitEvent: t.emitEvent }),
            this._onCollectionChange();
        }
        insert(n, t, i = {}) {
          this.controls.splice(n, 0, t),
            this._registerControl(t),
            this.updateValueAndValidity({ emitEvent: i.emitEvent });
        }
        removeAt(n, t = {}) {
          let i = this._adjustIndex(n);
          i < 0 && (i = 0),
            this.controls[i] &&
              this.controls[i]._registerOnCollectionChange(() => {}),
            this.controls.splice(i, 1),
            this.updateValueAndValidity({ emitEvent: t.emitEvent });
        }
        setControl(n, t, i = {}) {
          let r = this._adjustIndex(n);
          r < 0 && (r = 0),
            this.controls[r] &&
              this.controls[r]._registerOnCollectionChange(() => {}),
            this.controls.splice(r, 1),
            t && (this.controls.splice(r, 0, t), this._registerControl(t)),
            this.updateValueAndValidity({ emitEvent: i.emitEvent }),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(n, t = {}) {
          jT(this, 0, n),
            n.forEach((i, r) => {
              HT(this, !1, r),
                this.at(r).setValue(i, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(n, t = {}) {
          null != n &&
            (n.forEach((i, r) => {
              this.at(r) &&
                this.at(r).patchValue(i, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t));
        }
        reset(n = [], t = {}) {
          this._forEachChild((i, r) => {
            i.reset(n[r], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this.controls.map((n) => n.getRawValue());
        }
        clear(n = {}) {
          this.controls.length < 1 ||
            (this._forEachChild((t) => t._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity({ emitEvent: n.emitEvent }));
        }
        _adjustIndex(n) {
          return n < 0 ? n + this.length : n;
        }
        _syncPendingControls() {
          let n = this.controls.reduce(
            (t, i) => !!i._syncPendingControls() || t,
            !1
          );
          return n && this.updateValueAndValidity({ onlySelf: !0 }), n;
        }
        _forEachChild(n) {
          this.controls.forEach((t, i) => {
            n(t, i);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((n) => n.enabled || this.disabled)
            .map((n) => n.value);
        }
        _anyControls(n) {
          return this.controls.some((t) => t.enabled && n(t));
        }
        _setUpControls() {
          this._forEachChild((n) => this._registerControl(n));
        }
        _allControlsDisabled() {
          for (const n of this.controls) if (n.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(n) {
          n.setParent(this),
            n._registerOnCollectionChange(this._onCollectionChange);
        }
        _find(n) {
          return this.at(n) ?? null;
        }
      }
      function vE(e) {
        return (
          !!e &&
          (void 0 !== e.asyncValidators ||
            void 0 !== e.validators ||
            void 0 !== e.updateOn)
        );
      }
      let nW = (() => {
          class e {
            constructor() {
              this.useNonNullable = !1;
            }
            get nonNullable() {
              const t = new e();
              return (t.useNonNullable = !0), t;
            }
            group(t, i = null) {
              const r = this._reduceControls(t);
              let o = {};
              return (
                vE(i)
                  ? (o = i)
                  : null !== i &&
                    ((o.validators = i.validator),
                    (o.asyncValidators = i.asyncValidator)),
                new gu(r, o)
              );
            }
            record(t, i = null) {
              const r = this._reduceControls(t);
              return new UT(r, i);
            }
            control(t, i, r) {
              let o = {};
              return this.useNonNullable
                ? (vE(i)
                    ? (o = i)
                    : ((o.validators = i), (o.asyncValidators = r)),
                  new vu(t, { ...o, nonNullable: !0 }))
                : new vu(t, i, r);
            }
            array(t, i, r) {
              const o = t.map((s) => this._createControl(s));
              return new yE(o, i, r);
            }
            _reduceControls(t) {
              const i = {};
              return (
                Object.keys(t).forEach((r) => {
                  i[r] = this._createControl(t[r]);
                }),
                i
              );
            }
            _createControl(t) {
              return t instanceof vu || t instanceof zf
                ? t
                : Array.isArray(t)
                ? this.control(
                    t[0],
                    t.length > 1 ? t[1] : null,
                    t.length > 2 ? t[2] : null
                  )
                : this.control(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        iW = (() => {
          class e extends nW {
            group(t, i = null) {
              return super.group(t, i);
            }
            control(t, i, r) {
              return super.control(t, i, r);
            }
            array(t, i, r) {
              return super.array(t, i, r);
            }
            static #e = (this.ɵfac = (function () {
              let t;
              return function (r) {
                return (t || (t = vn(e)))(r || e);
              };
            })());
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        Cv = (() => {
          class e {
            static withConfig(t) {
              return {
                ngModule: e,
                providers: [
                  { provide: Hs, useValue: t.callSetDisabledState ?? mu },
                ],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [_E] }));
          }
          return e;
        })(),
        rW = (() => {
          class e {
            static withConfig(t) {
              return {
                ngModule: e,
                providers: [
                  {
                    provide: gv,
                    useValue: t.warnOnNgModelWithFormControl ?? "always",
                  },
                  { provide: Hs, useValue: t.callSetDisabledState ?? mu },
                ],
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [_E] }));
          }
          return e;
        })();
      class bE {}
      class oW {}
      const mo = "*";
      function bl(e, n) {
        return { type: 7, name: e, definitions: n, options: {} };
      }
      function zi(e, n = null) {
        return { type: 4, styles: n, timings: e };
      }
      function wE(e, n = null) {
        return { type: 2, steps: e, options: n };
      }
      function Cn(e) {
        return { type: 6, styles: e, offset: null };
      }
      function qf(e, n, t) {
        return { type: 0, name: e, styles: n, options: t };
      }
      function Fr(e, n, t = null) {
        return { type: 1, expr: e, animation: n, options: t };
      }
      class bu {
        constructor(n = 0, t = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = n + t);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          queueMicrotask(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((n) => n()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(n) {
          this._position = this.totalTime ? n * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(n) {
          const t = "start" == n ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
      }
      class CE {
        constructor(n) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = n);
          let t = 0,
            i = 0,
            r = 0;
          const o = this.players.length;
          0 == o
            ? queueMicrotask(() => this._onFinish())
            : this.players.forEach((s) => {
                s.onDone(() => {
                  ++t == o && this._onFinish();
                }),
                  s.onDestroy(() => {
                    ++i == o && this._onDestroy();
                  }),
                  s.onStart(() => {
                    ++r == o && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (s, a) => Math.max(s, a.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((n) => n.init());
        }
        onStart(n) {
          this._onStartFns.push(n);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((n) => n()),
            (this._onStartFns = []));
        }
        onDone(n) {
          this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((n) => n.play());
        }
        pause() {
          this.players.forEach((n) => n.pause());
        }
        restart() {
          this.players.forEach((n) => n.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((n) => n.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((n) => n.destroy()),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((n) => n.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(n) {
          const t = n * this.totalTime;
          this.players.forEach((i) => {
            const r = i.totalTime ? Math.min(1, t / i.totalTime) : 1;
            i.setPosition(r);
          });
        }
        getPosition() {
          const n = this.players.reduce(
            (t, i) => (null === t || i.totalTime > t.totalTime ? i : t),
            null
          );
          return null != n ? n.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((n) => {
            n.beforeDestroy && n.beforeDestroy();
          });
        }
        triggerCallback(n) {
          const t = "start" == n ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
      }
      function xE(e) {
        return new P(3e3, !1);
      }
      function Qo(e) {
        switch (e.length) {
          case 0:
            return new bu();
          case 1:
            return e[0];
          default:
            return new CE(e);
        }
      }
      function ME(e, n, t = new Map(), i = new Map()) {
        const r = [],
          o = [];
        let s = -1,
          a = null;
        if (
          (n.forEach((l) => {
            const c = l.get("offset"),
              u = c == s,
              f = (u && a) || new Map();
            l.forEach((g, m) => {
              let _ = m,
                y = g;
              if ("offset" !== m)
                switch (((_ = e.normalizePropertyName(_, r)), y)) {
                  case "!":
                    y = t.get(m);
                    break;
                  case mo:
                    y = i.get(m);
                    break;
                  default:
                    y = e.normalizeStyleValue(m, _, y, r);
                }
              f.set(_, y);
            }),
              u || o.push(f),
              (a = f),
              (s = c);
          }),
          r.length)
        )
          throw (function TW(e) {
            return new P(3502, !1);
          })();
        return o;
      }
      function Mv(e, n, t, i) {
        switch (n) {
          case "start":
            e.onStart(() => i(t && Dv(t, "start", e)));
            break;
          case "done":
            e.onDone(() => i(t && Dv(t, "done", e)));
            break;
          case "destroy":
            e.onDestroy(() => i(t && Dv(t, "destroy", e)));
        }
      }
      function Dv(e, n, t) {
        const o = Sv(
            e.element,
            e.triggerName,
            e.fromState,
            e.toState,
            n || e.phaseName,
            t.totalTime ?? e.totalTime,
            !!t.disabled
          ),
          s = e._data;
        return null != s && (o._data = s), o;
      }
      function Sv(e, n, t, i, r = "", o = 0, s) {
        return {
          element: e,
          triggerName: n,
          fromState: t,
          toState: i,
          phaseName: r,
          totalTime: o,
          disabled: !!s,
        };
      }
      function Si(e, n, t) {
        let i = e.get(n);
        return i || e.set(n, (i = t)), i;
      }
      function DE(e) {
        const n = e.indexOf(":");
        return [e.substring(1, n), e.slice(n + 1)];
      }
      const zW = (() =>
        typeof document > "u" ? null : document.documentElement)();
      function kv(e) {
        const n = e.parentNode || e.host || null;
        return n === zW ? null : n;
      }
      let Us = null,
        SE = !1;
      function kE(e, n) {
        for (; n; ) {
          if (n === e) return !0;
          n = kv(n);
        }
        return !1;
      }
      function TE(e, n, t) {
        if (t) return Array.from(e.querySelectorAll(n));
        const i = e.querySelector(n);
        return i ? [i] : [];
      }
      let EE = (() => {
          class e {
            validateStyleProperty(t) {
              return (function jW(e) {
                Us ||
                  ((Us =
                    (function UW() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (SE = !!Us.style && "WebkitAppearance" in Us.style));
                let n = !0;
                return (
                  Us.style &&
                    !(function HW(e) {
                      return "ebkit" == e.substring(1, 6);
                    })(e) &&
                    ((n = e in Us.style),
                    !n &&
                      SE &&
                      (n =
                        "Webkit" + e.charAt(0).toUpperCase() + e.slice(1) in
                        Us.style)),
                  n
                );
              })(t);
            }
            matchesElement(t, i) {
              return !1;
            }
            containsElement(t, i) {
              return kE(t, i);
            }
            getParentElement(t) {
              return kv(t);
            }
            query(t, i, r) {
              return TE(t, i, r);
            }
            computeStyle(t, i, r) {
              return r || "";
            }
            animate(t, i, r, o, s, a = [], l) {
              return new bu(r, o);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
          }
          return e;
        })(),
        Tv = (() => {
          class e {
            static #e = (this.NOOP = new EE());
          }
          return e;
        })();
      const WW = 1e3,
        Ev = "ng-enter",
        Gf = "ng-leave",
        Yf = "ng-trigger",
        Kf = ".ng-trigger",
        OE = "ng-animating",
        Iv = ".ng-animating";
      function _o(e) {
        if ("number" == typeof e) return e;
        const n = e.match(/^(-?[\.\d]+)(m?s)/);
        return !n || n.length < 2 ? 0 : Ov(parseFloat(n[1]), n[2]);
      }
      function Ov(e, n) {
        return "s" === n ? e * WW : e;
      }
      function Zf(e, n, t) {
        return e.hasOwnProperty("duration")
          ? e
          : (function qW(e, n, t) {
              let r,
                o = 0,
                s = "";
              if ("string" == typeof e) {
                const a = e.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === a)
                  return n.push(xE()), { duration: 0, delay: 0, easing: "" };
                r = Ov(parseFloat(a[1]), a[2]);
                const l = a[3];
                null != l && (o = Ov(parseFloat(l), a[4]));
                const c = a[5];
                c && (s = c);
              } else r = e;
              if (!t) {
                let a = !1,
                  l = n.length;
                r < 0 &&
                  (n.push(
                    (function sW() {
                      return new P(3100, !1);
                    })()
                  ),
                  (a = !0)),
                  o < 0 &&
                    (n.push(
                      (function aW() {
                        return new P(3101, !1);
                      })()
                    ),
                    (a = !0)),
                  a && n.splice(l, 0, xE());
              }
              return { duration: r, delay: o, easing: s };
            })(e, n, t);
      }
      function wu(e, n = {}) {
        return (
          Object.keys(e).forEach((t) => {
            n[t] = e[t];
          }),
          n
        );
      }
      function AE(e) {
        const n = new Map();
        return (
          Object.keys(e).forEach((t) => {
            n.set(t, e[t]);
          }),
          n
        );
      }
      function Xo(e, n = new Map(), t) {
        if (t) for (let [i, r] of t) n.set(i, r);
        for (let [i, r] of e) n.set(i, r);
        return n;
      }
      function Rr(e, n, t) {
        n.forEach((i, r) => {
          const o = Pv(r);
          t && !t.has(r) && t.set(r, e.style[o]), (e.style[o] = i);
        });
      }
      function Ws(e, n) {
        n.forEach((t, i) => {
          const r = Pv(i);
          e.style[r] = "";
        });
      }
      function Cu(e) {
        return Array.isArray(e) ? (1 == e.length ? e[0] : wE(e)) : e;
      }
      const Av = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function FE(e) {
        let n = [];
        if ("string" == typeof e) {
          let t;
          for (; (t = Av.exec(e)); ) n.push(t[1]);
          Av.lastIndex = 0;
        }
        return n;
      }
      function xu(e, n, t) {
        const i = e.toString(),
          r = i.replace(Av, (o, s) => {
            let a = n[s];
            return (
              null == a &&
                (t.push(
                  (function cW(e) {
                    return new P(3003, !1);
                  })()
                ),
                (a = "")),
              a.toString()
            );
          });
        return r == i ? e : r;
      }
      function Qf(e) {
        const n = [];
        let t = e.next();
        for (; !t.done; ) n.push(t.value), (t = e.next());
        return n;
      }
      const KW = /-+([a-z0-9])/g;
      function Pv(e) {
        return e.replace(KW, (...n) => n[1].toUpperCase());
      }
      function ki(e, n, t) {
        switch (n.type) {
          case 7:
            return e.visitTrigger(n, t);
          case 0:
            return e.visitState(n, t);
          case 1:
            return e.visitTransition(n, t);
          case 2:
            return e.visitSequence(n, t);
          case 3:
            return e.visitGroup(n, t);
          case 4:
            return e.visitAnimate(n, t);
          case 5:
            return e.visitKeyframes(n, t);
          case 6:
            return e.visitStyle(n, t);
          case 8:
            return e.visitReference(n, t);
          case 9:
            return e.visitAnimateChild(n, t);
          case 10:
            return e.visitAnimateRef(n, t);
          case 11:
            return e.visitQuery(n, t);
          case 12:
            return e.visitStagger(n, t);
          default:
            throw (function uW(e) {
              return new P(3004, !1);
            })();
        }
      }
      function RE(e, n) {
        return window.getComputedStyle(e)[n];
      }
      const Xf = "*";
      function XW(e, n) {
        const t = [];
        return (
          "string" == typeof e
            ? e.split(/\s*,\s*/).forEach((i) =>
                (function JW(e, n, t) {
                  if (":" == e[0]) {
                    const l = (function e8(e, n) {
                      switch (e) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (t, i) => parseFloat(i) > parseFloat(t);
                        case ":decrement":
                          return (t, i) => parseFloat(i) < parseFloat(t);
                        default:
                          return (
                            n.push(
                              (function MW(e) {
                                return new P(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(e, t);
                    if ("function" == typeof l) return void n.push(l);
                    e = l;
                  }
                  const i = e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      t.push(
                        (function xW(e) {
                          return new P(3015, !1);
                        })()
                      ),
                      n
                    );
                  const r = i[1],
                    o = i[2],
                    s = i[3];
                  n.push(NE(r, s));
                  "<" == o[0] && !(r == Xf && s == Xf) && n.push(NE(s, r));
                })(i, t, n)
              )
            : t.push(e),
          t
        );
      }
      const Jf = new Set(["true", "1"]),
        ep = new Set(["false", "0"]);
      function NE(e, n) {
        const t = Jf.has(e) || ep.has(e),
          i = Jf.has(n) || ep.has(n);
        return (r, o) => {
          let s = e == Xf || e == r,
            a = n == Xf || n == o;
          return (
            !s && t && "boolean" == typeof r && (s = r ? Jf.has(e) : ep.has(e)),
            !a && i && "boolean" == typeof o && (a = o ? Jf.has(n) : ep.has(n)),
            s && a
          );
        };
      }
      const t8 = new RegExp("s*:selfs*,?", "g");
      function Fv(e, n, t, i) {
        return new n8(e).build(n, t, i);
      }
      class n8 {
        constructor(n) {
          this._driver = n;
        }
        build(n, t, i) {
          const r = new o8(t);
          return this._resetContextStyleTimingState(r), ki(this, Cu(n), r);
        }
        _resetContextStyleTimingState(n) {
          (n.currentQuerySelector = ""),
            (n.collectedStyles = new Map()),
            n.collectedStyles.set("", new Map()),
            (n.currentTime = 0);
        }
        visitTrigger(n, t) {
          let i = (t.queryCount = 0),
            r = (t.depCount = 0);
          const o = [],
            s = [];
          return (
            "@" == n.name.charAt(0) &&
              t.errors.push(
                (function hW() {
                  return new P(3006, !1);
                })()
              ),
            n.definitions.forEach((a) => {
              if ((this._resetContextStyleTimingState(t), 0 == a.type)) {
                const l = a,
                  c = l.name;
                c
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((u) => {
                    (l.name = u), o.push(this.visitState(l, t));
                  }),
                  (l.name = c);
              } else if (1 == a.type) {
                const l = this.visitTransition(a, t);
                (i += l.queryCount), (r += l.depCount), s.push(l);
              } else
                t.errors.push(
                  (function fW() {
                    return new P(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: n.name,
              states: o,
              transitions: s,
              queryCount: i,
              depCount: r,
              options: null,
            }
          );
        }
        visitState(n, t) {
          const i = this.visitStyle(n.styles, t),
            r = (n.options && n.options.params) || null;
          if (i.containsDynamicStyles) {
            const o = new Set(),
              s = r || {};
            i.styles.forEach((a) => {
              a instanceof Map &&
                a.forEach((l) => {
                  FE(l).forEach((c) => {
                    s.hasOwnProperty(c) || o.add(c);
                  });
                });
            }),
              o.size &&
                (Qf(o.values()),
                t.errors.push(
                  (function pW(e, n) {
                    return new P(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: n.name,
            style: i,
            options: r ? { params: r } : null,
          };
        }
        visitTransition(n, t) {
          (t.queryCount = 0), (t.depCount = 0);
          const i = ki(this, Cu(n.animation), t);
          return {
            type: 1,
            matchers: XW(n.expr, t.errors),
            animation: i,
            queryCount: t.queryCount,
            depCount: t.depCount,
            options: $s(n.options),
          };
        }
        visitSequence(n, t) {
          return {
            type: 2,
            steps: n.steps.map((i) => ki(this, i, t)),
            options: $s(n.options),
          };
        }
        visitGroup(n, t) {
          const i = t.currentTime;
          let r = 0;
          const o = n.steps.map((s) => {
            t.currentTime = i;
            const a = ki(this, s, t);
            return (r = Math.max(r, t.currentTime)), a;
          });
          return (
            (t.currentTime = r), { type: 3, steps: o, options: $s(n.options) }
          );
        }
        visitAnimate(n, t) {
          const i = (function a8(e, n) {
            if (e.hasOwnProperty("duration")) return e;
            if ("number" == typeof e) return Rv(Zf(e, n).duration, 0, "");
            const t = e;
            if (
              t
                .split(/\s+/)
                .some((o) => "{" == o.charAt(0) && "{" == o.charAt(1))
            ) {
              const o = Rv(0, 0, "");
              return (o.dynamic = !0), (o.strValue = t), o;
            }
            const r = Zf(t, n);
            return Rv(r.duration, r.delay, r.easing);
          })(n.timings, t.errors);
          t.currentAnimateTimings = i;
          let r,
            o = n.styles ? n.styles : Cn({});
          if (5 == o.type) r = this.visitKeyframes(o, t);
          else {
            let s = n.styles,
              a = !1;
            if (!s) {
              a = !0;
              const c = {};
              i.easing && (c.easing = i.easing), (s = Cn(c));
            }
            t.currentTime += i.duration + i.delay;
            const l = this.visitStyle(s, t);
            (l.isEmptyStep = a), (r = l);
          }
          return (
            (t.currentAnimateTimings = null),
            { type: 4, timings: i, style: r, options: null }
          );
        }
        visitStyle(n, t) {
          const i = this._makeStyleAst(n, t);
          return this._validateStyleAst(i, t), i;
        }
        _makeStyleAst(n, t) {
          const i = [],
            r = Array.isArray(n.styles) ? n.styles : [n.styles];
          for (let a of r)
            "string" == typeof a
              ? a === mo
                ? i.push(a)
                : t.errors.push(new P(3002, !1))
              : i.push(AE(a));
          let o = !1,
            s = null;
          return (
            i.forEach((a) => {
              if (
                a instanceof Map &&
                (a.has("easing") && ((s = a.get("easing")), a.delete("easing")),
                !o)
              )
                for (let l of a.values())
                  if (l.toString().indexOf("{{") >= 0) {
                    o = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: i,
              easing: s,
              offset: n.offset,
              containsDynamicStyles: o,
              options: null,
            }
          );
        }
        _validateStyleAst(n, t) {
          const i = t.currentAnimateTimings;
          let r = t.currentTime,
            o = t.currentTime;
          i && o > 0 && (o -= i.duration + i.delay),
            n.styles.forEach((s) => {
              "string" != typeof s &&
                s.forEach((a, l) => {
                  const c = t.collectedStyles.get(t.currentQuerySelector),
                    u = c.get(l);
                  let f = !0;
                  u &&
                    (o != r &&
                      o >= u.startTime &&
                      r <= u.endTime &&
                      (t.errors.push(
                        (function mW(e, n, t, i, r) {
                          return new P(3010, !1);
                        })()
                      ),
                      (f = !1)),
                    (o = u.startTime)),
                    f && c.set(l, { startTime: o, endTime: r }),
                    t.options &&
                      (function YW(e, n, t) {
                        const i = n.params || {},
                          r = FE(e);
                        r.length &&
                          r.forEach((o) => {
                            i.hasOwnProperty(o) ||
                              t.push(
                                (function lW(e) {
                                  return new P(3001, !1);
                                })()
                              );
                          });
                      })(a, t.options, t.errors);
                });
            });
        }
        visitKeyframes(n, t) {
          const i = { type: 5, styles: [], options: null };
          if (!t.currentAnimateTimings)
            return (
              t.errors.push(
                (function _W() {
                  return new P(3011, !1);
                })()
              ),
              i
            );
          let o = 0;
          const s = [];
          let a = !1,
            l = !1,
            c = 0;
          const u = n.steps.map((w) => {
            const C = this._makeStyleAst(w, t);
            let D =
                null != C.offset
                  ? C.offset
                  : (function s8(e) {
                      if ("string" == typeof e) return null;
                      let n = null;
                      if (Array.isArray(e))
                        e.forEach((t) => {
                          if (t instanceof Map && t.has("offset")) {
                            const i = t;
                            (n = parseFloat(i.get("offset"))),
                              i.delete("offset");
                          }
                        });
                      else if (e instanceof Map && e.has("offset")) {
                        const t = e;
                        (n = parseFloat(t.get("offset"))), t.delete("offset");
                      }
                      return n;
                    })(C.styles),
              S = 0;
            return (
              null != D && (o++, (S = C.offset = D)),
              (l = l || S < 0 || S > 1),
              (a = a || S < c),
              (c = S),
              s.push(S),
              C
            );
          });
          l &&
            t.errors.push(
              (function yW() {
                return new P(3012, !1);
              })()
            ),
            a &&
              t.errors.push(
                (function vW() {
                  return new P(3200, !1);
                })()
              );
          const f = n.steps.length;
          let g = 0;
          o > 0 && o < f
            ? t.errors.push(
                (function bW() {
                  return new P(3202, !1);
                })()
              )
            : 0 == o && (g = 1 / (f - 1));
          const m = f - 1,
            _ = t.currentTime,
            y = t.currentAnimateTimings,
            v = y.duration;
          return (
            u.forEach((w, C) => {
              const D = g > 0 ? (C == m ? 1 : g * C) : s[C],
                S = D * v;
              (t.currentTime = _ + y.delay + S),
                (y.duration = S),
                this._validateStyleAst(w, t),
                (w.offset = D),
                i.styles.push(w);
            }),
            i
          );
        }
        visitReference(n, t) {
          return {
            type: 8,
            animation: ki(this, Cu(n.animation), t),
            options: $s(n.options),
          };
        }
        visitAnimateChild(n, t) {
          return t.depCount++, { type: 9, options: $s(n.options) };
        }
        visitAnimateRef(n, t) {
          return {
            type: 10,
            animation: this.visitReference(n.animation, t),
            options: $s(n.options),
          };
        }
        visitQuery(n, t) {
          const i = t.currentQuerySelector,
            r = n.options || {};
          t.queryCount++, (t.currentQuery = n);
          const [o, s] = (function i8(e) {
            const n = !!e.split(/\s*,\s*/).find((t) => ":self" == t);
            return (
              n && (e = e.replace(t8, "")),
              (e = e
                .replace(/@\*/g, Kf)
                .replace(/@\w+/g, (t) => Kf + "-" + t.slice(1))
                .replace(/:animating/g, Iv)),
              [e, n]
            );
          })(n.selector);
          (t.currentQuerySelector = i.length ? i + " " + o : o),
            Si(t.collectedStyles, t.currentQuerySelector, new Map());
          const a = ki(this, Cu(n.animation), t);
          return (
            (t.currentQuery = null),
            (t.currentQuerySelector = i),
            {
              type: 11,
              selector: o,
              limit: r.limit || 0,
              optional: !!r.optional,
              includeSelf: s,
              animation: a,
              originalSelector: n.selector,
              options: $s(n.options),
            }
          );
        }
        visitStagger(n, t) {
          t.currentQuery ||
            t.errors.push(
              (function wW() {
                return new P(3013, !1);
              })()
            );
          const i =
            "full" === n.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Zf(n.timings, t.errors, !0);
          return {
            type: 12,
            animation: ki(this, Cu(n.animation), t),
            timings: i,
            options: null,
          };
        }
      }
      class o8 {
        constructor(n) {
          (this.errors = n),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function $s(e) {
        return (
          e
            ? (e = wu(e)).params &&
              (e.params = (function r8(e) {
                return e ? wu(e) : null;
              })(e.params))
            : (e = {}),
          e
        );
      }
      function Rv(e, n, t) {
        return { duration: e, delay: n, easing: t };
      }
      function Nv(e, n, t, i, r, o, s = null, a = !1) {
        return {
          type: 1,
          element: e,
          keyframes: n,
          preStyleProps: t,
          postStyleProps: i,
          duration: r,
          delay: o,
          totalTime: r + o,
          easing: s,
          subTimeline: a,
        };
      }
      class tp {
        constructor() {
          this._map = new Map();
        }
        get(n) {
          return this._map.get(n) || [];
        }
        append(n, t) {
          let i = this._map.get(n);
          i || this._map.set(n, (i = [])), i.push(...t);
        }
        has(n) {
          return this._map.has(n);
        }
        clear() {
          this._map.clear();
        }
      }
      const u8 = new RegExp(":enter", "g"),
        h8 = new RegExp(":leave", "g");
      function Lv(e, n, t, i, r, o = new Map(), s = new Map(), a, l, c = []) {
        return new f8().buildKeyframes(e, n, t, i, r, o, s, a, l, c);
      }
      class f8 {
        buildKeyframes(n, t, i, r, o, s, a, l, c, u = []) {
          c = c || new tp();
          const f = new Bv(n, t, c, r, o, u, []);
          f.options = l;
          const g = l.delay ? _o(l.delay) : 0;
          f.currentTimeline.delayNextStep(g),
            f.currentTimeline.setStyles([s], null, f.errors, l),
            ki(this, i, f);
          const m = f.timelines.filter((_) => _.containsAnimation());
          if (m.length && a.size) {
            let _;
            for (let y = m.length - 1; y >= 0; y--) {
              const v = m[y];
              if (v.element === t) {
                _ = v;
                break;
              }
            }
            _ &&
              !_.allowOnlyTimelineStyles() &&
              _.setStyles([a], null, f.errors, l);
          }
          return m.length
            ? m.map((_) => _.buildKeyframes())
            : [Nv(t, [], [], [], 0, g, "", !1)];
        }
        visitTrigger(n, t) {}
        visitState(n, t) {}
        visitTransition(n, t) {}
        visitAnimateChild(n, t) {
          const i = t.subInstructions.get(t.element);
          if (i) {
            const r = t.createSubContext(n.options),
              o = t.currentTimeline.currentTime,
              s = this._visitSubInstructions(i, r, r.options);
            o != s && t.transformIntoNewTimeline(s);
          }
          t.previousNode = n;
        }
        visitAnimateRef(n, t) {
          const i = t.createSubContext(n.options);
          i.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [n.options, n.animation.options],
              t,
              i
            ),
            this.visitReference(n.animation, i),
            t.transformIntoNewTimeline(i.currentTimeline.currentTime),
            (t.previousNode = n);
        }
        _applyAnimationRefDelays(n, t, i) {
          for (const r of n) {
            const o = r?.delay;
            if (o) {
              const s =
                "number" == typeof o ? o : _o(xu(o, r?.params ?? {}, t.errors));
              i.delayNextStep(s);
            }
          }
        }
        _visitSubInstructions(n, t, i) {
          let o = t.currentTimeline.currentTime;
          const s = null != i.duration ? _o(i.duration) : null,
            a = null != i.delay ? _o(i.delay) : null;
          return (
            0 !== s &&
              n.forEach((l) => {
                const c = t.appendInstructionToTimeline(l, s, a);
                o = Math.max(o, c.duration + c.delay);
              }),
            o
          );
        }
        visitReference(n, t) {
          t.updateOptions(n.options, !0),
            ki(this, n.animation, t),
            (t.previousNode = n);
        }
        visitSequence(n, t) {
          const i = t.subContextCount;
          let r = t;
          const o = n.options;
          if (
            o &&
            (o.params || o.delay) &&
            ((r = t.createSubContext(o)),
            r.transformIntoNewTimeline(),
            null != o.delay)
          ) {
            6 == r.previousNode.type &&
              (r.currentTimeline.snapshotCurrentStyles(),
              (r.previousNode = np));
            const s = _o(o.delay);
            r.delayNextStep(s);
          }
          n.steps.length &&
            (n.steps.forEach((s) => ki(this, s, r)),
            r.currentTimeline.applyStylesToKeyframe(),
            r.subContextCount > i && r.transformIntoNewTimeline()),
            (t.previousNode = n);
        }
        visitGroup(n, t) {
          const i = [];
          let r = t.currentTimeline.currentTime;
          const o = n.options && n.options.delay ? _o(n.options.delay) : 0;
          n.steps.forEach((s) => {
            const a = t.createSubContext(n.options);
            o && a.delayNextStep(o),
              ki(this, s, a),
              (r = Math.max(r, a.currentTimeline.currentTime)),
              i.push(a.currentTimeline);
          }),
            i.forEach((s) => t.currentTimeline.mergeTimelineCollectedStyles(s)),
            t.transformIntoNewTimeline(r),
            (t.previousNode = n);
        }
        _visitTiming(n, t) {
          if (n.dynamic) {
            const i = n.strValue;
            return Zf(t.params ? xu(i, t.params, t.errors) : i, t.errors);
          }
          return { duration: n.duration, delay: n.delay, easing: n.easing };
        }
        visitAnimate(n, t) {
          const i = (t.currentAnimateTimings = this._visitTiming(n.timings, t)),
            r = t.currentTimeline;
          i.delay && (t.incrementTime(i.delay), r.snapshotCurrentStyles());
          const o = n.style;
          5 == o.type
            ? this.visitKeyframes(o, t)
            : (t.incrementTime(i.duration),
              this.visitStyle(o, t),
              r.applyStylesToKeyframe()),
            (t.currentAnimateTimings = null),
            (t.previousNode = n);
        }
        visitStyle(n, t) {
          const i = t.currentTimeline,
            r = t.currentAnimateTimings;
          !r && i.hasCurrentStyleProperties() && i.forwardFrame();
          const o = (r && r.easing) || n.easing;
          n.isEmptyStep
            ? i.applyEmptyStep(o)
            : i.setStyles(n.styles, o, t.errors, t.options),
            (t.previousNode = n);
        }
        visitKeyframes(n, t) {
          const i = t.currentAnimateTimings,
            r = t.currentTimeline.duration,
            o = i.duration,
            a = t.createSubContext().currentTimeline;
          (a.easing = i.easing),
            n.styles.forEach((l) => {
              a.forwardTime((l.offset || 0) * o),
                a.setStyles(l.styles, l.easing, t.errors, t.options),
                a.applyStylesToKeyframe();
            }),
            t.currentTimeline.mergeTimelineCollectedStyles(a),
            t.transformIntoNewTimeline(r + o),
            (t.previousNode = n);
        }
        visitQuery(n, t) {
          const i = t.currentTimeline.currentTime,
            r = n.options || {},
            o = r.delay ? _o(r.delay) : 0;
          o &&
            (6 === t.previousNode.type ||
              (0 == i && t.currentTimeline.hasCurrentStyleProperties())) &&
            (t.currentTimeline.snapshotCurrentStyles(), (t.previousNode = np));
          let s = i;
          const a = t.invokeQuery(
            n.selector,
            n.originalSelector,
            n.limit,
            n.includeSelf,
            !!r.optional,
            t.errors
          );
          t.currentQueryTotal = a.length;
          let l = null;
          a.forEach((c, u) => {
            t.currentQueryIndex = u;
            const f = t.createSubContext(n.options, c);
            o && f.delayNextStep(o),
              c === t.element && (l = f.currentTimeline),
              ki(this, n.animation, f),
              f.currentTimeline.applyStylesToKeyframe(),
              (s = Math.max(s, f.currentTimeline.currentTime));
          }),
            (t.currentQueryIndex = 0),
            (t.currentQueryTotal = 0),
            t.transformIntoNewTimeline(s),
            l &&
              (t.currentTimeline.mergeTimelineCollectedStyles(l),
              t.currentTimeline.snapshotCurrentStyles()),
            (t.previousNode = n);
        }
        visitStagger(n, t) {
          const i = t.parentContext,
            r = t.currentTimeline,
            o = n.timings,
            s = Math.abs(o.duration),
            a = s * (t.currentQueryTotal - 1);
          let l = s * t.currentQueryIndex;
          switch (o.duration < 0 ? "reverse" : o.easing) {
            case "reverse":
              l = a - l;
              break;
            case "full":
              l = i.currentStaggerTime;
          }
          const u = t.currentTimeline;
          l && u.delayNextStep(l);
          const f = u.currentTime;
          ki(this, n.animation, t),
            (t.previousNode = n),
            (i.currentStaggerTime =
              r.currentTime - f + (r.startTime - i.currentTimeline.startTime));
        }
      }
      const np = {};
      class Bv {
        constructor(n, t, i, r, o, s, a, l) {
          (this._driver = n),
            (this.element = t),
            (this.subInstructions = i),
            (this._enterClassName = r),
            (this._leaveClassName = o),
            (this.errors = s),
            (this.timelines = a),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = np),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = l || new ip(this._driver, t, 0)),
            a.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(n, t) {
          if (!n) return;
          const i = n;
          let r = this.options;
          null != i.duration && (r.duration = _o(i.duration)),
            null != i.delay && (r.delay = _o(i.delay));
          const o = i.params;
          if (o) {
            let s = r.params;
            s || (s = this.options.params = {}),
              Object.keys(o).forEach((a) => {
                (!t || !s.hasOwnProperty(a)) &&
                  (s[a] = xu(o[a], s, this.errors));
              });
          }
        }
        _copyOptions() {
          const n = {};
          if (this.options) {
            const t = this.options.params;
            if (t) {
              const i = (n.params = {});
              Object.keys(t).forEach((r) => {
                i[r] = t[r];
              });
            }
          }
          return n;
        }
        createSubContext(n = null, t, i) {
          const r = t || this.element,
            o = new Bv(
              this._driver,
              r,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(r, i || 0)
            );
          return (
            (o.previousNode = this.previousNode),
            (o.currentAnimateTimings = this.currentAnimateTimings),
            (o.options = this._copyOptions()),
            o.updateOptions(n),
            (o.currentQueryIndex = this.currentQueryIndex),
            (o.currentQueryTotal = this.currentQueryTotal),
            (o.parentContext = this),
            this.subContextCount++,
            o
          );
        }
        transformIntoNewTimeline(n) {
          return (
            (this.previousNode = np),
            (this.currentTimeline = this.currentTimeline.fork(this.element, n)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(n, t, i) {
          const r = {
              duration: t ?? n.duration,
              delay: this.currentTimeline.currentTime + (i ?? 0) + n.delay,
              easing: "",
            },
            o = new p8(
              this._driver,
              n.element,
              n.keyframes,
              n.preStyleProps,
              n.postStyleProps,
              r,
              n.stretchStartingKeyframe
            );
          return this.timelines.push(o), r;
        }
        incrementTime(n) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + n);
        }
        delayNextStep(n) {
          n > 0 && this.currentTimeline.delayNextStep(n);
        }
        invokeQuery(n, t, i, r, o, s) {
          let a = [];
          if ((r && a.push(this.element), n.length > 0)) {
            n = (n = n.replace(u8, "." + this._enterClassName)).replace(
              h8,
              "." + this._leaveClassName
            );
            let c = this._driver.query(this.element, n, 1 != i);
            0 !== i &&
              (c = i < 0 ? c.slice(c.length + i, c.length) : c.slice(0, i)),
              a.push(...c);
          }
          return (
            !o &&
              0 == a.length &&
              s.push(
                (function CW(e) {
                  return new P(3014, !1);
                })()
              ),
            a
          );
        }
      }
      class ip {
        constructor(n, t, i, r) {
          (this._driver = n),
            (this.element = t),
            (this.startTime = i),
            (this._elementTimelineStylesLookup = r),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(t)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                t,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(n) {
          const t = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || t
            ? (this.forwardTime(this.currentTime + n),
              t && this.snapshotCurrentStyles())
            : (this.startTime += n);
        }
        fork(n, t) {
          return (
            this.applyStylesToKeyframe(),
            new ip(
              this._driver,
              n,
              t || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(n) {
          this.applyStylesToKeyframe(),
            (this.duration = n),
            this._loadKeyframe();
        }
        _updateStyle(n, t) {
          this._localTimelineStyles.set(n, t),
            this._globalTimelineStyles.set(n, t),
            this._styleSummary.set(n, { time: this.currentTime, value: t });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(n) {
          n && this._previousKeyframe.set("easing", n);
          for (let [t, i] of this._globalTimelineStyles)
            this._backFill.set(t, i || mo), this._currentKeyframe.set(t, mo);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(n, t, i, r) {
          t && this._previousKeyframe.set("easing", t);
          const o = (r && r.params) || {},
            s = (function g8(e, n) {
              const t = new Map();
              let i;
              return (
                e.forEach((r) => {
                  if ("*" === r) {
                    i = i || n.keys();
                    for (let o of i) t.set(o, mo);
                  } else Xo(r, t);
                }),
                t
              );
            })(n, this._globalTimelineStyles);
          for (let [a, l] of s) {
            const c = xu(l, o, i);
            this._pendingStyles.set(a, c),
              this._localTimelineStyles.has(a) ||
                this._backFill.set(a, this._globalTimelineStyles.get(a) ?? mo),
              this._updateStyle(a, c);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((n, t) => {
              this._currentKeyframe.set(t, n);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((n, t) => {
              this._currentKeyframe.has(t) || this._currentKeyframe.set(t, n);
            }));
        }
        snapshotCurrentStyles() {
          for (let [n, t] of this._localTimelineStyles)
            this._pendingStyles.set(n, t), this._updateStyle(n, t);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const n = [];
          for (let t in this._currentKeyframe) n.push(t);
          return n;
        }
        mergeTimelineCollectedStyles(n) {
          n._styleSummary.forEach((t, i) => {
            const r = this._styleSummary.get(i);
            (!r || t.time > r.time) && this._updateStyle(i, t.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const n = new Set(),
            t = new Set(),
            i = 1 === this._keyframes.size && 0 === this.duration;
          let r = [];
          this._keyframes.forEach((a, l) => {
            const c = Xo(a, new Map(), this._backFill);
            c.forEach((u, f) => {
              "!" === u ? n.add(f) : u === mo && t.add(f);
            }),
              i || c.set("offset", l / this.duration),
              r.push(c);
          });
          const o = n.size ? Qf(n.values()) : [],
            s = t.size ? Qf(t.values()) : [];
          if (i) {
            const a = r[0],
              l = new Map(a);
            a.set("offset", 0), l.set("offset", 1), (r = [a, l]);
          }
          return Nv(
            this.element,
            r,
            o,
            s,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class p8 extends ip {
        constructor(n, t, i, r, o, s, a = !1) {
          super(n, t, s.delay),
            (this.keyframes = i),
            (this.preStyleProps = r),
            (this.postStyleProps = o),
            (this._stretchStartingKeyframe = a),
            (this.timings = {
              duration: s.duration,
              delay: s.delay,
              easing: s.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let n = this.keyframes,
            { delay: t, duration: i, easing: r } = this.timings;
          if (this._stretchStartingKeyframe && t) {
            const o = [],
              s = i + t,
              a = t / s,
              l = Xo(n[0]);
            l.set("offset", 0), o.push(l);
            const c = Xo(n[0]);
            c.set("offset", VE(a)), o.push(c);
            const u = n.length - 1;
            for (let f = 1; f <= u; f++) {
              let g = Xo(n[f]);
              const m = g.get("offset");
              g.set("offset", VE((t + m * i) / s)), o.push(g);
            }
            (i = s), (t = 0), (r = ""), (n = o);
          }
          return Nv(
            this.element,
            n,
            this.preStyleProps,
            this.postStyleProps,
            i,
            t,
            r,
            !0
          );
        }
      }
      function VE(e, n = 3) {
        const t = Math.pow(10, n - 1);
        return Math.round(e * t) / t;
      }
      class Vv {}
      const m8 = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class _8 extends Vv {
        normalizePropertyName(n, t) {
          return Pv(n);
        }
        normalizeStyleValue(n, t, i, r) {
          let o = "";
          const s = i.toString().trim();
          if (m8.has(t) && 0 !== i && "0" !== i)
            if ("number" == typeof i) o = "px";
            else {
              const a = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
              a &&
                0 == a[1].length &&
                r.push(
                  (function dW(e, n) {
                    return new P(3005, !1);
                  })()
                );
            }
          return s + o;
        }
      }
      function zE(e, n, t, i, r, o, s, a, l, c, u, f, g) {
        return {
          type: 0,
          element: e,
          triggerName: n,
          isRemovalTransition: r,
          fromState: t,
          fromStyles: o,
          toState: i,
          toStyles: s,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: f,
          errors: g,
        };
      }
      const zv = {};
      class HE {
        constructor(n, t, i) {
          (this._triggerName = n), (this.ast = t), (this._stateStyles = i);
        }
        match(n, t, i, r) {
          return (function y8(e, n, t, i, r) {
            return e.some((o) => o(n, t, i, r));
          })(this.ast.matchers, n, t, i, r);
        }
        buildStyles(n, t, i) {
          let r = this._stateStyles.get("*");
          return (
            void 0 !== n && (r = this._stateStyles.get(n?.toString()) || r),
            r ? r.buildStyles(t, i) : new Map()
          );
        }
        build(n, t, i, r, o, s, a, l, c, u) {
          const f = [],
            g = (this.ast.options && this.ast.options.params) || zv,
            _ = this.buildStyles(i, (a && a.params) || zv, f),
            y = (l && l.params) || zv,
            v = this.buildStyles(r, y, f),
            w = new Set(),
            C = new Map(),
            D = new Map(),
            S = "void" === r,
            T = { params: v8(y, g), delay: this.ast.options?.delay },
            L = u ? [] : Lv(n, t, this.ast.animation, o, s, _, v, T, c, f);
          let z = 0;
          if (
            (L.forEach((q) => {
              z = Math.max(q.duration + q.delay, z);
            }),
            f.length)
          )
            return zE(t, this._triggerName, i, r, S, _, v, [], [], C, D, z, f);
          L.forEach((q) => {
            const we = q.element,
              Be = Si(C, we, new Set());
            q.preStyleProps.forEach((bt) => Be.add(bt));
            const Fe = Si(D, we, new Set());
            q.postStyleProps.forEach((bt) => Fe.add(bt)), we !== t && w.add(we);
          });
          const $ = Qf(w.values());
          return zE(t, this._triggerName, i, r, S, _, v, L, $, C, D, z);
        }
      }
      function v8(e, n) {
        const t = wu(n);
        for (const i in e) e.hasOwnProperty(i) && null != e[i] && (t[i] = e[i]);
        return t;
      }
      class b8 {
        constructor(n, t, i) {
          (this.styles = n), (this.defaultParams = t), (this.normalizer = i);
        }
        buildStyles(n, t) {
          const i = new Map(),
            r = wu(this.defaultParams);
          return (
            Object.keys(n).forEach((o) => {
              const s = n[o];
              null !== s && (r[o] = s);
            }),
            this.styles.styles.forEach((o) => {
              "string" != typeof o &&
                o.forEach((s, a) => {
                  s && (s = xu(s, r, t));
                  const l = this.normalizer.normalizePropertyName(a, t);
                  (s = this.normalizer.normalizeStyleValue(a, l, s, t)),
                    i.set(a, s);
                });
            }),
            i
          );
        }
      }
      class C8 {
        constructor(n, t, i) {
          (this.name = n),
            (this.ast = t),
            (this._normalizer = i),
            (this.transitionFactories = []),
            (this.states = new Map()),
            t.states.forEach((r) => {
              this.states.set(
                r.name,
                new b8(r.style, (r.options && r.options.params) || {}, i)
              );
            }),
            jE(this.states, "true", "1"),
            jE(this.states, "false", "0"),
            t.transitions.forEach((r) => {
              this.transitionFactories.push(new HE(n, r, this.states));
            }),
            (this.fallbackTransition = (function x8(e, n, t) {
              return new HE(
                e,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(s, a) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                n
              );
            })(n, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(n, t, i, r) {
          return (
            this.transitionFactories.find((s) => s.match(n, t, i, r)) || null
          );
        }
        matchStyles(n, t, i) {
          return this.fallbackTransition.buildStyles(n, t, i);
        }
      }
      function jE(e, n, t) {
        e.has(n)
          ? e.has(t) || e.set(t, e.get(n))
          : e.has(t) && e.set(n, e.get(t));
      }
      const M8 = new tp();
      class D8 {
        constructor(n, t, i) {
          (this.bodyNode = n),
            (this._driver = t),
            (this._normalizer = i),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(n, t) {
          const i = [],
            o = Fv(this._driver, t, i, []);
          if (i.length)
            throw (function EW(e) {
              return new P(3503, !1);
            })();
          this._animations.set(n, o);
        }
        _buildPlayer(n, t, i) {
          const r = n.element,
            o = ME(this._normalizer, n.keyframes, t, i);
          return this._driver.animate(
            r,
            o,
            n.duration,
            n.delay,
            n.easing,
            [],
            !0
          );
        }
        create(n, t, i = {}) {
          const r = [],
            o = this._animations.get(n);
          let s;
          const a = new Map();
          if (
            (o
              ? ((s = Lv(
                  this._driver,
                  t,
                  o,
                  Ev,
                  Gf,
                  new Map(),
                  new Map(),
                  i,
                  M8,
                  r
                )),
                s.forEach((u) => {
                  const f = Si(a, u.element, new Map());
                  u.postStyleProps.forEach((g) => f.set(g, null));
                }))
              : (r.push(
                  (function IW() {
                    return new P(3300, !1);
                  })()
                ),
                (s = [])),
            r.length)
          )
            throw (function OW(e) {
              return new P(3504, !1);
            })();
          a.forEach((u, f) => {
            u.forEach((g, m) => {
              u.set(m, this._driver.computeStyle(f, m, mo));
            });
          });
          const c = Qo(
            s.map((u) => {
              const f = a.get(u.element);
              return this._buildPlayer(u, new Map(), f);
            })
          );
          return (
            this._playersById.set(n, c),
            c.onDestroy(() => this.destroy(n)),
            this.players.push(c),
            c
          );
        }
        destroy(n) {
          const t = this._getPlayer(n);
          t.destroy(), this._playersById.delete(n);
          const i = this.players.indexOf(t);
          i >= 0 && this.players.splice(i, 1);
        }
        _getPlayer(n) {
          const t = this._playersById.get(n);
          if (!t)
            throw (function AW(e) {
              return new P(3301, !1);
            })();
          return t;
        }
        listen(n, t, i, r) {
          const o = Sv(t, "", "", "");
          return Mv(this._getPlayer(n), i, o, r), () => {};
        }
        command(n, t, i, r) {
          if ("register" == i) return void this.register(n, r[0]);
          if ("create" == i) return void this.create(n, t, r[0] || {});
          const o = this._getPlayer(n);
          switch (i) {
            case "play":
              o.play();
              break;
            case "pause":
              o.pause();
              break;
            case "reset":
              o.reset();
              break;
            case "restart":
              o.restart();
              break;
            case "finish":
              o.finish();
              break;
            case "init":
              o.init();
              break;
            case "setPosition":
              o.setPosition(parseFloat(r[0]));
              break;
            case "destroy":
              this.destroy(n);
          }
        }
      }
      const UE = "ng-animate-queued",
        Hv = "ng-animate-disabled",
        I8 = [],
        WE = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        O8 = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        cr = "__ng_removed";
      class jv {
        get params() {
          return this.options.params;
        }
        constructor(n, t = "") {
          this.namespaceId = t;
          const i = n && n.hasOwnProperty("value");
          if (
            ((this.value = (function R8(e) {
              return e ?? null;
            })(i ? n.value : n)),
            i)
          ) {
            const o = wu(n);
            delete o.value, (this.options = o);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(n) {
          const t = n.params;
          if (t) {
            const i = this.options.params;
            Object.keys(t).forEach((r) => {
              null == i[r] && (i[r] = t[r]);
            });
          }
        }
      }
      const Mu = "void",
        Uv = new jv(Mu);
      class A8 {
        constructor(n, t, i) {
          (this.id = n),
            (this.hostElement = t),
            (this._engine = i),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + n),
            Hi(t, this._hostClassName);
        }
        listen(n, t, i, r) {
          if (!this._triggers.has(t))
            throw (function PW(e, n) {
              return new P(3302, !1);
            })();
          if (null == i || 0 == i.length)
            throw (function FW(e) {
              return new P(3303, !1);
            })();
          if (
            !(function N8(e) {
              return "start" == e || "done" == e;
            })(i)
          )
            throw (function RW(e, n) {
              return new P(3400, !1);
            })();
          const o = Si(this._elementListeners, n, []),
            s = { name: t, phase: i, callback: r };
          o.push(s);
          const a = Si(this._engine.statesByElement, n, new Map());
          return (
            a.has(t) || (Hi(n, Yf), Hi(n, Yf + "-" + t), a.set(t, Uv)),
            () => {
              this._engine.afterFlush(() => {
                const l = o.indexOf(s);
                l >= 0 && o.splice(l, 1), this._triggers.has(t) || a.delete(t);
              });
            }
          );
        }
        register(n, t) {
          return !this._triggers.has(n) && (this._triggers.set(n, t), !0);
        }
        _getTrigger(n) {
          const t = this._triggers.get(n);
          if (!t)
            throw (function NW(e) {
              return new P(3401, !1);
            })();
          return t;
        }
        trigger(n, t, i, r = !0) {
          const o = this._getTrigger(t),
            s = new Wv(this.id, t, n);
          let a = this._engine.statesByElement.get(n);
          a ||
            (Hi(n, Yf),
            Hi(n, Yf + "-" + t),
            this._engine.statesByElement.set(n, (a = new Map())));
          let l = a.get(t);
          const c = new jv(i, this.id);
          if (
            (!(i && i.hasOwnProperty("value")) &&
              l &&
              c.absorbOptions(l.options),
            a.set(t, c),
            l || (l = Uv),
            c.value !== Mu && l.value === c.value)
          ) {
            if (
              !(function V8(e, n) {
                const t = Object.keys(e),
                  i = Object.keys(n);
                if (t.length != i.length) return !1;
                for (let r = 0; r < t.length; r++) {
                  const o = t[r];
                  if (!n.hasOwnProperty(o) || e[o] !== n[o]) return !1;
                }
                return !0;
              })(l.params, c.params)
            ) {
              const y = [],
                v = o.matchStyles(l.value, l.params, y),
                w = o.matchStyles(c.value, c.params, y);
              y.length
                ? this._engine.reportError(y)
                : this._engine.afterFlush(() => {
                    Ws(n, v), Rr(n, w);
                  });
            }
            return;
          }
          const g = Si(this._engine.playersByElement, n, []);
          g.forEach((y) => {
            y.namespaceId == this.id &&
              y.triggerName == t &&
              y.queued &&
              y.destroy();
          });
          let m = o.matchTransition(l.value, c.value, n, c.params),
            _ = !1;
          if (!m) {
            if (!r) return;
            (m = o.fallbackTransition), (_ = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: n,
              triggerName: t,
              transition: m,
              fromState: l,
              toState: c,
              player: s,
              isFallbackTransition: _,
            }),
            _ ||
              (Hi(n, UE),
              s.onStart(() => {
                wl(n, UE);
              })),
            s.onDone(() => {
              let y = this.players.indexOf(s);
              y >= 0 && this.players.splice(y, 1);
              const v = this._engine.playersByElement.get(n);
              if (v) {
                let w = v.indexOf(s);
                w >= 0 && v.splice(w, 1);
              }
            }),
            this.players.push(s),
            g.push(s),
            s
          );
        }
        deregister(n) {
          this._triggers.delete(n),
            this._engine.statesByElement.forEach((t) => t.delete(n)),
            this._elementListeners.forEach((t, i) => {
              this._elementListeners.set(
                i,
                t.filter((r) => r.name != n)
              );
            });
        }
        clearElementCache(n) {
          this._engine.statesByElement.delete(n),
            this._elementListeners.delete(n);
          const t = this._engine.playersByElement.get(n);
          t &&
            (t.forEach((i) => i.destroy()),
            this._engine.playersByElement.delete(n));
        }
        _signalRemovalForInnerTriggers(n, t) {
          const i = this._engine.driver.query(n, Kf, !0);
          i.forEach((r) => {
            if (r[cr]) return;
            const o = this._engine.fetchNamespacesByElement(r);
            o.size
              ? o.forEach((s) => s.triggerLeaveAnimation(r, t, !1, !0))
              : this.clearElementCache(r);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              i.forEach((r) => this.clearElementCache(r))
            );
        }
        triggerLeaveAnimation(n, t, i, r) {
          const o = this._engine.statesByElement.get(n),
            s = new Map();
          if (o) {
            const a = [];
            if (
              (o.forEach((l, c) => {
                if ((s.set(c, l.value), this._triggers.has(c))) {
                  const u = this.trigger(n, c, Mu, r);
                  u && a.push(u);
                }
              }),
              a.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, n, !0, t, s),
                i && Qo(a).onDone(() => this._engine.processLeaveNode(n)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(n) {
          const t = this._elementListeners.get(n),
            i = this._engine.statesByElement.get(n);
          if (t && i) {
            const r = new Set();
            t.forEach((o) => {
              const s = o.name;
              if (r.has(s)) return;
              r.add(s);
              const l = this._triggers.get(s).fallbackTransition,
                c = i.get(s) || Uv,
                u = new jv(Mu),
                f = new Wv(this.id, s, n);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: n,
                  triggerName: s,
                  transition: l,
                  fromState: c,
                  toState: u,
                  player: f,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(n, t) {
          const i = this._engine;
          if (
            (n.childElementCount && this._signalRemovalForInnerTriggers(n, t),
            this.triggerLeaveAnimation(n, t, !0))
          )
            return;
          let r = !1;
          if (i.totalAnimations) {
            const o = i.players.length ? i.playersByQueriedElement.get(n) : [];
            if (o && o.length) r = !0;
            else {
              let s = n;
              for (; (s = s.parentNode); )
                if (i.statesByElement.get(s)) {
                  r = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(n), r))
            i.markElementAsRemoved(this.id, n, !1, t);
          else {
            const o = n[cr];
            (!o || o === WE) &&
              (i.afterFlush(() => this.clearElementCache(n)),
              i.destroyInnerAnimations(n),
              i._onRemovalComplete(n, t));
          }
        }
        insertNode(n, t) {
          Hi(n, this._hostClassName);
        }
        drainQueuedTransitions(n) {
          const t = [];
          return (
            this._queue.forEach((i) => {
              const r = i.player;
              if (r.destroyed) return;
              const o = i.element,
                s = this._elementListeners.get(o);
              s &&
                s.forEach((a) => {
                  if (a.name == i.triggerName) {
                    const l = Sv(
                      o,
                      i.triggerName,
                      i.fromState.value,
                      i.toState.value
                    );
                    (l._data = n), Mv(i.player, a.phase, l, a.callback);
                  }
                }),
                r.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      r.destroy();
                    })
                  : t.push(i);
            }),
            (this._queue = []),
            t.sort((i, r) => {
              const o = i.transition.ast.depCount,
                s = r.transition.ast.depCount;
              return 0 == o || 0 == s
                ? o - s
                : this._engine.driver.containsElement(i.element, r.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(n) {
          this.players.forEach((t) => t.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, n);
        }
      }
      class P8 {
        _onRemovalComplete(n, t) {
          this.onRemovalComplete(n, t);
        }
        constructor(n, t, i) {
          (this.bodyNode = n),
            (this.driver = t),
            (this._normalizer = i),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (r, o) => {});
        }
        get queuedPlayers() {
          const n = [];
          return (
            this._namespaceList.forEach((t) => {
              t.players.forEach((i) => {
                i.queued && n.push(i);
              });
            }),
            n
          );
        }
        createNamespace(n, t) {
          const i = new A8(n, t, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, t)
              ? this._balanceNamespaceList(i, t)
              : (this.newHostElements.set(t, i), this.collectEnterElement(t)),
            (this._namespaceLookup[n] = i)
          );
        }
        _balanceNamespaceList(n, t) {
          const i = this._namespaceList,
            r = this.namespacesByHostElement;
          if (i.length - 1 >= 0) {
            let s = !1,
              a = this.driver.getParentElement(t);
            for (; a; ) {
              const l = r.get(a);
              if (l) {
                const c = i.indexOf(l);
                i.splice(c + 1, 0, n), (s = !0);
                break;
              }
              a = this.driver.getParentElement(a);
            }
            s || i.unshift(n);
          } else i.push(n);
          return r.set(t, n), n;
        }
        register(n, t) {
          let i = this._namespaceLookup[n];
          return i || (i = this.createNamespace(n, t)), i;
        }
        registerTrigger(n, t, i) {
          let r = this._namespaceLookup[n];
          r && r.register(t, i) && this.totalAnimations++;
        }
        destroy(n, t) {
          n &&
            (this.afterFlush(() => {}),
            this.afterFlushAnimationsDone(() => {
              const i = this._fetchNamespace(n);
              this.namespacesByHostElement.delete(i.hostElement);
              const r = this._namespaceList.indexOf(i);
              r >= 0 && this._namespaceList.splice(r, 1),
                i.destroy(t),
                delete this._namespaceLookup[n];
            }));
        }
        _fetchNamespace(n) {
          return this._namespaceLookup[n];
        }
        fetchNamespacesByElement(n) {
          const t = new Set(),
            i = this.statesByElement.get(n);
          if (i)
            for (let r of i.values())
              if (r.namespaceId) {
                const o = this._fetchNamespace(r.namespaceId);
                o && t.add(o);
              }
          return t;
        }
        trigger(n, t, i, r) {
          if (rp(t)) {
            const o = this._fetchNamespace(n);
            if (o) return o.trigger(t, i, r), !0;
          }
          return !1;
        }
        insertNode(n, t, i, r) {
          if (!rp(t)) return;
          const o = t[cr];
          if (o && o.setForRemoval) {
            (o.setForRemoval = !1), (o.setForMove = !0);
            const s = this.collectedLeaveElements.indexOf(t);
            s >= 0 && this.collectedLeaveElements.splice(s, 1);
          }
          if (n) {
            const s = this._fetchNamespace(n);
            s && s.insertNode(t, i);
          }
          r && this.collectEnterElement(t);
        }
        collectEnterElement(n) {
          this.collectedEnterElements.push(n);
        }
        markElementAsDisabled(n, t) {
          t
            ? this.disabledNodes.has(n) ||
              (this.disabledNodes.add(n), Hi(n, Hv))
            : this.disabledNodes.has(n) &&
              (this.disabledNodes.delete(n), wl(n, Hv));
        }
        removeNode(n, t, i) {
          if (rp(t)) {
            const r = n ? this._fetchNamespace(n) : null;
            r ? r.removeNode(t, i) : this.markElementAsRemoved(n, t, !1, i);
            const o = this.namespacesByHostElement.get(t);
            o && o.id !== n && o.removeNode(t, i);
          } else this._onRemovalComplete(t, i);
        }
        markElementAsRemoved(n, t, i, r, o) {
          this.collectedLeaveElements.push(t),
            (t[cr] = {
              namespaceId: n,
              setForRemoval: r,
              hasAnimation: i,
              removedBeforeQueried: !1,
              previousTriggersValues: o,
            });
        }
        listen(n, t, i, r, o) {
          return rp(t) ? this._fetchNamespace(n).listen(t, i, r, o) : () => {};
        }
        _buildInstruction(n, t, i, r, o) {
          return n.transition.build(
            this.driver,
            n.element,
            n.fromState.value,
            n.toState.value,
            i,
            r,
            n.fromState.options,
            n.toState.options,
            t,
            o
          );
        }
        destroyInnerAnimations(n) {
          let t = this.driver.query(n, Kf, !0);
          t.forEach((i) => this.destroyActiveAnimationsForElement(i)),
            0 != this.playersByQueriedElement.size &&
              ((t = this.driver.query(n, Iv, !0)),
              t.forEach((i) => this.finishActiveQueriedAnimationOnElement(i)));
        }
        destroyActiveAnimationsForElement(n) {
          const t = this.playersByElement.get(n);
          t &&
            t.forEach((i) => {
              i.queued ? (i.markedForDestroy = !0) : i.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(n) {
          const t = this.playersByQueriedElement.get(n);
          t && t.forEach((i) => i.finish());
        }
        whenRenderingDone() {
          return new Promise((n) => {
            if (this.players.length) return Qo(this.players).onDone(() => n());
            n();
          });
        }
        processLeaveNode(n) {
          const t = n[cr];
          if (t && t.setForRemoval) {
            if (((n[cr] = WE), t.namespaceId)) {
              this.destroyInnerAnimations(n);
              const i = this._fetchNamespace(t.namespaceId);
              i && i.clearElementCache(n);
            }
            this._onRemovalComplete(n, t.setForRemoval);
          }
          n.classList?.contains(Hv) && this.markElementAsDisabled(n, !1),
            this.driver.query(n, ".ng-animate-disabled", !0).forEach((i) => {
              this.markElementAsDisabled(i, !1);
            });
        }
        flush(n = -1) {
          let t = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((i, r) =>
                this._balanceNamespaceList(i, r)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let i = 0; i < this.collectedEnterElements.length; i++)
              Hi(this.collectedEnterElements[i], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const i = [];
            try {
              t = this._flushAnimations(i, n);
            } finally {
              for (let r = 0; r < i.length; r++) i[r]();
            }
          } else
            for (let i = 0; i < this.collectedLeaveElements.length; i++)
              this.processLeaveNode(this.collectedLeaveElements[i]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((i) => i()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const i = this._whenQuietFns;
            (this._whenQuietFns = []),
              t.length
                ? Qo(t).onDone(() => {
                    i.forEach((r) => r());
                  })
                : i.forEach((r) => r());
          }
        }
        reportError(n) {
          throw (function LW(e) {
            return new P(3402, !1);
          })();
        }
        _flushAnimations(n, t) {
          const i = new tp(),
            r = [],
            o = new Map(),
            s = [],
            a = new Map(),
            l = new Map(),
            c = new Map(),
            u = new Set();
          this.disabledNodes.forEach((W) => {
            u.add(W);
            const G = this.driver.query(W, ".ng-animate-queued", !0);
            for (let ae = 0; ae < G.length; ae++) u.add(G[ae]);
          });
          const f = this.bodyNode,
            g = Array.from(this.statesByElement.keys()),
            m = GE(g, this.collectedEnterElements),
            _ = new Map();
          let y = 0;
          m.forEach((W, G) => {
            const ae = Ev + y++;
            _.set(G, ae), W.forEach((Ue) => Hi(Ue, ae));
          });
          const v = [],
            w = new Set(),
            C = new Set();
          for (let W = 0; W < this.collectedLeaveElements.length; W++) {
            const G = this.collectedLeaveElements[W],
              ae = G[cr];
            ae &&
              ae.setForRemoval &&
              (v.push(G),
              w.add(G),
              ae.hasAnimation
                ? this.driver
                    .query(G, ".ng-star-inserted", !0)
                    .forEach((Ue) => w.add(Ue))
                : C.add(G));
          }
          const D = new Map(),
            S = GE(g, Array.from(w));
          S.forEach((W, G) => {
            const ae = Gf + y++;
            D.set(G, ae), W.forEach((Ue) => Hi(Ue, ae));
          }),
            n.push(() => {
              m.forEach((W, G) => {
                const ae = _.get(G);
                W.forEach((Ue) => wl(Ue, ae));
              }),
                S.forEach((W, G) => {
                  const ae = D.get(G);
                  W.forEach((Ue) => wl(Ue, ae));
                }),
                v.forEach((W) => {
                  this.processLeaveNode(W);
                });
            });
          const T = [],
            L = [];
          for (let W = this._namespaceList.length - 1; W >= 0; W--)
            this._namespaceList[W].drainQueuedTransitions(t).forEach((ae) => {
              const Ue = ae.player,
                Bt = ae.element;
              if ((T.push(Ue), this.collectedEnterElements.length)) {
                const $n = Bt[cr];
                if ($n && $n.setForMove) {
                  if (
                    $n.previousTriggersValues &&
                    $n.previousTriggersValues.has(ae.triggerName)
                  ) {
                    const fa = $n.previousTriggersValues.get(ae.triggerName),
                      Zi = this.statesByElement.get(ae.element);
                    if (Zi && Zi.has(ae.triggerName)) {
                      const Tg = Zi.get(ae.triggerName);
                      (Tg.value = fa), Zi.set(ae.triggerName, Tg);
                    }
                  }
                  return void Ue.destroy();
                }
              }
              const ni = !f || !this.driver.containsElement(f, Bt),
                un = D.get(Bt),
                fi = _.get(Bt),
                Dt = this._buildInstruction(ae, i, fi, un, ni);
              if (Dt.errors && Dt.errors.length) return void L.push(Dt);
              if (ni)
                return (
                  Ue.onStart(() => Ws(Bt, Dt.fromStyles)),
                  Ue.onDestroy(() => Rr(Bt, Dt.toStyles)),
                  void r.push(Ue)
                );
              if (ae.isFallbackTransition)
                return (
                  Ue.onStart(() => Ws(Bt, Dt.fromStyles)),
                  Ue.onDestroy(() => Rr(Bt, Dt.toStyles)),
                  void r.push(Ue)
                );
              const ec = [];
              Dt.timelines.forEach(($n) => {
                ($n.stretchStartingKeyframe = !0),
                  this.disabledNodes.has($n.element) || ec.push($n);
              }),
                (Dt.timelines = ec),
                i.append(Bt, Dt.timelines),
                s.push({ instruction: Dt, player: Ue, element: Bt }),
                Dt.queriedElements.forEach(($n) => Si(a, $n, []).push(Ue)),
                Dt.preStyleProps.forEach(($n, fa) => {
                  if ($n.size) {
                    let Zi = l.get(fa);
                    Zi || l.set(fa, (Zi = new Set())),
                      $n.forEach((Tg, hw) => Zi.add(hw));
                  }
                }),
                Dt.postStyleProps.forEach(($n, fa) => {
                  let Zi = c.get(fa);
                  Zi || c.set(fa, (Zi = new Set())),
                    $n.forEach((Tg, hw) => Zi.add(hw));
                });
            });
          if (L.length) {
            const W = [];
            L.forEach((G) => {
              W.push(
                (function BW(e, n) {
                  return new P(3505, !1);
                })()
              );
            }),
              T.forEach((G) => G.destroy()),
              this.reportError(W);
          }
          const z = new Map(),
            $ = new Map();
          s.forEach((W) => {
            const G = W.element;
            i.has(G) &&
              ($.set(G, G),
              this._beforeAnimationBuild(
                W.player.namespaceId,
                W.instruction,
                z
              ));
          }),
            r.forEach((W) => {
              const G = W.element;
              this._getPreviousPlayers(
                G,
                !1,
                W.namespaceId,
                W.triggerName,
                null
              ).forEach((Ue) => {
                Si(z, G, []).push(Ue), Ue.destroy();
              });
            });
          const q = v.filter((W) => KE(W, l, c)),
            we = new Map();
          qE(we, this.driver, C, c, mo).forEach((W) => {
            KE(W, l, c) && q.push(W);
          });
          const Fe = new Map();
          m.forEach((W, G) => {
            qE(Fe, this.driver, new Set(W), l, "!");
          }),
            q.forEach((W) => {
              const G = we.get(W),
                ae = Fe.get(W);
              we.set(
                W,
                new Map([...(G?.entries() ?? []), ...(ae?.entries() ?? [])])
              );
            });
          const bt = [],
            Mn = [],
            De = {};
          s.forEach((W) => {
            const { element: G, player: ae, instruction: Ue } = W;
            if (i.has(G)) {
              if (u.has(G))
                return (
                  ae.onDestroy(() => Rr(G, Ue.toStyles)),
                  (ae.disabled = !0),
                  ae.overrideTotalTime(Ue.totalTime),
                  void r.push(ae)
                );
              let Bt = De;
              if ($.size > 1) {
                let un = G;
                const fi = [];
                for (; (un = un.parentNode); ) {
                  const Dt = $.get(un);
                  if (Dt) {
                    Bt = Dt;
                    break;
                  }
                  fi.push(un);
                }
                fi.forEach((Dt) => $.set(Dt, Bt));
              }
              const ni = this._buildAnimation(ae.namespaceId, Ue, z, o, Fe, we);
              if ((ae.setRealPlayer(ni), Bt === De)) bt.push(ae);
              else {
                const un = this.playersByElement.get(Bt);
                un && un.length && (ae.parentPlayer = Qo(un)), r.push(ae);
              }
            } else
              Ws(G, Ue.fromStyles),
                ae.onDestroy(() => Rr(G, Ue.toStyles)),
                Mn.push(ae),
                u.has(G) && r.push(ae);
          }),
            Mn.forEach((W) => {
              const G = o.get(W.element);
              if (G && G.length) {
                const ae = Qo(G);
                W.setRealPlayer(ae);
              }
            }),
            r.forEach((W) => {
              W.parentPlayer ? W.syncPlayerEvents(W.parentPlayer) : W.destroy();
            });
          for (let W = 0; W < v.length; W++) {
            const G = v[W],
              ae = G[cr];
            if ((wl(G, Gf), ae && ae.hasAnimation)) continue;
            let Ue = [];
            if (a.size) {
              let ni = a.get(G);
              ni && ni.length && Ue.push(...ni);
              let un = this.driver.query(G, Iv, !0);
              for (let fi = 0; fi < un.length; fi++) {
                let Dt = a.get(un[fi]);
                Dt && Dt.length && Ue.push(...Dt);
              }
            }
            const Bt = Ue.filter((ni) => !ni.destroyed);
            Bt.length ? L8(this, G, Bt) : this.processLeaveNode(G);
          }
          return (
            (v.length = 0),
            bt.forEach((W) => {
              this.players.push(W),
                W.onDone(() => {
                  W.destroy();
                  const G = this.players.indexOf(W);
                  this.players.splice(G, 1);
                }),
                W.play();
            }),
            bt
          );
        }
        afterFlush(n) {
          this._flushFns.push(n);
        }
        afterFlushAnimationsDone(n) {
          this._whenQuietFns.push(n);
        }
        _getPreviousPlayers(n, t, i, r, o) {
          let s = [];
          if (t) {
            const a = this.playersByQueriedElement.get(n);
            a && (s = a);
          } else {
            const a = this.playersByElement.get(n);
            if (a) {
              const l = !o || o == Mu;
              a.forEach((c) => {
                c.queued || (!l && c.triggerName != r) || s.push(c);
              });
            }
          }
          return (
            (i || r) &&
              (s = s.filter(
                (a) => !((i && i != a.namespaceId) || (r && r != a.triggerName))
              )),
            s
          );
        }
        _beforeAnimationBuild(n, t, i) {
          const o = t.element,
            s = t.isRemovalTransition ? void 0 : n,
            a = t.isRemovalTransition ? void 0 : t.triggerName;
          for (const l of t.timelines) {
            const c = l.element,
              u = c !== o,
              f = Si(i, c, []);
            this._getPreviousPlayers(c, u, s, a, t.toState).forEach((m) => {
              const _ = m.getRealPlayer();
              _.beforeDestroy && _.beforeDestroy(), m.destroy(), f.push(m);
            });
          }
          Ws(o, t.fromStyles);
        }
        _buildAnimation(n, t, i, r, o, s) {
          const a = t.triggerName,
            l = t.element,
            c = [],
            u = new Set(),
            f = new Set(),
            g = t.timelines.map((_) => {
              const y = _.element;
              u.add(y);
              const v = y[cr];
              if (v && v.removedBeforeQueried)
                return new bu(_.duration, _.delay);
              const w = y !== l,
                C = (function B8(e) {
                  const n = [];
                  return YE(e, n), n;
                })((i.get(y) || I8).map((z) => z.getRealPlayer())).filter(
                  (z) => !!z.element && z.element === y
                ),
                D = o.get(y),
                S = s.get(y),
                T = ME(this._normalizer, _.keyframes, D, S),
                L = this._buildPlayer(_, T, C);
              if ((_.subTimeline && r && f.add(y), w)) {
                const z = new Wv(n, a, y);
                z.setRealPlayer(L), c.push(z);
              }
              return L;
            });
          c.forEach((_) => {
            Si(this.playersByQueriedElement, _.element, []).push(_),
              _.onDone(() =>
                (function F8(e, n, t) {
                  let i = e.get(n);
                  if (i) {
                    if (i.length) {
                      const r = i.indexOf(t);
                      i.splice(r, 1);
                    }
                    0 == i.length && e.delete(n);
                  }
                  return i;
                })(this.playersByQueriedElement, _.element, _)
              );
          }),
            u.forEach((_) => Hi(_, OE));
          const m = Qo(g);
          return (
            m.onDestroy(() => {
              u.forEach((_) => wl(_, OE)), Rr(l, t.toStyles);
            }),
            f.forEach((_) => {
              Si(r, _, []).push(m);
            }),
            m
          );
        }
        _buildPlayer(n, t, i) {
          return t.length > 0
            ? this.driver.animate(
                n.element,
                t,
                n.duration,
                n.delay,
                n.easing,
                i
              )
            : new bu(n.duration, n.delay);
        }
      }
      class Wv {
        constructor(n, t, i) {
          (this.namespaceId = n),
            (this.triggerName = t),
            (this.element = i),
            (this._player = new bu()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(n) {
          this._containsRealPlayer ||
            ((this._player = n),
            this._queuedCallbacks.forEach((t, i) => {
              t.forEach((r) => Mv(n, i, void 0, r));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(n.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(n) {
          this.totalTime = n;
        }
        syncPlayerEvents(n) {
          const t = this._player;
          t.triggerCallback && n.onStart(() => t.triggerCallback("start")),
            n.onDone(() => this.finish()),
            n.onDestroy(() => this.destroy());
        }
        _queueEvent(n, t) {
          Si(this._queuedCallbacks, n, []).push(t);
        }
        onDone(n) {
          this.queued && this._queueEvent("done", n), this._player.onDone(n);
        }
        onStart(n) {
          this.queued && this._queueEvent("start", n), this._player.onStart(n);
        }
        onDestroy(n) {
          this.queued && this._queueEvent("destroy", n),
            this._player.onDestroy(n);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(n) {
          this.queued || this._player.setPosition(n);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(n) {
          const t = this._player;
          t.triggerCallback && t.triggerCallback(n);
        }
      }
      function rp(e) {
        return e && 1 === e.nodeType;
      }
      function $E(e, n) {
        const t = e.style.display;
        return (e.style.display = n ?? "none"), t;
      }
      function qE(e, n, t, i, r) {
        const o = [];
        t.forEach((l) => o.push($E(l)));
        const s = [];
        i.forEach((l, c) => {
          const u = new Map();
          l.forEach((f) => {
            const g = n.computeStyle(c, f, r);
            u.set(f, g), (!g || 0 == g.length) && ((c[cr] = O8), s.push(c));
          }),
            e.set(c, u);
        });
        let a = 0;
        return t.forEach((l) => $E(l, o[a++])), s;
      }
      function GE(e, n) {
        const t = new Map();
        if ((e.forEach((a) => t.set(a, [])), 0 == n.length)) return t;
        const r = new Set(n),
          o = new Map();
        function s(a) {
          if (!a) return 1;
          let l = o.get(a);
          if (l) return l;
          const c = a.parentNode;
          return (l = t.has(c) ? c : r.has(c) ? 1 : s(c)), o.set(a, l), l;
        }
        return (
          n.forEach((a) => {
            const l = s(a);
            1 !== l && t.get(l).push(a);
          }),
          t
        );
      }
      function Hi(e, n) {
        e.classList?.add(n);
      }
      function wl(e, n) {
        e.classList?.remove(n);
      }
      function L8(e, n, t) {
        Qo(t).onDone(() => e.processLeaveNode(n));
      }
      function YE(e, n) {
        for (let t = 0; t < e.length; t++) {
          const i = e[t];
          i instanceof CE ? YE(i.players, n) : n.push(i);
        }
      }
      function KE(e, n, t) {
        const i = t.get(e);
        if (!i) return !1;
        let r = n.get(e);
        return r ? i.forEach((o) => r.add(o)) : n.set(e, i), t.delete(e), !0;
      }
      class op {
        constructor(n, t, i) {
          (this.bodyNode = n),
            (this._driver = t),
            (this._normalizer = i),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (r, o) => {}),
            (this._transitionEngine = new P8(n, t, i)),
            (this._timelineEngine = new D8(n, t, i)),
            (this._transitionEngine.onRemovalComplete = (r, o) =>
              this.onRemovalComplete(r, o));
        }
        registerTrigger(n, t, i, r, o) {
          const s = n + "-" + r;
          let a = this._triggerCache[s];
          if (!a) {
            const l = [],
              u = Fv(this._driver, o, l, []);
            if (l.length)
              throw (function kW(e, n) {
                return new P(3404, !1);
              })();
            (a = (function w8(e, n, t) {
              return new C8(e, n, t);
            })(r, u, this._normalizer)),
              (this._triggerCache[s] = a);
          }
          this._transitionEngine.registerTrigger(t, r, a);
        }
        register(n, t) {
          this._transitionEngine.register(n, t);
        }
        destroy(n, t) {
          this._transitionEngine.destroy(n, t);
        }
        onInsert(n, t, i, r) {
          this._transitionEngine.insertNode(n, t, i, r);
        }
        onRemove(n, t, i) {
          this._transitionEngine.removeNode(n, t, i);
        }
        disableAnimations(n, t) {
          this._transitionEngine.markElementAsDisabled(n, t);
        }
        process(n, t, i, r) {
          if ("@" == i.charAt(0)) {
            const [o, s] = DE(i);
            this._timelineEngine.command(o, t, s, r);
          } else this._transitionEngine.trigger(n, t, i, r);
        }
        listen(n, t, i, r, o) {
          if ("@" == i.charAt(0)) {
            const [s, a] = DE(i);
            return this._timelineEngine.listen(s, t, a, o);
          }
          return this._transitionEngine.listen(n, t, i, r, o);
        }
        flush(n = -1) {
          this._transitionEngine.flush(n);
        }
        get players() {
          return [
            ...this._transitionEngine.players,
            ...this._timelineEngine.players,
          ];
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
        afterFlushAnimationsDone(n) {
          this._transitionEngine.afterFlushAnimationsDone(n);
        }
      }
      let H8 = (() => {
        class e {
          static #e = (this.initialStylesByElement = new WeakMap());
          constructor(t, i, r) {
            (this._element = t),
              (this._startStyles = i),
              (this._endStyles = r),
              (this._state = 0);
            let o = e.initialStylesByElement.get(t);
            o || e.initialStylesByElement.set(t, (o = new Map())),
              (this._initialStyles = o);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Rr(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Rr(this._element, this._initialStyles),
                this._endStyles &&
                  (Rr(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (e.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Ws(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Ws(this._element, this._endStyles),
                  (this._endStyles = null)),
                Rr(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return e;
      })();
      function $v(e) {
        let n = null;
        return (
          e.forEach((t, i) => {
            (function j8(e) {
              return "display" === e || "position" === e;
            })(i) && ((n = n || new Map()), n.set(i, t));
          }),
          n
        );
      }
      class ZE {
        constructor(n, t, i, r) {
          (this.element = n),
            (this.keyframes = t),
            (this.options = i),
            (this._specialStyles = r),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = i.duration),
            (this._delay = i.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((n) => n()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const n = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            n,
            this.options
          )),
            (this._finalKeyframe = n.length ? n[n.length - 1] : new Map());
          const t = () => this._onFinish();
          this.domPlayer.addEventListener("finish", t),
            this.onDestroy(() => {
              this.domPlayer.removeEventListener("finish", t);
            });
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(n) {
          const t = [];
          return (
            n.forEach((i) => {
              t.push(Object.fromEntries(i));
            }),
            t
          );
        }
        _triggerWebAnimation(n, t, i) {
          return n.animate(this._convertKeyframesToObject(t), i);
        }
        onStart(n) {
          this._originalOnStartFns.push(n), this._onStartFns.push(n);
        }
        onDone(n) {
          this._originalOnDoneFns.push(n), this._onDoneFns.push(n);
        }
        onDestroy(n) {
          this._onDestroyFns.push(n);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((n) => n()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((n) => n()),
            (this._onDestroyFns = []));
        }
        setPosition(n) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = n * this.time);
        }
        getPosition() {
          return +(this.domPlayer.currentTime ?? 0) / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const n = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((i, r) => {
              "offset" !== r &&
                n.set(r, this._finished ? i : RE(this.element, r));
            }),
            (this.currentSnapshot = n);
        }
        triggerCallback(n) {
          const t = "start" === n ? this._onStartFns : this._onDoneFns;
          t.forEach((i) => i()), (t.length = 0);
        }
      }
      class U8 {
        validateStyleProperty(n) {
          return !0;
        }
        validateAnimatableStyleProperty(n) {
          return !0;
        }
        matchesElement(n, t) {
          return !1;
        }
        containsElement(n, t) {
          return kE(n, t);
        }
        getParentElement(n) {
          return kv(n);
        }
        query(n, t, i) {
          return TE(n, t, i);
        }
        computeStyle(n, t, i) {
          return window.getComputedStyle(n)[t];
        }
        animate(n, t, i, r, o, s = []) {
          const l = {
            duration: i,
            delay: r,
            fill: 0 == r ? "both" : "forwards",
          };
          o && (l.easing = o);
          const c = new Map(),
            u = s.filter((m) => m instanceof ZE);
          (function ZW(e, n) {
            return 0 === e || 0 === n;
          })(i, r) &&
            u.forEach((m) => {
              m.currentSnapshot.forEach((_, y) => c.set(y, _));
            });
          let f = (function GW(e) {
            return e.length
              ? e[0] instanceof Map
                ? e
                : e.map((n) => AE(n))
              : [];
          })(t).map((m) => Xo(m));
          f = (function QW(e, n, t) {
            if (t.size && n.length) {
              let i = n[0],
                r = [];
              if (
                (t.forEach((o, s) => {
                  i.has(s) || r.push(s), i.set(s, o);
                }),
                r.length)
              )
                for (let o = 1; o < n.length; o++) {
                  let s = n[o];
                  r.forEach((a) => s.set(a, RE(e, a)));
                }
            }
            return n;
          })(n, f, c);
          const g = (function z8(e, n) {
            let t = null,
              i = null;
            return (
              Array.isArray(n) && n.length
                ? ((t = $v(n[0])), n.length > 1 && (i = $v(n[n.length - 1])))
                : n instanceof Map && (t = $v(n)),
              t || i ? new H8(e, t, i) : null
            );
          })(n, f);
          return new ZE(n, f, l, g);
        }
      }
      let W8 = (() => {
        class e extends bE {
          constructor(t, i) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = t.createRenderer(i.body, {
                id: "0",
                encapsulation: Pi.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(t) {
            const i = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const r = Array.isArray(t) ? wE(t) : t;
            return (
              QE(this._renderer, null, i, "register", [r]),
              new $8(i, this._renderer)
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ka), O(Ht));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      class $8 extends oW {
        constructor(n, t) {
          super(), (this._id = n), (this._renderer = t);
        }
        create(n, t) {
          return new q8(this._id, n, t || {}, this._renderer);
        }
      }
      class q8 {
        constructor(n, t, i, r) {
          (this.id = n),
            (this.element = t),
            (this._renderer = r),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", i);
        }
        _listen(n, t) {
          return this._renderer.listen(this.element, `@@${this.id}:${n}`, t);
        }
        _command(n, ...t) {
          return QE(this._renderer, this.element, this.id, n, t);
        }
        onDone(n) {
          this._listen("done", n);
        }
        onStart(n) {
          this._listen("start", n);
        }
        onDestroy(n) {
          this._listen("destroy", n);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(n) {
          this._command("setPosition", n);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function QE(e, n, t, i, r) {
        return e.setProperty(n, `@@${t}:${i}`, r);
      }
      const XE = "@.disabled";
      let G8 = (() => {
        class e {
          constructor(t, i, r) {
            (this.delegate = t),
              (this.engine = i),
              (this._zone = r),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (i.onRemovalComplete = (o, s) => {
                const a = s?.parentNode(o);
                a && s.removeChild(a, o);
              });
          }
          createRenderer(t, i) {
            const o = this.delegate.createRenderer(t, i);
            if (!(t && i && i.data && i.data.animation)) {
              let u = this._rendererCache.get(o);
              return (
                u ||
                  ((u = new JE("", o, this.engine, () =>
                    this._rendererCache.delete(o)
                  )),
                  this._rendererCache.set(o, u)),
                u
              );
            }
            const s = i.id,
              a = i.id + "-" + this._currentId;
            this._currentId++, this.engine.register(a, t);
            const l = (u) => {
              Array.isArray(u)
                ? u.forEach(l)
                : this.engine.registerTrigger(s, a, t, u.name, u);
            };
            return i.data.animation.forEach(l), new Y8(this, a, o, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            queueMicrotask(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(t, i, r) {
            t >= 0 && t < this._microtaskId
              ? this._zone.run(() => i(r))
              : (0 == this._animationCallbacksBuffer.length &&
                  queueMicrotask(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((o) => {
                        const [s, a] = o;
                        s(a);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([i, r]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ka), O(op), O(ht));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      class JE {
        constructor(n, t, i, r) {
          (this.namespaceId = n),
            (this.delegate = t),
            (this.engine = i),
            (this._onDestroy = r);
        }
        get data() {
          return this.delegate.data;
        }
        destroyNode(n) {
          this.delegate.destroyNode?.(n);
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.engine.afterFlushAnimationsDone(() => {
              queueMicrotask(() => {
                this.delegate.destroy();
              });
            }),
            this._onDestroy?.();
        }
        createElement(n, t) {
          return this.delegate.createElement(n, t);
        }
        createComment(n) {
          return this.delegate.createComment(n);
        }
        createText(n) {
          return this.delegate.createText(n);
        }
        appendChild(n, t) {
          this.delegate.appendChild(n, t),
            this.engine.onInsert(this.namespaceId, t, n, !1);
        }
        insertBefore(n, t, i, r = !0) {
          this.delegate.insertBefore(n, t, i),
            this.engine.onInsert(this.namespaceId, t, n, r);
        }
        removeChild(n, t, i) {
          this.engine.onRemove(this.namespaceId, t, this.delegate);
        }
        selectRootElement(n, t) {
          return this.delegate.selectRootElement(n, t);
        }
        parentNode(n) {
          return this.delegate.parentNode(n);
        }
        nextSibling(n) {
          return this.delegate.nextSibling(n);
        }
        setAttribute(n, t, i, r) {
          this.delegate.setAttribute(n, t, i, r);
        }
        removeAttribute(n, t, i) {
          this.delegate.removeAttribute(n, t, i);
        }
        addClass(n, t) {
          this.delegate.addClass(n, t);
        }
        removeClass(n, t) {
          this.delegate.removeClass(n, t);
        }
        setStyle(n, t, i, r) {
          this.delegate.setStyle(n, t, i, r);
        }
        removeStyle(n, t, i) {
          this.delegate.removeStyle(n, t, i);
        }
        setProperty(n, t, i) {
          "@" == t.charAt(0) && t == XE
            ? this.disableAnimations(n, !!i)
            : this.delegate.setProperty(n, t, i);
        }
        setValue(n, t) {
          this.delegate.setValue(n, t);
        }
        listen(n, t, i) {
          return this.delegate.listen(n, t, i);
        }
        disableAnimations(n, t) {
          this.engine.disableAnimations(n, t);
        }
      }
      class Y8 extends JE {
        constructor(n, t, i, r, o) {
          super(t, i, r, o), (this.factory = n), (this.namespaceId = t);
        }
        setProperty(n, t, i) {
          "@" == t.charAt(0)
            ? "." == t.charAt(1) && t == XE
              ? this.disableAnimations(n, (i = void 0 === i || !!i))
              : this.engine.process(this.namespaceId, n, t.slice(1), i)
            : this.delegate.setProperty(n, t, i);
        }
        listen(n, t, i) {
          if ("@" == t.charAt(0)) {
            const r = (function K8(e) {
              switch (e) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return e;
              }
            })(n);
            let o = t.slice(1),
              s = "";
            return (
              "@" != o.charAt(0) &&
                ([o, s] = (function Z8(e) {
                  const n = e.indexOf(".");
                  return [e.substring(0, n), e.slice(n + 1)];
                })(o)),
              this.engine.listen(this.namespaceId, r, o, s, (a) => {
                this.factory.scheduleListenerCallback(a._data || -1, i, a);
              })
            );
          }
          return this.delegate.listen(n, t, i);
        }
      }
      let Q8 = (() => {
        class e extends op {
          constructor(t, i, r, o) {
            super(t.body, i, r);
          }
          ngOnDestroy() {
            this.flush();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ht), O(Tv), O(Vv), O(Ls));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      const eI = [
          { provide: bE, useClass: W8 },
          {
            provide: Vv,
            useFactory: function X8() {
              return new _8();
            },
          },
          { provide: op, useClass: Q8 },
          {
            provide: Ka,
            useFactory: function J8(e, n, t) {
              return new G8(e, n, t);
            },
            deps: [Qy, op, ht],
          },
        ],
        qv = [
          { provide: Tv, useFactory: () => new U8() },
          { provide: rx, useValue: "BrowserAnimations" },
          ...eI,
        ],
        tI = [
          { provide: Tv, useClass: EE },
          { provide: rx, useValue: "NoopAnimations" },
          ...eI,
        ];
      let e$ = (() => {
        class e {
          static withConfig(t) {
            return { ngModule: e, providers: t.disableAnimations ? tI : qv };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵmod = Vt({ type: e }));
          static #n = (this.ɵinj = Rt({ providers: qv, imports: [oT] }));
        }
        return e;
      })();
      function yo() {}
      const t$ = (function () {
        let e = 0;
        return function () {
          return e++;
        };
      })();
      function Xe(e) {
        return null === e || typeof e > "u";
      }
      function Pt(e) {
        if (Array.isArray && Array.isArray(e)) return !0;
        const n = Object.prototype.toString.call(e);
        return "[object" === n.slice(0, 7) && "Array]" === n.slice(-6);
      }
      function We(e) {
        return (
          null !== e && "[object Object]" === Object.prototype.toString.call(e)
        );
      }
      const nn = (e) =>
        ("number" == typeof e || e instanceof Number) && isFinite(+e);
      function ji(e, n) {
        return nn(e) ? e : n;
      }
      function Pe(e, n) {
        return typeof e > "u" ? n : e;
      }
      const nI = (e, n) =>
        "string" == typeof e && e.endsWith("%")
          ? (parseFloat(e) / 100) * n
          : +e;
      function Ft(e, n, t) {
        if (e && "function" == typeof e.call) return e.apply(t, n);
      }
      function pt(e, n, t, i) {
        let r, o, s;
        if (Pt(e))
          if (((o = e.length), i))
            for (r = o - 1; r >= 0; r--) n.call(t, e[r], r);
          else for (r = 0; r < o; r++) n.call(t, e[r], r);
        else if (We(e))
          for (s = Object.keys(e), o = s.length, r = 0; r < o; r++)
            n.call(t, e[s[r]], s[r]);
      }
      function ap(e, n) {
        let t, i, r, o;
        if (!e || !n || e.length !== n.length) return !1;
        for (t = 0, i = e.length; t < i; ++t)
          if (
            ((r = e[t]),
            (o = n[t]),
            r.datasetIndex !== o.datasetIndex || r.index !== o.index)
          )
            return !1;
        return !0;
      }
      function lp(e) {
        if (Pt(e)) return e.map(lp);
        if (We(e)) {
          const n = Object.create(null),
            t = Object.keys(e),
            i = t.length;
          let r = 0;
          for (; r < i; ++r) n[t[r]] = lp(e[t[r]]);
          return n;
        }
        return e;
      }
      function iI(e) {
        return -1 === ["__proto__", "prototype", "constructor"].indexOf(e);
      }
      function i$(e, n, t, i) {
        if (!iI(e)) return;
        const r = n[e],
          o = t[e];
        We(r) && We(o) ? Du(r, o, i) : (n[e] = lp(o));
      }
      function Du(e, n, t) {
        const i = Pt(n) ? n : [n],
          r = i.length;
        if (!We(e)) return e;
        const o = (t = t || {}).merger || i$;
        for (let s = 0; s < r; ++s) {
          if (!We((n = i[s]))) continue;
          const a = Object.keys(n);
          for (let l = 0, c = a.length; l < c; ++l) o(a[l], e, n, t);
        }
        return e;
      }
      function Su(e, n) {
        return Du(e, n, { merger: r$ });
      }
      function r$(e, n, t) {
        if (!iI(e)) return;
        const i = n[e],
          r = t[e];
        We(i) && We(r)
          ? Su(i, r)
          : Object.prototype.hasOwnProperty.call(n, e) || (n[e] = lp(r));
      }
      const rI = { "": (e) => e, x: (e) => e.x, y: (e) => e.y };
      function Jo(e, n) {
        return (
          rI[n] ||
          (rI[n] = (function o$(e) {
            const n = (function s$(e) {
              const n = e.split("."),
                t = [];
              let i = "";
              for (const r of n)
                (i += r),
                  i.endsWith("\\")
                    ? (i = i.slice(0, -1) + ".")
                    : (t.push(i), (i = ""));
              return t;
            })(e);
            return (t) => {
              for (const i of n) {
                if ("" === i) break;
                t = t && t[i];
              }
              return t;
            };
          })(n))
        )(e);
      }
      function Gv(e) {
        return e.charAt(0).toUpperCase() + e.slice(1);
      }
      const Ui = (e) => typeof e < "u",
        es = (e) => "function" == typeof e,
        oI = (e, n) => {
          if (e.size !== n.size) return !1;
          for (const t of e) if (!n.has(t)) return !1;
          return !0;
        },
        jt = Math.PI,
        vt = 2 * jt,
        l$ = vt + jt,
        cp = Number.POSITIVE_INFINITY,
        c$ = jt / 180,
        Kt = jt / 2,
        ku = jt / 4,
        sI = (2 * jt) / 3,
        Wi = Math.log10,
        Nr = Math.sign;
      function aI(e) {
        const n = Math.round(e);
        e = Tu(e, n, e / 1e3) ? n : e;
        const t = Math.pow(10, Math.floor(Wi(e))),
          i = e / t;
        return (i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * t;
      }
      function Cl(e) {
        return !isNaN(parseFloat(e)) && isFinite(e);
      }
      function Tu(e, n, t) {
        return Math.abs(e - n) < t;
      }
      function lI(e, n, t) {
        let i, r, o;
        for (i = 0, r = e.length; i < r; i++)
          (o = e[i][t]),
            isNaN(o) ||
              ((n.min = Math.min(n.min, o)), (n.max = Math.max(n.max, o)));
      }
      function ur(e) {
        return e * (jt / 180);
      }
      function Yv(e) {
        return e * (180 / jt);
      }
      function cI(e) {
        if (!nn(e)) return;
        let n = 1,
          t = 0;
        for (; Math.round(e * n) / n !== e; ) (n *= 10), t++;
        return t;
      }
      function uI(e, n) {
        const t = n.x - e.x,
          i = n.y - e.y,
          r = Math.sqrt(t * t + i * i);
        let o = Math.atan2(i, t);
        return o < -0.5 * jt && (o += vt), { angle: o, distance: r };
      }
      function Kv(e, n) {
        return Math.sqrt(Math.pow(n.x - e.x, 2) + Math.pow(n.y - e.y, 2));
      }
      function h$(e, n) {
        return ((e - n + l$) % vt) - jt;
      }
      function Ti(e) {
        return ((e % vt) + vt) % vt;
      }
      function Eu(e, n, t, i) {
        const r = Ti(e),
          o = Ti(n),
          s = Ti(t),
          a = Ti(o - r),
          l = Ti(s - r),
          c = Ti(r - o),
          u = Ti(r - s);
        return r === o || r === s || (i && o === s) || (a > l && c < u);
      }
      function xn(e, n, t) {
        return Math.max(n, Math.min(t, e));
      }
      function vo(e, n, t, i = 1e-6) {
        return e >= Math.min(n, t) - i && e <= Math.max(n, t) + i;
      }
      function Zv(e, n, t) {
        t = t || ((s) => e[s] < n);
        let o,
          i = e.length - 1,
          r = 0;
        for (; i - r > 1; ) (o = (r + i) >> 1), t(o) ? (r = o) : (i = o);
        return { lo: r, hi: i };
      }
      const bo = (e, n, t, i) =>
          Zv(e, t, i ? (r) => e[r][n] <= t : (r) => e[r][n] < t),
        p$ = (e, n, t) => Zv(e, t, (i) => e[i][n] >= t),
        dI = ["push", "pop", "shift", "splice", "unshift"];
      function hI(e, n) {
        const t = e._chartjs;
        if (!t) return;
        const i = t.listeners,
          r = i.indexOf(n);
        -1 !== r && i.splice(r, 1),
          !(i.length > 0) &&
            (dI.forEach((o) => {
              delete e[o];
            }),
            delete e._chartjs);
      }
      function fI(e) {
        const n = new Set();
        let t, i;
        for (t = 0, i = e.length; t < i; ++t) n.add(e[t]);
        return n.size === i ? e : Array.from(n);
      }
      const pI =
        typeof window > "u"
          ? function (e) {
              return e();
            }
          : window.requestAnimationFrame;
      function gI(e, n, t) {
        const i = t || ((s) => Array.prototype.slice.call(s));
        let r = !1,
          o = [];
        return function (...s) {
          (o = i(s)),
            r ||
              ((r = !0),
              pI.call(window, () => {
                (r = !1), e.apply(n, o);
              }));
        };
      }
      const Qv = (e) =>
          "start" === e ? "left" : "end" === e ? "right" : "center",
        Hn = (e, n, t) => ("start" === e ? n : "end" === e ? t : (n + t) / 2);
      function mI(e, n, t) {
        const i = n.length;
        let r = 0,
          o = i;
        if (e._sorted) {
          const { iScale: s, _parsed: a } = e,
            l = s.axis,
            {
              min: c,
              max: u,
              minDefined: f,
              maxDefined: g,
            } = s.getUserBounds();
          f &&
            (r = xn(
              Math.min(
                bo(a, s.axis, c).lo,
                t ? i : bo(n, l, s.getPixelForValue(c)).lo
              ),
              0,
              i - 1
            )),
            (o = g
              ? xn(
                  Math.max(
                    bo(a, s.axis, u, !0).hi + 1,
                    t ? 0 : bo(n, l, s.getPixelForValue(u), !0).hi + 1
                  ),
                  r,
                  i
                ) - r
              : i - r);
        }
        return { start: r, count: o };
      }
      function _I(e) {
        const { xScale: n, yScale: t, _scaleRanges: i } = e,
          r = { xmin: n.min, xmax: n.max, ymin: t.min, ymax: t.max };
        if (!i) return (e._scaleRanges = r), !0;
        const o =
          i.xmin !== n.min ||
          i.xmax !== n.max ||
          i.ymin !== t.min ||
          i.ymax !== t.max;
        return Object.assign(i, r), o;
      }
      const up = (e) => 0 === e || 1 === e,
        yI = (e, n, t) =>
          -Math.pow(2, 10 * (e -= 1)) * Math.sin(((e - n) * vt) / t),
        vI = (e, n, t) =>
          Math.pow(2, -10 * e) * Math.sin(((e - n) * vt) / t) + 1,
        Iu = {
          linear: (e) => e,
          easeInQuad: (e) => e * e,
          easeOutQuad: (e) => -e * (e - 2),
          easeInOutQuad: (e) =>
            (e /= 0.5) < 1 ? 0.5 * e * e : -0.5 * (--e * (e - 2) - 1),
          easeInCubic: (e) => e * e * e,
          easeOutCubic: (e) => (e -= 1) * e * e + 1,
          easeInOutCubic: (e) =>
            (e /= 0.5) < 1 ? 0.5 * e * e * e : 0.5 * ((e -= 2) * e * e + 2),
          easeInQuart: (e) => e * e * e * e,
          easeOutQuart: (e) => -((e -= 1) * e * e * e - 1),
          easeInOutQuart: (e) =>
            (e /= 0.5) < 1
              ? 0.5 * e * e * e * e
              : -0.5 * ((e -= 2) * e * e * e - 2),
          easeInQuint: (e) => e * e * e * e * e,
          easeOutQuint: (e) => (e -= 1) * e * e * e * e + 1,
          easeInOutQuint: (e) =>
            (e /= 0.5) < 1
              ? 0.5 * e * e * e * e * e
              : 0.5 * ((e -= 2) * e * e * e * e + 2),
          easeInSine: (e) => 1 - Math.cos(e * Kt),
          easeOutSine: (e) => Math.sin(e * Kt),
          easeInOutSine: (e) => -0.5 * (Math.cos(jt * e) - 1),
          easeInExpo: (e) => (0 === e ? 0 : Math.pow(2, 10 * (e - 1))),
          easeOutExpo: (e) => (1 === e ? 1 : 1 - Math.pow(2, -10 * e)),
          easeInOutExpo: (e) =>
            up(e)
              ? e
              : e < 0.5
              ? 0.5 * Math.pow(2, 10 * (2 * e - 1))
              : 0.5 * (2 - Math.pow(2, -10 * (2 * e - 1))),
          easeInCirc: (e) => (e >= 1 ? e : -(Math.sqrt(1 - e * e) - 1)),
          easeOutCirc: (e) => Math.sqrt(1 - (e -= 1) * e),
          easeInOutCirc: (e) =>
            (e /= 0.5) < 1
              ? -0.5 * (Math.sqrt(1 - e * e) - 1)
              : 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1),
          easeInElastic: (e) => (up(e) ? e : yI(e, 0.075, 0.3)),
          easeOutElastic: (e) => (up(e) ? e : vI(e, 0.075, 0.3)),
          easeInOutElastic: (e) =>
            up(e)
              ? e
              : e < 0.5
              ? 0.5 * yI(2 * e, 0.1125, 0.45)
              : 0.5 + 0.5 * vI(2 * e - 1, 0.1125, 0.45),
          easeInBack: (e) => e * e * (2.70158 * e - 1.70158),
          easeOutBack: (e) => (e -= 1) * e * (2.70158 * e + 1.70158) + 1,
          easeInOutBack(e) {
            let n = 1.70158;
            return (e /= 0.5) < 1
              ? e * e * ((1 + (n *= 1.525)) * e - n) * 0.5
              : 0.5 * ((e -= 2) * e * ((1 + (n *= 1.525)) * e + n) + 2);
          },
          easeInBounce: (e) => 1 - Iu.easeOutBounce(1 - e),
          easeOutBounce: (e) =>
            e < 1 / 2.75
              ? 7.5625 * e * e
              : e < 2 / 2.75
              ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75
              : e < 2.5 / 2.75
              ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375
              : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375,
          easeInOutBounce: (e) =>
            e < 0.5
              ? 0.5 * Iu.easeInBounce(2 * e)
              : 0.5 * Iu.easeOutBounce(2 * e - 1) + 0.5,
        };
      function Ou(e) {
        return (e + 0.5) | 0;
      }
      const ts = (e, n, t) => Math.max(Math.min(e, t), n);
      function Au(e) {
        return ts(Ou(2.55 * e), 0, 255);
      }
      function ns(e) {
        return ts(Ou(255 * e), 0, 255);
      }
      function wo(e) {
        return ts(Ou(e / 2.55) / 100, 0, 1);
      }
      function bI(e) {
        return ts(Ou(100 * e), 0, 100);
      }
      const $i = {
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          6: 6,
          7: 7,
          8: 8,
          9: 9,
          A: 10,
          B: 11,
          C: 12,
          D: 13,
          E: 14,
          F: 15,
          a: 10,
          b: 11,
          c: 12,
          d: 13,
          e: 14,
          f: 15,
        },
        Xv = [..."0123456789ABCDEF"],
        v$ = (e) => Xv[15 & e],
        b$ = (e) => Xv[(240 & e) >> 4] + Xv[15 & e],
        dp = (e) => (240 & e) >> 4 == (15 & e);
      const D$ =
        /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
      function wI(e, n, t) {
        const i = n * Math.min(t, 1 - t),
          r = (o, s = (o + e / 30) % 12) =>
            t - i * Math.max(Math.min(s - 3, 9 - s, 1), -1);
        return [r(0), r(8), r(4)];
      }
      function S$(e, n, t) {
        const i = (r, o = (r + e / 60) % 6) =>
          t - t * n * Math.max(Math.min(o, 4 - o, 1), 0);
        return [i(5), i(3), i(1)];
      }
      function k$(e, n, t) {
        const i = wI(e, 1, 0.5);
        let r;
        for (
          n + t > 1 && ((r = 1 / (n + t)), (n *= r), (t *= r)), r = 0;
          r < 3;
          r++
        )
          (i[r] *= 1 - n - t), (i[r] += n);
        return i;
      }
      function Jv(e) {
        const t = e.r / 255,
          i = e.g / 255,
          r = e.b / 255,
          o = Math.max(t, i, r),
          s = Math.min(t, i, r),
          a = (o + s) / 2;
        let l, c, u;
        return (
          o !== s &&
            ((u = o - s),
            (c = a > 0.5 ? u / (2 - o - s) : u / (o + s)),
            (l = (function T$(e, n, t, i, r) {
              return e === r
                ? (n - t) / i + (n < t ? 6 : 0)
                : n === r
                ? (t - e) / i + 2
                : (e - n) / i + 4;
            })(t, i, r, u, o)),
            (l = 60 * l + 0.5)),
          [0 | l, c || 0, a]
        );
      }
      function eb(e, n, t, i) {
        return (Array.isArray(n) ? e(n[0], n[1], n[2]) : e(n, t, i)).map(ns);
      }
      function tb(e, n, t) {
        return eb(wI, e, n, t);
      }
      function CI(e) {
        return ((e % 360) + 360) % 360;
      }
      const xI = {
          x: "dark",
          Z: "light",
          Y: "re",
          X: "blu",
          W: "gr",
          V: "medium",
          U: "slate",
          A: "ee",
          T: "ol",
          S: "or",
          B: "ra",
          C: "lateg",
          D: "ights",
          R: "in",
          Q: "turquois",
          E: "hi",
          P: "ro",
          O: "al",
          N: "le",
          M: "de",
          L: "yello",
          F: "en",
          K: "ch",
          G: "arks",
          H: "ea",
          I: "ightg",
          J: "wh",
        },
        MI = {
          OiceXe: "f0f8ff",
          antiquewEte: "faebd7",
          aqua: "ffff",
          aquamarRe: "7fffd4",
          azuY: "f0ffff",
          beige: "f5f5dc",
          bisque: "ffe4c4",
          black: "0",
          blanKedOmond: "ffebcd",
          Xe: "ff",
          XeviTet: "8a2be2",
          bPwn: "a52a2a",
          burlywood: "deb887",
          caMtXe: "5f9ea0",
          KartYuse: "7fff00",
          KocTate: "d2691e",
          cSO: "ff7f50",
          cSnflowerXe: "6495ed",
          cSnsilk: "fff8dc",
          crimson: "dc143c",
          cyan: "ffff",
          xXe: "8b",
          xcyan: "8b8b",
          xgTMnPd: "b8860b",
          xWay: "a9a9a9",
          xgYF: "6400",
          xgYy: "a9a9a9",
          xkhaki: "bdb76b",
          xmagFta: "8b008b",
          xTivegYF: "556b2f",
          xSange: "ff8c00",
          xScEd: "9932cc",
          xYd: "8b0000",
          xsOmon: "e9967a",
          xsHgYF: "8fbc8f",
          xUXe: "483d8b",
          xUWay: "2f4f4f",
          xUgYy: "2f4f4f",
          xQe: "ced1",
          xviTet: "9400d3",
          dAppRk: "ff1493",
          dApskyXe: "bfff",
          dimWay: "696969",
          dimgYy: "696969",
          dodgerXe: "1e90ff",
          fiYbrick: "b22222",
          flSOwEte: "fffaf0",
          foYstWAn: "228b22",
          fuKsia: "ff00ff",
          gaRsbSo: "dcdcdc",
          ghostwEte: "f8f8ff",
          gTd: "ffd700",
          gTMnPd: "daa520",
          Way: "808080",
          gYF: "8000",
          gYFLw: "adff2f",
          gYy: "808080",
          honeyMw: "f0fff0",
          hotpRk: "ff69b4",
          RdianYd: "cd5c5c",
          Rdigo: "4b0082",
          ivSy: "fffff0",
          khaki: "f0e68c",
          lavFMr: "e6e6fa",
          lavFMrXsh: "fff0f5",
          lawngYF: "7cfc00",
          NmoncEffon: "fffacd",
          ZXe: "add8e6",
          ZcSO: "f08080",
          Zcyan: "e0ffff",
          ZgTMnPdLw: "fafad2",
          ZWay: "d3d3d3",
          ZgYF: "90ee90",
          ZgYy: "d3d3d3",
          ZpRk: "ffb6c1",
          ZsOmon: "ffa07a",
          ZsHgYF: "20b2aa",
          ZskyXe: "87cefa",
          ZUWay: "778899",
          ZUgYy: "778899",
          ZstAlXe: "b0c4de",
          ZLw: "ffffe0",
          lime: "ff00",
          limegYF: "32cd32",
          lRF: "faf0e6",
          magFta: "ff00ff",
          maPon: "800000",
          VaquamarRe: "66cdaa",
          VXe: "cd",
          VScEd: "ba55d3",
          VpurpN: "9370db",
          VsHgYF: "3cb371",
          VUXe: "7b68ee",
          VsprRggYF: "fa9a",
          VQe: "48d1cc",
          VviTetYd: "c71585",
          midnightXe: "191970",
          mRtcYam: "f5fffa",
          mistyPse: "ffe4e1",
          moccasR: "ffe4b5",
          navajowEte: "ffdead",
          navy: "80",
          Tdlace: "fdf5e6",
          Tive: "808000",
          TivedBb: "6b8e23",
          Sange: "ffa500",
          SangeYd: "ff4500",
          ScEd: "da70d6",
          pOegTMnPd: "eee8aa",
          pOegYF: "98fb98",
          pOeQe: "afeeee",
          pOeviTetYd: "db7093",
          papayawEp: "ffefd5",
          pHKpuff: "ffdab9",
          peru: "cd853f",
          pRk: "ffc0cb",
          plum: "dda0dd",
          powMrXe: "b0e0e6",
          purpN: "800080",
          YbeccapurpN: "663399",
          Yd: "ff0000",
          Psybrown: "bc8f8f",
          PyOXe: "4169e1",
          saddNbPwn: "8b4513",
          sOmon: "fa8072",
          sandybPwn: "f4a460",
          sHgYF: "2e8b57",
          sHshell: "fff5ee",
          siFna: "a0522d",
          silver: "c0c0c0",
          skyXe: "87ceeb",
          UXe: "6a5acd",
          UWay: "708090",
          UgYy: "708090",
          snow: "fffafa",
          sprRggYF: "ff7f",
          stAlXe: "4682b4",
          tan: "d2b48c",
          teO: "8080",
          tEstN: "d8bfd8",
          tomato: "ff6347",
          Qe: "40e0d0",
          viTet: "ee82ee",
          JHt: "f5deb3",
          wEte: "ffffff",
          wEtesmoke: "f5f5f5",
          Lw: "ffff00",
          LwgYF: "9acd32",
        };
      let hp;
      const N$ =
          /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/,
        nb = (e) =>
          e <= 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - 0.055,
        xl = (e) =>
          e <= 0.04045 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4);
      function fp(e, n, t) {
        if (e) {
          let i = Jv(e);
          (i[n] = Math.max(0, Math.min(i[n] + i[n] * t, 0 === n ? 360 : 1))),
            (i = tb(i)),
            (e.r = i[0]),
            (e.g = i[1]),
            (e.b = i[2]);
        }
      }
      function DI(e, n) {
        return e && Object.assign(n || {}, e);
      }
      function SI(e) {
        var n = { r: 0, g: 0, b: 0, a: 255 };
        return (
          Array.isArray(e)
            ? e.length >= 3 &&
              ((n = { r: e[0], g: e[1], b: e[2], a: 255 }),
              e.length > 3 && (n.a = ns(e[3])))
            : ((n = DI(e, { r: 0, g: 0, b: 0, a: 1 })).a = ns(n.a)),
          n
        );
      }
      function z$(e) {
        return "r" === e.charAt(0)
          ? (function L$(e) {
              const n = N$.exec(e);
              let i,
                r,
                o,
                t = 255;
              if (n) {
                if (n[7] !== i) {
                  const s = +n[7];
                  t = n[8] ? Au(s) : ts(255 * s, 0, 255);
                }
                return (
                  (i = +n[1]),
                  (r = +n[3]),
                  (o = +n[5]),
                  (i = 255 & (n[2] ? Au(i) : ts(i, 0, 255))),
                  (r = 255 & (n[4] ? Au(r) : ts(r, 0, 255))),
                  (o = 255 & (n[6] ? Au(o) : ts(o, 0, 255))),
                  { r: i, g: r, b: o, a: t }
                );
              }
            })(e)
          : (function O$(e) {
              const n = D$.exec(e);
              let i,
                t = 255;
              if (!n) return;
              n[5] !== i && (t = n[6] ? Au(+n[5]) : ns(+n[5]));
              const r = CI(+n[2]),
                o = +n[3] / 100,
                s = +n[4] / 100;
              return (
                (i =
                  "hwb" === n[1]
                    ? (function E$(e, n, t) {
                        return eb(k$, e, n, t);
                      })(r, o, s)
                    : "hsv" === n[1]
                    ? (function I$(e, n, t) {
                        return eb(S$, e, n, t);
                      })(r, o, s)
                    : tb(r, o, s)),
                { r: i[0], g: i[1], b: i[2], a: t }
              );
            })(e);
      }
      class pp {
        constructor(n) {
          if (n instanceof pp) return n;
          const t = typeof n;
          let i;
          "object" === t
            ? (i = SI(n))
            : "string" === t &&
              (i =
                (function C$(e) {
                  var t,
                    n = e.length;
                  return (
                    "#" === e[0] &&
                      (4 === n || 5 === n
                        ? (t = {
                            r: 255 & (17 * $i[e[1]]),
                            g: 255 & (17 * $i[e[2]]),
                            b: 255 & (17 * $i[e[3]]),
                            a: 5 === n ? 17 * $i[e[4]] : 255,
                          })
                        : (7 === n || 9 === n) &&
                          (t = {
                            r: ($i[e[1]] << 4) | $i[e[2]],
                            g: ($i[e[3]] << 4) | $i[e[4]],
                            b: ($i[e[5]] << 4) | $i[e[6]],
                            a: 9 === n ? ($i[e[7]] << 4) | $i[e[8]] : 255,
                          })),
                    t
                  );
                })(n) ||
                (function R$(e) {
                  hp ||
                    ((hp = (function F$() {
                      const e = {},
                        n = Object.keys(MI),
                        t = Object.keys(xI);
                      let i, r, o, s, a;
                      for (i = 0; i < n.length; i++) {
                        for (s = a = n[i], r = 0; r < t.length; r++)
                          (o = t[r]), (a = a.replace(o, xI[o]));
                        (o = parseInt(MI[s], 16)),
                          (e[a] = [(o >> 16) & 255, (o >> 8) & 255, 255 & o]);
                      }
                      return e;
                    })()),
                    (hp.transparent = [0, 0, 0, 0]));
                  const n = hp[e.toLowerCase()];
                  return (
                    n && {
                      r: n[0],
                      g: n[1],
                      b: n[2],
                      a: 4 === n.length ? n[3] : 255,
                    }
                  );
                })(n) ||
                z$(n)),
            (this._rgb = i),
            (this._valid = !!i);
        }
        get valid() {
          return this._valid;
        }
        get rgb() {
          var n = DI(this._rgb);
          return n && (n.a = wo(n.a)), n;
        }
        set rgb(n) {
          this._rgb = SI(n);
        }
        rgbString() {
          return this._valid
            ? (function B$(e) {
                return (
                  e &&
                  (e.a < 255
                    ? `rgba(${e.r}, ${e.g}, ${e.b}, ${wo(e.a)})`
                    : `rgb(${e.r}, ${e.g}, ${e.b})`)
                );
              })(this._rgb)
            : void 0;
        }
        hexString() {
          return this._valid
            ? (function M$(e) {
                var n = ((e) => dp(e.r) && dp(e.g) && dp(e.b) && dp(e.a))(e)
                  ? v$
                  : b$;
                return e
                  ? "#" +
                      n(e.r) +
                      n(e.g) +
                      n(e.b) +
                      ((e, n) => (e < 255 ? n(e) : ""))(e.a, n)
                  : void 0;
              })(this._rgb)
            : void 0;
        }
        hslString() {
          return this._valid
            ? (function P$(e) {
                if (!e) return;
                const n = Jv(e),
                  t = n[0],
                  i = bI(n[1]),
                  r = bI(n[2]);
                return e.a < 255
                  ? `hsla(${t}, ${i}%, ${r}%, ${wo(e.a)})`
                  : `hsl(${t}, ${i}%, ${r}%)`;
              })(this._rgb)
            : void 0;
        }
        mix(n, t) {
          if (n) {
            const i = this.rgb,
              r = n.rgb;
            let o;
            const s = t === o ? 0.5 : t,
              a = 2 * s - 1,
              l = i.a - r.a,
              c = ((a * l == -1 ? a : (a + l) / (1 + a * l)) + 1) / 2;
            (o = 1 - c),
              (i.r = 255 & (c * i.r + o * r.r + 0.5)),
              (i.g = 255 & (c * i.g + o * r.g + 0.5)),
              (i.b = 255 & (c * i.b + o * r.b + 0.5)),
              (i.a = s * i.a + (1 - s) * r.a),
              (this.rgb = i);
          }
          return this;
        }
        interpolate(n, t) {
          return (
            n &&
              (this._rgb = (function V$(e, n, t) {
                const i = xl(wo(e.r)),
                  r = xl(wo(e.g)),
                  o = xl(wo(e.b));
                return {
                  r: ns(nb(i + t * (xl(wo(n.r)) - i))),
                  g: ns(nb(r + t * (xl(wo(n.g)) - r))),
                  b: ns(nb(o + t * (xl(wo(n.b)) - o))),
                  a: e.a + t * (n.a - e.a),
                };
              })(this._rgb, n._rgb, t)),
            this
          );
        }
        clone() {
          return new pp(this.rgb);
        }
        alpha(n) {
          return (this._rgb.a = ns(n)), this;
        }
        clearer(n) {
          return (this._rgb.a *= 1 - n), this;
        }
        greyscale() {
          const n = this._rgb,
            t = Ou(0.3 * n.r + 0.59 * n.g + 0.11 * n.b);
          return (n.r = n.g = n.b = t), this;
        }
        opaquer(n) {
          return (this._rgb.a *= 1 + n), this;
        }
        negate() {
          const n = this._rgb;
          return (n.r = 255 - n.r), (n.g = 255 - n.g), (n.b = 255 - n.b), this;
        }
        lighten(n) {
          return fp(this._rgb, 2, n), this;
        }
        darken(n) {
          return fp(this._rgb, 2, -n), this;
        }
        saturate(n) {
          return fp(this._rgb, 1, n), this;
        }
        desaturate(n) {
          return fp(this._rgb, 1, -n), this;
        }
        rotate(n) {
          return (
            (function A$(e, n) {
              var t = Jv(e);
              (t[0] = CI(t[0] + n)),
                (t = tb(t)),
                (e.r = t[0]),
                (e.g = t[1]),
                (e.b = t[2]);
            })(this._rgb, n),
            this
          );
        }
      }
      function kI(e) {
        return new pp(e);
      }
      function TI(e) {
        if (e && "object" == typeof e) {
          const n = e.toString();
          return (
            "[object CanvasPattern]" === n || "[object CanvasGradient]" === n
          );
        }
        return !1;
      }
      function EI(e) {
        return TI(e) ? e : kI(e);
      }
      function ib(e) {
        return TI(e) ? e : kI(e).saturate(0.5).darken(0.1).hexString();
      }
      const qs = Object.create(null),
        rb = Object.create(null);
      function Pu(e, n) {
        if (!n) return e;
        const t = n.split(".");
        for (let i = 0, r = t.length; i < r; ++i) {
          const o = t[i];
          e = e[o] || (e[o] = Object.create(null));
        }
        return e;
      }
      function ob(e, n, t) {
        return "string" == typeof n ? Du(Pu(e, n), t) : Du(Pu(e, ""), n);
      }
      var $e = new (class H$ {
        constructor(n) {
          (this.animation = void 0),
            (this.backgroundColor = "rgba(0,0,0,0.1)"),
            (this.borderColor = "rgba(0,0,0,0.1)"),
            (this.color = "#666"),
            (this.datasets = {}),
            (this.devicePixelRatio = (t) =>
              t.chart.platform.getDevicePixelRatio()),
            (this.elements = {}),
            (this.events = [
              "mousemove",
              "mouseout",
              "click",
              "touchstart",
              "touchmove",
            ]),
            (this.font = {
              family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
              size: 12,
              style: "normal",
              lineHeight: 1.2,
              weight: null,
            }),
            (this.hover = {}),
            (this.hoverBackgroundColor = (t, i) => ib(i.backgroundColor)),
            (this.hoverBorderColor = (t, i) => ib(i.borderColor)),
            (this.hoverColor = (t, i) => ib(i.color)),
            (this.indexAxis = "x"),
            (this.interaction = {
              mode: "nearest",
              intersect: !0,
              includeInvisible: !1,
            }),
            (this.maintainAspectRatio = !0),
            (this.onHover = null),
            (this.onClick = null),
            (this.parsing = !0),
            (this.plugins = {}),
            (this.responsive = !0),
            (this.scale = void 0),
            (this.scales = {}),
            (this.showLine = !0),
            (this.drawActiveElementsOnTop = !0),
            this.describe(n);
        }
        set(n, t) {
          return ob(this, n, t);
        }
        get(n) {
          return Pu(this, n);
        }
        describe(n, t) {
          return ob(rb, n, t);
        }
        override(n, t) {
          return ob(qs, n, t);
        }
        route(n, t, i, r) {
          const o = Pu(this, n),
            s = Pu(this, i),
            a = "_" + t;
          Object.defineProperties(o, {
            [a]: { value: o[t], writable: !0 },
            [t]: {
              enumerable: !0,
              get() {
                const l = this[a],
                  c = s[r];
                return We(l) ? Object.assign({}, c, l) : Pe(l, c);
              },
              set(l) {
                this[a] = l;
              },
            },
          });
        }
      })({
        _scriptable: (e) => !e.startsWith("on"),
        _indexable: (e) => "events" !== e,
        hover: { _fallback: "interaction" },
        interaction: { _scriptable: !1, _indexable: !1 },
      });
      function gp(e, n, t, i, r) {
        let o = n[r];
        return (
          o || ((o = n[r] = e.measureText(r).width), t.push(r)),
          o > i && (i = o),
          i
        );
      }
      function U$(e, n, t, i) {
        let r = ((i = i || {}).data = i.data || {}),
          o = (i.garbageCollect = i.garbageCollect || []);
        i.font !== n &&
          ((r = i.data = {}), (o = i.garbageCollect = []), (i.font = n)),
          e.save(),
          (e.font = n);
        let s = 0;
        const a = t.length;
        let l, c, u, f, g;
        for (l = 0; l < a; l++)
          if (((f = t[l]), null != f && !0 !== Pt(f))) s = gp(e, r, o, s, f);
          else if (Pt(f))
            for (c = 0, u = f.length; c < u; c++)
              (g = f[c]), null != g && !Pt(g) && (s = gp(e, r, o, s, g));
        e.restore();
        const m = o.length / 2;
        if (m > t.length) {
          for (l = 0; l < m; l++) delete r[o[l]];
          o.splice(0, m);
        }
        return s;
      }
      function Gs(e, n, t) {
        const i = e.currentDevicePixelRatio,
          r = 0 !== t ? Math.max(t / 2, 0.5) : 0;
        return Math.round((n - r) * i) / i + r;
      }
      function II(e, n) {
        (n = n || e.getContext("2d")).save(),
          n.resetTransform(),
          n.clearRect(0, 0, e.width, e.height),
          n.restore();
      }
      function sb(e, n, t, i) {
        OI(e, n, t, i, null);
      }
      function OI(e, n, t, i, r) {
        let o, s, a, l, c, u;
        const f = n.pointStyle,
          g = n.rotation,
          m = n.radius;
        let _ = (g || 0) * c$;
        if (
          f &&
          "object" == typeof f &&
          ((o = f.toString()),
          "[object HTMLImageElement]" === o ||
            "[object HTMLCanvasElement]" === o)
        )
          return (
            e.save(),
            e.translate(t, i),
            e.rotate(_),
            e.drawImage(f, -f.width / 2, -f.height / 2, f.width, f.height),
            void e.restore()
          );
        if (!(isNaN(m) || m <= 0)) {
          switch ((e.beginPath(), f)) {
            default:
              r ? e.ellipse(t, i, r / 2, m, 0, 0, vt) : e.arc(t, i, m, 0, vt),
                e.closePath();
              break;
            case "triangle":
              e.moveTo(t + Math.sin(_) * m, i - Math.cos(_) * m),
                (_ += sI),
                e.lineTo(t + Math.sin(_) * m, i - Math.cos(_) * m),
                (_ += sI),
                e.lineTo(t + Math.sin(_) * m, i - Math.cos(_) * m),
                e.closePath();
              break;
            case "rectRounded":
              (c = 0.516 * m),
                (l = m - c),
                (s = Math.cos(_ + ku) * l),
                (a = Math.sin(_ + ku) * l),
                e.arc(t - s, i - a, c, _ - jt, _ - Kt),
                e.arc(t + a, i - s, c, _ - Kt, _),
                e.arc(t + s, i + a, c, _, _ + Kt),
                e.arc(t - a, i + s, c, _ + Kt, _ + jt),
                e.closePath();
              break;
            case "rect":
              if (!g) {
                (l = Math.SQRT1_2 * m),
                  (u = r ? r / 2 : l),
                  e.rect(t - u, i - l, 2 * u, 2 * l);
                break;
              }
              _ += ku;
            case "rectRot":
              (s = Math.cos(_) * m),
                (a = Math.sin(_) * m),
                e.moveTo(t - s, i - a),
                e.lineTo(t + a, i - s),
                e.lineTo(t + s, i + a),
                e.lineTo(t - a, i + s),
                e.closePath();
              break;
            case "crossRot":
              _ += ku;
            case "cross":
              (s = Math.cos(_) * m),
                (a = Math.sin(_) * m),
                e.moveTo(t - s, i - a),
                e.lineTo(t + s, i + a),
                e.moveTo(t + a, i - s),
                e.lineTo(t - a, i + s);
              break;
            case "star":
              (s = Math.cos(_) * m),
                (a = Math.sin(_) * m),
                e.moveTo(t - s, i - a),
                e.lineTo(t + s, i + a),
                e.moveTo(t + a, i - s),
                e.lineTo(t - a, i + s),
                (_ += ku),
                (s = Math.cos(_) * m),
                (a = Math.sin(_) * m),
                e.moveTo(t - s, i - a),
                e.lineTo(t + s, i + a),
                e.moveTo(t + a, i - s),
                e.lineTo(t - a, i + s);
              break;
            case "line":
              (s = r ? r / 2 : Math.cos(_) * m),
                (a = Math.sin(_) * m),
                e.moveTo(t - s, i - a),
                e.lineTo(t + s, i + a);
              break;
            case "dash":
              e.moveTo(t, i),
                e.lineTo(t + Math.cos(_) * m, i + Math.sin(_) * m);
          }
          e.fill(), n.borderWidth > 0 && e.stroke();
        }
      }
      function Fu(e, n, t) {
        return (
          (t = t || 0.5),
          !n ||
            (e &&
              e.x > n.left - t &&
              e.x < n.right + t &&
              e.y > n.top - t &&
              e.y < n.bottom + t)
        );
      }
      function mp(e, n) {
        e.save(),
          e.beginPath(),
          e.rect(n.left, n.top, n.right - n.left, n.bottom - n.top),
          e.clip();
      }
      function _p(e) {
        e.restore();
      }
      function W$(e, n, t, i, r) {
        if (!n) return e.lineTo(t.x, t.y);
        if ("middle" === r) {
          const o = (n.x + t.x) / 2;
          e.lineTo(o, n.y), e.lineTo(o, t.y);
        } else ("after" === r) != !!i ? e.lineTo(n.x, t.y) : e.lineTo(t.x, n.y);
        e.lineTo(t.x, t.y);
      }
      function $$(e, n, t, i) {
        if (!n) return e.lineTo(t.x, t.y);
        e.bezierCurveTo(
          i ? n.cp1x : n.cp2x,
          i ? n.cp1y : n.cp2y,
          i ? t.cp2x : t.cp1x,
          i ? t.cp2y : t.cp1y,
          t.x,
          t.y
        );
      }
      function Ys(e, n, t, i, r, o = {}) {
        const s = Pt(n) ? n : [n],
          a = o.strokeWidth > 0 && "" !== o.strokeColor;
        let l, c;
        for (
          e.save(),
            e.font = r.string,
            (function q$(e, n) {
              n.translation && e.translate(n.translation[0], n.translation[1]),
                Xe(n.rotation) || e.rotate(n.rotation),
                n.color && (e.fillStyle = n.color),
                n.textAlign && (e.textAlign = n.textAlign),
                n.textBaseline && (e.textBaseline = n.textBaseline);
            })(e, o),
            l = 0;
          l < s.length;
          ++l
        )
          (c = s[l]),
            a &&
              (o.strokeColor && (e.strokeStyle = o.strokeColor),
              Xe(o.strokeWidth) || (e.lineWidth = o.strokeWidth),
              e.strokeText(c, t, i, o.maxWidth)),
            e.fillText(c, t, i, o.maxWidth),
            G$(e, t, i, c, o),
            (i += r.lineHeight);
        e.restore();
      }
      function G$(e, n, t, i, r) {
        if (r.strikethrough || r.underline) {
          const o = e.measureText(i),
            s = n - o.actualBoundingBoxLeft,
            a = n + o.actualBoundingBoxRight,
            c = t + o.actualBoundingBoxDescent,
            u = r.strikethrough ? (t - o.actualBoundingBoxAscent + c) / 2 : c;
          (e.strokeStyle = e.fillStyle),
            e.beginPath(),
            (e.lineWidth = r.decorationWidth || 2),
            e.moveTo(s, u),
            e.lineTo(a, u),
            e.stroke();
        }
      }
      function Ru(e, n) {
        const { x: t, y: i, w: r, h: o, radius: s } = n;
        e.arc(t + s.topLeft, i + s.topLeft, s.topLeft, -Kt, jt, !0),
          e.lineTo(t, i + o - s.bottomLeft),
          e.arc(
            t + s.bottomLeft,
            i + o - s.bottomLeft,
            s.bottomLeft,
            jt,
            Kt,
            !0
          ),
          e.lineTo(t + r - s.bottomRight, i + o),
          e.arc(
            t + r - s.bottomRight,
            i + o - s.bottomRight,
            s.bottomRight,
            Kt,
            0,
            !0
          ),
          e.lineTo(t + r, i + s.topRight),
          e.arc(t + r - s.topRight, i + s.topRight, s.topRight, 0, -Kt, !0),
          e.lineTo(t + s.topLeft, i);
      }
      const Y$ = new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/),
        K$ = new RegExp(
          /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/
        );
      function Z$(e, n) {
        const t = ("" + e).match(Y$);
        if (!t || "normal" === t[1]) return 1.2 * n;
        switch (((e = +t[2]), t[3])) {
          case "px":
            return e;
          case "%":
            e /= 100;
        }
        return n * e;
      }
      const Q$ = (e) => +e || 0;
      function ab(e, n) {
        const t = {},
          i = We(n),
          r = i ? Object.keys(n) : n,
          o = We(e) ? (i ? (s) => Pe(e[s], e[n[s]]) : (s) => e[s]) : () => e;
        for (const s of r) t[s] = Q$(o(s));
        return t;
      }
      function AI(e) {
        return ab(e, { top: "y", right: "x", bottom: "y", left: "x" });
      }
      function Ks(e) {
        return ab(e, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
      }
      function jn(e) {
        const n = AI(e);
        return (n.width = n.left + n.right), (n.height = n.top + n.bottom), n;
      }
      function _n(e, n) {
        let t = Pe((e = e || {}).size, (n = n || $e.font).size);
        "string" == typeof t && (t = parseInt(t, 10));
        let i = Pe(e.style, n.style);
        i &&
          !("" + i).match(K$) &&
          (console.warn('Invalid font style specified: "' + i + '"'), (i = ""));
        const r = {
          family: Pe(e.family, n.family),
          lineHeight: Z$(Pe(e.lineHeight, n.lineHeight), t),
          size: t,
          style: i,
          weight: Pe(e.weight, n.weight),
          string: "",
        };
        return (
          (r.string = (function j$(e) {
            return !e || Xe(e.size) || Xe(e.family)
              ? null
              : (e.style ? e.style + " " : "") +
                  (e.weight ? e.weight + " " : "") +
                  e.size +
                  "px " +
                  e.family;
          })(r)),
          r
        );
      }
      function Nu(e, n, t, i) {
        let o,
          s,
          a,
          r = !0;
        for (o = 0, s = e.length; o < s; ++o)
          if (
            ((a = e[o]),
            void 0 !== a &&
              (void 0 !== n && "function" == typeof a && ((a = a(n)), (r = !1)),
              void 0 !== t && Pt(a) && ((a = a[t % a.length]), (r = !1)),
              void 0 !== a))
          )
            return i && !r && (i.cacheable = !1), a;
      }
      function is(e, n) {
        return Object.assign(Object.create(e), n);
      }
      function lb(e, n = [""], t = e, i, r = () => e[0]) {
        Ui(i) || (i = LI("_fallback", e));
        const o = {
          [Symbol.toStringTag]: "Object",
          _cacheable: !0,
          _scopes: e,
          _rootScopes: t,
          _fallback: i,
          _getTarget: r,
          override: (s) => lb([s, ...e], n, t, i),
        };
        return new Proxy(o, {
          deleteProperty: (s, a) => (
            delete s[a], delete s._keys, delete e[0][a], !0
          ),
          get: (s, a) =>
            FI(s, a, () =>
              (function s7(e, n, t, i) {
                let r;
                for (const o of n)
                  if (((r = LI(J$(o, e), t)), Ui(r)))
                    return cb(e, r) ? ub(t, i, e, r) : r;
              })(a, n, e, s)
            ),
          getOwnPropertyDescriptor: (s, a) =>
            Reflect.getOwnPropertyDescriptor(s._scopes[0], a),
          getPrototypeOf: () => Reflect.getPrototypeOf(e[0]),
          has: (s, a) => BI(s).includes(a),
          ownKeys: (s) => BI(s),
          set(s, a, l) {
            const c = s._storage || (s._storage = r());
            return (s[a] = c[a] = l), delete s._keys, !0;
          },
        });
      }
      function Ml(e, n, t, i) {
        const r = {
          _cacheable: !1,
          _proxy: e,
          _context: n,
          _subProxy: t,
          _stack: new Set(),
          _descriptors: PI(e, i),
          setContext: (o) => Ml(e, o, t, i),
          override: (o) => Ml(e.override(o), n, t, i),
        };
        return new Proxy(r, {
          deleteProperty: (o, s) => (delete o[s], delete e[s], !0),
          get: (o, s, a) =>
            FI(o, s, () =>
              (function e7(e, n, t) {
                const {
                  _proxy: i,
                  _context: r,
                  _subProxy: o,
                  _descriptors: s,
                } = e;
                let a = i[n];
                return (
                  es(a) &&
                    s.isScriptable(n) &&
                    (a = (function t7(e, n, t, i) {
                      const {
                        _proxy: r,
                        _context: o,
                        _subProxy: s,
                        _stack: a,
                      } = t;
                      if (a.has(e))
                        throw new Error(
                          "Recursion detected: " +
                            Array.from(a).join("->") +
                            "->" +
                            e
                        );
                      return (
                        a.add(e),
                        (n = n(o, s || i)),
                        a.delete(e),
                        cb(e, n) && (n = ub(r._scopes, r, e, n)),
                        n
                      );
                    })(n, a, e, t)),
                  Pt(a) &&
                    a.length &&
                    (a = (function n7(e, n, t, i) {
                      const {
                        _proxy: r,
                        _context: o,
                        _subProxy: s,
                        _descriptors: a,
                      } = t;
                      if (Ui(o.index) && i(e)) n = n[o.index % n.length];
                      else if (We(n[0])) {
                        const l = n,
                          c = r._scopes.filter((u) => u !== l);
                        n = [];
                        for (const u of l) {
                          const f = ub(c, r, e, u);
                          n.push(Ml(f, o, s && s[e], a));
                        }
                      }
                      return n;
                    })(n, a, e, s.isIndexable)),
                  cb(n, a) && (a = Ml(a, r, o && o[n], s)),
                  a
                );
              })(o, s, a)
            ),
          getOwnPropertyDescriptor: (o, s) =>
            o._descriptors.allKeys
              ? Reflect.has(e, s)
                ? { enumerable: !0, configurable: !0 }
                : void 0
              : Reflect.getOwnPropertyDescriptor(e, s),
          getPrototypeOf: () => Reflect.getPrototypeOf(e),
          has: (o, s) => Reflect.has(e, s),
          ownKeys: () => Reflect.ownKeys(e),
          set: (o, s, a) => ((e[s] = a), delete o[s], !0),
        });
      }
      function PI(e, n = { scriptable: !0, indexable: !0 }) {
        const {
          _scriptable: t = n.scriptable,
          _indexable: i = n.indexable,
          _allKeys: r = n.allKeys,
        } = e;
        return {
          allKeys: r,
          scriptable: t,
          indexable: i,
          isScriptable: es(t) ? t : () => t,
          isIndexable: es(i) ? i : () => i,
        };
      }
      const J$ = (e, n) => (e ? e + Gv(n) : n),
        cb = (e, n) =>
          We(n) &&
          "adapters" !== e &&
          (null === Object.getPrototypeOf(n) || n.constructor === Object);
      function FI(e, n, t) {
        if (Object.prototype.hasOwnProperty.call(e, n)) return e[n];
        const i = t();
        return (e[n] = i), i;
      }
      function RI(e, n, t) {
        return es(e) ? e(n, t) : e;
      }
      const i7 = (e, n) =>
        !0 === e ? n : "string" == typeof e ? Jo(n, e) : void 0;
      function r7(e, n, t, i, r) {
        for (const o of n) {
          const s = i7(t, o);
          if (s) {
            e.add(s);
            const a = RI(s._fallback, t, r);
            if (Ui(a) && a !== t && a !== i) return a;
          } else if (!1 === s && Ui(i) && t !== i) return null;
        }
        return !1;
      }
      function ub(e, n, t, i) {
        const r = n._rootScopes,
          o = RI(n._fallback, t, i),
          s = [...e, ...r],
          a = new Set();
        a.add(i);
        let l = NI(a, s, t, o || t, i);
        return (
          !(
            null === l ||
            (Ui(o) && o !== t && ((l = NI(a, s, o, l, i)), null === l))
          ) &&
          lb(Array.from(a), [""], r, o, () =>
            (function o7(e, n, t) {
              const i = e._getTarget();
              n in i || (i[n] = {});
              const r = i[n];
              return Pt(r) && We(t) ? t : r;
            })(n, t, i)
          )
        );
      }
      function NI(e, n, t, i, r) {
        for (; t; ) t = r7(e, n, t, i, r);
        return t;
      }
      function LI(e, n) {
        for (const t of n) {
          if (!t) continue;
          const i = t[e];
          if (Ui(i)) return i;
        }
      }
      function BI(e) {
        let n = e._keys;
        return (
          n ||
            (n = e._keys =
              (function a7(e) {
                const n = new Set();
                for (const t of e)
                  for (const i of Object.keys(t).filter(
                    (r) => !r.startsWith("_")
                  ))
                    n.add(i);
                return Array.from(n);
              })(e._scopes)),
          n
        );
      }
      function VI(e, n, t, i) {
        const { iScale: r } = e,
          { key: o = "r" } = this._parsing,
          s = new Array(i);
        let a, l, c, u;
        for (a = 0, l = i; a < l; ++a)
          (c = a + t), (u = n[c]), (s[a] = { r: r.parse(Jo(u, o), c) });
        return s;
      }
      const l7 = Number.EPSILON || 1e-14,
        Dl = (e, n) => n < e.length && !e[n].skip && e[n],
        zI = (e) => ("x" === e ? "y" : "x");
      function c7(e, n, t, i) {
        const r = e.skip ? n : e,
          o = n,
          s = t.skip ? n : t,
          a = Kv(o, r),
          l = Kv(s, o);
        let c = a / (a + l),
          u = l / (a + l);
        (c = isNaN(c) ? 0 : c), (u = isNaN(u) ? 0 : u);
        const f = i * c,
          g = i * u;
        return {
          previous: { x: o.x - f * (s.x - r.x), y: o.y - f * (s.y - r.y) },
          next: { x: o.x + g * (s.x - r.x), y: o.y + g * (s.y - r.y) },
        };
      }
      function yp(e, n, t) {
        return Math.max(Math.min(e, t), n);
      }
      function p7(e, n, t, i, r) {
        let o, s, a, l;
        if (
          (n.spanGaps && (e = e.filter((c) => !c.skip)),
          "monotone" === n.cubicInterpolationMode)
        )
          !(function h7(e, n = "x") {
            const t = zI(n),
              i = e.length,
              r = Array(i).fill(0),
              o = Array(i);
            let s,
              a,
              l,
              c = Dl(e, 0);
            for (s = 0; s < i; ++s)
              if (((a = l), (l = c), (c = Dl(e, s + 1)), l)) {
                if (c) {
                  const u = c[n] - l[n];
                  r[s] = 0 !== u ? (c[t] - l[t]) / u : 0;
                }
                o[s] = a
                  ? c
                    ? Nr(r[s - 1]) !== Nr(r[s])
                      ? 0
                      : (r[s - 1] + r[s]) / 2
                    : r[s - 1]
                  : r[s];
              }
            (function u7(e, n, t) {
              const i = e.length;
              let r,
                o,
                s,
                a,
                l,
                c = Dl(e, 0);
              for (let u = 0; u < i - 1; ++u)
                if (((l = c), (c = Dl(e, u + 1)), l && c)) {
                  if (Tu(n[u], 0, l7)) {
                    t[u] = t[u + 1] = 0;
                    continue;
                  }
                  (r = t[u] / n[u]),
                    (o = t[u + 1] / n[u]),
                    (a = Math.pow(r, 2) + Math.pow(o, 2)),
                    !(a <= 9) &&
                      ((s = 3 / Math.sqrt(a)),
                      (t[u] = r * s * n[u]),
                      (t[u + 1] = o * s * n[u]));
                }
            })(e, r, o),
              (function d7(e, n, t = "x") {
                const i = zI(t),
                  r = e.length;
                let o,
                  s,
                  a,
                  l = Dl(e, 0);
                for (let c = 0; c < r; ++c) {
                  if (((s = a), (a = l), (l = Dl(e, c + 1)), !a)) continue;
                  const u = a[t],
                    f = a[i];
                  s &&
                    ((o = (u - s[t]) / 3),
                    (a[`cp1${t}`] = u - o),
                    (a[`cp1${i}`] = f - o * n[c])),
                    l &&
                      ((o = (l[t] - u) / 3),
                      (a[`cp2${t}`] = u + o),
                      (a[`cp2${i}`] = f + o * n[c]));
                }
              })(e, o, n);
          })(e, r);
        else {
          let c = i ? e[e.length - 1] : e[0];
          for (o = 0, s = e.length; o < s; ++o)
            (a = e[o]),
              (l = c7(
                c,
                a,
                e[Math.min(o + 1, s - (i ? 0 : 1)) % s],
                n.tension
              )),
              (a.cp1x = l.previous.x),
              (a.cp1y = l.previous.y),
              (a.cp2x = l.next.x),
              (a.cp2y = l.next.y),
              (c = a);
        }
        n.capBezierPoints &&
          (function f7(e, n) {
            let t,
              i,
              r,
              o,
              s,
              a = Fu(e[0], n);
            for (t = 0, i = e.length; t < i; ++t)
              (s = o),
                (o = a),
                (a = t < i - 1 && Fu(e[t + 1], n)),
                o &&
                  ((r = e[t]),
                  s &&
                    ((r.cp1x = yp(r.cp1x, n.left, n.right)),
                    (r.cp1y = yp(r.cp1y, n.top, n.bottom))),
                  a &&
                    ((r.cp2x = yp(r.cp2x, n.left, n.right)),
                    (r.cp2y = yp(r.cp2y, n.top, n.bottom))));
          })(e, t);
      }
      function HI() {
        return typeof window < "u" && typeof document < "u";
      }
      function db(e) {
        let n = e.parentNode;
        return n && "[object ShadowRoot]" === n.toString() && (n = n.host), n;
      }
      function vp(e, n, t) {
        let i;
        return (
          "string" == typeof e
            ? ((i = parseInt(e, 10)),
              -1 !== e.indexOf("%") && (i = (i / 100) * n.parentNode[t]))
            : (i = e),
          i
        );
      }
      const bp = (e) => window.getComputedStyle(e, null),
        m7 = ["top", "right", "bottom", "left"];
      function Zs(e, n, t) {
        const i = {};
        t = t ? "-" + t : "";
        for (let r = 0; r < 4; r++) {
          const o = m7[r];
          i[o] = parseFloat(e[n + "-" + o + t]) || 0;
        }
        return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
      }
      const _7 = (e, n, t) => (e > 0 || n > 0) && (!t || !t.shadowRoot);
      function Qs(e, n) {
        if ("native" in e) return e;
        const { canvas: t, currentDevicePixelRatio: i } = n,
          r = bp(t),
          o = "border-box" === r.boxSizing,
          s = Zs(r, "padding"),
          a = Zs(r, "border", "width"),
          {
            x: l,
            y: c,
            box: u,
          } = (function y7(e, n) {
            const t = e.touches,
              i = t && t.length ? t[0] : e,
              { offsetX: r, offsetY: o } = i;
            let a,
              l,
              s = !1;
            if (_7(r, o, e.target)) (a = r), (l = o);
            else {
              const c = n.getBoundingClientRect();
              (a = i.clientX - c.left), (l = i.clientY - c.top), (s = !0);
            }
            return { x: a, y: l, box: s };
          })(e, t),
          f = s.left + (u && a.left),
          g = s.top + (u && a.top);
        let { width: m, height: _ } = n;
        return (
          o && ((m -= s.width + a.width), (_ -= s.height + a.height)),
          {
            x: Math.round((((l - f) / m) * t.width) / i),
            y: Math.round((((c - g) / _) * t.height) / i),
          }
        );
      }
      const hb = (e) => Math.round(10 * e) / 10;
      function jI(e, n, t) {
        const i = n || 1,
          r = Math.floor(e.height * i),
          o = Math.floor(e.width * i);
        (e.height = r / i), (e.width = o / i);
        const s = e.canvas;
        return (
          s.style &&
            (t || (!s.style.height && !s.style.width)) &&
            ((s.style.height = `${e.height}px`),
            (s.style.width = `${e.width}px`)),
          (e.currentDevicePixelRatio !== i ||
            s.height !== r ||
            s.width !== o) &&
            ((e.currentDevicePixelRatio = i),
            (s.height = r),
            (s.width = o),
            e.ctx.setTransform(i, 0, 0, i, 0, 0),
            !0)
        );
      }
      const w7 = (function () {
        let e = !1;
        try {
          const n = {
            get passive() {
              return (e = !0), !1;
            },
          };
          window.addEventListener("test", null, n),
            window.removeEventListener("test", null, n);
        } catch {}
        return e;
      })();
      function UI(e, n) {
        const t = (function g7(e, n) {
            return bp(e).getPropertyValue(n);
          })(e, n),
          i = t && t.match(/^(\d+)(\.\d+)?px$/);
        return i ? +i[1] : void 0;
      }
      function Xs(e, n, t, i) {
        return { x: e.x + t * (n.x - e.x), y: e.y + t * (n.y - e.y) };
      }
      function C7(e, n, t, i) {
        return {
          x: e.x + t * (n.x - e.x),
          y:
            "middle" === i
              ? t < 0.5
                ? e.y
                : n.y
              : "after" === i
              ? t < 1
                ? e.y
                : n.y
              : t > 0
              ? n.y
              : e.y,
        };
      }
      function x7(e, n, t, i) {
        const r = { x: e.cp2x, y: e.cp2y },
          o = { x: n.cp1x, y: n.cp1y },
          s = Xs(e, r, t),
          a = Xs(r, o, t),
          l = Xs(o, n, t),
          c = Xs(s, a, t),
          u = Xs(a, l, t);
        return Xs(c, u, t);
      }
      const WI = new Map();
      function Lu(e, n, t) {
        return (function M7(e, n) {
          n = n || {};
          const t = e + JSON.stringify(n);
          let i = WI.get(t);
          return i || ((i = new Intl.NumberFormat(e, n)), WI.set(t, i)), i;
        })(n, t).format(e);
      }
      function Sl(e, n, t) {
        return e
          ? (function (e, n) {
              return {
                x: (t) => e + e + n - t,
                setWidth(t) {
                  n = t;
                },
                textAlign: (t) =>
                  "center" === t ? t : "right" === t ? "left" : "right",
                xPlus: (t, i) => t - i,
                leftForLtr: (t, i) => t - i,
              };
            })(n, t)
          : {
              x: (e) => e,
              setWidth(e) {},
              textAlign: (e) => e,
              xPlus: (e, n) => e + n,
              leftForLtr: (e, n) => e,
            };
      }
      function $I(e, n) {
        let t, i;
        ("ltr" === n || "rtl" === n) &&
          ((t = e.canvas.style),
          (i = [
            t.getPropertyValue("direction"),
            t.getPropertyPriority("direction"),
          ]),
          t.setProperty("direction", n, "important"),
          (e.prevTextDirection = i));
      }
      function qI(e, n) {
        void 0 !== n &&
          (delete e.prevTextDirection,
          e.canvas.style.setProperty("direction", n[0], n[1]));
      }
      function GI(e) {
        return "angle" === e
          ? { between: Eu, compare: h$, normalize: Ti }
          : { between: vo, compare: (n, t) => n - t, normalize: (n) => n };
      }
      function YI({ start: e, end: n, count: t, loop: i, style: r }) {
        return {
          start: e % t,
          end: n % t,
          loop: i && (n - e + 1) % t == 0,
          style: r,
        };
      }
      function KI(e, n, t) {
        if (!t) return [e];
        const { property: i, start: r, end: o } = t,
          s = n.length,
          { compare: a, between: l, normalize: c } = GI(i),
          {
            start: u,
            end: f,
            loop: g,
            style: m,
          } = (function k7(e, n, t) {
            const { property: i, start: r, end: o } = t,
              { between: s, normalize: a } = GI(i),
              l = n.length;
            let g,
              m,
              { start: c, end: u, loop: f } = e;
            if (f) {
              for (
                c += l, u += l, g = 0, m = l;
                g < m && s(a(n[c % l][i]), r, o);
                ++g
              )
                c--, u--;
              (c %= l), (u %= l);
            }
            return (
              u < c && (u += l), { start: c, end: u, loop: f, style: e.style }
            );
          })(e, n, t),
          _ = [];
        let w,
          C,
          D,
          y = !1,
          v = null;
        for (let $ = u, q = u; $ <= f; ++$)
          (C = n[$ % s]),
            !C.skip &&
              ((w = c(C[i])),
              w !== D &&
                ((y = l(w, r, o)),
                null === v &&
                  (y || (l(r, D, w) && 0 !== a(r, D))) &&
                  (v = 0 === a(w, r) ? $ : q),
                null !== v &&
                  (!y || 0 === a(o, w) || l(o, D, w)) &&
                  (_.push(
                    YI({ start: v, end: $, loop: g, count: s, style: m })
                  ),
                  (v = null)),
                (q = $),
                (D = w)));
        return (
          null !== v &&
            _.push(YI({ start: v, end: f, loop: g, count: s, style: m })),
          _
        );
      }
      function ZI(e, n) {
        const t = [],
          i = e.segments;
        for (let r = 0; r < i.length; r++) {
          const o = KI(i[r], e.points, n);
          o.length && t.push(...o);
        }
        return t;
      }
      function XI(e) {
        return {
          backgroundColor: e.backgroundColor,
          borderCapStyle: e.borderCapStyle,
          borderDash: e.borderDash,
          borderDashOffset: e.borderDashOffset,
          borderJoinStyle: e.borderJoinStyle,
          borderWidth: e.borderWidth,
          borderColor: e.borderColor,
        };
      }
      function A7(e, n) {
        return n && JSON.stringify(e) !== JSON.stringify(n);
      }
      var Co = new (class P7 {
        constructor() {
          (this._request = null),
            (this._charts = new Map()),
            (this._running = !1),
            (this._lastDate = void 0);
        }
        _notify(n, t, i, r) {
          const s = t.duration;
          t.listeners[r].forEach((a) =>
            a({
              chart: n,
              initial: t.initial,
              numSteps: s,
              currentStep: Math.min(i - t.start, s),
            })
          );
        }
        _refresh() {
          this._request ||
            ((this._running = !0),
            (this._request = pI.call(window, () => {
              this._update(),
                (this._request = null),
                this._running && this._refresh();
            })));
        }
        _update(n = Date.now()) {
          let t = 0;
          this._charts.forEach((i, r) => {
            if (!i.running || !i.items.length) return;
            const o = i.items;
            let l,
              s = o.length - 1,
              a = !1;
            for (; s >= 0; --s)
              (l = o[s]),
                l._active
                  ? (l._total > i.duration && (i.duration = l._total),
                    l.tick(n),
                    (a = !0))
                  : ((o[s] = o[o.length - 1]), o.pop());
            a && (r.draw(), this._notify(r, i, n, "progress")),
              o.length ||
                ((i.running = !1),
                this._notify(r, i, n, "complete"),
                (i.initial = !1)),
              (t += o.length);
          }),
            (this._lastDate = n),
            0 === t && (this._running = !1);
        }
        _getAnims(n) {
          const t = this._charts;
          let i = t.get(n);
          return (
            i ||
              ((i = {
                running: !1,
                initial: !0,
                items: [],
                listeners: { complete: [], progress: [] },
              }),
              t.set(n, i)),
            i
          );
        }
        listen(n, t, i) {
          this._getAnims(n).listeners[t].push(i);
        }
        add(n, t) {
          !t || !t.length || this._getAnims(n).items.push(...t);
        }
        has(n) {
          return this._getAnims(n).items.length > 0;
        }
        start(n) {
          const t = this._charts.get(n);
          t &&
            ((t.running = !0),
            (t.start = Date.now()),
            (t.duration = t.items.reduce(
              (i, r) => Math.max(i, r._duration),
              0
            )),
            this._refresh());
        }
        running(n) {
          if (!this._running) return !1;
          const t = this._charts.get(n);
          return !(!t || !t.running || !t.items.length);
        }
        stop(n) {
          const t = this._charts.get(n);
          if (!t || !t.items.length) return;
          const i = t.items;
          let r = i.length - 1;
          for (; r >= 0; --r) i[r].cancel();
          (t.items = []), this._notify(n, t, Date.now(), "complete");
        }
        remove(n) {
          return this._charts.delete(n);
        }
      })();
      const JI = "transparent",
        F7 = {
          boolean: (e, n, t) => (t > 0.5 ? n : e),
          color(e, n, t) {
            const i = EI(e || JI),
              r = i.valid && EI(n || JI);
            return r && r.valid ? r.mix(i, t).hexString() : n;
          },
          number: (e, n, t) => e + (n - e) * t,
        };
      class R7 {
        constructor(n, t, i, r) {
          const o = t[i];
          r = Nu([n.to, r, o, n.from]);
          const s = Nu([n.from, o, r]);
          (this._active = !0),
            (this._fn = n.fn || F7[n.type || typeof s]),
            (this._easing = Iu[n.easing] || Iu.linear),
            (this._start = Math.floor(Date.now() + (n.delay || 0))),
            (this._duration = this._total = Math.floor(n.duration)),
            (this._loop = !!n.loop),
            (this._target = t),
            (this._prop = i),
            (this._from = s),
            (this._to = r),
            (this._promises = void 0);
        }
        active() {
          return this._active;
        }
        update(n, t, i) {
          if (this._active) {
            this._notify(!1);
            const r = this._target[this._prop],
              o = i - this._start,
              s = this._duration - o;
            (this._start = i),
              (this._duration = Math.floor(Math.max(s, n.duration))),
              (this._total += o),
              (this._loop = !!n.loop),
              (this._to = Nu([n.to, t, r, n.from])),
              (this._from = Nu([n.from, r, t]));
          }
        }
        cancel() {
          this._active &&
            (this.tick(Date.now()), (this._active = !1), this._notify(!1));
        }
        tick(n) {
          const t = n - this._start,
            i = this._duration,
            r = this._prop,
            o = this._from,
            s = this._loop,
            a = this._to;
          let l;
          if (((this._active = o !== a && (s || t < i)), !this._active))
            return (this._target[r] = a), void this._notify(!0);
          t < 0
            ? (this._target[r] = o)
            : ((l = (t / i) % 2),
              (l = s && l > 1 ? 2 - l : l),
              (l = this._easing(Math.min(1, Math.max(0, l)))),
              (this._target[r] = this._fn(o, a, l)));
        }
        wait() {
          const n = this._promises || (this._promises = []);
          return new Promise((t, i) => {
            n.push({ res: t, rej: i });
          });
        }
        _notify(n) {
          const t = n ? "res" : "rej",
            i = this._promises || [];
          for (let r = 0; r < i.length; r++) i[r][t]();
        }
      }
      $e.set("animation", {
        delay: void 0,
        duration: 1e3,
        easing: "easeOutQuart",
        fn: void 0,
        from: void 0,
        loop: void 0,
        to: void 0,
        type: void 0,
      });
      const B7 = Object.keys($e.animation);
      $e.describe("animation", {
        _fallback: !1,
        _indexable: !1,
        _scriptable: (e) =>
          "onProgress" !== e && "onComplete" !== e && "fn" !== e,
      }),
        $e.set("animations", {
          colors: {
            type: "color",
            properties: ["color", "borderColor", "backgroundColor"],
          },
          numbers: {
            type: "number",
            properties: ["x", "y", "borderWidth", "radius", "tension"],
          },
        }),
        $e.describe("animations", { _fallback: "animation" }),
        $e.set("transitions", {
          active: { animation: { duration: 400 } },
          resize: { animation: { duration: 0 } },
          show: {
            animations: {
              colors: { from: "transparent" },
              visible: { type: "boolean", duration: 0 },
            },
          },
          hide: {
            animations: {
              colors: { to: "transparent" },
              visible: { type: "boolean", easing: "linear", fn: (e) => 0 | e },
            },
          },
        });
      class eO {
        constructor(n, t) {
          (this._chart = n), (this._properties = new Map()), this.configure(t);
        }
        configure(n) {
          if (!We(n)) return;
          const t = this._properties;
          Object.getOwnPropertyNames(n).forEach((i) => {
            const r = n[i];
            if (!We(r)) return;
            const o = {};
            for (const s of B7) o[s] = r[s];
            ((Pt(r.properties) && r.properties) || [i]).forEach((s) => {
              (s === i || !t.has(s)) && t.set(s, o);
            });
          });
        }
        _animateOptions(n, t) {
          const i = t.options,
            r = (function z7(e, n) {
              if (!n) return;
              let t = e.options;
              if (t)
                return (
                  t.$shared &&
                    (e.options = t =
                      Object.assign({}, t, { $shared: !1, $animations: {} })),
                  t
                );
              e.options = n;
            })(n, i);
          if (!r) return [];
          const o = this._createAnimations(r, i);
          return (
            i.$shared &&
              (function V7(e, n) {
                const t = [],
                  i = Object.keys(n);
                for (let r = 0; r < i.length; r++) {
                  const o = e[i[r]];
                  o && o.active() && t.push(o.wait());
                }
                return Promise.all(t);
              })(n.options.$animations, i).then(
                () => {
                  n.options = i;
                },
                () => {}
              ),
            o
          );
        }
        _createAnimations(n, t) {
          const i = this._properties,
            r = [],
            o = n.$animations || (n.$animations = {}),
            s = Object.keys(t),
            a = Date.now();
          let l;
          for (l = s.length - 1; l >= 0; --l) {
            const c = s[l];
            if ("$" === c.charAt(0)) continue;
            if ("options" === c) {
              r.push(...this._animateOptions(n, t));
              continue;
            }
            const u = t[c];
            let f = o[c];
            const g = i.get(c);
            if (f) {
              if (g && f.active()) {
                f.update(g, u, a);
                continue;
              }
              f.cancel();
            }
            g && g.duration
              ? ((o[c] = f = new R7(g, n, c, u)), r.push(f))
              : (n[c] = u);
          }
          return r;
        }
        update(n, t) {
          if (0 === this._properties.size) return void Object.assign(n, t);
          const i = this._createAnimations(n, t);
          return i.length ? (Co.add(this._chart, i), !0) : void 0;
        }
      }
      function tO(e, n) {
        const t = (e && e.options) || {},
          i = t.reverse,
          r = void 0 === t.min ? n : 0,
          o = void 0 === t.max ? n : 0;
        return { start: i ? o : r, end: i ? r : o };
      }
      function nO(e, n) {
        const t = [],
          i = e._getSortedDatasetMetas(n);
        let r, o;
        for (r = 0, o = i.length; r < o; ++r) t.push(i[r].index);
        return t;
      }
      function iO(e, n, t, i = {}) {
        const r = e.keys,
          o = "single" === i.mode;
        let s, a, l, c;
        if (null !== n) {
          for (s = 0, a = r.length; s < a; ++s) {
            if (((l = +r[s]), l === t)) {
              if (i.all) continue;
              break;
            }
            (c = e.values[l]),
              nn(c) && (o || 0 === n || Nr(n) === Nr(c)) && (n += c);
          }
          return n;
        }
      }
      function rO(e, n) {
        const t = e && e.options.stacked;
        return t || (void 0 === t && void 0 !== n.stack);
      }
      function q7(e, n, t) {
        const i = e[n] || (e[n] = {});
        return i[t] || (i[t] = {});
      }
      function oO(e, n, t, i) {
        for (const r of n.getMatchingVisibleMetas(i).reverse()) {
          const o = e[r.index];
          if ((t && o > 0) || (!t && o < 0)) return r.index;
        }
        return null;
      }
      function sO(e, n) {
        const { chart: t, _cachedMeta: i } = e,
          r = t._stacks || (t._stacks = {}),
          { iScale: o, vScale: s, index: a } = i,
          l = o.axis,
          c = s.axis,
          u = (function W7(e, n, t) {
            return `${e.id}.${n.id}.${t.stack || t.type}`;
          })(o, s, i),
          f = n.length;
        let g;
        for (let m = 0; m < f; ++m) {
          const _ = n[m],
            { [l]: y, [c]: v } = _;
          (g = (_._stacks || (_._stacks = {}))[c] = q7(r, u, y)),
            (g[a] = v),
            (g._top = oO(g, s, !0, i.type)),
            (g._bottom = oO(g, s, !1, i.type));
        }
      }
      function fb(e, n) {
        const t = e.scales;
        return Object.keys(t)
          .filter((i) => t[i].axis === n)
          .shift();
      }
      function Bu(e, n) {
        const t = e.controller.index,
          i = e.vScale && e.vScale.axis;
        if (i) {
          n = n || e._parsed;
          for (const r of n) {
            const o = r._stacks;
            if (!o || void 0 === o[i] || void 0 === o[i][t]) return;
            delete o[i][t];
          }
        }
      }
      const pb = (e) => "reset" === e || "none" === e,
        aO = (e, n) => (n ? e : Object.assign({}, e));
      let Lr = (() => {
        class e {
          constructor(t, i) {
            (this.chart = t),
              (this._ctx = t.ctx),
              (this.index = i),
              (this._cachedDataOpts = {}),
              (this._cachedMeta = this.getMeta()),
              (this._type = this._cachedMeta.type),
              (this.options = void 0),
              (this._parsing = !1),
              (this._data = void 0),
              (this._objectData = void 0),
              (this._sharedOptions = void 0),
              (this._drawStart = void 0),
              (this._drawCount = void 0),
              (this.enableOptionSharing = !1),
              (this.supportsDecimation = !1),
              (this.$context = void 0),
              (this._syncList = []),
              this.initialize();
          }
          initialize() {
            const t = this._cachedMeta;
            this.configure(),
              this.linkScales(),
              (t._stacked = rO(t.vScale, t)),
              this.addElements();
          }
          updateIndex(t) {
            this.index !== t && Bu(this._cachedMeta), (this.index = t);
          }
          linkScales() {
            const t = this.chart,
              i = this._cachedMeta,
              r = this.getDataset(),
              o = (g, m, _, y) => ("x" === g ? m : "r" === g ? y : _),
              s = (i.xAxisID = Pe(r.xAxisID, fb(t, "x"))),
              a = (i.yAxisID = Pe(r.yAxisID, fb(t, "y"))),
              l = (i.rAxisID = Pe(r.rAxisID, fb(t, "r"))),
              c = i.indexAxis,
              u = (i.iAxisID = o(c, s, a, l)),
              f = (i.vAxisID = o(c, a, s, l));
            (i.xScale = this.getScaleForId(s)),
              (i.yScale = this.getScaleForId(a)),
              (i.rScale = this.getScaleForId(l)),
              (i.iScale = this.getScaleForId(u)),
              (i.vScale = this.getScaleForId(f));
          }
          getDataset() {
            return this.chart.data.datasets[this.index];
          }
          getMeta() {
            return this.chart.getDatasetMeta(this.index);
          }
          getScaleForId(t) {
            return this.chart.scales[t];
          }
          _getOtherScale(t) {
            const i = this._cachedMeta;
            return t === i.iScale ? i.vScale : i.iScale;
          }
          reset() {
            this._update("reset");
          }
          _destroy() {
            const t = this._cachedMeta;
            this._data && hI(this._data, this), t._stacked && Bu(t);
          }
          _dataCheck() {
            const t = this.getDataset(),
              i = t.data || (t.data = []),
              r = this._data;
            if (We(i))
              this._data = (function U7(e) {
                const n = Object.keys(e),
                  t = new Array(n.length);
                let i, r, o;
                for (i = 0, r = n.length; i < r; ++i)
                  (o = n[i]), (t[i] = { x: o, y: e[o] });
                return t;
              })(i);
            else if (r !== i) {
              if (r) {
                hI(r, this);
                const o = this._cachedMeta;
                Bu(o), (o._parsed = []);
              }
              i &&
                Object.isExtensible(i) &&
                (function m$(e, n) {
                  e._chartjs
                    ? e._chartjs.listeners.push(n)
                    : (Object.defineProperty(e, "_chartjs", {
                        configurable: !0,
                        enumerable: !1,
                        value: { listeners: [n] },
                      }),
                      dI.forEach((t) => {
                        const i = "_onData" + Gv(t),
                          r = e[t];
                        Object.defineProperty(e, t, {
                          configurable: !0,
                          enumerable: !1,
                          value(...o) {
                            const s = r.apply(this, o);
                            return (
                              e._chartjs.listeners.forEach((a) => {
                                "function" == typeof a[i] && a[i](...o);
                              }),
                              s
                            );
                          },
                        });
                      }));
                })(i, this),
                (this._syncList = []),
                (this._data = i);
            }
          }
          addElements() {
            const t = this._cachedMeta;
            this._dataCheck(),
              this.datasetElementType &&
                (t.dataset = new this.datasetElementType());
          }
          buildOrUpdateElements(t) {
            const i = this._cachedMeta,
              r = this.getDataset();
            let o = !1;
            this._dataCheck();
            const s = i._stacked;
            (i._stacked = rO(i.vScale, i)),
              i.stack !== r.stack && ((o = !0), Bu(i), (i.stack = r.stack)),
              this._resyncElements(t),
              (o || s !== i._stacked) && sO(this, i._parsed);
          }
          configure() {
            const t = this.chart.config,
              i = t.datasetScopeKeys(this._type),
              r = t.getOptionScopes(this.getDataset(), i, !0);
            (this.options = t.createResolver(r, this.getContext())),
              (this._parsing = this.options.parsing),
              (this._cachedDataOpts = {});
          }
          parse(t, i) {
            const { _cachedMeta: r, _data: o } = this,
              { iScale: s, _stacked: a } = r,
              l = s.axis;
            let f,
              g,
              m,
              c = (0 === t && i === o.length) || r._sorted,
              u = t > 0 && r._parsed[t - 1];
            if (!1 === this._parsing)
              (r._parsed = o), (r._sorted = !0), (m = o);
            else {
              m = Pt(o[t])
                ? this.parseArrayData(r, o, t, i)
                : We(o[t])
                ? this.parseObjectData(r, o, t, i)
                : this.parsePrimitiveData(r, o, t, i);
              const _ = () => null === g[l] || (u && g[l] < u[l]);
              for (f = 0; f < i; ++f)
                (r._parsed[f + t] = g = m[f]), c && (_() && (c = !1), (u = g));
              r._sorted = c;
            }
            a && sO(this, m);
          }
          parsePrimitiveData(t, i, r, o) {
            const { iScale: s, vScale: a } = t,
              l = s.axis,
              c = a.axis,
              u = s.getLabels(),
              f = s === a,
              g = new Array(o);
            let m, _, y;
            for (m = 0, _ = o; m < _; ++m)
              (y = m + r),
                (g[m] = { [l]: f || s.parse(u[y], y), [c]: a.parse(i[y], y) });
            return g;
          }
          parseArrayData(t, i, r, o) {
            const { xScale: s, yScale: a } = t,
              l = new Array(o);
            let c, u, f, g;
            for (c = 0, u = o; c < u; ++c)
              (f = c + r),
                (g = i[f]),
                (l[c] = { x: s.parse(g[0], f), y: a.parse(g[1], f) });
            return l;
          }
          parseObjectData(t, i, r, o) {
            const { xScale: s, yScale: a } = t,
              { xAxisKey: l = "x", yAxisKey: c = "y" } = this._parsing,
              u = new Array(o);
            let f, g, m, _;
            for (f = 0, g = o; f < g; ++f)
              (m = f + r),
                (_ = i[m]),
                (u[f] = { x: s.parse(Jo(_, l), m), y: a.parse(Jo(_, c), m) });
            return u;
          }
          getParsed(t) {
            return this._cachedMeta._parsed[t];
          }
          getDataElement(t) {
            return this._cachedMeta.data[t];
          }
          applyStack(t, i, r) {
            const s = this._cachedMeta,
              a = i[t.axis];
            return iO(
              { keys: nO(this.chart, !0), values: i._stacks[t.axis] },
              a,
              s.index,
              { mode: r }
            );
          }
          updateRangeFromParsed(t, i, r, o) {
            const s = r[i.axis];
            let a = null === s ? NaN : s;
            const l = o && r._stacks[i.axis];
            o && l && ((o.values = l), (a = iO(o, s, this._cachedMeta.index))),
              (t.min = Math.min(t.min, a)),
              (t.max = Math.max(t.max, a));
          }
          getMinMax(t, i) {
            const r = this._cachedMeta,
              o = r._parsed,
              s = r._sorted && t === r.iScale,
              a = o.length,
              l = this._getOtherScale(t),
              c = ((e, n, t) =>
                e &&
                !n.hidden &&
                n._stacked && { keys: nO(this.chart, !0), values: null })(i, r),
              u = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
              },
              { min: f, max: g } = (function $7(e) {
                const {
                  min: n,
                  max: t,
                  minDefined: i,
                  maxDefined: r,
                } = e.getUserBounds();
                return {
                  min: i ? n : Number.NEGATIVE_INFINITY,
                  max: r ? t : Number.POSITIVE_INFINITY,
                };
              })(l);
            let m, _;
            function y() {
              _ = o[m];
              const v = _[l.axis];
              return !nn(_[t.axis]) || f > v || g < v;
            }
            for (
              m = 0;
              m < a && (y() || (this.updateRangeFromParsed(u, t, _, c), !s));
              ++m
            );
            if (s)
              for (m = a - 1; m >= 0; --m)
                if (!y()) {
                  this.updateRangeFromParsed(u, t, _, c);
                  break;
                }
            return u;
          }
          getAllParsedValues(t) {
            const i = this._cachedMeta._parsed,
              r = [];
            let o, s, a;
            for (o = 0, s = i.length; o < s; ++o)
              (a = i[o][t.axis]), nn(a) && r.push(a);
            return r;
          }
          getMaxOverflow() {
            return !1;
          }
          getLabelAndValue(t) {
            const i = this._cachedMeta,
              r = i.iScale,
              o = i.vScale,
              s = this.getParsed(t);
            return {
              label: r ? "" + r.getLabelForValue(s[r.axis]) : "",
              value: o ? "" + o.getLabelForValue(s[o.axis]) : "",
            };
          }
          _update(t) {
            const i = this._cachedMeta;
            this.update(t || "default"),
              (i._clip = (function j7(e) {
                let n, t, i, r;
                return (
                  We(e)
                    ? ((n = e.top), (t = e.right), (i = e.bottom), (r = e.left))
                    : (n = t = i = r = e),
                  { top: n, right: t, bottom: i, left: r, disabled: !1 === e }
                );
              })(
                Pe(
                  this.options.clip,
                  (function H7(e, n, t) {
                    if (!1 === t) return !1;
                    const i = tO(e, t),
                      r = tO(n, t);
                    return {
                      top: r.end,
                      right: i.end,
                      bottom: r.start,
                      left: i.start,
                    };
                  })(i.xScale, i.yScale, this.getMaxOverflow())
                )
              ));
          }
          update(t) {}
          draw() {
            const t = this._ctx,
              r = this._cachedMeta,
              o = r.data || [],
              s = this.chart.chartArea,
              a = [],
              l = this._drawStart || 0,
              c = this._drawCount || o.length - l,
              u = this.options.drawActiveElementsOnTop;
            let f;
            for (
              r.dataset && r.dataset.draw(t, s, l, c), f = l;
              f < l + c;
              ++f
            ) {
              const g = o[f];
              g.hidden || (g.active && u ? a.push(g) : g.draw(t, s));
            }
            for (f = 0; f < a.length; ++f) a[f].draw(t, s);
          }
          getStyle(t, i) {
            const r = i ? "active" : "default";
            return void 0 === t && this._cachedMeta.dataset
              ? this.resolveDatasetElementOptions(r)
              : this.resolveDataElementOptions(t || 0, r);
          }
          getContext(t, i, r) {
            const o = this.getDataset();
            let s;
            if (t >= 0 && t < this._cachedMeta.data.length) {
              const a = this._cachedMeta.data[t];
              (s =
                a.$context ||
                (a.$context = (function Y7(e, n, t) {
                  return is(e, {
                    active: !1,
                    dataIndex: n,
                    parsed: void 0,
                    raw: void 0,
                    element: t,
                    index: n,
                    mode: "default",
                    type: "data",
                  });
                })(this.getContext(), t, a))),
                (s.parsed = this.getParsed(t)),
                (s.raw = o.data[t]),
                (s.index = s.dataIndex = t);
            } else
              (s =
                this.$context ||
                (this.$context = (function G7(e, n) {
                  return is(e, {
                    active: !1,
                    dataset: void 0,
                    datasetIndex: n,
                    index: n,
                    mode: "default",
                    type: "dataset",
                  });
                })(this.chart.getContext(), this.index))),
                (s.dataset = o),
                (s.index = s.datasetIndex = this.index);
            return (s.active = !!i), (s.mode = r), s;
          }
          resolveDatasetElementOptions(t) {
            return this._resolveElementOptions(this.datasetElementType.id, t);
          }
          resolveDataElementOptions(t, i) {
            return this._resolveElementOptions(this.dataElementType.id, i, t);
          }
          _resolveElementOptions(t, i = "default", r) {
            const o = "active" === i,
              s = this._cachedDataOpts,
              a = t + "-" + i,
              l = s[a],
              c = this.enableOptionSharing && Ui(r);
            if (l) return aO(l, c);
            const u = this.chart.config,
              f = u.datasetElementScopeKeys(this._type, t),
              g = o ? [`${t}Hover`, "hover", t, ""] : [t, ""],
              m = u.getOptionScopes(this.getDataset(), f),
              _ = Object.keys($e.elements[t]),
              v = u.resolveNamedOptions(m, _, () => this.getContext(r, o), g);
            return (
              v.$shared && ((v.$shared = c), (s[a] = Object.freeze(aO(v, c)))),
              v
            );
          }
          _resolveAnimations(t, i, r) {
            const o = this.chart,
              s = this._cachedDataOpts,
              a = `animation-${i}`,
              l = s[a];
            if (l) return l;
            let c;
            if (!1 !== o.options.animation) {
              const f = this.chart.config,
                g = f.datasetAnimationScopeKeys(this._type, i),
                m = f.getOptionScopes(this.getDataset(), g);
              c = f.createResolver(m, this.getContext(t, r, i));
            }
            const u = new eO(o, c && c.animations);
            return c && c._cacheable && (s[a] = Object.freeze(u)), u;
          }
          getSharedOptions(t) {
            if (t.$shared)
              return (
                this._sharedOptions ||
                (this._sharedOptions = Object.assign({}, t))
              );
          }
          includeOptions(t, i) {
            return !i || pb(t) || this.chart._animationsDisabled;
          }
          _getSharedOptions(t, i) {
            const r = this.resolveDataElementOptions(t, i),
              o = this._sharedOptions,
              s = this.getSharedOptions(r),
              a = this.includeOptions(i, s) || s !== o;
            return (
              this.updateSharedOptions(s, i, r),
              { sharedOptions: s, includeOptions: a }
            );
          }
          updateElement(t, i, r, o) {
            pb(o)
              ? Object.assign(t, r)
              : this._resolveAnimations(i, o).update(t, r);
          }
          updateSharedOptions(t, i, r) {
            t && !pb(i) && this._resolveAnimations(void 0, i).update(t, r);
          }
          _setStyle(t, i, r, o) {
            t.active = o;
            const s = this.getStyle(i, o);
            this._resolveAnimations(i, r, o).update(t, {
              options: (!o && this.getSharedOptions(s)) || s,
            });
          }
          removeHoverStyle(t, i, r) {
            this._setStyle(t, r, "active", !1);
          }
          setHoverStyle(t, i, r) {
            this._setStyle(t, r, "active", !0);
          }
          _removeDatasetHoverStyle() {
            const t = this._cachedMeta.dataset;
            t && this._setStyle(t, void 0, "active", !1);
          }
          _setDatasetHoverStyle() {
            const t = this._cachedMeta.dataset;
            t && this._setStyle(t, void 0, "active", !0);
          }
          _resyncElements(t) {
            const i = this._data,
              r = this._cachedMeta.data;
            for (const [l, c, u] of this._syncList) this[l](c, u);
            this._syncList = [];
            const o = r.length,
              s = i.length,
              a = Math.min(s, o);
            a && this.parse(0, a),
              s > o
                ? this._insertElements(o, s - o, t)
                : s < o && this._removeElements(s, o - s);
          }
          _insertElements(t, i, r = !0) {
            const o = this._cachedMeta,
              s = o.data,
              a = t + i;
            let l;
            const c = (u) => {
              for (u.length += i, l = u.length - 1; l >= a; l--)
                u[l] = u[l - i];
            };
            for (c(s), l = t; l < a; ++l) s[l] = new this.dataElementType();
            this._parsing && c(o._parsed),
              this.parse(t, i),
              r && this.updateElements(s, t, i, "reset");
          }
          updateElements(t, i, r, o) {}
          _removeElements(t, i) {
            const r = this._cachedMeta;
            if (this._parsing) {
              const o = r._parsed.splice(t, i);
              r._stacked && Bu(r, o);
            }
            r.data.splice(t, i);
          }
          _sync(t) {
            if (this._parsing) this._syncList.push(t);
            else {
              const [i, r, o] = t;
              this[i](r, o);
            }
            this.chart._dataChanges.push([this.index, ...t]);
          }
          _onDataPush() {
            const t = arguments.length;
            this._sync([
              "_insertElements",
              this.getDataset().data.length - t,
              t,
            ]);
          }
          _onDataPop() {
            this._sync([
              "_removeElements",
              this._cachedMeta.data.length - 1,
              1,
            ]);
          }
          _onDataShift() {
            this._sync(["_removeElements", 0, 1]);
          }
          _onDataSplice(t, i) {
            i && this._sync(["_removeElements", t, i]);
            const r = arguments.length - 2;
            r && this._sync(["_insertElements", t, r]);
          }
          _onDataUnshift() {
            this._sync(["_insertElements", 0, arguments.length]);
          }
        }
        return (e.defaults = {}), e;
      })();
      function Q7(e) {
        const n = e.iScale,
          t = (function Z7(e, n) {
            if (!e._cache.$bar) {
              const t = e.getMatchingVisibleMetas(n);
              let i = [];
              for (let r = 0, o = t.length; r < o; r++)
                i = i.concat(t[r].controller.getAllParsedValues(e));
              e._cache.$bar = fI(i.sort((r, o) => r - o));
            }
            return e._cache.$bar;
          })(n, e.type);
        let r,
          o,
          s,
          a,
          i = n._length;
        const l = () => {
          32767 === s ||
            -32768 === s ||
            (Ui(a) && (i = Math.min(i, Math.abs(s - a) || i)), (a = s));
        };
        for (r = 0, o = t.length; r < o; ++r)
          (s = n.getPixelForValue(t[r])), l();
        for (a = void 0, r = 0, o = n.ticks.length; r < o; ++r)
          (s = n.getPixelForTick(r)), l();
        return i;
      }
      function lO(e, n, t, i) {
        return (
          Pt(e)
            ? (function e9(e, n, t, i) {
                const r = t.parse(e[0], i),
                  o = t.parse(e[1], i),
                  s = Math.min(r, o),
                  a = Math.max(r, o);
                let l = s,
                  c = a;
                Math.abs(s) > Math.abs(a) && ((l = a), (c = s)),
                  (n[t.axis] = c),
                  (n._custom = {
                    barStart: l,
                    barEnd: c,
                    start: r,
                    end: o,
                    min: s,
                    max: a,
                  });
              })(e, n, t, i)
            : (n[t.axis] = t.parse(e, i)),
          n
        );
      }
      function cO(e, n, t, i) {
        const r = e.iScale,
          o = e.vScale,
          s = r.getLabels(),
          a = r === o,
          l = [];
        let c, u, f, g;
        for (c = t, u = t + i; c < u; ++c)
          (g = n[c]),
            (f = {}),
            (f[r.axis] = a || r.parse(s[c], c)),
            l.push(lO(g, f, o, c));
        return l;
      }
      function gb(e) {
        return e && void 0 !== e.barStart && void 0 !== e.barEnd;
      }
      function i9(e, n, t, i) {
        let r = n.borderSkipped;
        const o = {};
        if (!r) return void (e.borderSkipped = o);
        if (!0 === r)
          return void (e.borderSkipped = {
            top: !0,
            right: !0,
            bottom: !0,
            left: !0,
          });
        const {
          start: s,
          end: a,
          reverse: l,
          top: c,
          bottom: u,
        } = (function n9(e) {
          let n, t, i, r, o;
          return (
            e.horizontal
              ? ((n = e.base > e.x), (t = "left"), (i = "right"))
              : ((n = e.base < e.y), (t = "bottom"), (i = "top")),
            n ? ((r = "end"), (o = "start")) : ((r = "start"), (o = "end")),
            { start: t, end: i, reverse: n, top: r, bottom: o }
          );
        })(e);
        "middle" === r &&
          t &&
          ((e.enableBorderRadius = !0),
          (t._top || 0) === i
            ? (r = c)
            : (t._bottom || 0) === i
            ? (r = u)
            : ((o[uO(u, s, a, l)] = !0), (r = c))),
          (o[uO(r, s, a, l)] = !0),
          (e.borderSkipped = o);
      }
      function uO(e, n, t, i) {
        return (
          i
            ? ((e = (function r9(e, n, t) {
                return e === n ? t : e === t ? n : e;
              })(e, n, t)),
              (e = dO(e, t, n)))
            : (e = dO(e, n, t)),
          e
        );
      }
      function dO(e, n, t) {
        return "start" === e ? n : "end" === e ? t : e;
      }
      function o9(e, { inflateAmount: n }, t) {
        e.inflateAmount = "auto" === n ? (1 === t ? 0.33 : 0) : n;
      }
      (Lr.prototype.datasetElementType = null),
        (Lr.prototype.dataElementType = null);
      let s9 = (() => {
          class e extends Lr {
            parsePrimitiveData(t, i, r, o) {
              return cO(t, i, r, o);
            }
            parseArrayData(t, i, r, o) {
              return cO(t, i, r, o);
            }
            parseObjectData(t, i, r, o) {
              const { iScale: s, vScale: a } = t,
                { xAxisKey: l = "x", yAxisKey: c = "y" } = this._parsing,
                u = "x" === s.axis ? l : c,
                f = "x" === a.axis ? l : c,
                g = [];
              let m, _, y, v;
              for (m = r, _ = r + o; m < _; ++m)
                (v = i[m]),
                  (y = {}),
                  (y[s.axis] = s.parse(Jo(v, u), m)),
                  g.push(lO(Jo(v, f), y, a, m));
              return g;
            }
            updateRangeFromParsed(t, i, r, o) {
              super.updateRangeFromParsed(t, i, r, o);
              const s = r._custom;
              s &&
                i === this._cachedMeta.vScale &&
                ((t.min = Math.min(t.min, s.min)),
                (t.max = Math.max(t.max, s.max)));
            }
            getMaxOverflow() {
              return 0;
            }
            getLabelAndValue(t) {
              const i = this._cachedMeta,
                { iScale: r, vScale: o } = i,
                s = this.getParsed(t),
                a = s._custom,
                l = gb(a)
                  ? "[" + a.start + ", " + a.end + "]"
                  : "" + o.getLabelForValue(s[o.axis]);
              return { label: "" + r.getLabelForValue(s[r.axis]), value: l };
            }
            initialize() {
              (this.enableOptionSharing = !0),
                super.initialize(),
                (this._cachedMeta.stack = this.getDataset().stack);
            }
            update(t) {
              const i = this._cachedMeta;
              this.updateElements(i.data, 0, i.data.length, t);
            }
            updateElements(t, i, r, o) {
              const s = "reset" === o,
                {
                  index: a,
                  _cachedMeta: { vScale: l },
                } = this,
                c = l.getBasePixel(),
                u = l.isHorizontal(),
                f = this._getRuler(),
                { sharedOptions: g, includeOptions: m } =
                  this._getSharedOptions(i, o);
              for (let _ = i; _ < i + r; _++) {
                const y = this.getParsed(_),
                  v =
                    s || Xe(y[l.axis])
                      ? { base: c, head: c }
                      : this._calculateBarValuePixels(_),
                  w = this._calculateBarIndexPixels(_, f),
                  C = (y._stacks || {})[l.axis],
                  D = {
                    horizontal: u,
                    base: v.base,
                    enableBorderRadius:
                      !C || gb(y._custom) || a === C._top || a === C._bottom,
                    x: u ? v.head : w.center,
                    y: u ? w.center : v.head,
                    height: u ? w.size : Math.abs(v.size),
                    width: u ? Math.abs(v.size) : w.size,
                  };
                m &&
                  (D.options =
                    g ||
                    this.resolveDataElementOptions(
                      _,
                      t[_].active ? "active" : o
                    ));
                const S = D.options || t[_].options;
                i9(D, S, C, a),
                  o9(D, S, f.ratio),
                  this.updateElement(t[_], _, D, o);
              }
            }
            _getStacks(t, i) {
              const { iScale: r } = this._cachedMeta,
                o = r
                  .getMatchingVisibleMetas(this._type)
                  .filter((c) => c.controller.options.grouped),
                s = r.options.stacked,
                a = [],
                l = (c) => {
                  const u = c.controller.getParsed(i),
                    f = u && u[c.vScale.axis];
                  if (Xe(f) || isNaN(f)) return !0;
                };
              for (const c of o)
                if (
                  (void 0 === i || !l(c)) &&
                  ((!1 === s ||
                    -1 === a.indexOf(c.stack) ||
                    (void 0 === s && void 0 === c.stack)) &&
                    a.push(c.stack),
                  c.index === t)
                )
                  break;
              return a.length || a.push(void 0), a;
            }
            _getStackCount(t) {
              return this._getStacks(void 0, t).length;
            }
            _getStackIndex(t, i, r) {
              const o = this._getStacks(t, r),
                s = void 0 !== i ? o.indexOf(i) : -1;
              return -1 === s ? o.length - 1 : s;
            }
            _getRuler() {
              const t = this.options,
                i = this._cachedMeta,
                r = i.iScale,
                o = [];
              let s, a;
              for (s = 0, a = i.data.length; s < a; ++s)
                o.push(r.getPixelForValue(this.getParsed(s)[r.axis], s));
              const l = t.barThickness;
              return {
                min: l || Q7(i),
                pixels: o,
                start: r._startPixel,
                end: r._endPixel,
                stackCount: this._getStackCount(),
                scale: r,
                grouped: t.grouped,
                ratio: l ? 1 : t.categoryPercentage * t.barPercentage,
              };
            }
            _calculateBarValuePixels(t) {
              const {
                  _cachedMeta: { vScale: i, _stacked: r },
                  options: { base: o, minBarLength: s },
                } = this,
                a = o || 0,
                l = this.getParsed(t),
                c = l._custom,
                u = gb(c);
              let _,
                y,
                f = l[i.axis],
                g = 0,
                m = r ? this.applyStack(i, l, r) : f;
              m !== f && ((g = m - f), (m = f)),
                u &&
                  ((f = c.barStart),
                  (m = c.barEnd - c.barStart),
                  0 !== f && Nr(f) !== Nr(c.barEnd) && (g = 0),
                  (g += f));
              const v = Xe(o) || u ? g : o;
              let w = i.getPixelForValue(v);
              if (
                ((_ = this.chart.getDataVisibility(t)
                  ? i.getPixelForValue(g + m)
                  : w),
                (y = _ - w),
                Math.abs(y) < s)
              ) {
                (y =
                  (function t9(e, n, t) {
                    return 0 !== e
                      ? Nr(e)
                      : (n.isHorizontal() ? 1 : -1) * (n.min >= t ? 1 : -1);
                  })(y, i, a) * s),
                  f === a && (w -= y / 2);
                const C = i.getPixelForDecimal(0),
                  D = i.getPixelForDecimal(1),
                  S = Math.min(C, D),
                  T = Math.max(C, D);
                (w = Math.max(Math.min(w, T), S)), (_ = w + y);
              }
              if (w === i.getPixelForValue(a)) {
                const C = (Nr(y) * i.getLineWidthForValue(a)) / 2;
                (w += C), (y -= C);
              }
              return { size: y, base: w, head: _, center: _ + y / 2 };
            }
            _calculateBarIndexPixels(t, i) {
              const r = i.scale,
                o = this.options,
                s = o.skipNull,
                a = Pe(o.maxBarThickness, 1 / 0);
              let l, c;
              if (i.grouped) {
                const u = s ? this._getStackCount(t) : i.stackCount,
                  f =
                    "flex" === o.barThickness
                      ? (function J7(e, n, t, i) {
                          const r = n.pixels,
                            o = r[e];
                          let s = e > 0 ? r[e - 1] : null,
                            a = e < r.length - 1 ? r[e + 1] : null;
                          const l = t.categoryPercentage;
                          null === s &&
                            (s = o - (null === a ? n.end - n.start : a - o)),
                            null === a && (a = o + o - s);
                          const c = o - ((o - Math.min(s, a)) / 2) * l;
                          return {
                            chunk: ((Math.abs(a - s) / 2) * l) / i,
                            ratio: t.barPercentage,
                            start: c,
                          };
                        })(t, i, o, u)
                      : (function X7(e, n, t, i) {
                          const r = t.barThickness;
                          let o, s;
                          return (
                            Xe(r)
                              ? ((o = n.min * t.categoryPercentage),
                                (s = t.barPercentage))
                              : ((o = r * i), (s = 1)),
                            {
                              chunk: o / i,
                              ratio: s,
                              start: n.pixels[e] - o / 2,
                            }
                          );
                        })(t, i, o, u),
                  g = this._getStackIndex(
                    this.index,
                    this._cachedMeta.stack,
                    s ? t : void 0
                  );
                (l = f.start + f.chunk * g + f.chunk / 2),
                  (c = Math.min(a, f.chunk * f.ratio));
              } else
                (l = r.getPixelForValue(this.getParsed(t)[r.axis], t)),
                  (c = Math.min(a, i.min * i.ratio));
              return { base: l - c / 2, head: l + c / 2, center: l, size: c };
            }
            draw() {
              const t = this._cachedMeta,
                i = t.vScale,
                r = t.data,
                o = r.length;
              let s = 0;
              for (; s < o; ++s)
                null !== this.getParsed(s)[i.axis] && r[s].draw(this._ctx);
            }
          }
          return (
            (e.id = "bar"),
            (e.defaults = {
              datasetElementType: !1,
              dataElementType: "bar",
              categoryPercentage: 0.8,
              barPercentage: 0.9,
              grouped: !0,
              animations: {
                numbers: {
                  type: "number",
                  properties: ["x", "y", "base", "width", "height"],
                },
              },
            }),
            (e.overrides = {
              scales: {
                _index_: { type: "category", offset: !0, grid: { offset: !0 } },
                _value_: { type: "linear", beginAtZero: !0 },
              },
            }),
            e
          );
        })(),
        a9 = (() => {
          class e extends Lr {
            initialize() {
              (this.enableOptionSharing = !0), super.initialize();
            }
            parsePrimitiveData(t, i, r, o) {
              const s = super.parsePrimitiveData(t, i, r, o);
              for (let a = 0; a < s.length; a++)
                s[a]._custom = this.resolveDataElementOptions(a + r).radius;
              return s;
            }
            parseArrayData(t, i, r, o) {
              const s = super.parseArrayData(t, i, r, o);
              for (let a = 0; a < s.length; a++)
                s[a]._custom = Pe(
                  i[r + a][2],
                  this.resolveDataElementOptions(a + r).radius
                );
              return s;
            }
            parseObjectData(t, i, r, o) {
              const s = super.parseObjectData(t, i, r, o);
              for (let a = 0; a < s.length; a++) {
                const l = i[r + a];
                s[a]._custom = Pe(
                  l && l.r && +l.r,
                  this.resolveDataElementOptions(a + r).radius
                );
              }
              return s;
            }
            getMaxOverflow() {
              const t = this._cachedMeta.data;
              let i = 0;
              for (let r = t.length - 1; r >= 0; --r)
                i = Math.max(
                  i,
                  t[r].size(this.resolveDataElementOptions(r)) / 2
                );
              return i > 0 && i;
            }
            getLabelAndValue(t) {
              const i = this._cachedMeta,
                { xScale: r, yScale: o } = i,
                s = this.getParsed(t),
                a = r.getLabelForValue(s.x),
                l = o.getLabelForValue(s.y),
                c = s._custom;
              return {
                label: i.label,
                value: "(" + a + ", " + l + (c ? ", " + c : "") + ")",
              };
            }
            update(t) {
              const i = this._cachedMeta.data;
              this.updateElements(i, 0, i.length, t);
            }
            updateElements(t, i, r, o) {
              const s = "reset" === o,
                { iScale: a, vScale: l } = this._cachedMeta,
                { sharedOptions: c, includeOptions: u } =
                  this._getSharedOptions(i, o),
                f = a.axis,
                g = l.axis;
              for (let m = i; m < i + r; m++) {
                const _ = t[m],
                  y = !s && this.getParsed(m),
                  v = {},
                  w = (v[f] = s
                    ? a.getPixelForDecimal(0.5)
                    : a.getPixelForValue(y[f])),
                  C = (v[g] = s ? l.getBasePixel() : l.getPixelForValue(y[g]));
                (v.skip = isNaN(w) || isNaN(C)),
                  u &&
                    ((v.options =
                      c ||
                      this.resolveDataElementOptions(
                        m,
                        _.active ? "active" : o
                      )),
                    s && (v.options.radius = 0)),
                  this.updateElement(_, m, v, o);
              }
            }
            resolveDataElementOptions(t, i) {
              const r = this.getParsed(t);
              let o = super.resolveDataElementOptions(t, i);
              o.$shared && (o = Object.assign({}, o, { $shared: !1 }));
              const s = o.radius;
              return (
                "active" !== i && (o.radius = 0),
                (o.radius += Pe(r && r._custom, s)),
                o
              );
            }
          }
          return (
            (e.id = "bubble"),
            (e.defaults = {
              datasetElementType: !1,
              dataElementType: "point",
              animations: {
                numbers: {
                  type: "number",
                  properties: ["x", "y", "borderWidth", "radius"],
                },
              },
            }),
            (e.overrides = {
              scales: { x: { type: "linear" }, y: { type: "linear" } },
              plugins: { tooltip: { callbacks: { title: () => "" } } },
            }),
            e
          );
        })(),
        hO = (() => {
          class e extends Lr {
            constructor(t, i) {
              super(t, i),
                (this.enableOptionSharing = !0),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0),
                (this.offsetX = void 0),
                (this.offsetY = void 0);
            }
            linkScales() {}
            parse(t, i) {
              const r = this.getDataset().data,
                o = this._cachedMeta;
              if (!1 === this._parsing) o._parsed = r;
              else {
                let a,
                  l,
                  s = (c) => +r[c];
                if (We(r[t])) {
                  const { key: c = "value" } = this._parsing;
                  s = (u) => +Jo(r[u], c);
                }
                for (a = t, l = t + i; a < l; ++a) o._parsed[a] = s(a);
              }
            }
            _getRotation() {
              return ur(this.options.rotation - 90);
            }
            _getCircumference() {
              return ur(this.options.circumference);
            }
            _getRotationExtents() {
              let t = vt,
                i = -vt;
              for (let r = 0; r < this.chart.data.datasets.length; ++r)
                if (this.chart.isDatasetVisible(r)) {
                  const o = this.chart.getDatasetMeta(r).controller,
                    s = o._getRotation(),
                    a = o._getCircumference();
                  (t = Math.min(t, s)), (i = Math.max(i, s + a));
                }
              return { rotation: t, circumference: i - t };
            }
            update(t) {
              const i = this.chart,
                { chartArea: r } = i,
                o = this._cachedMeta,
                s = o.data,
                a =
                  this.getMaxBorderWidth() +
                  this.getMaxOffset(s) +
                  this.options.spacing,
                l = Math.max((Math.min(r.width, r.height) - a) / 2, 0),
                c = Math.min(
                  ((e, n) =>
                    "string" == typeof e && e.endsWith("%")
                      ? parseFloat(e) / 100
                      : e / n)(this.options.cutout, l),
                  1
                ),
                u = this._getRingWeight(this.index),
                { circumference: f, rotation: g } = this._getRotationExtents(),
                {
                  ratioX: m,
                  ratioY: _,
                  offsetX: y,
                  offsetY: v,
                } = (function l9(e, n, t) {
                  let i = 1,
                    r = 1,
                    o = 0,
                    s = 0;
                  if (n < vt) {
                    const a = e,
                      l = a + n,
                      c = Math.cos(a),
                      u = Math.sin(a),
                      f = Math.cos(l),
                      g = Math.sin(l),
                      m = (D, S, T) =>
                        Eu(D, a, l, !0) ? 1 : Math.max(S, S * t, T, T * t),
                      _ = (D, S, T) =>
                        Eu(D, a, l, !0) ? -1 : Math.min(S, S * t, T, T * t),
                      y = m(0, c, f),
                      v = m(Kt, u, g),
                      w = _(jt, c, f),
                      C = _(jt + Kt, u, g);
                    (i = (y - w) / 2),
                      (r = (v - C) / 2),
                      (o = -(y + w) / 2),
                      (s = -(v + C) / 2);
                  }
                  return { ratioX: i, ratioY: r, offsetX: o, offsetY: s };
                })(g, f, c),
                D = Math.max(
                  Math.min((r.width - a) / m, (r.height - a) / _) / 2,
                  0
                ),
                S = nI(this.options.radius, D),
                L =
                  (S - Math.max(S * c, 0)) /
                  this._getVisibleDatasetWeightTotal();
              (this.offsetX = y * S),
                (this.offsetY = v * S),
                (o.total = this.calculateTotal()),
                (this.outerRadius =
                  S - L * this._getRingWeightOffset(this.index)),
                (this.innerRadius = Math.max(this.outerRadius - L * u, 0)),
                this.updateElements(s, 0, s.length, t);
            }
            _circumference(t, i) {
              const r = this.options,
                o = this._cachedMeta,
                s = this._getCircumference();
              return (i && r.animation.animateRotate) ||
                !this.chart.getDataVisibility(t) ||
                null === o._parsed[t] ||
                o.data[t].hidden
                ? 0
                : this.calculateCircumference((o._parsed[t] * s) / vt);
            }
            updateElements(t, i, r, o) {
              const s = "reset" === o,
                a = this.chart,
                l = a.chartArea,
                f = (l.left + l.right) / 2,
                g = (l.top + l.bottom) / 2,
                m = s && a.options.animation.animateScale,
                _ = m ? 0 : this.innerRadius,
                y = m ? 0 : this.outerRadius,
                { sharedOptions: v, includeOptions: w } =
                  this._getSharedOptions(i, o);
              let D,
                C = this._getRotation();
              for (D = 0; D < i; ++D) C += this._circumference(D, s);
              for (D = i; D < i + r; ++D) {
                const S = this._circumference(D, s),
                  T = t[D],
                  L = {
                    x: f + this.offsetX,
                    y: g + this.offsetY,
                    startAngle: C,
                    endAngle: C + S,
                    circumference: S,
                    outerRadius: y,
                    innerRadius: _,
                  };
                w &&
                  (L.options =
                    v ||
                    this.resolveDataElementOptions(D, T.active ? "active" : o)),
                  (C += S),
                  this.updateElement(T, D, L, o);
              }
            }
            calculateTotal() {
              const t = this._cachedMeta,
                i = t.data;
              let o,
                r = 0;
              for (o = 0; o < i.length; o++) {
                const s = t._parsed[o];
                null !== s &&
                  !isNaN(s) &&
                  this.chart.getDataVisibility(o) &&
                  !i[o].hidden &&
                  (r += Math.abs(s));
              }
              return r;
            }
            calculateCircumference(t) {
              const i = this._cachedMeta.total;
              return i > 0 && !isNaN(t) ? vt * (Math.abs(t) / i) : 0;
            }
            getLabelAndValue(t) {
              const r = this.chart,
                o = r.data.labels || [],
                s = Lu(this._cachedMeta._parsed[t], r.options.locale);
              return { label: o[t] || "", value: s };
            }
            getMaxBorderWidth(t) {
              let i = 0;
              const r = this.chart;
              let o, s, a, l, c;
              if (!t)
                for (o = 0, s = r.data.datasets.length; o < s; ++o)
                  if (r.isDatasetVisible(o)) {
                    (a = r.getDatasetMeta(o)), (t = a.data), (l = a.controller);
                    break;
                  }
              if (!t) return 0;
              for (o = 0, s = t.length; o < s; ++o)
                (c = l.resolveDataElementOptions(o)),
                  "inner" !== c.borderAlign &&
                    (i = Math.max(
                      i,
                      c.borderWidth || 0,
                      c.hoverBorderWidth || 0
                    ));
              return i;
            }
            getMaxOffset(t) {
              let i = 0;
              for (let r = 0, o = t.length; r < o; ++r) {
                const s = this.resolveDataElementOptions(r);
                i = Math.max(i, s.offset || 0, s.hoverOffset || 0);
              }
              return i;
            }
            _getRingWeightOffset(t) {
              let i = 0;
              for (let r = 0; r < t; ++r)
                this.chart.isDatasetVisible(r) && (i += this._getRingWeight(r));
              return i;
            }
            _getRingWeight(t) {
              return Math.max(Pe(this.chart.data.datasets[t].weight, 1), 0);
            }
            _getVisibleDatasetWeightTotal() {
              return (
                this._getRingWeightOffset(this.chart.data.datasets.length) || 1
              );
            }
          }
          return (
            (e.id = "doughnut"),
            (e.defaults = {
              datasetElementType: !1,
              dataElementType: "arc",
              animation: { animateRotate: !0, animateScale: !1 },
              animations: {
                numbers: {
                  type: "number",
                  properties: [
                    "circumference",
                    "endAngle",
                    "innerRadius",
                    "outerRadius",
                    "startAngle",
                    "x",
                    "y",
                    "offset",
                    "borderWidth",
                    "spacing",
                  ],
                },
              },
              cutout: "50%",
              rotation: 0,
              circumference: 360,
              radius: "100%",
              spacing: 0,
              indexAxis: "r",
            }),
            (e.descriptors = {
              _scriptable: (n) => "spacing" !== n,
              _indexable: (n) => "spacing" !== n,
            }),
            (e.overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(n) {
                      const t = n.data;
                      if (t.labels.length && t.datasets.length) {
                        const {
                          labels: { pointStyle: i },
                        } = n.legend.options;
                        return t.labels.map((r, o) => {
                          const a = n.getDatasetMeta(0).controller.getStyle(o);
                          return {
                            text: r,
                            fillStyle: a.backgroundColor,
                            strokeStyle: a.borderColor,
                            lineWidth: a.borderWidth,
                            pointStyle: i,
                            hidden: !n.getDataVisibility(o),
                            index: o,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(n, t, i) {
                    i.chart.toggleDataVisibility(t.index), i.chart.update();
                  },
                },
                tooltip: {
                  callbacks: {
                    title: () => "",
                    label(n) {
                      let t = n.label;
                      const i = ": " + n.formattedValue;
                      return (
                        Pt(t) ? ((t = t.slice()), (t[0] += i)) : (t += i), t
                      );
                    },
                  },
                },
              },
            }),
            e
          );
        })(),
        c9 = (() => {
          class e extends Lr {
            initialize() {
              (this.enableOptionSharing = !0),
                (this.supportsDecimation = !0),
                super.initialize();
            }
            update(t) {
              const i = this._cachedMeta,
                { dataset: r, data: o = [], _dataset: s } = i,
                a = this.chart._animationsDisabled;
              let { start: l, count: c } = mI(i, o, a);
              (this._drawStart = l),
                (this._drawCount = c),
                _I(i) && ((l = 0), (c = o.length)),
                (r._chart = this.chart),
                (r._datasetIndex = this.index),
                (r._decimated = !!s._decimated),
                (r.points = o);
              const u = this.resolveDatasetElementOptions(t);
              this.options.showLine || (u.borderWidth = 0),
                (u.segment = this.options.segment),
                this.updateElement(r, void 0, { animated: !a, options: u }, t),
                this.updateElements(o, l, c, t);
            }
            updateElements(t, i, r, o) {
              const s = "reset" === o,
                {
                  iScale: a,
                  vScale: l,
                  _stacked: c,
                  _dataset: u,
                } = this._cachedMeta,
                { sharedOptions: f, includeOptions: g } =
                  this._getSharedOptions(i, o),
                m = a.axis,
                _ = l.axis,
                { spanGaps: y, segment: v } = this.options,
                w = Cl(y) ? y : Number.POSITIVE_INFINITY,
                C = this.chart._animationsDisabled || s || "none" === o;
              let D = i > 0 && this.getParsed(i - 1);
              for (let S = i; S < i + r; ++S) {
                const T = t[S],
                  L = this.getParsed(S),
                  z = C ? T : {},
                  $ = Xe(L[_]),
                  q = (z[m] = a.getPixelForValue(L[m], S)),
                  we = (z[_] =
                    s || $
                      ? l.getBasePixel()
                      : l.getPixelForValue(
                          c ? this.applyStack(l, L, c) : L[_],
                          S
                        ));
                (z.skip = isNaN(q) || isNaN(we) || $),
                  (z.stop = S > 0 && Math.abs(L[m] - D[m]) > w),
                  v && ((z.parsed = L), (z.raw = u.data[S])),
                  g &&
                    (z.options =
                      f ||
                      this.resolveDataElementOptions(
                        S,
                        T.active ? "active" : o
                      )),
                  C || this.updateElement(T, S, z, o),
                  (D = L);
              }
            }
            getMaxOverflow() {
              const t = this._cachedMeta,
                i = t.dataset,
                r = (i.options && i.options.borderWidth) || 0,
                o = t.data || [];
              if (!o.length) return r;
              const s = o[0].size(this.resolveDataElementOptions(0)),
                a = o[o.length - 1].size(
                  this.resolveDataElementOptions(o.length - 1)
                );
              return Math.max(r, s, a) / 2;
            }
            draw() {
              const t = this._cachedMeta;
              t.dataset.updateControlPoints(
                this.chart.chartArea,
                t.iScale.axis
              ),
                super.draw();
            }
          }
          return (
            (e.id = "line"),
            (e.defaults = {
              datasetElementType: "line",
              dataElementType: "point",
              showLine: !0,
              spanGaps: !1,
            }),
            (e.overrides = {
              scales: {
                _index_: { type: "category" },
                _value_: { type: "linear" },
              },
            }),
            e
          );
        })(),
        u9 = (() => {
          class e extends Lr {
            constructor(t, i) {
              super(t, i),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0);
            }
            getLabelAndValue(t) {
              const r = this.chart,
                o = r.data.labels || [],
                s = Lu(this._cachedMeta._parsed[t].r, r.options.locale);
              return { label: o[t] || "", value: s };
            }
            parseObjectData(t, i, r, o) {
              return VI.bind(this)(t, i, r, o);
            }
            update(t) {
              const i = this._cachedMeta.data;
              this._updateRadius(), this.updateElements(i, 0, i.length, t);
            }
            getMinMax() {
              const i = {
                min: Number.POSITIVE_INFINITY,
                max: Number.NEGATIVE_INFINITY,
              };
              return (
                this._cachedMeta.data.forEach((r, o) => {
                  const s = this.getParsed(o).r;
                  !isNaN(s) &&
                    this.chart.getDataVisibility(o) &&
                    (s < i.min && (i.min = s), s > i.max && (i.max = s));
                }),
                i
              );
            }
            _updateRadius() {
              const t = this.chart,
                i = t.chartArea,
                r = t.options,
                o = Math.min(i.right - i.left, i.bottom - i.top),
                s = Math.max(o / 2, 0),
                l =
                  (s -
                    Math.max(
                      r.cutoutPercentage ? (s / 100) * r.cutoutPercentage : 1,
                      0
                    )) /
                  t.getVisibleDatasetCount();
              (this.outerRadius = s - l * this.index),
                (this.innerRadius = this.outerRadius - l);
            }
            updateElements(t, i, r, o) {
              const s = "reset" === o,
                a = this.chart,
                c = a.options.animation,
                u = this._cachedMeta.rScale,
                f = u.xCenter,
                g = u.yCenter,
                m = u.getIndexAngle(0) - 0.5 * jt;
              let y,
                _ = m;
              const v = 360 / this.countVisibleElements();
              for (y = 0; y < i; ++y) _ += this._computeAngle(y, o, v);
              for (y = i; y < i + r; y++) {
                const w = t[y];
                let C = _,
                  D = _ + this._computeAngle(y, o, v),
                  S = a.getDataVisibility(y)
                    ? u.getDistanceFromCenterForValue(this.getParsed(y).r)
                    : 0;
                (_ = D),
                  s &&
                    (c.animateScale && (S = 0), c.animateRotate && (C = D = m));
                const T = {
                  x: f,
                  y: g,
                  innerRadius: 0,
                  outerRadius: S,
                  startAngle: C,
                  endAngle: D,
                  options: this.resolveDataElementOptions(
                    y,
                    w.active ? "active" : o
                  ),
                };
                this.updateElement(w, y, T, o);
              }
            }
            countVisibleElements() {
              let i = 0;
              return (
                this._cachedMeta.data.forEach((r, o) => {
                  !isNaN(this.getParsed(o).r) &&
                    this.chart.getDataVisibility(o) &&
                    i++;
                }),
                i
              );
            }
            _computeAngle(t, i, r) {
              return this.chart.getDataVisibility(t)
                ? ur(this.resolveDataElementOptions(t, i).angle || r)
                : 0;
            }
          }
          return (
            (e.id = "polarArea"),
            (e.defaults = {
              dataElementType: "arc",
              animation: { animateRotate: !0, animateScale: !0 },
              animations: {
                numbers: {
                  type: "number",
                  properties: [
                    "x",
                    "y",
                    "startAngle",
                    "endAngle",
                    "innerRadius",
                    "outerRadius",
                  ],
                },
              },
              indexAxis: "r",
              startAngle: 0,
            }),
            (e.overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(n) {
                      const t = n.data;
                      if (t.labels.length && t.datasets.length) {
                        const {
                          labels: { pointStyle: i },
                        } = n.legend.options;
                        return t.labels.map((r, o) => {
                          const a = n.getDatasetMeta(0).controller.getStyle(o);
                          return {
                            text: r,
                            fillStyle: a.backgroundColor,
                            strokeStyle: a.borderColor,
                            lineWidth: a.borderWidth,
                            pointStyle: i,
                            hidden: !n.getDataVisibility(o),
                            index: o,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(n, t, i) {
                    i.chart.toggleDataVisibility(t.index), i.chart.update();
                  },
                },
                tooltip: {
                  callbacks: {
                    title: () => "",
                    label: (n) =>
                      n.chart.data.labels[n.dataIndex] +
                      ": " +
                      n.formattedValue,
                  },
                },
              },
              scales: {
                r: {
                  type: "radialLinear",
                  angleLines: { display: !1 },
                  beginAtZero: !0,
                  grid: { circular: !0 },
                  pointLabels: { display: !1 },
                  startAngle: 0,
                },
              },
            }),
            e
          );
        })(),
        d9 = (() => {
          class e extends hO {}
          return (
            (e.id = "pie"),
            (e.defaults = {
              cutout: 0,
              rotation: 0,
              circumference: 360,
              radius: "100%",
            }),
            e
          );
        })(),
        h9 = (() => {
          class e extends Lr {
            getLabelAndValue(t) {
              const i = this._cachedMeta.vScale,
                r = this.getParsed(t);
              return {
                label: i.getLabels()[t],
                value: "" + i.getLabelForValue(r[i.axis]),
              };
            }
            parseObjectData(t, i, r, o) {
              return VI.bind(this)(t, i, r, o);
            }
            update(t) {
              const i = this._cachedMeta,
                r = i.dataset,
                o = i.data || [],
                s = i.iScale.getLabels();
              if (((r.points = o), "resize" !== t)) {
                const a = this.resolveDatasetElementOptions(t);
                this.options.showLine || (a.borderWidth = 0),
                  this.updateElement(
                    r,
                    void 0,
                    { _loop: !0, _fullLoop: s.length === o.length, options: a },
                    t
                  );
              }
              this.updateElements(o, 0, o.length, t);
            }
            updateElements(t, i, r, o) {
              const s = this._cachedMeta.rScale,
                a = "reset" === o;
              for (let l = i; l < i + r; l++) {
                const c = t[l],
                  u = this.resolveDataElementOptions(
                    l,
                    c.active ? "active" : o
                  ),
                  f = s.getPointPositionForValue(l, this.getParsed(l).r),
                  g = a ? s.xCenter : f.x,
                  m = a ? s.yCenter : f.y,
                  _ = {
                    x: g,
                    y: m,
                    angle: f.angle,
                    skip: isNaN(g) || isNaN(m),
                    options: u,
                  };
                this.updateElement(c, l, _, o);
              }
            }
          }
          return (
            (e.id = "radar"),
            (e.defaults = {
              datasetElementType: "line",
              dataElementType: "point",
              indexAxis: "r",
              showLine: !0,
              elements: { line: { fill: "start" } },
            }),
            (e.overrides = {
              aspectRatio: 1,
              scales: { r: { type: "radialLinear" } },
            }),
            e
          );
        })();
      class dr {
        constructor() {
          (this.x = void 0),
            (this.y = void 0),
            (this.active = !1),
            (this.options = void 0),
            (this.$animations = void 0);
        }
        tooltipPosition(n) {
          const { x: t, y: i } = this.getProps(["x", "y"], n);
          return { x: t, y: i };
        }
        hasValue() {
          return Cl(this.x) && Cl(this.y);
        }
        getProps(n, t) {
          const i = this.$animations;
          if (!t || !i) return this;
          const r = {};
          return (
            n.forEach((o) => {
              r[o] = i[o] && i[o].active() ? i[o]._to : this[o];
            }),
            r
          );
        }
      }
      (dr.defaults = {}), (dr.defaultRoutes = void 0);
      const fO = {
        values: (e) => (Pt(e) ? e : "" + e),
        numeric(e, n, t) {
          if (0 === e) return "0";
          const i = this.chart.options.locale;
          let r,
            o = e;
          if (t.length > 1) {
            const c = Math.max(
              Math.abs(t[0].value),
              Math.abs(t[t.length - 1].value)
            );
            (c < 1e-4 || c > 1e15) && (r = "scientific"),
              (o = (function f9(e, n) {
                let t =
                  n.length > 3
                    ? n[2].value - n[1].value
                    : n[1].value - n[0].value;
                return (
                  Math.abs(t) >= 1 &&
                    e !== Math.floor(e) &&
                    (t = e - Math.floor(e)),
                  t
                );
              })(e, t));
          }
          const s = Wi(Math.abs(o)),
            a = Math.max(Math.min(-1 * Math.floor(s), 20), 0),
            l = {
              notation: r,
              minimumFractionDigits: a,
              maximumFractionDigits: a,
            };
          return Object.assign(l, this.options.ticks.format), Lu(e, i, l);
        },
        logarithmic(e, n, t) {
          if (0 === e) return "0";
          const i = e / Math.pow(10, Math.floor(Wi(e)));
          return 1 === i || 2 === i || 5 === i
            ? fO.numeric.call(this, e, n, t)
            : "";
        },
      };
      var wp = { formatters: fO };
      function Cp(e, n, t, i, r) {
        const o = Pe(i, 0),
          s = Math.min(Pe(r, e.length), e.length);
        let l,
          c,
          u,
          a = 0;
        for (
          t = Math.ceil(t),
            r && ((l = r - i), (t = l / Math.floor(l / t))),
            u = o;
          u < 0;

        )
          a++, (u = Math.round(o + a * t));
        for (c = Math.max(o, 0); c < s; c++)
          c === u && (n.push(e[c]), a++, (u = Math.round(o + a * t)));
      }
      $e.set("scale", {
        display: !0,
        offset: !1,
        reverse: !1,
        beginAtZero: !1,
        bounds: "ticks",
        grace: 0,
        grid: {
          display: !0,
          lineWidth: 1,
          drawBorder: !0,
          drawOnChartArea: !0,
          drawTicks: !0,
          tickLength: 8,
          tickWidth: (e, n) => n.lineWidth,
          tickColor: (e, n) => n.color,
          offset: !1,
          borderDash: [],
          borderDashOffset: 0,
          borderWidth: 1,
        },
        title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
        ticks: {
          minRotation: 0,
          maxRotation: 50,
          mirror: !1,
          textStrokeWidth: 0,
          textStrokeColor: "",
          padding: 3,
          display: !0,
          autoSkip: !0,
          autoSkipPadding: 3,
          labelOffset: 0,
          callback: wp.formatters.values,
          minor: {},
          major: {},
          align: "center",
          crossAlign: "near",
          showLabelBackdrop: !1,
          backdropColor: "rgba(255, 255, 255, 0.75)",
          backdropPadding: 2,
        },
      }),
        $e.route("scale.ticks", "color", "", "color"),
        $e.route("scale.grid", "color", "", "borderColor"),
        $e.route("scale.grid", "borderColor", "", "borderColor"),
        $e.route("scale.title", "color", "", "color"),
        $e.describe("scale", {
          _fallback: !1,
          _scriptable: (e) =>
            !e.startsWith("before") &&
            !e.startsWith("after") &&
            "callback" !== e &&
            "parser" !== e,
          _indexable: (e) => "borderDash" !== e && "tickBorderDash" !== e,
        }),
        $e.describe("scales", { _fallback: "scale" }),
        $e.describe("scale.ticks", {
          _scriptable: (e) => "backdropPadding" !== e && "callback" !== e,
          _indexable: (e) => "backdropPadding" !== e,
        });
      const pO = (e, n, t) =>
        "top" === n || "left" === n ? e[n] + t : e[n] - t;
      function gO(e, n) {
        const t = [],
          i = e.length / n,
          r = e.length;
        let o = 0;
        for (; o < r; o += i) t.push(e[Math.floor(o)]);
        return t;
      }
      function w9(e, n, t) {
        const i = e.ticks.length,
          r = Math.min(n, i - 1),
          o = e._startPixel,
          s = e._endPixel,
          a = 1e-6;
        let c,
          l = e.getPixelForTick(r);
        if (
          !(
            t &&
            ((c =
              1 === i
                ? Math.max(l - o, s - l)
                : 0 === n
                ? (e.getPixelForTick(1) - l) / 2
                : (l - e.getPixelForTick(r - 1)) / 2),
            (l += r < n ? c : -c),
            l < o - a || l > s + a)
          )
        )
          return l;
      }
      function Vu(e) {
        return e.drawTicks ? e.tickLength : 0;
      }
      function mO(e, n) {
        if (!e.display) return 0;
        const t = _n(e.font, n),
          i = jn(e.padding);
        return (Pt(e.text) ? e.text.length : 1) * t.lineHeight + i.height;
      }
      function D9(e, n, t) {
        let i = Qv(e);
        return (
          ((t && "right" !== n) || (!t && "right" === n)) &&
            (i = ((e) => ("left" === e ? "right" : "right" === e ? "left" : e))(
              i
            )),
          i
        );
      }
      class Js extends dr {
        constructor(n) {
          super(),
            (this.id = n.id),
            (this.type = n.type),
            (this.options = void 0),
            (this.ctx = n.ctx),
            (this.chart = n.chart),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
            (this.maxWidth = void 0),
            (this.maxHeight = void 0),
            (this.paddingTop = void 0),
            (this.paddingBottom = void 0),
            (this.paddingLeft = void 0),
            (this.paddingRight = void 0),
            (this.axis = void 0),
            (this.labelRotation = void 0),
            (this.min = void 0),
            (this.max = void 0),
            (this._range = void 0),
            (this.ticks = []),
            (this._gridLineItems = null),
            (this._labelItems = null),
            (this._labelSizes = null),
            (this._length = 0),
            (this._maxLength = 0),
            (this._longestTextCache = {}),
            (this._startPixel = void 0),
            (this._endPixel = void 0),
            (this._reversePixels = !1),
            (this._userMax = void 0),
            (this._userMin = void 0),
            (this._suggestedMax = void 0),
            (this._suggestedMin = void 0),
            (this._ticksLength = 0),
            (this._borderValue = 0),
            (this._cache = {}),
            (this._dataLimitsCached = !1),
            (this.$context = void 0);
        }
        init(n) {
          (this.options = n.setContext(this.getContext())),
            (this.axis = n.axis),
            (this._userMin = this.parse(n.min)),
            (this._userMax = this.parse(n.max)),
            (this._suggestedMin = this.parse(n.suggestedMin)),
            (this._suggestedMax = this.parse(n.suggestedMax));
        }
        parse(n, t) {
          return n;
        }
        getUserBounds() {
          let {
            _userMin: n,
            _userMax: t,
            _suggestedMin: i,
            _suggestedMax: r,
          } = this;
          return (
            (n = ji(n, Number.POSITIVE_INFINITY)),
            (t = ji(t, Number.NEGATIVE_INFINITY)),
            (i = ji(i, Number.POSITIVE_INFINITY)),
            (r = ji(r, Number.NEGATIVE_INFINITY)),
            {
              min: ji(n, i),
              max: ji(t, r),
              minDefined: nn(n),
              maxDefined: nn(t),
            }
          );
        }
        getMinMax(n) {
          let s,
            {
              min: t,
              max: i,
              minDefined: r,
              maxDefined: o,
            } = this.getUserBounds();
          if (r && o) return { min: t, max: i };
          const a = this.getMatchingVisibleMetas();
          for (let l = 0, c = a.length; l < c; ++l)
            (s = a[l].controller.getMinMax(this, n)),
              r || (t = Math.min(t, s.min)),
              o || (i = Math.max(i, s.max));
          return (
            (t = o && t > i ? i : t),
            (i = r && t > i ? t : i),
            { min: ji(t, ji(i, t)), max: ji(i, ji(t, i)) }
          );
        }
        getPadding() {
          return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0,
          };
        }
        getTicks() {
          return this.ticks;
        }
        getLabels() {
          const n = this.chart.data;
          return (
            this.options.labels ||
            (this.isHorizontal() ? n.xLabels : n.yLabels) ||
            n.labels ||
            []
          );
        }
        beforeLayout() {
          (this._cache = {}), (this._dataLimitsCached = !1);
        }
        beforeUpdate() {
          Ft(this.options.beforeUpdate, [this]);
        }
        update(n, t, i) {
          const { beginAtZero: r, grace: o, ticks: s } = this.options,
            a = s.sampleSize;
          this.beforeUpdate(),
            (this.maxWidth = n),
            (this.maxHeight = t),
            (this._margins = i =
              Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, i)),
            (this.ticks = null),
            (this._labelSizes = null),
            (this._gridLineItems = null),
            (this._labelItems = null),
            this.beforeSetDimensions(),
            this.setDimensions(),
            this.afterSetDimensions(),
            (this._maxLength = this.isHorizontal()
              ? this.width + i.left + i.right
              : this.height + i.top + i.bottom),
            this._dataLimitsCached ||
              (this.beforeDataLimits(),
              this.determineDataLimits(),
              this.afterDataLimits(),
              (this._range = (function X$(e, n, t) {
                const { min: i, max: r } = e,
                  o = nI(n, (r - i) / 2),
                  s = (a, l) => (t && 0 === a ? 0 : a + l);
                return { min: s(i, -Math.abs(o)), max: s(r, o) };
              })(this, o, r)),
              (this._dataLimitsCached = !0)),
            this.beforeBuildTicks(),
            (this.ticks = this.buildTicks() || []),
            this.afterBuildTicks();
          const l = a < this.ticks.length;
          this._convertTicksToLabels(l ? gO(this.ticks, a) : this.ticks),
            this.configure(),
            this.beforeCalculateLabelRotation(),
            this.calculateLabelRotation(),
            this.afterCalculateLabelRotation(),
            s.display &&
              (s.autoSkip || "auto" === s.source) &&
              ((this.ticks = (function p9(e, n) {
                const t = e.options.ticks,
                  i =
                    t.maxTicksLimit ||
                    (function g9(e) {
                      const n = e.options.offset,
                        t = e._tickSize();
                      return Math.floor(
                        Math.min(e._length / t + (n ? 0 : 1), e._maxLength / t)
                      );
                    })(e),
                  r = t.major.enabled
                    ? (function _9(e) {
                        const n = [];
                        let t, i;
                        for (t = 0, i = e.length; t < i; t++)
                          e[t].major && n.push(t);
                        return n;
                      })(n)
                    : [],
                  o = r.length,
                  s = r[0],
                  a = r[o - 1],
                  l = [];
                if (o > i)
                  return (
                    (function y9(e, n, t, i) {
                      let s,
                        r = 0,
                        o = t[0];
                      for (i = Math.ceil(i), s = 0; s < e.length; s++)
                        s === o && (n.push(e[s]), r++, (o = t[r * i]));
                    })(n, l, r, o / i),
                    l
                  );
                const c = (function m9(e, n, t) {
                  const i = (function v9(e) {
                      const n = e.length;
                      let t, i;
                      if (n < 2) return !1;
                      for (i = e[0], t = 1; t < n; ++t)
                        if (e[t] - e[t - 1] !== i) return !1;
                      return i;
                    })(e),
                    r = n.length / t;
                  if (!i) return Math.max(r, 1);
                  const o = (function u$(e) {
                    const n = [],
                      t = Math.sqrt(e);
                    let i;
                    for (i = 1; i < t; i++)
                      e % i == 0 && (n.push(i), n.push(e / i));
                    return (
                      t === (0 | t) && n.push(t),
                      n.sort((r, o) => r - o).pop(),
                      n
                    );
                  })(i);
                  for (let s = 0, a = o.length - 1; s < a; s++) {
                    const l = o[s];
                    if (l > r) return l;
                  }
                  return Math.max(r, 1);
                })(r, n, i);
                if (o > 0) {
                  let u, f;
                  const g = o > 1 ? Math.round((a - s) / (o - 1)) : null;
                  for (
                    Cp(n, l, c, Xe(g) ? 0 : s - g, s), u = 0, f = o - 1;
                    u < f;
                    u++
                  )
                    Cp(n, l, c, r[u], r[u + 1]);
                  return Cp(n, l, c, a, Xe(g) ? n.length : a + g), l;
                }
                return Cp(n, l, c), l;
              })(this, this.ticks)),
              (this._labelSizes = null),
              this.afterAutoSkip()),
            l && this._convertTicksToLabels(this.ticks),
            this.beforeFit(),
            this.fit(),
            this.afterFit(),
            this.afterUpdate();
        }
        configure() {
          let t,
            i,
            n = this.options.reverse;
          this.isHorizontal()
            ? ((t = this.left), (i = this.right))
            : ((t = this.top), (i = this.bottom), (n = !n)),
            (this._startPixel = t),
            (this._endPixel = i),
            (this._reversePixels = n),
            (this._length = i - t),
            (this._alignToPixels = this.options.alignToPixels);
        }
        afterUpdate() {
          Ft(this.options.afterUpdate, [this]);
        }
        beforeSetDimensions() {
          Ft(this.options.beforeSetDimensions, [this]);
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = 0),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = 0),
              (this.bottom = this.height)),
            (this.paddingLeft = 0),
            (this.paddingTop = 0),
            (this.paddingRight = 0),
            (this.paddingBottom = 0);
        }
        afterSetDimensions() {
          Ft(this.options.afterSetDimensions, [this]);
        }
        _callHooks(n) {
          this.chart.notifyPlugins(n, this.getContext()),
            Ft(this.options[n], [this]);
        }
        beforeDataLimits() {
          this._callHooks("beforeDataLimits");
        }
        determineDataLimits() {}
        afterDataLimits() {
          this._callHooks("afterDataLimits");
        }
        beforeBuildTicks() {
          this._callHooks("beforeBuildTicks");
        }
        buildTicks() {
          return [];
        }
        afterBuildTicks() {
          this._callHooks("afterBuildTicks");
        }
        beforeTickToLabelConversion() {
          Ft(this.options.beforeTickToLabelConversion, [this]);
        }
        generateTickLabels(n) {
          const t = this.options.ticks;
          let i, r, o;
          for (i = 0, r = n.length; i < r; i++)
            (o = n[i]), (o.label = Ft(t.callback, [o.value, i, n], this));
        }
        afterTickToLabelConversion() {
          Ft(this.options.afterTickToLabelConversion, [this]);
        }
        beforeCalculateLabelRotation() {
          Ft(this.options.beforeCalculateLabelRotation, [this]);
        }
        calculateLabelRotation() {
          const n = this.options,
            t = n.ticks,
            i = this.ticks.length,
            r = t.minRotation || 0,
            o = t.maxRotation;
          let a,
            l,
            c,
            s = r;
          if (
            !this._isVisible() ||
            !t.display ||
            r >= o ||
            i <= 1 ||
            !this.isHorizontal()
          )
            return void (this.labelRotation = r);
          const u = this._getLabelSizes(),
            f = u.widest.width,
            g = u.highest.height,
            m = xn(this.chart.width - f, 0, this.maxWidth);
          (a = n.offset ? this.maxWidth / i : m / (i - 1)),
            f + 6 > a &&
              ((a = m / (i - (n.offset ? 0.5 : 1))),
              (l =
                this.maxHeight -
                Vu(n.grid) -
                t.padding -
                mO(n.title, this.chart.options.font)),
              (c = Math.sqrt(f * f + g * g)),
              (s = Yv(
                Math.min(
                  Math.asin(xn((u.highest.height + 6) / a, -1, 1)),
                  Math.asin(xn(l / c, -1, 1)) - Math.asin(xn(g / c, -1, 1))
                )
              )),
              (s = Math.max(r, Math.min(o, s)))),
            (this.labelRotation = s);
        }
        afterCalculateLabelRotation() {
          Ft(this.options.afterCalculateLabelRotation, [this]);
        }
        afterAutoSkip() {}
        beforeFit() {
          Ft(this.options.beforeFit, [this]);
        }
        fit() {
          const n = { width: 0, height: 0 },
            {
              chart: t,
              options: { ticks: i, title: r, grid: o },
            } = this,
            s = this._isVisible(),
            a = this.isHorizontal();
          if (s) {
            const l = mO(r, t.options.font);
            if (
              (a
                ? ((n.width = this.maxWidth), (n.height = Vu(o) + l))
                : ((n.height = this.maxHeight), (n.width = Vu(o) + l)),
              i.display && this.ticks.length)
            ) {
              const {
                  first: c,
                  last: u,
                  widest: f,
                  highest: g,
                } = this._getLabelSizes(),
                m = 2 * i.padding,
                _ = ur(this.labelRotation),
                y = Math.cos(_),
                v = Math.sin(_);
              a
                ? (n.height = Math.min(
                    this.maxHeight,
                    n.height + (i.mirror ? 0 : v * f.width + y * g.height) + m
                  ))
                : (n.width = Math.min(
                    this.maxWidth,
                    n.width + (i.mirror ? 0 : y * f.width + v * g.height) + m
                  )),
                this._calculatePadding(c, u, v, y);
            }
          }
          this._handleMargins(),
            a
              ? ((this.width = this._length =
                  t.width - this._margins.left - this._margins.right),
                (this.height = n.height))
              : ((this.width = n.width),
                (this.height = this._length =
                  t.height - this._margins.top - this._margins.bottom));
        }
        _calculatePadding(n, t, i, r) {
          const {
              ticks: { align: o, padding: s },
              position: a,
            } = this.options,
            l = 0 !== this.labelRotation,
            c = "top" !== a && "x" === this.axis;
          if (this.isHorizontal()) {
            const u = this.getPixelForTick(0) - this.left,
              f = this.right - this.getPixelForTick(this.ticks.length - 1);
            let g = 0,
              m = 0;
            l
              ? c
                ? ((g = r * n.width), (m = i * t.height))
                : ((g = i * n.height), (m = r * t.width))
              : "start" === o
              ? (m = t.width)
              : "end" === o
              ? (g = n.width)
              : "inner" !== o && ((g = n.width / 2), (m = t.width / 2)),
              (this.paddingLeft = Math.max(
                ((g - u + s) * this.width) / (this.width - u),
                0
              )),
              (this.paddingRight = Math.max(
                ((m - f + s) * this.width) / (this.width - f),
                0
              ));
          } else {
            let u = t.height / 2,
              f = n.height / 2;
            "start" === o
              ? ((u = 0), (f = n.height))
              : "end" === o && ((u = t.height), (f = 0)),
              (this.paddingTop = u + s),
              (this.paddingBottom = f + s);
          }
        }
        _handleMargins() {
          this._margins &&
            ((this._margins.left = Math.max(
              this.paddingLeft,
              this._margins.left
            )),
            (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
            (this._margins.right = Math.max(
              this.paddingRight,
              this._margins.right
            )),
            (this._margins.bottom = Math.max(
              this.paddingBottom,
              this._margins.bottom
            )));
        }
        afterFit() {
          Ft(this.options.afterFit, [this]);
        }
        isHorizontal() {
          const { axis: n, position: t } = this.options;
          return "top" === t || "bottom" === t || "x" === n;
        }
        isFullSize() {
          return this.options.fullSize;
        }
        _convertTicksToLabels(n) {
          let t, i;
          for (
            this.beforeTickToLabelConversion(),
              this.generateTickLabels(n),
              t = 0,
              i = n.length;
            t < i;
            t++
          )
            Xe(n[t].label) && (n.splice(t, 1), i--, t--);
          this.afterTickToLabelConversion();
        }
        _getLabelSizes() {
          let n = this._labelSizes;
          if (!n) {
            const t = this.options.ticks.sampleSize;
            let i = this.ticks;
            t < i.length && (i = gO(i, t)),
              (this._labelSizes = n = this._computeLabelSizes(i, i.length));
          }
          return n;
        }
        _computeLabelSizes(n, t) {
          const { ctx: i, _longestTextCache: r } = this,
            o = [],
            s = [];
          let c,
            u,
            f,
            g,
            m,
            _,
            y,
            v,
            w,
            C,
            D,
            a = 0,
            l = 0;
          for (c = 0; c < t; ++c) {
            if (
              ((g = n[c].label),
              (m = this._resolveTickFontOptions(c)),
              (i.font = _ = m.string),
              (y = r[_] = r[_] || { data: {}, gc: [] }),
              (v = m.lineHeight),
              (w = C = 0),
              Xe(g) || Pt(g))
            ) {
              if (Pt(g))
                for (u = 0, f = g.length; u < f; ++u)
                  (D = g[u]),
                    !Xe(D) &&
                      !Pt(D) &&
                      ((w = gp(i, y.data, y.gc, w, D)), (C += v));
            } else (w = gp(i, y.data, y.gc, w, g)), (C = v);
            o.push(w), s.push(C), (a = Math.max(w, a)), (l = Math.max(C, l));
          }
          !(function C9(e, n) {
            pt(e, (t) => {
              const i = t.gc,
                r = i.length / 2;
              let o;
              if (r > n) {
                for (o = 0; o < r; ++o) delete t.data[i[o]];
                i.splice(0, r);
              }
            });
          })(r, t);
          const S = o.indexOf(a),
            T = s.indexOf(l),
            L = (z) => ({ width: o[z] || 0, height: s[z] || 0 });
          return {
            first: L(0),
            last: L(t - 1),
            widest: L(S),
            highest: L(T),
            widths: o,
            heights: s,
          };
        }
        getLabelForValue(n) {
          return n;
        }
        getPixelForValue(n, t) {
          return NaN;
        }
        getValueForPixel(n) {}
        getPixelForTick(n) {
          const t = this.ticks;
          return n < 0 || n > t.length - 1
            ? null
            : this.getPixelForValue(t[n].value);
        }
        getPixelForDecimal(n) {
          this._reversePixels && (n = 1 - n);
          const t = this._startPixel + n * this._length;
          return (function f$(e) {
            return xn(e, -32768, 32767);
          })(this._alignToPixels ? Gs(this.chart, t, 0) : t);
        }
        getDecimalForPixel(n) {
          const t = (n - this._startPixel) / this._length;
          return this._reversePixels ? 1 - t : t;
        }
        getBasePixel() {
          return this.getPixelForValue(this.getBaseValue());
        }
        getBaseValue() {
          const { min: n, max: t } = this;
          return n < 0 && t < 0 ? t : n > 0 && t > 0 ? n : 0;
        }
        getContext(n) {
          const t = this.ticks || [];
          if (n >= 0 && n < t.length) {
            const i = t[n];
            return (
              i.$context ||
              (i.$context = (function M9(e, n, t) {
                return is(e, { tick: t, index: n, type: "tick" });
              })(this.getContext(), n, i))
            );
          }
          return (
            this.$context ||
            (this.$context = (function x9(e, n) {
              return is(e, { scale: n, type: "scale" });
            })(this.chart.getContext(), this))
          );
        }
        _tickSize() {
          const n = this.options.ticks,
            t = ur(this.labelRotation),
            i = Math.abs(Math.cos(t)),
            r = Math.abs(Math.sin(t)),
            o = this._getLabelSizes(),
            s = n.autoSkipPadding || 0,
            a = o ? o.widest.width + s : 0,
            l = o ? o.highest.height + s : 0;
          return this.isHorizontal()
            ? l * i > a * r
              ? a / i
              : l / r
            : l * r < a * i
            ? l / i
            : a / r;
        }
        _isVisible() {
          const n = this.options.display;
          return "auto" !== n ? !!n : this.getMatchingVisibleMetas().length > 0;
        }
        _computeGridLineItems(n) {
          const t = this.axis,
            i = this.chart,
            r = this.options,
            { grid: o, position: s } = r,
            a = o.offset,
            l = this.isHorizontal(),
            u = this.ticks.length + (a ? 1 : 0),
            f = Vu(o),
            g = [],
            m = o.setContext(this.getContext()),
            _ = m.drawBorder ? m.borderWidth : 0,
            y = _ / 2,
            v = function (De) {
              return Gs(i, De, _);
            };
          let w, C, D, S, T, L, z, $, q, we, Be, Fe;
          if ("top" === s)
            (w = v(this.bottom)),
              (L = this.bottom - f),
              ($ = w - y),
              (we = v(n.top) + y),
              (Fe = n.bottom);
          else if ("bottom" === s)
            (w = v(this.top)),
              (we = n.top),
              (Fe = v(n.bottom) - y),
              (L = w + y),
              ($ = this.top + f);
          else if ("left" === s)
            (w = v(this.right)),
              (T = this.right - f),
              (z = w - y),
              (q = v(n.left) + y),
              (Be = n.right);
          else if ("right" === s)
            (w = v(this.left)),
              (q = n.left),
              (Be = v(n.right) - y),
              (T = w + y),
              (z = this.left + f);
          else if ("x" === t) {
            if ("center" === s) w = v((n.top + n.bottom) / 2 + 0.5);
            else if (We(s)) {
              const De = Object.keys(s)[0];
              w = v(this.chart.scales[De].getPixelForValue(s[De]));
            }
            (we = n.top), (Fe = n.bottom), (L = w + y), ($ = L + f);
          } else if ("y" === t) {
            if ("center" === s) w = v((n.left + n.right) / 2);
            else if (We(s)) {
              const De = Object.keys(s)[0];
              w = v(this.chart.scales[De].getPixelForValue(s[De]));
            }
            (T = w - y), (z = T - f), (q = n.left), (Be = n.right);
          }
          const bt = Pe(r.ticks.maxTicksLimit, u),
            Mn = Math.max(1, Math.ceil(u / bt));
          for (C = 0; C < u; C += Mn) {
            const De = o.setContext(this.getContext(C)),
              W = De.lineWidth,
              G = De.color,
              ae = De.borderDash || [],
              Ue = De.borderDashOffset,
              Bt = De.tickWidth,
              ni = De.tickColor,
              un = De.tickBorderDash || [],
              fi = De.tickBorderDashOffset;
            (D = w9(this, C, a)),
              void 0 !== D &&
                ((S = Gs(i, D, W)),
                l ? (T = z = q = Be = S) : (L = $ = we = Fe = S),
                g.push({
                  tx1: T,
                  ty1: L,
                  tx2: z,
                  ty2: $,
                  x1: q,
                  y1: we,
                  x2: Be,
                  y2: Fe,
                  width: W,
                  color: G,
                  borderDash: ae,
                  borderDashOffset: Ue,
                  tickWidth: Bt,
                  tickColor: ni,
                  tickBorderDash: un,
                  tickBorderDashOffset: fi,
                }));
          }
          return (this._ticksLength = u), (this._borderValue = w), g;
        }
        _computeLabelItems(n) {
          const t = this.axis,
            i = this.options,
            { position: r, ticks: o } = i,
            s = this.isHorizontal(),
            a = this.ticks,
            { align: l, crossAlign: c, padding: u, mirror: f } = o,
            g = Vu(i.grid),
            m = g + u,
            _ = f ? -u : m,
            y = -ur(this.labelRotation),
            v = [];
          let w,
            C,
            D,
            S,
            T,
            L,
            z,
            $,
            q,
            we,
            Be,
            Fe,
            bt = "middle";
          if ("top" === r)
            (L = this.bottom - _), (z = this._getXAxisLabelAlignment());
          else if ("bottom" === r)
            (L = this.top + _), (z = this._getXAxisLabelAlignment());
          else if ("left" === r) {
            const De = this._getYAxisLabelAlignment(g);
            (z = De.textAlign), (T = De.x);
          } else if ("right" === r) {
            const De = this._getYAxisLabelAlignment(g);
            (z = De.textAlign), (T = De.x);
          } else if ("x" === t) {
            if ("center" === r) L = (n.top + n.bottom) / 2 + m;
            else if (We(r)) {
              const De = Object.keys(r)[0];
              L = this.chart.scales[De].getPixelForValue(r[De]) + m;
            }
            z = this._getXAxisLabelAlignment();
          } else if ("y" === t) {
            if ("center" === r) T = (n.left + n.right) / 2 - m;
            else if (We(r)) {
              const De = Object.keys(r)[0];
              T = this.chart.scales[De].getPixelForValue(r[De]);
            }
            z = this._getYAxisLabelAlignment(g).textAlign;
          }
          "y" === t &&
            ("start" === l ? (bt = "top") : "end" === l && (bt = "bottom"));
          const Mn = this._getLabelSizes();
          for (w = 0, C = a.length; w < C; ++w) {
            (D = a[w]), (S = D.label);
            const De = o.setContext(this.getContext(w));
            ($ = this.getPixelForTick(w) + o.labelOffset),
              (q = this._resolveTickFontOptions(w)),
              (we = q.lineHeight),
              (Be = Pt(S) ? S.length : 1);
            const W = Be / 2,
              G = De.color,
              ae = De.textStrokeColor,
              Ue = De.textStrokeWidth;
            let ni,
              Bt = z;
            if (
              (s
                ? ((T = $),
                  "inner" === z &&
                    (Bt =
                      w === C - 1
                        ? this.options.reverse
                          ? "left"
                          : "right"
                        : 0 === w
                        ? this.options.reverse
                          ? "right"
                          : "left"
                        : "center"),
                  (Fe =
                    "top" === r
                      ? "near" === c || 0 !== y
                        ? -Be * we + we / 2
                        : "center" === c
                        ? -Mn.highest.height / 2 - W * we + we
                        : we / 2 - Mn.highest.height
                      : "near" === c || 0 !== y
                      ? we / 2
                      : "center" === c
                      ? Mn.highest.height / 2 - W * we
                      : Mn.highest.height - Be * we),
                  f && (Fe *= -1))
                : ((L = $), (Fe = ((1 - Be) * we) / 2)),
              De.showLabelBackdrop)
            ) {
              const un = jn(De.backdropPadding),
                fi = Mn.heights[w],
                Dt = Mn.widths[w];
              let ec = L + Fe - un.top,
                Fd = T - un.left;
              switch (bt) {
                case "middle":
                  ec -= fi / 2;
                  break;
                case "bottom":
                  ec -= fi;
              }
              switch (z) {
                case "center":
                  Fd -= Dt / 2;
                  break;
                case "right":
                  Fd -= Dt;
              }
              ni = {
                left: Fd,
                top: ec,
                width: Dt + un.width,
                height: fi + un.height,
                color: De.backdropColor,
              };
            }
            v.push({
              rotation: y,
              label: S,
              font: q,
              color: G,
              strokeColor: ae,
              strokeWidth: Ue,
              textOffset: Fe,
              textAlign: Bt,
              textBaseline: bt,
              translation: [T, L],
              backdrop: ni,
            });
          }
          return v;
        }
        _getXAxisLabelAlignment() {
          const { position: n, ticks: t } = this.options;
          if (-ur(this.labelRotation)) return "top" === n ? "left" : "right";
          let r = "center";
          return (
            "start" === t.align
              ? (r = "left")
              : "end" === t.align
              ? (r = "right")
              : "inner" === t.align && (r = "inner"),
            r
          );
        }
        _getYAxisLabelAlignment(n) {
          const {
              position: t,
              ticks: { crossAlign: i, mirror: r, padding: o },
            } = this.options,
            a = n + o,
            l = this._getLabelSizes().widest.width;
          let c, u;
          return (
            "left" === t
              ? r
                ? ((u = this.right + o),
                  "near" === i
                    ? (c = "left")
                    : "center" === i
                    ? ((c = "center"), (u += l / 2))
                    : ((c = "right"), (u += l)))
                : ((u = this.right - a),
                  "near" === i
                    ? (c = "right")
                    : "center" === i
                    ? ((c = "center"), (u -= l / 2))
                    : ((c = "left"), (u = this.left)))
              : "right" === t
              ? r
                ? ((u = this.left + o),
                  "near" === i
                    ? (c = "right")
                    : "center" === i
                    ? ((c = "center"), (u -= l / 2))
                    : ((c = "left"), (u -= l)))
                : ((u = this.left + a),
                  "near" === i
                    ? (c = "left")
                    : "center" === i
                    ? ((c = "center"), (u += l / 2))
                    : ((c = "right"), (u = this.right)))
              : (c = "right"),
            { textAlign: c, x: u }
          );
        }
        _computeLabelArea() {
          if (this.options.ticks.mirror) return;
          const n = this.chart,
            t = this.options.position;
          return "left" === t || "right" === t
            ? { top: 0, left: this.left, bottom: n.height, right: this.right }
            : "top" === t || "bottom" === t
            ? { top: this.top, left: 0, bottom: this.bottom, right: n.width }
            : void 0;
        }
        drawBackground() {
          const {
            ctx: n,
            options: { backgroundColor: t },
            left: i,
            top: r,
            width: o,
            height: s,
          } = this;
          t &&
            (n.save(), (n.fillStyle = t), n.fillRect(i, r, o, s), n.restore());
        }
        getLineWidthForValue(n) {
          const t = this.options.grid;
          if (!this._isVisible() || !t.display) return 0;
          const r = this.ticks.findIndex((o) => o.value === n);
          return r >= 0 ? t.setContext(this.getContext(r)).lineWidth : 0;
        }
        drawGrid(n) {
          const t = this.options.grid,
            i = this.ctx,
            r =
              this._gridLineItems ||
              (this._gridLineItems = this._computeGridLineItems(n));
          let o, s;
          const a = (l, c, u) => {
            !u.width ||
              !u.color ||
              (i.save(),
              (i.lineWidth = u.width),
              (i.strokeStyle = u.color),
              i.setLineDash(u.borderDash || []),
              (i.lineDashOffset = u.borderDashOffset),
              i.beginPath(),
              i.moveTo(l.x, l.y),
              i.lineTo(c.x, c.y),
              i.stroke(),
              i.restore());
          };
          if (t.display)
            for (o = 0, s = r.length; o < s; ++o) {
              const l = r[o];
              t.drawOnChartArea &&
                a({ x: l.x1, y: l.y1 }, { x: l.x2, y: l.y2 }, l),
                t.drawTicks &&
                  a(
                    { x: l.tx1, y: l.ty1 },
                    { x: l.tx2, y: l.ty2 },
                    {
                      color: l.tickColor,
                      width: l.tickWidth,
                      borderDash: l.tickBorderDash,
                      borderDashOffset: l.tickBorderDashOffset,
                    }
                  );
            }
        }
        drawBorder() {
          const {
              chart: n,
              ctx: t,
              options: { grid: i },
            } = this,
            r = i.setContext(this.getContext()),
            o = i.drawBorder ? r.borderWidth : 0;
          if (!o) return;
          const s = i.setContext(this.getContext(0)).lineWidth,
            a = this._borderValue;
          let l, c, u, f;
          this.isHorizontal()
            ? ((l = Gs(n, this.left, o) - o / 2),
              (c = Gs(n, this.right, s) + s / 2),
              (u = f = a))
            : ((u = Gs(n, this.top, o) - o / 2),
              (f = Gs(n, this.bottom, s) + s / 2),
              (l = c = a)),
            t.save(),
            (t.lineWidth = r.borderWidth),
            (t.strokeStyle = r.borderColor),
            t.beginPath(),
            t.moveTo(l, u),
            t.lineTo(c, f),
            t.stroke(),
            t.restore();
        }
        drawLabels(n) {
          if (!this.options.ticks.display) return;
          const i = this.ctx,
            r = this._computeLabelArea();
          r && mp(i, r);
          const o =
            this._labelItems || (this._labelItems = this._computeLabelItems(n));
          let s, a;
          for (s = 0, a = o.length; s < a; ++s) {
            const l = o[s],
              c = l.font,
              u = l.label;
            l.backdrop &&
              ((i.fillStyle = l.backdrop.color),
              i.fillRect(
                l.backdrop.left,
                l.backdrop.top,
                l.backdrop.width,
                l.backdrop.height
              )),
              Ys(i, u, 0, l.textOffset, c, l);
          }
          r && _p(i);
        }
        drawTitle() {
          const {
            ctx: n,
            options: { position: t, title: i, reverse: r },
          } = this;
          if (!i.display) return;
          const o = _n(i.font),
            s = jn(i.padding),
            a = i.align;
          let l = o.lineHeight / 2;
          "bottom" === t || "center" === t || We(t)
            ? ((l += s.bottom),
              Pt(i.text) && (l += o.lineHeight * (i.text.length - 1)))
            : (l += s.top);
          const {
            titleX: c,
            titleY: u,
            maxWidth: f,
            rotation: g,
          } = (function S9(e, n, t, i) {
            const { top: r, left: o, bottom: s, right: a, chart: l } = e,
              { chartArea: c, scales: u } = l;
            let g,
              m,
              _,
              f = 0;
            const y = s - r,
              v = a - o;
            if (e.isHorizontal()) {
              if (((m = Hn(i, o, a)), We(t))) {
                const w = Object.keys(t)[0];
                _ = u[w].getPixelForValue(t[w]) + y - n;
              } else
                _ =
                  "center" === t ? (c.bottom + c.top) / 2 + y - n : pO(e, t, n);
              g = a - o;
            } else {
              if (We(t)) {
                const w = Object.keys(t)[0];
                m = u[w].getPixelForValue(t[w]) - v + n;
              } else
                m =
                  "center" === t ? (c.left + c.right) / 2 - v + n : pO(e, t, n);
              (_ = Hn(i, s, r)), (f = "left" === t ? -Kt : Kt);
            }
            return { titleX: m, titleY: _, maxWidth: g, rotation: f };
          })(this, l, t, a);
          Ys(n, i.text, 0, 0, o, {
            color: i.color,
            maxWidth: f,
            rotation: g,
            textAlign: D9(a, t, r),
            textBaseline: "middle",
            translation: [c, u],
          });
        }
        draw(n) {
          this._isVisible() &&
            (this.drawBackground(),
            this.drawGrid(n),
            this.drawBorder(),
            this.drawTitle(),
            this.drawLabels(n));
        }
        _layers() {
          const n = this.options,
            t = (n.ticks && n.ticks.z) || 0,
            i = Pe(n.grid && n.grid.z, -1);
          return this._isVisible() && this.draw === Js.prototype.draw
            ? [
                {
                  z: i,
                  draw: (r) => {
                    this.drawBackground(), this.drawGrid(r), this.drawTitle();
                  },
                },
                {
                  z: i + 1,
                  draw: () => {
                    this.drawBorder();
                  },
                },
                {
                  z: t,
                  draw: (r) => {
                    this.drawLabels(r);
                  },
                },
              ]
            : [
                {
                  z: t,
                  draw: (r) => {
                    this.draw(r);
                  },
                },
              ];
        }
        getMatchingVisibleMetas(n) {
          const t = this.chart.getSortedVisibleDatasetMetas(),
            i = this.axis + "AxisID",
            r = [];
          let o, s;
          for (o = 0, s = t.length; o < s; ++o) {
            const a = t[o];
            a[i] === this.id && (!n || a.type === n) && r.push(a);
          }
          return r;
        }
        _resolveTickFontOptions(n) {
          return _n(this.options.ticks.setContext(this.getContext(n)).font);
        }
        _maxDigits() {
          const n = this._resolveTickFontOptions(0).lineHeight;
          return (this.isHorizontal() ? this.width : this.height) / n;
        }
      }
      class xp {
        constructor(n, t, i) {
          (this.type = n),
            (this.scope = t),
            (this.override = i),
            (this.items = Object.create(null));
        }
        isForType(n) {
          return Object.prototype.isPrototypeOf.call(
            this.type.prototype,
            n.prototype
          );
        }
        register(n) {
          const t = Object.getPrototypeOf(n);
          let i;
          (function E9(e) {
            return "id" in e && "defaults" in e;
          })(t) && (i = this.register(t));
          const r = this.items,
            o = n.id,
            s = this.scope + "." + o;
          if (!o) throw new Error("class does not have id: " + n);
          return (
            o in r ||
              ((r[o] = n),
              (function k9(e, n, t) {
                const i = Du(Object.create(null), [
                  t ? $e.get(t) : {},
                  $e.get(n),
                  e.defaults,
                ]);
                $e.set(n, i),
                  e.defaultRoutes &&
                    (function T9(e, n) {
                      Object.keys(n).forEach((t) => {
                        const i = t.split("."),
                          r = i.pop(),
                          o = [e].concat(i).join("."),
                          s = n[t].split("."),
                          a = s.pop(),
                          l = s.join(".");
                        $e.route(o, r, l, a);
                      });
                    })(n, e.defaultRoutes),
                  e.descriptors && $e.describe(n, e.descriptors);
              })(n, s, i),
              this.override && $e.override(n.id, n.overrides)),
            s
          );
        }
        get(n) {
          return this.items[n];
        }
        unregister(n) {
          const t = this.items,
            i = n.id,
            r = this.scope;
          i in t && delete t[i],
            r && i in $e[r] && (delete $e[r][i], this.override && delete qs[i]);
        }
      }
      var Br = new (class I9 {
          constructor() {
            (this.controllers = new xp(Lr, "datasets", !0)),
              (this.elements = new xp(dr, "elements")),
              (this.plugins = new xp(Object, "plugins")),
              (this.scales = new xp(Js, "scales")),
              (this._typedRegistries = [
                this.controllers,
                this.scales,
                this.elements,
              ]);
          }
          add(...n) {
            this._each("register", n);
          }
          remove(...n) {
            this._each("unregister", n);
          }
          addControllers(...n) {
            this._each("register", n, this.controllers);
          }
          addElements(...n) {
            this._each("register", n, this.elements);
          }
          addPlugins(...n) {
            this._each("register", n, this.plugins);
          }
          addScales(...n) {
            this._each("register", n, this.scales);
          }
          getController(n) {
            return this._get(n, this.controllers, "controller");
          }
          getElement(n) {
            return this._get(n, this.elements, "element");
          }
          getPlugin(n) {
            return this._get(n, this.plugins, "plugin");
          }
          getScale(n) {
            return this._get(n, this.scales, "scale");
          }
          removeControllers(...n) {
            this._each("unregister", n, this.controllers);
          }
          removeElements(...n) {
            this._each("unregister", n, this.elements);
          }
          removePlugins(...n) {
            this._each("unregister", n, this.plugins);
          }
          removeScales(...n) {
            this._each("unregister", n, this.scales);
          }
          _each(n, t, i) {
            [...t].forEach((r) => {
              const o = i || this._getRegistryForType(r);
              i || o.isForType(r) || (o === this.plugins && r.id)
                ? this._exec(n, o, r)
                : pt(r, (s) => {
                    const a = i || this._getRegistryForType(s);
                    this._exec(n, a, s);
                  });
            });
          }
          _exec(n, t, i) {
            const r = Gv(n);
            Ft(i["before" + r], [], i), t[n](i), Ft(i["after" + r], [], i);
          }
          _getRegistryForType(n) {
            for (let t = 0; t < this._typedRegistries.length; t++) {
              const i = this._typedRegistries[t];
              if (i.isForType(n)) return i;
            }
            return this.plugins;
          }
          _get(n, t, i) {
            const r = t.get(n);
            if (void 0 === r)
              throw new Error('"' + n + '" is not a registered ' + i + ".");
            return r;
          }
        })(),
        O9 = Object.freeze({
          __proto__: null,
          BarController: s9,
          BubbleController: a9,
          DoughnutController: hO,
          LineController: c9,
          PolarAreaController: u9,
          PieController: d9,
          RadarController: h9,
          ScatterController: (() => {
            class e extends Lr {
              update(t) {
                const i = this._cachedMeta,
                  { data: r = [] } = i,
                  o = this.chart._animationsDisabled;
                let { start: s, count: a } = mI(i, r, o);
                if (
                  ((this._drawStart = s),
                  (this._drawCount = a),
                  _I(i) && ((s = 0), (a = r.length)),
                  this.options.showLine)
                ) {
                  const { dataset: l, _dataset: c } = i;
                  (l._chart = this.chart),
                    (l._datasetIndex = this.index),
                    (l._decimated = !!c._decimated),
                    (l.points = r);
                  const u = this.resolveDatasetElementOptions(t);
                  (u.segment = this.options.segment),
                    this.updateElement(
                      l,
                      void 0,
                      { animated: !o, options: u },
                      t
                    );
                }
                this.updateElements(r, s, a, t);
              }
              addElements() {
                const { showLine: t } = this.options;
                !this.datasetElementType &&
                  t &&
                  (this.datasetElementType = Br.getElement("line")),
                  super.addElements();
              }
              updateElements(t, i, r, o) {
                const s = "reset" === o,
                  {
                    iScale: a,
                    vScale: l,
                    _stacked: c,
                    _dataset: u,
                  } = this._cachedMeta,
                  f = this.resolveDataElementOptions(i, o),
                  g = this.getSharedOptions(f),
                  m = this.includeOptions(o, g),
                  _ = a.axis,
                  y = l.axis,
                  { spanGaps: v, segment: w } = this.options,
                  C = Cl(v) ? v : Number.POSITIVE_INFINITY,
                  D = this.chart._animationsDisabled || s || "none" === o;
                let S = i > 0 && this.getParsed(i - 1);
                for (let T = i; T < i + r; ++T) {
                  const L = t[T],
                    z = this.getParsed(T),
                    $ = D ? L : {},
                    q = Xe(z[y]),
                    we = ($[_] = a.getPixelForValue(z[_], T)),
                    Be = ($[y] =
                      s || q
                        ? l.getBasePixel()
                        : l.getPixelForValue(
                            c ? this.applyStack(l, z, c) : z[y],
                            T
                          ));
                  ($.skip = isNaN(we) || isNaN(Be) || q),
                    ($.stop = T > 0 && Math.abs(z[_] - S[_]) > C),
                    w && (($.parsed = z), ($.raw = u.data[T])),
                    m &&
                      ($.options =
                        g ||
                        this.resolveDataElementOptions(
                          T,
                          L.active ? "active" : o
                        )),
                    D || this.updateElement(L, T, $, o),
                    (S = z);
                }
                this.updateSharedOptions(g, o, f);
              }
              getMaxOverflow() {
                const t = this._cachedMeta,
                  i = t.data || [];
                if (!this.options.showLine) {
                  let l = 0;
                  for (let c = i.length - 1; c >= 0; --c)
                    l = Math.max(
                      l,
                      i[c].size(this.resolveDataElementOptions(c)) / 2
                    );
                  return l > 0 && l;
                }
                const r = t.dataset,
                  o = (r.options && r.options.borderWidth) || 0;
                if (!i.length) return o;
                const s = i[0].size(this.resolveDataElementOptions(0)),
                  a = i[i.length - 1].size(
                    this.resolveDataElementOptions(i.length - 1)
                  );
                return Math.max(o, s, a) / 2;
              }
            }
            return (
              (e.id = "scatter"),
              (e.defaults = {
                datasetElementType: !1,
                dataElementType: "point",
                showLine: !1,
                fill: !1,
              }),
              (e.overrides = {
                interaction: { mode: "point" },
                plugins: {
                  tooltip: {
                    callbacks: {
                      title: () => "",
                      label: (n) =>
                        "(" + n.label + ", " + n.formattedValue + ")",
                    },
                  },
                },
                scales: { x: { type: "linear" }, y: { type: "linear" } },
              }),
              e
            );
          })(),
        });
      function ea() {
        throw new Error(
          "This method is not implemented: Check that a complete date adapter is provided."
        );
      }
      var _O = {
        _date: (() => {
          class e {
            constructor(t) {
              this.options = t || {};
            }
            init(t) {}
            formats() {
              return ea();
            }
            parse(t, i) {
              return ea();
            }
            format(t, i) {
              return ea();
            }
            add(t, i, r) {
              return ea();
            }
            diff(t, i, r) {
              return ea();
            }
            startOf(t, i, r) {
              return ea();
            }
            endOf(t, i) {
              return ea();
            }
          }
          return (
            (e.override = function (n) {
              Object.assign(e.prototype, n);
            }),
            e
          );
        })(),
      };
      function A9(e, n, t, i) {
        const { controller: r, data: o, _sorted: s } = e,
          a = r._cachedMeta.iScale;
        if (a && n === a.axis && "r" !== n && s && o.length) {
          const l = a._reversePixels ? p$ : bo;
          if (!i) return l(o, n, t);
          if (r._sharedOptions) {
            const c = o[0],
              u = "function" == typeof c.getRange && c.getRange(n);
            if (u) {
              const f = l(o, n, t - u),
                g = l(o, n, t + u);
              return { lo: f.lo, hi: g.hi };
            }
          }
        }
        return { lo: 0, hi: o.length - 1 };
      }
      function zu(e, n, t, i, r) {
        const o = e.getSortedVisibleDatasetMetas(),
          s = t[n];
        for (let a = 0, l = o.length; a < l; ++a) {
          const { index: c, data: u } = o[a],
            { lo: f, hi: g } = A9(o[a], n, s, r);
          for (let m = f; m <= g; ++m) {
            const _ = u[m];
            _.skip || i(_, c, m);
          }
        }
      }
      function mb(e, n, t, i, r) {
        const o = [];
        return (
          (!r && !e.isPointInArea(n)) ||
            zu(
              e,
              t,
              n,
              function (a, l, c) {
                (!r && !Fu(a, e.chartArea, 0)) ||
                  (a.inRange(n.x, n.y, i) &&
                    o.push({ element: a, datasetIndex: l, index: c }));
              },
              !0
            ),
          o
        );
      }
      function _b(e, n, t, i, r, o) {
        return o || e.isPointInArea(n)
          ? "r" !== t || i
            ? (function R9(e, n, t, i, r, o) {
                let s = [];
                const a = (function P9(e) {
                  const n = -1 !== e.indexOf("x"),
                    t = -1 !== e.indexOf("y");
                  return function (i, r) {
                    const o = n ? Math.abs(i.x - r.x) : 0,
                      s = t ? Math.abs(i.y - r.y) : 0;
                    return Math.sqrt(Math.pow(o, 2) + Math.pow(s, 2));
                  };
                })(t);
                let l = Number.POSITIVE_INFINITY;
                return (
                  zu(e, t, n, function c(u, f, g) {
                    const m = u.inRange(n.x, n.y, r);
                    if (i && !m) return;
                    const _ = u.getCenterPoint(r);
                    if (!o && !e.isPointInArea(_) && !m) return;
                    const v = a(n, _);
                    v < l
                      ? ((s = [{ element: u, datasetIndex: f, index: g }]),
                        (l = v))
                      : v === l &&
                        s.push({ element: u, datasetIndex: f, index: g });
                  }),
                  s
                );
              })(e, n, t, i, r, o)
            : (function F9(e, n, t, i) {
                let r = [];
                return (
                  zu(e, t, n, function o(s, a, l) {
                    const { startAngle: c, endAngle: u } = s.getProps(
                        ["startAngle", "endAngle"],
                        i
                      ),
                      { angle: f } = uI(s, { x: n.x, y: n.y });
                    Eu(f, c, u) &&
                      r.push({ element: s, datasetIndex: a, index: l });
                  }),
                  r
                );
              })(e, n, t, r)
          : [];
      }
      function yO(e, n, t, i, r) {
        const o = [],
          s = "x" === t ? "inXRange" : "inYRange";
        let a = !1;
        return (
          zu(e, t, n, (l, c, u) => {
            l[s](n[t], r) &&
              (o.push({ element: l, datasetIndex: c, index: u }),
              (a = a || l.inRange(n.x, n.y, r)));
          }),
          i && !a ? [] : o
        );
      }
      var N9 = {
        evaluateInteractionItems: zu,
        modes: {
          index(e, n, t, i) {
            const r = Qs(n, e),
              o = t.axis || "x",
              s = t.includeInvisible || !1,
              a = t.intersect ? mb(e, r, o, i, s) : _b(e, r, o, !1, i, s),
              l = [];
            return a.length
              ? (e.getSortedVisibleDatasetMetas().forEach((c) => {
                  const u = a[0].index,
                    f = c.data[u];
                  f &&
                    !f.skip &&
                    l.push({ element: f, datasetIndex: c.index, index: u });
                }),
                l)
              : [];
          },
          dataset(e, n, t, i) {
            const r = Qs(n, e),
              o = t.axis || "xy",
              s = t.includeInvisible || !1;
            let a = t.intersect ? mb(e, r, o, i, s) : _b(e, r, o, !1, i, s);
            if (a.length > 0) {
              const l = a[0].datasetIndex,
                c = e.getDatasetMeta(l).data;
              a = [];
              for (let u = 0; u < c.length; ++u)
                a.push({ element: c[u], datasetIndex: l, index: u });
            }
            return a;
          },
          point: (e, n, t, i) =>
            mb(e, Qs(n, e), t.axis || "xy", i, t.includeInvisible || !1),
          nearest: (e, n, t, i) =>
            _b(
              e,
              Qs(n, e),
              t.axis || "xy",
              t.intersect,
              i,
              t.includeInvisible || !1
            ),
          x: (e, n, t, i) => yO(e, Qs(n, e), "x", t.intersect, i),
          y: (e, n, t, i) => yO(e, Qs(n, e), "y", t.intersect, i),
        },
      };
      const vO = ["left", "top", "right", "bottom"];
      function Hu(e, n) {
        return e.filter((t) => t.pos === n);
      }
      function bO(e, n) {
        return e.filter((t) => -1 === vO.indexOf(t.pos) && t.box.axis === n);
      }
      function ju(e, n) {
        return e.sort((t, i) => {
          const r = n ? i : t,
            o = n ? t : i;
          return r.weight === o.weight
            ? r.index - o.index
            : r.weight - o.weight;
        });
      }
      function wO(e, n, t, i) {
        return Math.max(e[t], n[t]) + Math.max(e[i], n[i]);
      }
      function CO(e, n) {
        (e.top = Math.max(e.top, n.top)),
          (e.left = Math.max(e.left, n.left)),
          (e.bottom = Math.max(e.bottom, n.bottom)),
          (e.right = Math.max(e.right, n.right));
      }
      function H9(e, n, t, i) {
        const { pos: r, box: o } = t,
          s = e.maxPadding;
        if (!We(r)) {
          t.size && (e[r] -= t.size);
          const f = i[t.stack] || { size: 0, count: 1 };
          (f.size = Math.max(f.size, t.horizontal ? o.height : o.width)),
            (t.size = f.size / f.count),
            (e[r] += t.size);
        }
        o.getPadding && CO(s, o.getPadding());
        const a = Math.max(0, n.outerWidth - wO(s, e, "left", "right")),
          l = Math.max(0, n.outerHeight - wO(s, e, "top", "bottom")),
          c = a !== e.w,
          u = l !== e.h;
        return (
          (e.w = a),
          (e.h = l),
          t.horizontal ? { same: c, other: u } : { same: u, other: c }
        );
      }
      function U9(e, n) {
        const t = n.maxPadding;
        return (function i(r) {
          const o = { left: 0, top: 0, right: 0, bottom: 0 };
          return (
            r.forEach((s) => {
              o[s] = Math.max(n[s], t[s]);
            }),
            o
          );
        })(e ? ["left", "right"] : ["top", "bottom"]);
      }
      function Uu(e, n, t, i) {
        const r = [];
        let o, s, a, l, c, u;
        for (o = 0, s = e.length, c = 0; o < s; ++o) {
          (a = e[o]),
            (l = a.box),
            l.update(a.width || n.w, a.height || n.h, U9(a.horizontal, n));
          const { same: f, other: g } = H9(n, t, a, i);
          (c |= f && r.length), (u = u || g), l.fullSize || r.push(a);
        }
        return (c && Uu(r, n, t, i)) || u;
      }
      function Mp(e, n, t, i, r) {
        (e.top = t),
          (e.left = n),
          (e.right = n + i),
          (e.bottom = t + r),
          (e.width = i),
          (e.height = r);
      }
      function xO(e, n, t, i) {
        const r = t.padding;
        let { x: o, y: s } = n;
        for (const a of e) {
          const l = a.box,
            c = i[a.stack] || { count: 1, placed: 0, weight: 1 },
            u = a.stackWeight / c.weight || 1;
          if (a.horizontal) {
            const f = n.w * u,
              g = c.size || l.height;
            Ui(c.start) && (s = c.start),
              l.fullSize
                ? Mp(l, r.left, s, t.outerWidth - r.right - r.left, g)
                : Mp(l, n.left + c.placed, s, f, g),
              (c.start = s),
              (c.placed += f),
              (s = l.bottom);
          } else {
            const f = n.h * u,
              g = c.size || l.width;
            Ui(c.start) && (o = c.start),
              l.fullSize
                ? Mp(l, o, r.top, g, t.outerHeight - r.bottom - r.top)
                : Mp(l, o, n.top + c.placed, g, f),
              (c.start = o),
              (c.placed += f),
              (o = l.right);
          }
        }
        (n.x = o), (n.y = s);
      }
      $e.set("layout", {
        autoPadding: !0,
        padding: { top: 0, right: 0, bottom: 0, left: 0 },
      });
      var Un = {
        addBox(e, n) {
          e.boxes || (e.boxes = []),
            (n.fullSize = n.fullSize || !1),
            (n.position = n.position || "top"),
            (n.weight = n.weight || 0),
            (n._layers =
              n._layers ||
              function () {
                return [
                  {
                    z: 0,
                    draw(t) {
                      n.draw(t);
                    },
                  },
                ];
              }),
            e.boxes.push(n);
        },
        removeBox(e, n) {
          const t = e.boxes ? e.boxes.indexOf(n) : -1;
          -1 !== t && e.boxes.splice(t, 1);
        },
        configure(e, n, t) {
          (n.fullSize = t.fullSize),
            (n.position = t.position),
            (n.weight = t.weight);
        },
        update(e, n, t, i) {
          if (!e) return;
          const r = jn(e.options.layout.padding),
            o = Math.max(n - r.width, 0),
            s = Math.max(t - r.height, 0),
            a = (function z9(e) {
              const n = (function L9(e) {
                  const n = [];
                  let t, i, r, o, s, a;
                  for (t = 0, i = (e || []).length; t < i; ++t)
                    (r = e[t]),
                      ({
                        position: o,
                        options: { stack: s, stackWeight: a = 1 },
                      } = r),
                      n.push({
                        index: t,
                        box: r,
                        pos: o,
                        horizontal: r.isHorizontal(),
                        weight: r.weight,
                        stack: s && o + s,
                        stackWeight: a,
                      });
                  return n;
                })(e),
                t = ju(
                  n.filter((c) => c.box.fullSize),
                  !0
                ),
                i = ju(Hu(n, "left"), !0),
                r = ju(Hu(n, "right")),
                o = ju(Hu(n, "top"), !0),
                s = ju(Hu(n, "bottom")),
                a = bO(n, "x"),
                l = bO(n, "y");
              return {
                fullSize: t,
                leftAndTop: i.concat(o),
                rightAndBottom: r.concat(l).concat(s).concat(a),
                chartArea: Hu(n, "chartArea"),
                vertical: i.concat(r).concat(l),
                horizontal: o.concat(s).concat(a),
              };
            })(e.boxes),
            l = a.vertical,
            c = a.horizontal;
          pt(e.boxes, (y) => {
            "function" == typeof y.beforeLayout && y.beforeLayout();
          });
          const u =
              l.reduce(
                (y, v) =>
                  v.box.options && !1 === v.box.options.display ? y : y + 1,
                0
              ) || 1,
            f = Object.freeze({
              outerWidth: n,
              outerHeight: t,
              padding: r,
              availableWidth: o,
              availableHeight: s,
              vBoxMaxWidth: o / 2 / u,
              hBoxMaxHeight: s / 2,
            }),
            g = Object.assign({}, r);
          CO(g, jn(i));
          const m = Object.assign(
              { maxPadding: g, w: o, h: s, x: r.left, y: r.top },
              r
            ),
            _ = (function V9(e, n) {
              const t = (function B9(e) {
                  const n = {};
                  for (const t of e) {
                    const { stack: i, pos: r, stackWeight: o } = t;
                    if (!i || !vO.includes(r)) continue;
                    const s =
                      n[i] ||
                      (n[i] = { count: 0, placed: 0, weight: 0, size: 0 });
                    s.count++, (s.weight += o);
                  }
                  return n;
                })(e),
                { vBoxMaxWidth: i, hBoxMaxHeight: r } = n;
              let o, s, a;
              for (o = 0, s = e.length; o < s; ++o) {
                a = e[o];
                const { fullSize: l } = a.box,
                  c = t[a.stack],
                  u = c && a.stackWeight / c.weight;
                a.horizontal
                  ? ((a.width = u ? u * i : l && n.availableWidth),
                    (a.height = r))
                  : ((a.width = i),
                    (a.height = u ? u * r : l && n.availableHeight));
              }
              return t;
            })(l.concat(c), f);
          Uu(a.fullSize, m, f, _),
            Uu(l, m, f, _),
            Uu(c, m, f, _) && Uu(l, m, f, _),
            (function j9(e) {
              const n = e.maxPadding;
              function t(i) {
                const r = Math.max(n[i] - e[i], 0);
                return (e[i] += r), r;
              }
              (e.y += t("top")), (e.x += t("left")), t("right"), t("bottom");
            })(m),
            xO(a.leftAndTop, m, f, _),
            (m.x += m.w),
            (m.y += m.h),
            xO(a.rightAndBottom, m, f, _),
            (e.chartArea = {
              left: m.left,
              top: m.top,
              right: m.left + m.w,
              bottom: m.top + m.h,
              height: m.h,
              width: m.w,
            }),
            pt(a.chartArea, (y) => {
              const v = y.box;
              Object.assign(v, e.chartArea),
                v.update(m.w, m.h, { left: 0, top: 0, right: 0, bottom: 0 });
            });
        },
      };
      class MO {
        acquireContext(n, t) {}
        releaseContext(n) {
          return !1;
        }
        addEventListener(n, t, i) {}
        removeEventListener(n, t, i) {}
        getDevicePixelRatio() {
          return 1;
        }
        getMaximumSize(n, t, i, r) {
          return (
            (t = Math.max(0, t || n.width)),
            (i = i || n.height),
            { width: t, height: Math.max(0, r ? Math.floor(t / r) : i) }
          );
        }
        isAttached(n) {
          return !0;
        }
        updateConfig(n) {}
      }
      class W9 extends MO {
        acquireContext(n) {
          return (n && n.getContext && n.getContext("2d")) || null;
        }
        updateConfig(n) {
          n.options.animation = !1;
        }
      }
      const Dp = "$chartjs",
        $9 = {
          touchstart: "mousedown",
          touchmove: "mousemove",
          touchend: "mouseup",
          pointerenter: "mouseenter",
          pointerdown: "mousedown",
          pointermove: "mousemove",
          pointerup: "mouseup",
          pointerleave: "mouseout",
          pointerout: "mouseout",
        },
        DO = (e) => null === e || "" === e,
        SO = !!w7 && { passive: !0 };
      function Y9(e, n, t) {
        e.canvas.removeEventListener(n, t, SO);
      }
      function Sp(e, n) {
        for (const t of e) if (t === n || t.contains(n)) return !0;
      }
      function Z9(e, n, t) {
        const i = e.canvas,
          r = new MutationObserver((o) => {
            let s = !1;
            for (const a of o)
              (s = s || Sp(a.addedNodes, i)), (s = s && !Sp(a.removedNodes, i));
            s && t();
          });
        return r.observe(document, { childList: !0, subtree: !0 }), r;
      }
      function Q9(e, n, t) {
        const i = e.canvas,
          r = new MutationObserver((o) => {
            let s = !1;
            for (const a of o)
              (s = s || Sp(a.removedNodes, i)), (s = s && !Sp(a.addedNodes, i));
            s && t();
          });
        return r.observe(document, { childList: !0, subtree: !0 }), r;
      }
      const Wu = new Map();
      let kO = 0;
      function TO() {
        const e = window.devicePixelRatio;
        e !== kO &&
          ((kO = e),
          Wu.forEach((n, t) => {
            t.currentDevicePixelRatio !== e && n();
          }));
      }
      function eq(e, n, t) {
        const i = e.canvas,
          r = i && db(i);
        if (!r) return;
        const o = gI((a, l) => {
            const c = r.clientWidth;
            t(a, l), c < r.clientWidth && t();
          }, window),
          s = new ResizeObserver((a) => {
            const l = a[0],
              c = l.contentRect.width,
              u = l.contentRect.height;
            (0 === c && 0 === u) || o(c, u);
          });
        return (
          s.observe(r),
          (function X9(e, n) {
            Wu.size || window.addEventListener("resize", TO), Wu.set(e, n);
          })(e, o),
          s
        );
      }
      function yb(e, n, t) {
        t && t.disconnect(),
          "resize" === n &&
            (function J9(e) {
              Wu.delete(e), Wu.size || window.removeEventListener("resize", TO);
            })(e);
      }
      function tq(e, n, t) {
        const i = e.canvas,
          r = gI(
            (o) => {
              null !== e.ctx &&
                t(
                  (function K9(e, n) {
                    const t = $9[e.type] || e.type,
                      { x: i, y: r } = Qs(e, n);
                    return {
                      type: t,
                      chart: n,
                      native: e,
                      x: void 0 !== i ? i : null,
                      y: void 0 !== r ? r : null,
                    };
                  })(o, e)
                );
            },
            e,
            (o) => {
              const s = o[0];
              return [s, s.offsetX, s.offsetY];
            }
          );
        return (
          (function G9(e, n, t) {
            e.addEventListener(n, t, SO);
          })(i, n, r),
          r
        );
      }
      class nq extends MO {
        acquireContext(n, t) {
          const i = n && n.getContext && n.getContext("2d");
          return i && i.canvas === n
            ? ((function q9(e, n) {
                const t = e.style,
                  i = e.getAttribute("height"),
                  r = e.getAttribute("width");
                if (
                  ((e[Dp] = {
                    initial: {
                      height: i,
                      width: r,
                      style: {
                        display: t.display,
                        height: t.height,
                        width: t.width,
                      },
                    },
                  }),
                  (t.display = t.display || "block"),
                  (t.boxSizing = t.boxSizing || "border-box"),
                  DO(r))
                ) {
                  const o = UI(e, "width");
                  void 0 !== o && (e.width = o);
                }
                if (DO(i))
                  if ("" === e.style.height) e.height = e.width / (n || 2);
                  else {
                    const o = UI(e, "height");
                    void 0 !== o && (e.height = o);
                  }
              })(n, t),
              i)
            : null;
        }
        releaseContext(n) {
          const t = n.canvas;
          if (!t[Dp]) return !1;
          const i = t[Dp].initial;
          ["height", "width"].forEach((o) => {
            const s = i[o];
            Xe(s) ? t.removeAttribute(o) : t.setAttribute(o, s);
          });
          const r = i.style || {};
          return (
            Object.keys(r).forEach((o) => {
              t.style[o] = r[o];
            }),
            (t.width = t.width),
            delete t[Dp],
            !0
          );
        }
        addEventListener(n, t, i) {
          this.removeEventListener(n, t),
            ((n.$proxies || (n.$proxies = {}))[t] = (
              { attach: Z9, detach: Q9, resize: eq }[t] || tq
            )(n, t, i));
        }
        removeEventListener(n, t) {
          const i = n.$proxies || (n.$proxies = {}),
            r = i[t];
          r &&
            (({ attach: yb, detach: yb, resize: yb }[t] || Y9)(n, t, r),
            (i[t] = void 0));
        }
        getDevicePixelRatio() {
          return window.devicePixelRatio;
        }
        getMaximumSize(n, t, i, r) {
          return (function b7(e, n, t, i) {
            const r = bp(e),
              o = Zs(r, "margin"),
              s = vp(r.maxWidth, e, "clientWidth") || cp,
              a = vp(r.maxHeight, e, "clientHeight") || cp,
              l = (function v7(e, n, t) {
                let i, r;
                if (void 0 === n || void 0 === t) {
                  const o = db(e);
                  if (o) {
                    const s = o.getBoundingClientRect(),
                      a = bp(o),
                      l = Zs(a, "border", "width"),
                      c = Zs(a, "padding");
                    (n = s.width - c.width - l.width),
                      (t = s.height - c.height - l.height),
                      (i = vp(a.maxWidth, o, "clientWidth")),
                      (r = vp(a.maxHeight, o, "clientHeight"));
                  } else (n = e.clientWidth), (t = e.clientHeight);
                }
                return {
                  width: n,
                  height: t,
                  maxWidth: i || cp,
                  maxHeight: r || cp,
                };
              })(e, n, t);
            let { width: c, height: u } = l;
            if ("content-box" === r.boxSizing) {
              const f = Zs(r, "border", "width"),
                g = Zs(r, "padding");
              (c -= g.width + f.width), (u -= g.height + f.height);
            }
            return (
              (c = Math.max(0, c - o.width)),
              (u = Math.max(0, i ? Math.floor(c / i) : u - o.height)),
              (c = hb(Math.min(c, s, l.maxWidth))),
              (u = hb(Math.min(u, a, l.maxHeight))),
              c && !u && (u = hb(c / 2)),
              { width: c, height: u }
            );
          })(n, t, i, r);
        }
        isAttached(n) {
          const t = db(n);
          return !(!t || !t.isConnected);
        }
      }
      class rq {
        constructor() {
          this._init = [];
        }
        notify(n, t, i, r) {
          "beforeInit" === t &&
            ((this._init = this._createDescriptors(n, !0)),
            this._notify(this._init, n, "install"));
          const o = r ? this._descriptors(n).filter(r) : this._descriptors(n),
            s = this._notify(o, n, t, i);
          return (
            "afterDestroy" === t &&
              (this._notify(o, n, "stop"),
              this._notify(this._init, n, "uninstall")),
            s
          );
        }
        _notify(n, t, i, r) {
          r = r || {};
          for (const o of n) {
            const s = o.plugin;
            if (!1 === Ft(s[i], [t, r, o.options], s) && r.cancelable)
              return !1;
          }
          return !0;
        }
        invalidate() {
          Xe(this._cache) ||
            ((this._oldCache = this._cache), (this._cache = void 0));
        }
        _descriptors(n) {
          if (this._cache) return this._cache;
          const t = (this._cache = this._createDescriptors(n));
          return this._notifyStateChanges(n), t;
        }
        _createDescriptors(n, t) {
          const i = n && n.config,
            r = Pe(i.options && i.options.plugins, {}),
            o = (function oq(e) {
              const n = {},
                t = [],
                i = Object.keys(Br.plugins.items);
              for (let o = 0; o < i.length; o++) t.push(Br.getPlugin(i[o]));
              const r = e.plugins || [];
              for (let o = 0; o < r.length; o++) {
                const s = r[o];
                -1 === t.indexOf(s) && (t.push(s), (n[s.id] = !0));
              }
              return { plugins: t, localIds: n };
            })(i);
          return !1 !== r || t
            ? (function aq(e, { plugins: n, localIds: t }, i, r) {
                const o = [],
                  s = e.getContext();
                for (const a of n) {
                  const l = a.id,
                    c = sq(i[l], r);
                  null !== c &&
                    o.push({
                      plugin: a,
                      options: lq(e.config, { plugin: a, local: t[l] }, c, s),
                    });
                }
                return o;
              })(n, o, r, t)
            : [];
        }
        _notifyStateChanges(n) {
          const t = this._oldCache || [],
            i = this._cache,
            r = (o, s) =>
              o.filter((a) => !s.some((l) => a.plugin.id === l.plugin.id));
          this._notify(r(t, i), n, "stop"), this._notify(r(i, t), n, "start");
        }
      }
      function sq(e, n) {
        return n || !1 !== e ? (!0 === e ? {} : e) : null;
      }
      function lq(e, { plugin: n, local: t }, i, r) {
        const o = e.pluginScopeKeys(n),
          s = e.getOptionScopes(i, o);
        return (
          t && n.defaults && s.push(n.defaults),
          e.createResolver(s, r, [""], {
            scriptable: !1,
            indexable: !1,
            allKeys: !0,
          })
        );
      }
      function vb(e, n) {
        return (
          ((n.datasets || {})[e] || {}).indexAxis ||
          n.indexAxis ||
          ($e.datasets[e] || {}).indexAxis ||
          "x"
        );
      }
      function bb(e, n) {
        return "x" === e || "y" === e
          ? e
          : n.axis ||
              (function dq(e) {
                return "top" === e || "bottom" === e
                  ? "x"
                  : "left" === e || "right" === e
                  ? "y"
                  : void 0;
              })(n.position) ||
              e.charAt(0).toLowerCase();
      }
      function EO(e) {
        const n = e.options || (e.options = {});
        (n.plugins = Pe(n.plugins, {})),
          (n.scales = (function hq(e, n) {
            const t = qs[e.type] || { scales: {} },
              i = n.scales || {},
              r = vb(e.type, n),
              o = Object.create(null),
              s = Object.create(null);
            return (
              Object.keys(i).forEach((a) => {
                const l = i[a];
                if (!We(l))
                  return console.error(
                    `Invalid scale configuration for scale: ${a}`
                  );
                if (l._proxy)
                  return console.warn(
                    `Ignoring resolver passed as options for scale: ${a}`
                  );
                const c = bb(a, l),
                  u = (function uq(e, n) {
                    return e === n ? "_index_" : "_value_";
                  })(c, r),
                  f = t.scales || {};
                (o[c] = o[c] || a),
                  (s[a] = Su(Object.create(null), [
                    { axis: c },
                    l,
                    f[c],
                    f[u],
                  ]));
              }),
              e.data.datasets.forEach((a) => {
                const l = a.type || e.type,
                  c = a.indexAxis || vb(l, n),
                  f = (qs[l] || {}).scales || {};
                Object.keys(f).forEach((g) => {
                  const m = (function cq(e, n) {
                      let t = e;
                      return (
                        "_index_" === e
                          ? (t = n)
                          : "_value_" === e && (t = "x" === n ? "y" : "x"),
                        t
                      );
                    })(g, c),
                    _ = a[m + "AxisID"] || o[m] || m;
                  (s[_] = s[_] || Object.create(null)),
                    Su(s[_], [{ axis: m }, i[_], f[g]]);
                });
              }),
              Object.keys(s).forEach((a) => {
                const l = s[a];
                Su(l, [$e.scales[l.type], $e.scale]);
              }),
              s
            );
          })(e, n));
      }
      function IO(e) {
        return (
          ((e = e || {}).datasets = e.datasets || []),
          (e.labels = e.labels || []),
          e
        );
      }
      const OO = new Map(),
        AO = new Set();
      function kp(e, n) {
        let t = OO.get(e);
        return t || ((t = n()), OO.set(e, t), AO.add(t)), t;
      }
      const $u = (e, n, t) => {
        const i = Jo(n, t);
        void 0 !== i && e.add(i);
      };
      class pq {
        constructor(n) {
          (this._config = (function fq(e) {
            return ((e = e || {}).data = IO(e.data)), EO(e), e;
          })(n)),
            (this._scopeCache = new Map()),
            (this._resolverCache = new Map());
        }
        get platform() {
          return this._config.platform;
        }
        get type() {
          return this._config.type;
        }
        set type(n) {
          this._config.type = n;
        }
        get data() {
          return this._config.data;
        }
        set data(n) {
          this._config.data = IO(n);
        }
        get options() {
          return this._config.options;
        }
        set options(n) {
          this._config.options = n;
        }
        get plugins() {
          return this._config.plugins;
        }
        update() {
          const n = this._config;
          this.clearCache(), EO(n);
        }
        clearCache() {
          this._scopeCache.clear(), this._resolverCache.clear();
        }
        datasetScopeKeys(n) {
          return kp(n, () => [[`datasets.${n}`, ""]]);
        }
        datasetAnimationScopeKeys(n, t) {
          return kp(`${n}.transition.${t}`, () => [
            [`datasets.${n}.transitions.${t}`, `transitions.${t}`],
            [`datasets.${n}`, ""],
          ]);
        }
        datasetElementScopeKeys(n, t) {
          return kp(`${n}-${t}`, () => [
            [
              `datasets.${n}.elements.${t}`,
              `datasets.${n}`,
              `elements.${t}`,
              "",
            ],
          ]);
        }
        pluginScopeKeys(n) {
          const t = n.id;
          return kp(`${this.type}-plugin-${t}`, () => [
            [`plugins.${t}`, ...(n.additionalOptionScopes || [])],
          ]);
        }
        _cachedScopes(n, t) {
          const i = this._scopeCache;
          let r = i.get(n);
          return (!r || t) && ((r = new Map()), i.set(n, r)), r;
        }
        getOptionScopes(n, t, i) {
          const { options: r, type: o } = this,
            s = this._cachedScopes(n, i),
            a = s.get(t);
          if (a) return a;
          const l = new Set();
          t.forEach((u) => {
            n && (l.add(n), u.forEach((f) => $u(l, n, f))),
              u.forEach((f) => $u(l, r, f)),
              u.forEach((f) => $u(l, qs[o] || {}, f)),
              u.forEach((f) => $u(l, $e, f)),
              u.forEach((f) => $u(l, rb, f));
          });
          const c = Array.from(l);
          return (
            0 === c.length && c.push(Object.create(null)),
            AO.has(t) && s.set(t, c),
            c
          );
        }
        chartOptionScopes() {
          const { options: n, type: t } = this;
          return [n, qs[t] || {}, $e.datasets[t] || {}, { type: t }, $e, rb];
        }
        resolveNamedOptions(n, t, i, r = [""]) {
          const o = { $shared: !0 },
            { resolver: s, subPrefixes: a } = PO(this._resolverCache, n, r);
          let l = s;
          (function mq(e, n) {
            const { isScriptable: t, isIndexable: i } = PI(e);
            for (const r of n) {
              const o = t(r),
                s = i(r),
                a = (s || o) && e[r];
              if ((o && (es(a) || gq(a))) || (s && Pt(a))) return !0;
            }
            return !1;
          })(s, t) &&
            ((o.$shared = !1),
            (l = Ml(s, (i = es(i) ? i() : i), this.createResolver(n, i, a))));
          for (const c of t) o[c] = l[c];
          return o;
        }
        createResolver(n, t, i = [""], r) {
          const { resolver: o } = PO(this._resolverCache, n, i);
          return We(t) ? Ml(o, t, void 0, r) : o;
        }
      }
      function PO(e, n, t) {
        let i = e.get(n);
        i || ((i = new Map()), e.set(n, i));
        const r = t.join();
        let o = i.get(r);
        return (
          o ||
            ((o = {
              resolver: lb(n, t),
              subPrefixes: t.filter((a) => !a.toLowerCase().includes("hover")),
            }),
            i.set(r, o)),
          o
        );
      }
      const gq = (e) =>
          We(e) &&
          Object.getOwnPropertyNames(e).reduce((n, t) => n || es(e[t]), !1),
        yq = ["top", "bottom", "left", "right", "chartArea"];
      function FO(e, n) {
        return (
          "top" === e || "bottom" === e || (-1 === yq.indexOf(e) && "x" === n)
        );
      }
      function RO(e, n) {
        return function (t, i) {
          return t[e] === i[e] ? t[n] - i[n] : t[e] - i[e];
        };
      }
      function NO(e) {
        const n = e.chart,
          t = n.options.animation;
        n.notifyPlugins("afterRender"), Ft(t && t.onComplete, [e], n);
      }
      function vq(e) {
        const n = e.chart,
          t = n.options.animation;
        Ft(t && t.onProgress, [e], n);
      }
      function LO(e) {
        return (
          HI() && "string" == typeof e
            ? (e = document.getElementById(e))
            : e && e.length && (e = e[0]),
          e && e.canvas && (e = e.canvas),
          e
        );
      }
      const Tp = {},
        BO = (e) => {
          const n = LO(e);
          return Object.values(Tp)
            .filter((t) => t.canvas === n)
            .pop();
        };
      function bq(e, n, t) {
        const i = Object.keys(e);
        for (const r of i) {
          const o = +r;
          if (o >= n) {
            const s = e[r];
            delete e[r], (t > 0 || o > n) && (e[o + t] = s);
          }
        }
      }
      class qu {
        constructor(n, t) {
          const i = (this.config = new pq(t)),
            r = LO(n),
            o = BO(r);
          if (o)
            throw new Error(
              "Canvas is already in use. Chart with ID '" +
                o.id +
                "' must be destroyed before the canvas with ID '" +
                o.canvas.id +
                "' can be reused."
            );
          const s = i.createResolver(i.chartOptionScopes(), this.getContext());
          (this.platform = new (i.platform ||
            (function iq(e) {
              return !HI() ||
                (typeof OffscreenCanvas < "u" && e instanceof OffscreenCanvas)
                ? W9
                : nq;
            })(r))()),
            this.platform.updateConfig(i);
          const a = this.platform.acquireContext(r, s.aspectRatio),
            l = a && a.canvas,
            c = l && l.height,
            u = l && l.width;
          (this.id = t$()),
            (this.ctx = a),
            (this.canvas = l),
            (this.width = u),
            (this.height = c),
            (this._options = s),
            (this._aspectRatio = this.aspectRatio),
            (this._layers = []),
            (this._metasets = []),
            (this._stacks = void 0),
            (this.boxes = []),
            (this.currentDevicePixelRatio = void 0),
            (this.chartArea = void 0),
            (this._active = []),
            (this._lastEvent = void 0),
            (this._listeners = {}),
            (this._responsiveListeners = void 0),
            (this._sortedMetasets = []),
            (this.scales = {}),
            (this._plugins = new rq()),
            (this.$proxies = {}),
            (this._hiddenIndices = {}),
            (this.attached = !1),
            (this._animationsDisabled = void 0),
            (this.$context = void 0),
            (this._doResize = (function _$(e, n) {
              let t;
              return function (...i) {
                return (
                  n
                    ? (clearTimeout(t), (t = setTimeout(e, n, i)))
                    : e.apply(this, i),
                  n
                );
              };
            })((f) => this.update(f), s.resizeDelay || 0)),
            (this._dataChanges = []),
            (Tp[this.id] = this),
            a && l
              ? (Co.listen(this, "complete", NO),
                Co.listen(this, "progress", vq),
                this._initialize(),
                this.attached && this.update())
              : console.error(
                  "Failed to create chart: can't acquire context from the given item"
                );
        }
        get aspectRatio() {
          const {
            options: { aspectRatio: n, maintainAspectRatio: t },
            width: i,
            height: r,
            _aspectRatio: o,
          } = this;
          return Xe(n) ? (t && o ? o : r ? i / r : null) : n;
        }
        get data() {
          return this.config.data;
        }
        set data(n) {
          this.config.data = n;
        }
        get options() {
          return this._options;
        }
        set options(n) {
          this.config.options = n;
        }
        _initialize() {
          return (
            this.notifyPlugins("beforeInit"),
            this.options.responsive
              ? this.resize()
              : jI(this, this.options.devicePixelRatio),
            this.bindEvents(),
            this.notifyPlugins("afterInit"),
            this
          );
        }
        clear() {
          return II(this.canvas, this.ctx), this;
        }
        stop() {
          return Co.stop(this), this;
        }
        resize(n, t) {
          Co.running(this)
            ? (this._resizeBeforeDraw = { width: n, height: t })
            : this._resize(n, t);
        }
        _resize(n, t) {
          const i = this.options,
            s = this.platform.getMaximumSize(
              this.canvas,
              n,
              t,
              i.maintainAspectRatio && this.aspectRatio
            ),
            a = i.devicePixelRatio || this.platform.getDevicePixelRatio(),
            l = this.width ? "resize" : "attach";
          (this.width = s.width),
            (this.height = s.height),
            (this._aspectRatio = this.aspectRatio),
            jI(this, a, !0) &&
              (this.notifyPlugins("resize", { size: s }),
              Ft(i.onResize, [this, s], this),
              this.attached && this._doResize(l) && this.render());
        }
        ensureScalesHaveIDs() {
          pt(this.options.scales || {}, (i, r) => {
            i.id = r;
          });
        }
        buildOrUpdateScales() {
          const n = this.options,
            t = n.scales,
            i = this.scales,
            r = Object.keys(i).reduce((s, a) => ((s[a] = !1), s), {});
          let o = [];
          t &&
            (o = o.concat(
              Object.keys(t).map((s) => {
                const a = t[s],
                  l = bb(s, a),
                  c = "r" === l,
                  u = "x" === l;
                return {
                  options: a,
                  dposition: c ? "chartArea" : u ? "bottom" : "left",
                  dtype: c ? "radialLinear" : u ? "category" : "linear",
                };
              })
            )),
            pt(o, (s) => {
              const a = s.options,
                l = a.id,
                c = bb(l, a),
                u = Pe(a.type, s.dtype);
              (void 0 === a.position ||
                FO(a.position, c) !== FO(s.dposition)) &&
                (a.position = s.dposition),
                (r[l] = !0);
              let f = null;
              l in i && i[l].type === u
                ? (f = i[l])
                : ((f = new (Br.getScale(u))({
                    id: l,
                    type: u,
                    ctx: this.ctx,
                    chart: this,
                  })),
                  (i[f.id] = f)),
                f.init(a, n);
            }),
            pt(r, (s, a) => {
              s || delete i[a];
            }),
            pt(i, (s) => {
              Un.configure(this, s, s.options), Un.addBox(this, s);
            });
        }
        _updateMetasets() {
          const n = this._metasets,
            t = this.data.datasets.length,
            i = n.length;
          if ((n.sort((r, o) => r.index - o.index), i > t)) {
            for (let r = t; r < i; ++r) this._destroyDatasetMeta(r);
            n.splice(t, i - t);
          }
          this._sortedMetasets = n.slice(0).sort(RO("order", "index"));
        }
        _removeUnreferencedMetasets() {
          const {
            _metasets: n,
            data: { datasets: t },
          } = this;
          n.length > t.length && delete this._stacks,
            n.forEach((i, r) => {
              0 === t.filter((o) => o === i._dataset).length &&
                this._destroyDatasetMeta(r);
            });
        }
        buildOrUpdateControllers() {
          const n = [],
            t = this.data.datasets;
          let i, r;
          for (
            this._removeUnreferencedMetasets(), i = 0, r = t.length;
            i < r;
            i++
          ) {
            const o = t[i];
            let s = this.getDatasetMeta(i);
            const a = o.type || this.config.type;
            if (
              (s.type &&
                s.type !== a &&
                (this._destroyDatasetMeta(i), (s = this.getDatasetMeta(i))),
              (s.type = a),
              (s.indexAxis = o.indexAxis || vb(a, this.options)),
              (s.order = o.order || 0),
              (s.index = i),
              (s.label = "" + o.label),
              (s.visible = this.isDatasetVisible(i)),
              s.controller)
            )
              s.controller.updateIndex(i), s.controller.linkScales();
            else {
              const l = Br.getController(a),
                { datasetElementType: c, dataElementType: u } = $e.datasets[a];
              Object.assign(l.prototype, {
                dataElementType: Br.getElement(u),
                datasetElementType: c && Br.getElement(c),
              }),
                (s.controller = new l(this, i)),
                n.push(s.controller);
            }
          }
          return this._updateMetasets(), n;
        }
        _resetElements() {
          pt(
            this.data.datasets,
            (n, t) => {
              this.getDatasetMeta(t).controller.reset();
            },
            this
          );
        }
        reset() {
          this._resetElements(), this.notifyPlugins("reset");
        }
        update(n) {
          const t = this.config;
          t.update();
          const i = (this._options = t.createResolver(
              t.chartOptionScopes(),
              this.getContext()
            )),
            r = (this._animationsDisabled = !i.animation);
          if (
            (this._updateScales(),
            this._checkEventBindings(),
            this._updateHiddenIndices(),
            this._plugins.invalidate(),
            !1 ===
              this.notifyPlugins("beforeUpdate", { mode: n, cancelable: !0 }))
          )
            return;
          const o = this.buildOrUpdateControllers();
          this.notifyPlugins("beforeElementsUpdate");
          let s = 0;
          for (let c = 0, u = this.data.datasets.length; c < u; c++) {
            const { controller: f } = this.getDatasetMeta(c),
              g = !r && -1 === o.indexOf(f);
            f.buildOrUpdateElements(g), (s = Math.max(+f.getMaxOverflow(), s));
          }
          (s = this._minPadding = i.layout.autoPadding ? s : 0),
            this._updateLayout(s),
            r ||
              pt(o, (c) => {
                c.reset();
              }),
            this._updateDatasets(n),
            this.notifyPlugins("afterUpdate", { mode: n }),
            this._layers.sort(RO("z", "_idx"));
          const { _active: a, _lastEvent: l } = this;
          l
            ? this._eventHandler(l, !0)
            : a.length && this._updateHoverStyles(a, a, !0),
            this.render();
        }
        _updateScales() {
          pt(this.scales, (n) => {
            Un.removeBox(this, n);
          }),
            this.ensureScalesHaveIDs(),
            this.buildOrUpdateScales();
        }
        _checkEventBindings() {
          const n = this.options,
            t = new Set(Object.keys(this._listeners)),
            i = new Set(n.events);
          (!oI(t, i) || !!this._responsiveListeners !== n.responsive) &&
            (this.unbindEvents(), this.bindEvents());
        }
        _updateHiddenIndices() {
          const { _hiddenIndices: n } = this,
            t = this._getUniformDataChanges() || [];
          for (const { method: i, start: r, count: o } of t)
            bq(n, r, "_removeElements" === i ? -o : o);
        }
        _getUniformDataChanges() {
          const n = this._dataChanges;
          if (!n || !n.length) return;
          this._dataChanges = [];
          const t = this.data.datasets.length,
            i = (o) =>
              new Set(
                n
                  .filter((s) => s[0] === o)
                  .map((s, a) => a + "," + s.splice(1).join(","))
              ),
            r = i(0);
          for (let o = 1; o < t; o++) if (!oI(r, i(o))) return;
          return Array.from(r)
            .map((o) => o.split(","))
            .map((o) => ({ method: o[1], start: +o[2], count: +o[3] }));
        }
        _updateLayout(n) {
          if (!1 === this.notifyPlugins("beforeLayout", { cancelable: !0 }))
            return;
          Un.update(this, this.width, this.height, n);
          const t = this.chartArea,
            i = t.width <= 0 || t.height <= 0;
          (this._layers = []),
            pt(
              this.boxes,
              (r) => {
                (i && "chartArea" === r.position) ||
                  (r.configure && r.configure(),
                  this._layers.push(...r._layers()));
              },
              this
            ),
            this._layers.forEach((r, o) => {
              r._idx = o;
            }),
            this.notifyPlugins("afterLayout");
        }
        _updateDatasets(n) {
          if (
            !1 !==
            this.notifyPlugins("beforeDatasetsUpdate", {
              mode: n,
              cancelable: !0,
            })
          ) {
            for (let t = 0, i = this.data.datasets.length; t < i; ++t)
              this.getDatasetMeta(t).controller.configure();
            for (let t = 0, i = this.data.datasets.length; t < i; ++t)
              this._updateDataset(t, es(n) ? n({ datasetIndex: t }) : n);
            this.notifyPlugins("afterDatasetsUpdate", { mode: n });
          }
        }
        _updateDataset(n, t) {
          const i = this.getDatasetMeta(n),
            r = { meta: i, index: n, mode: t, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetUpdate", r) &&
            (i.controller._update(t),
            (r.cancelable = !1),
            this.notifyPlugins("afterDatasetUpdate", r));
        }
        render() {
          !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) &&
            (Co.has(this)
              ? this.attached && !Co.running(this) && Co.start(this)
              : (this.draw(), NO({ chart: this })));
        }
        draw() {
          let n;
          if (this._resizeBeforeDraw) {
            const { width: i, height: r } = this._resizeBeforeDraw;
            this._resize(i, r), (this._resizeBeforeDraw = null);
          }
          if (
            (this.clear(),
            this.width <= 0 ||
              this.height <= 0 ||
              !1 === this.notifyPlugins("beforeDraw", { cancelable: !0 }))
          )
            return;
          const t = this._layers;
          for (n = 0; n < t.length && t[n].z <= 0; ++n)
            t[n].draw(this.chartArea);
          for (this._drawDatasets(); n < t.length; ++n)
            t[n].draw(this.chartArea);
          this.notifyPlugins("afterDraw");
        }
        _getSortedDatasetMetas(n) {
          const t = this._sortedMetasets,
            i = [];
          let r, o;
          for (r = 0, o = t.length; r < o; ++r) {
            const s = t[r];
            (!n || s.visible) && i.push(s);
          }
          return i;
        }
        getSortedVisibleDatasetMetas() {
          return this._getSortedDatasetMetas(!0);
        }
        _drawDatasets() {
          if (
            !1 === this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })
          )
            return;
          const n = this.getSortedVisibleDatasetMetas();
          for (let t = n.length - 1; t >= 0; --t) this._drawDataset(n[t]);
          this.notifyPlugins("afterDatasetsDraw");
        }
        _drawDataset(n) {
          const t = this.ctx,
            i = n._clip,
            r = !i.disabled,
            o = this.chartArea,
            s = { meta: n, index: n.index, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetDraw", s) &&
            (r &&
              mp(t, {
                left: !1 === i.left ? 0 : o.left - i.left,
                right: !1 === i.right ? this.width : o.right + i.right,
                top: !1 === i.top ? 0 : o.top - i.top,
                bottom: !1 === i.bottom ? this.height : o.bottom + i.bottom,
              }),
            n.controller.draw(),
            r && _p(t),
            (s.cancelable = !1),
            this.notifyPlugins("afterDatasetDraw", s));
        }
        isPointInArea(n) {
          return Fu(n, this.chartArea, this._minPadding);
        }
        getElementsAtEventForMode(n, t, i, r) {
          const o = N9.modes[t];
          return "function" == typeof o ? o(this, n, i, r) : [];
        }
        getDatasetMeta(n) {
          const t = this.data.datasets[n],
            i = this._metasets;
          let r = i.filter((o) => o && o._dataset === t).pop();
          return (
            r ||
              ((r = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                xAxisID: null,
                yAxisID: null,
                order: (t && t.order) || 0,
                index: n,
                _dataset: t,
                _parsed: [],
                _sorted: !1,
              }),
              i.push(r)),
            r
          );
        }
        getContext() {
          return (
            this.$context ||
            (this.$context = is(null, { chart: this, type: "chart" }))
          );
        }
        getVisibleDatasetCount() {
          return this.getSortedVisibleDatasetMetas().length;
        }
        isDatasetVisible(n) {
          const t = this.data.datasets[n];
          if (!t) return !1;
          const i = this.getDatasetMeta(n);
          return "boolean" == typeof i.hidden ? !i.hidden : !t.hidden;
        }
        setDatasetVisibility(n, t) {
          this.getDatasetMeta(n).hidden = !t;
        }
        toggleDataVisibility(n) {
          this._hiddenIndices[n] = !this._hiddenIndices[n];
        }
        getDataVisibility(n) {
          return !this._hiddenIndices[n];
        }
        _updateVisibility(n, t, i) {
          const r = i ? "show" : "hide",
            o = this.getDatasetMeta(n),
            s = o.controller._resolveAnimations(void 0, r);
          Ui(t)
            ? ((o.data[t].hidden = !i), this.update())
            : (this.setDatasetVisibility(n, i),
              s.update(o, { visible: i }),
              this.update((a) => (a.datasetIndex === n ? r : void 0)));
        }
        hide(n, t) {
          this._updateVisibility(n, t, !1);
        }
        show(n, t) {
          this._updateVisibility(n, t, !0);
        }
        _destroyDatasetMeta(n) {
          const t = this._metasets[n];
          t && t.controller && t.controller._destroy(),
            delete this._metasets[n];
        }
        _stop() {
          let n, t;
          for (
            this.stop(), Co.remove(this), n = 0, t = this.data.datasets.length;
            n < t;
            ++n
          )
            this._destroyDatasetMeta(n);
        }
        destroy() {
          this.notifyPlugins("beforeDestroy");
          const { canvas: n, ctx: t } = this;
          this._stop(),
            this.config.clearCache(),
            n &&
              (this.unbindEvents(),
              II(n, t),
              this.platform.releaseContext(t),
              (this.canvas = null),
              (this.ctx = null)),
            this.notifyPlugins("destroy"),
            delete Tp[this.id],
            this.notifyPlugins("afterDestroy");
        }
        toBase64Image(...n) {
          return this.canvas.toDataURL(...n);
        }
        bindEvents() {
          this.bindUserEvents(),
            this.options.responsive
              ? this.bindResponsiveEvents()
              : (this.attached = !0);
        }
        bindUserEvents() {
          const n = this._listeners,
            t = this.platform,
            i = (o, s) => {
              t.addEventListener(this, o, s), (n[o] = s);
            },
            r = (o, s, a) => {
              (o.offsetX = s), (o.offsetY = a), this._eventHandler(o);
            };
          pt(this.options.events, (o) => i(o, r));
        }
        bindResponsiveEvents() {
          this._responsiveListeners || (this._responsiveListeners = {});
          const n = this._responsiveListeners,
            t = this.platform,
            i = (l, c) => {
              t.addEventListener(this, l, c), (n[l] = c);
            },
            r = (l, c) => {
              n[l] && (t.removeEventListener(this, l, c), delete n[l]);
            },
            o = (l, c) => {
              this.canvas && this.resize(l, c);
            };
          let s;
          const a = () => {
            r("attach", a),
              (this.attached = !0),
              this.resize(),
              i("resize", o),
              i("detach", s);
          };
          (s = () => {
            (this.attached = !1),
              r("resize", o),
              this._stop(),
              this._resize(0, 0),
              i("attach", a);
          }),
            t.isAttached(this.canvas) ? a() : s();
        }
        unbindEvents() {
          pt(this._listeners, (n, t) => {
            this.platform.removeEventListener(this, t, n);
          }),
            (this._listeners = {}),
            pt(this._responsiveListeners, (n, t) => {
              this.platform.removeEventListener(this, t, n);
            }),
            (this._responsiveListeners = void 0);
        }
        updateHoverStyle(n, t, i) {
          const r = i ? "set" : "remove";
          let o, s, a, l;
          for (
            "dataset" === t &&
              ((o = this.getDatasetMeta(n[0].datasetIndex)),
              o.controller["_" + r + "DatasetHoverStyle"]()),
              a = 0,
              l = n.length;
            a < l;
            ++a
          ) {
            s = n[a];
            const c = s && this.getDatasetMeta(s.datasetIndex).controller;
            c && c[r + "HoverStyle"](s.element, s.datasetIndex, s.index);
          }
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(n) {
          const t = this._active || [],
            i = n.map(({ datasetIndex: o, index: s }) => {
              const a = this.getDatasetMeta(o);
              if (!a) throw new Error("No dataset found at index " + o);
              return { datasetIndex: o, element: a.data[s], index: s };
            });
          !ap(i, t) &&
            ((this._active = i),
            (this._lastEvent = null),
            this._updateHoverStyles(i, t));
        }
        notifyPlugins(n, t, i) {
          return this._plugins.notify(this, n, t, i);
        }
        _updateHoverStyles(n, t, i) {
          const r = this.options.hover,
            o = (l, c) =>
              l.filter(
                (u) =>
                  !c.some(
                    (f) =>
                      u.datasetIndex === f.datasetIndex && u.index === f.index
                  )
              ),
            s = o(t, n),
            a = i ? n : o(n, t);
          s.length && this.updateHoverStyle(s, r.mode, !1),
            a.length && r.mode && this.updateHoverStyle(a, r.mode, !0);
        }
        _eventHandler(n, t) {
          const i = {
              event: n,
              replay: t,
              cancelable: !0,
              inChartArea: this.isPointInArea(n),
            },
            r = (s) =>
              (s.options.events || this.options.events).includes(n.native.type);
          if (!1 === this.notifyPlugins("beforeEvent", i, r)) return;
          const o = this._handleEvent(n, t, i.inChartArea);
          return (
            (i.cancelable = !1),
            this.notifyPlugins("afterEvent", i, r),
            (o || i.changed) && this.render(),
            this
          );
        }
        _handleEvent(n, t, i) {
          const { _active: r = [], options: o } = this,
            a = this._getActiveElements(n, r, i, t),
            l = (function a$(e) {
              return (
                "mouseup" === e.type ||
                "click" === e.type ||
                "contextmenu" === e.type
              );
            })(n),
            c = (function wq(e, n, t, i) {
              return t && "mouseout" !== e.type ? (i ? n : e) : null;
            })(n, this._lastEvent, i, l);
          i &&
            ((this._lastEvent = null),
            Ft(o.onHover, [n, a, this], this),
            l && Ft(o.onClick, [n, a, this], this));
          const u = !ap(a, r);
          return (
            (u || t) && ((this._active = a), this._updateHoverStyles(a, r, t)),
            (this._lastEvent = c),
            u
          );
        }
        _getActiveElements(n, t, i, r) {
          if ("mouseout" === n.type) return [];
          if (!i) return t;
          const o = this.options.hover;
          return this.getElementsAtEventForMode(n, o.mode, o, r);
        }
      }
      const VO = () => pt(qu.instances, (e) => e._plugins.invalidate()),
        rs = !0;
      function zO(e, n, t) {
        const {
          startAngle: i,
          pixelMargin: r,
          x: o,
          y: s,
          outerRadius: a,
          innerRadius: l,
        } = n;
        let c = r / a;
        e.beginPath(),
          e.arc(o, s, a, i - c, t + c),
          l > r
            ? ((c = r / l), e.arc(o, s, l, t + c, i - c, !0))
            : e.arc(o, s, r, t + Kt, i - Kt),
          e.closePath(),
          e.clip();
      }
      function kl(e, n, t, i) {
        return { x: t + e * Math.cos(n), y: i + e * Math.sin(n) };
      }
      function wb(e, n, t, i, r, o) {
        const { x: s, y: a, startAngle: l, pixelMargin: c, innerRadius: u } = n,
          f = Math.max(n.outerRadius + i + t - c, 0),
          g = u > 0 ? u + i + t + c : 0;
        let m = 0;
        const _ = r - l;
        if (i) {
          const G = ((u > 0 ? u - i : 0) + (f > 0 ? f - i : 0)) / 2;
          m = (_ - (0 !== G ? (_ * G) / (G + i) : _)) / 2;
        }
        const v = (_ - Math.max(0.001, _ * f - t / jt) / f) / 2,
          w = l + v + m,
          C = r - v - m,
          {
            outerStart: D,
            outerEnd: S,
            innerStart: T,
            innerEnd: L,
          } = (function xq(e, n, t, i) {
            const r = (function Cq(e) {
                return ab(e, [
                  "outerStart",
                  "outerEnd",
                  "innerStart",
                  "innerEnd",
                ]);
              })(e.options.borderRadius),
              o = (t - n) / 2,
              s = Math.min(o, (i * n) / 2),
              a = (l) => {
                const c = ((t - Math.min(o, l)) * i) / 2;
                return xn(l, 0, Math.min(o, c));
              };
            return {
              outerStart: a(r.outerStart),
              outerEnd: a(r.outerEnd),
              innerStart: xn(r.innerStart, 0, s),
              innerEnd: xn(r.innerEnd, 0, s),
            };
          })(n, g, f, C - w),
          z = f - D,
          $ = f - S,
          q = w + D / z,
          we = C - S / $,
          Be = g + T,
          Fe = g + L,
          bt = w + T / Be,
          Mn = C - L / Fe;
        if ((e.beginPath(), o)) {
          if ((e.arc(s, a, f, q, we), S > 0)) {
            const G = kl($, we, s, a);
            e.arc(G.x, G.y, S, we, C + Kt);
          }
          const De = kl(Fe, C, s, a);
          if ((e.lineTo(De.x, De.y), L > 0)) {
            const G = kl(Fe, Mn, s, a);
            e.arc(G.x, G.y, L, C + Kt, Mn + Math.PI);
          }
          if ((e.arc(s, a, g, C - L / g, w + T / g, !0), T > 0)) {
            const G = kl(Be, bt, s, a);
            e.arc(G.x, G.y, T, bt + Math.PI, w - Kt);
          }
          const W = kl(z, w, s, a);
          if ((e.lineTo(W.x, W.y), D > 0)) {
            const G = kl(z, q, s, a);
            e.arc(G.x, G.y, D, w - Kt, q);
          }
        } else {
          e.moveTo(s, a);
          const De = Math.cos(q) * f + s,
            W = Math.sin(q) * f + a;
          e.lineTo(De, W);
          const G = Math.cos(we) * f + s,
            ae = Math.sin(we) * f + a;
          e.lineTo(G, ae);
        }
        e.closePath();
      }
      Object.defineProperties(qu, {
        defaults: { enumerable: rs, value: $e },
        instances: { enumerable: rs, value: Tp },
        overrides: { enumerable: rs, value: qs },
        registry: { enumerable: rs, value: Br },
        version: { enumerable: rs, value: "3.9.1" },
        getChart: { enumerable: rs, value: BO },
        register: {
          enumerable: rs,
          value: (...e) => {
            Br.add(...e), VO();
          },
        },
        unregister: {
          enumerable: rs,
          value: (...e) => {
            Br.remove(...e), VO();
          },
        },
      });
      class Ep extends dr {
        constructor(n) {
          super(),
            (this.options = void 0),
            (this.circumference = void 0),
            (this.startAngle = void 0),
            (this.endAngle = void 0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.pixelMargin = 0),
            (this.fullCircles = 0),
            n && Object.assign(this, n);
        }
        inRange(n, t, i) {
          const r = this.getProps(["x", "y"], i),
            { angle: o, distance: s } = uI(r, { x: n, y: t }),
            {
              startAngle: a,
              endAngle: l,
              innerRadius: c,
              outerRadius: u,
              circumference: f,
            } = this.getProps(
              [
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              i
            ),
            g = this.options.spacing / 2,
            _ = Pe(f, l - a) >= vt || Eu(o, a, l),
            y = vo(s, c + g, u + g);
          return _ && y;
        }
        getCenterPoint(n) {
          const {
              x: t,
              y: i,
              startAngle: r,
              endAngle: o,
              innerRadius: s,
              outerRadius: a,
            } = this.getProps(
              [
                "x",
                "y",
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              n
            ),
            { offset: l, spacing: c } = this.options,
            u = (r + o) / 2,
            f = (s + a + c + l) / 2;
          return { x: t + Math.cos(u) * f, y: i + Math.sin(u) * f };
        }
        tooltipPosition(n) {
          return this.getCenterPoint(n);
        }
        draw(n) {
          const { options: t, circumference: i } = this,
            r = (t.offset || 0) / 2,
            o = (t.spacing || 0) / 2,
            s = t.circular;
          if (
            ((this.pixelMargin = "inner" === t.borderAlign ? 0.33 : 0),
            (this.fullCircles = i > vt ? Math.floor(i / vt) : 0),
            0 === i || this.innerRadius < 0 || this.outerRadius < 0)
          )
            return;
          n.save();
          let a = 0;
          if (r) {
            a = r / 2;
            const c = (this.startAngle + this.endAngle) / 2;
            n.translate(Math.cos(c) * a, Math.sin(c) * a),
              this.circumference >= jt && (a = r);
          }
          (n.fillStyle = t.backgroundColor), (n.strokeStyle = t.borderColor);
          const l = (function Mq(e, n, t, i, r) {
            const { fullCircles: o, startAngle: s, circumference: a } = n;
            let l = n.endAngle;
            if (o) {
              wb(e, n, t, i, s + vt, r);
              for (let c = 0; c < o; ++c) e.fill();
              isNaN(a) || ((l = s + (a % vt)), a % vt == 0 && (l += vt));
            }
            return wb(e, n, t, i, l, r), e.fill(), l;
          })(n, this, a, o, s);
          (function Sq(e, n, t, i, r, o) {
            const { options: s } = n,
              { borderWidth: a, borderJoinStyle: l } = s,
              c = "inner" === s.borderAlign;
            a &&
              (c
                ? ((e.lineWidth = 2 * a), (e.lineJoin = l || "round"))
                : ((e.lineWidth = a), (e.lineJoin = l || "bevel")),
              n.fullCircles &&
                (function Dq(e, n, t) {
                  const {
                      x: i,
                      y: r,
                      startAngle: o,
                      pixelMargin: s,
                      fullCircles: a,
                    } = n,
                    l = Math.max(n.outerRadius - s, 0),
                    c = n.innerRadius + s;
                  let u;
                  for (
                    t && zO(e, n, o + vt),
                      e.beginPath(),
                      e.arc(i, r, c, o + vt, o, !0),
                      u = 0;
                    u < a;
                    ++u
                  )
                    e.stroke();
                  for (
                    e.beginPath(), e.arc(i, r, l, o, o + vt), u = 0;
                    u < a;
                    ++u
                  )
                    e.stroke();
                })(e, n, c),
              c && zO(e, n, r),
              wb(e, n, t, i, r, o),
              e.stroke());
          })(n, this, a, o, l, s),
            n.restore();
        }
      }
      function HO(e, n, t = n) {
        (e.lineCap = Pe(t.borderCapStyle, n.borderCapStyle)),
          e.setLineDash(Pe(t.borderDash, n.borderDash)),
          (e.lineDashOffset = Pe(t.borderDashOffset, n.borderDashOffset)),
          (e.lineJoin = Pe(t.borderJoinStyle, n.borderJoinStyle)),
          (e.lineWidth = Pe(t.borderWidth, n.borderWidth)),
          (e.strokeStyle = Pe(t.borderColor, n.borderColor));
      }
      function kq(e, n, t) {
        e.lineTo(t.x, t.y);
      }
      function jO(e, n, t = {}) {
        const i = e.length,
          { start: r = 0, end: o = i - 1 } = t,
          { start: s, end: a } = n,
          l = Math.max(r, s),
          c = Math.min(o, a);
        return {
          count: i,
          start: l,
          loop: n.loop,
          ilen:
            c < l && !((r < s && o < s) || (r > a && o > a))
              ? i + c - l
              : c - l,
        };
      }
      function Eq(e, n, t, i) {
        const { points: r, options: o } = n,
          { count: s, start: a, loop: l, ilen: c } = jO(r, t, i),
          u = (function Tq(e) {
            return e.stepped
              ? W$
              : e.tension || "monotone" === e.cubicInterpolationMode
              ? $$
              : kq;
          })(o);
        let m,
          _,
          y,
          { move: f = !0, reverse: g } = i || {};
        for (m = 0; m <= c; ++m)
          (_ = r[(a + (g ? c - m : m)) % s]),
            !_.skip &&
              (f ? (e.moveTo(_.x, _.y), (f = !1)) : u(e, y, _, g, o.stepped),
              (y = _));
        return (
          l && ((_ = r[(a + (g ? c : 0)) % s]), u(e, y, _, g, o.stepped)), !!l
        );
      }
      function Iq(e, n, t, i) {
        const r = n.points,
          { count: o, start: s, ilen: a } = jO(r, t, i),
          { move: l = !0, reverse: c } = i || {};
        let g,
          m,
          _,
          y,
          v,
          w,
          u = 0,
          f = 0;
        const C = (S) => (s + (c ? a - S : S)) % o,
          D = () => {
            y !== v && (e.lineTo(u, v), e.lineTo(u, y), e.lineTo(u, w));
          };
        for (l && ((m = r[C(0)]), e.moveTo(m.x, m.y)), g = 0; g <= a; ++g) {
          if (((m = r[C(g)]), m.skip)) continue;
          const S = m.x,
            T = m.y,
            L = 0 | S;
          L === _
            ? (T < y ? (y = T) : T > v && (v = T), (u = (f * u + S) / ++f))
            : (D(), e.lineTo(S, T), (_ = L), (f = 0), (y = v = T)),
            (w = T);
        }
        D();
      }
      function Cb(e) {
        const n = e.options;
        return e._decimated ||
          e._loop ||
          n.tension ||
          "monotone" === n.cubicInterpolationMode ||
          n.stepped ||
          (n.borderDash && n.borderDash.length)
          ? Eq
          : Iq;
      }
      (Ep.id = "arc"),
        (Ep.defaults = {
          borderAlign: "center",
          borderColor: "#fff",
          borderJoinStyle: void 0,
          borderRadius: 0,
          borderWidth: 2,
          offset: 0,
          spacing: 0,
          angle: void 0,
          circular: !0,
        }),
        (Ep.defaultRoutes = { backgroundColor: "backgroundColor" });
      const Fq = "function" == typeof Path2D;
      let Ip = (() => {
        class e extends dr {
          constructor(t) {
            super(),
              (this.animated = !0),
              (this.options = void 0),
              (this._chart = void 0),
              (this._loop = void 0),
              (this._fullLoop = void 0),
              (this._path = void 0),
              (this._points = void 0),
              (this._segments = void 0),
              (this._decimated = !1),
              (this._pointsUpdated = !1),
              (this._datasetIndex = void 0),
              t && Object.assign(this, t);
          }
          updateControlPoints(t, i) {
            const r = this.options;
            (!r.tension && "monotone" !== r.cubicInterpolationMode) ||
              r.stepped ||
              this._pointsUpdated ||
              (p7(
                this._points,
                r,
                t,
                r.spanGaps ? this._loop : this._fullLoop,
                i
              ),
              (this._pointsUpdated = !0));
          }
          set points(t) {
            (this._points = t),
              delete this._segments,
              delete this._path,
              (this._pointsUpdated = !1);
          }
          get points() {
            return this._points;
          }
          get segments() {
            return (
              this._segments ||
              (this._segments = (function I7(e, n) {
                const t = e.points,
                  i = e.options.spanGaps,
                  r = t.length;
                if (!r) return [];
                const o = !!e._loop,
                  { start: s, end: a } = (function T7(e, n, t, i) {
                    let r = 0,
                      o = n - 1;
                    if (t && !i) for (; r < n && !e[r].skip; ) r++;
                    for (; r < n && e[r].skip; ) r++;
                    for (r %= n, t && (o += r); o > r && e[o % n].skip; ) o--;
                    return (o %= n), { start: r, end: o };
                  })(t, r, o, i);
                return (function QI(e, n, t, i) {
                  return i && i.setContext && t
                    ? (function O7(e, n, t, i) {
                        const r = e._chart.getContext(),
                          o = XI(e.options),
                          {
                            _datasetIndex: s,
                            options: { spanGaps: a },
                          } = e,
                          l = t.length,
                          c = [];
                        let u = o,
                          f = n[0].start,
                          g = f;
                        function m(_, y, v, w) {
                          const C = a ? -1 : 1;
                          if (_ !== y) {
                            for (_ += l; t[_ % l].skip; ) _ -= C;
                            for (; t[y % l].skip; ) y += C;
                            _ % l != y % l &&
                              (c.push({
                                start: _ % l,
                                end: y % l,
                                loop: v,
                                style: w,
                              }),
                              (u = w),
                              (f = y % l));
                          }
                        }
                        for (const _ of n) {
                          f = a ? f : _.start;
                          let v,
                            y = t[f % l];
                          for (g = f + 1; g <= _.end; g++) {
                            const w = t[g % l];
                            (v = XI(
                              i.setContext(
                                is(r, {
                                  type: "segment",
                                  p0: y,
                                  p1: w,
                                  p0DataIndex: (g - 1) % l,
                                  p1DataIndex: g % l,
                                  datasetIndex: s,
                                })
                              )
                            )),
                              A7(v, u) && m(f, g - 1, _.loop, u),
                              (y = w),
                              (u = v);
                          }
                          f < g - 1 && m(f, g - 1, _.loop, u);
                        }
                        return c;
                      })(e, n, t, i)
                    : n;
                })(
                  e,
                  !0 === i
                    ? [{ start: s, end: a, loop: o }]
                    : (function E7(e, n, t, i) {
                        const r = e.length,
                          o = [];
                        let l,
                          s = n,
                          a = e[n];
                        for (l = n + 1; l <= t; ++l) {
                          const c = e[l % r];
                          c.skip || c.stop
                            ? a.skip ||
                              (o.push({
                                start: n % r,
                                end: (l - 1) % r,
                                loop: (i = !1),
                              }),
                              (n = s = c.stop ? l : null))
                            : ((s = l), a.skip && (n = l)),
                            (a = c);
                        }
                        return (
                          null !== s &&
                            o.push({ start: n % r, end: s % r, loop: i }),
                          o
                        );
                      })(
                        t,
                        s,
                        a < s ? a + r : a,
                        !!e._fullLoop && 0 === s && a === r - 1
                      ),
                  t,
                  n
                );
              })(this, this.options.segment))
            );
          }
          first() {
            const t = this.segments;
            return t.length && this.points[t[0].start];
          }
          last() {
            const t = this.segments,
              r = t.length;
            return r && this.points[t[r - 1].end];
          }
          interpolate(t, i) {
            const r = this.options,
              o = t[i],
              s = this.points,
              a = ZI(this, { property: i, start: o, end: o });
            if (!a.length) return;
            const l = [],
              c = (function Oq(e) {
                return e.stepped
                  ? C7
                  : e.tension || "monotone" === e.cubicInterpolationMode
                  ? x7
                  : Xs;
              })(r);
            let u, f;
            for (u = 0, f = a.length; u < f; ++u) {
              const { start: g, end: m } = a[u],
                _ = s[g],
                y = s[m];
              if (_ === y) {
                l.push(_);
                continue;
              }
              const w = c(
                _,
                y,
                Math.abs((o - _[i]) / (y[i] - _[i])),
                r.stepped
              );
              (w[i] = t[i]), l.push(w);
            }
            return 1 === l.length ? l[0] : l;
          }
          pathSegment(t, i, r) {
            return Cb(this)(t, this, i, r);
          }
          path(t, i, r) {
            const o = this.segments,
              s = Cb(this);
            let a = this._loop;
            (i = i || 0), (r = r || this.points.length - i);
            for (const l of o) a &= s(t, this, l, { start: i, end: i + r - 1 });
            return !!a;
          }
          draw(t, i, r, o) {
            (this.points || []).length &&
              (this.options || {}).borderWidth &&
              (t.save(),
              (function Rq(e, n, t, i) {
                Fq && !n.options.segment
                  ? (function Aq(e, n, t, i) {
                      let r = n._path;
                      r ||
                        ((r = n._path = new Path2D()),
                        n.path(r, t, i) && r.closePath()),
                        HO(e, n.options),
                        e.stroke(r);
                    })(e, n, t, i)
                  : (function Pq(e, n, t, i) {
                      const { segments: r, options: o } = n,
                        s = Cb(n);
                      for (const a of r)
                        HO(e, o, a.style),
                          e.beginPath(),
                          s(e, n, a, { start: t, end: t + i - 1 }) &&
                            e.closePath(),
                          e.stroke();
                    })(e, n, t, i);
              })(t, this, r, o),
              t.restore()),
              this.animated &&
                ((this._pointsUpdated = !1), (this._path = void 0));
          }
        }
        return (
          (e.id = "line"),
          (e.defaults = {
            borderCapStyle: "butt",
            borderDash: [],
            borderDashOffset: 0,
            borderJoinStyle: "miter",
            borderWidth: 3,
            capBezierPoints: !0,
            cubicInterpolationMode: "default",
            fill: !1,
            spanGaps: !1,
            stepped: !1,
            tension: 0,
          }),
          (e.defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          }),
          (e.descriptors = {
            _scriptable: !0,
            _indexable: (n) => "borderDash" !== n && "fill" !== n,
          }),
          e
        );
      })();
      function UO(e, n, t, i) {
        const r = e.options,
          { [t]: o } = e.getProps([t], i);
        return Math.abs(n - o) < r.radius + r.hitRadius;
      }
      let Nq = (() => {
        class e extends dr {
          constructor(t) {
            super(),
              (this.options = void 0),
              (this.parsed = void 0),
              (this.skip = void 0),
              (this.stop = void 0),
              t && Object.assign(this, t);
          }
          inRange(t, i, r) {
            const o = this.options,
              { x: s, y: a } = this.getProps(["x", "y"], r);
            return (
              Math.pow(t - s, 2) + Math.pow(i - a, 2) <
              Math.pow(o.hitRadius + o.radius, 2)
            );
          }
          inXRange(t, i) {
            return UO(this, t, "x", i);
          }
          inYRange(t, i) {
            return UO(this, t, "y", i);
          }
          getCenterPoint(t) {
            const { x: i, y: r } = this.getProps(["x", "y"], t);
            return { x: i, y: r };
          }
          size(t) {
            let i = (t = t || this.options || {}).radius || 0;
            return (
              (i = Math.max(i, (i && t.hoverRadius) || 0)),
              2 * (i + ((i && t.borderWidth) || 0))
            );
          }
          draw(t, i) {
            const r = this.options;
            this.skip ||
              r.radius < 0.1 ||
              !Fu(this, i, this.size(r) / 2) ||
              ((t.strokeStyle = r.borderColor),
              (t.lineWidth = r.borderWidth),
              (t.fillStyle = r.backgroundColor),
              sb(t, r, this.x, this.y));
          }
          getRange() {
            const t = this.options || {};
            return t.radius + t.hitRadius;
          }
        }
        return (
          (e.id = "point"),
          (e.defaults = {
            borderWidth: 1,
            hitRadius: 1,
            hoverBorderWidth: 1,
            hoverRadius: 4,
            pointStyle: "circle",
            radius: 3,
            rotation: 0,
          }),
          (e.defaultRoutes = {
            backgroundColor: "backgroundColor",
            borderColor: "borderColor",
          }),
          e
        );
      })();
      function WO(e, n) {
        const {
          x: t,
          y: i,
          base: r,
          width: o,
          height: s,
        } = e.getProps(["x", "y", "base", "width", "height"], n);
        let a, l, c, u, f;
        return (
          e.horizontal
            ? ((f = s / 2),
              (a = Math.min(t, r)),
              (l = Math.max(t, r)),
              (c = i - f),
              (u = i + f))
            : ((f = o / 2),
              (a = t - f),
              (l = t + f),
              (c = Math.min(i, r)),
              (u = Math.max(i, r))),
          { left: a, top: c, right: l, bottom: u }
        );
      }
      function os(e, n, t, i) {
        return e ? 0 : xn(n, t, i);
      }
      function xb(e, n, t, i) {
        const r = null === n,
          o = null === t,
          a = e && !(r && o) && WO(e, i);
        return (
          a && (r || vo(n, a.left, a.right)) && (o || vo(t, a.top, a.bottom))
        );
      }
      function Hq(e, n) {
        e.rect(n.x, n.y, n.w, n.h);
      }
      function Mb(e, n, t = {}) {
        const i = e.x !== t.x ? -n : 0,
          r = e.y !== t.y ? -n : 0;
        return {
          x: e.x + i,
          y: e.y + r,
          w: e.w + ((e.x + e.w !== t.x + t.w ? n : 0) - i),
          h: e.h + ((e.y + e.h !== t.y + t.h ? n : 0) - r),
          radius: e.radius,
        };
      }
      class Op extends dr {
        constructor(n) {
          super(),
            (this.options = void 0),
            (this.horizontal = void 0),
            (this.base = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.inflateAmount = void 0),
            n && Object.assign(this, n);
        }
        draw(n) {
          const {
              inflateAmount: t,
              options: { borderColor: i, backgroundColor: r },
            } = this,
            { inner: o, outer: s } = (function Vq(e) {
              const n = WO(e),
                t = n.right - n.left,
                i = n.bottom - n.top,
                r = (function Lq(e, n, t) {
                  const r = e.borderSkipped,
                    o = AI(e.options.borderWidth);
                  return {
                    t: os(r.top, o.top, 0, t),
                    r: os(r.right, o.right, 0, n),
                    b: os(r.bottom, o.bottom, 0, t),
                    l: os(r.left, o.left, 0, n),
                  };
                })(e, t / 2, i / 2),
                o = (function Bq(e, n, t) {
                  const { enableBorderRadius: i } = e.getProps([
                      "enableBorderRadius",
                    ]),
                    r = e.options.borderRadius,
                    o = Ks(r),
                    s = Math.min(n, t),
                    a = e.borderSkipped,
                    l = i || We(r);
                  return {
                    topLeft: os(!l || a.top || a.left, o.topLeft, 0, s),
                    topRight: os(!l || a.top || a.right, o.topRight, 0, s),
                    bottomLeft: os(
                      !l || a.bottom || a.left,
                      o.bottomLeft,
                      0,
                      s
                    ),
                    bottomRight: os(
                      !l || a.bottom || a.right,
                      o.bottomRight,
                      0,
                      s
                    ),
                  };
                })(e, t / 2, i / 2);
              return {
                outer: { x: n.left, y: n.top, w: t, h: i, radius: o },
                inner: {
                  x: n.left + r.l,
                  y: n.top + r.t,
                  w: t - r.l - r.r,
                  h: i - r.t - r.b,
                  radius: {
                    topLeft: Math.max(0, o.topLeft - Math.max(r.t, r.l)),
                    topRight: Math.max(0, o.topRight - Math.max(r.t, r.r)),
                    bottomLeft: Math.max(0, o.bottomLeft - Math.max(r.b, r.l)),
                    bottomRight: Math.max(
                      0,
                      o.bottomRight - Math.max(r.b, r.r)
                    ),
                  },
                },
              };
            })(this),
            a = (function zq(e) {
              return e.topLeft || e.topRight || e.bottomLeft || e.bottomRight;
            })(s.radius)
              ? Ru
              : Hq;
          n.save(),
            (s.w !== o.w || s.h !== o.h) &&
              (n.beginPath(),
              a(n, Mb(s, t, o)),
              n.clip(),
              a(n, Mb(o, -t, s)),
              (n.fillStyle = i),
              n.fill("evenodd")),
            n.beginPath(),
            a(n, Mb(o, t)),
            (n.fillStyle = r),
            n.fill(),
            n.restore();
        }
        inRange(n, t, i) {
          return xb(this, n, t, i);
        }
        inXRange(n, t) {
          return xb(this, n, null, t);
        }
        inYRange(n, t) {
          return xb(this, null, n, t);
        }
        getCenterPoint(n) {
          const {
            x: t,
            y: i,
            base: r,
            horizontal: o,
          } = this.getProps(["x", "y", "base", "horizontal"], n);
          return { x: o ? (t + r) / 2 : t, y: o ? i : (i + r) / 2 };
        }
        getRange(n) {
          return "x" === n ? this.width / 2 : this.height / 2;
        }
      }
      (Op.id = "bar"),
        (Op.defaults = {
          borderSkipped: "start",
          borderWidth: 0,
          borderRadius: 0,
          inflateAmount: "auto",
          pointStyle: void 0,
        }),
        (Op.defaultRoutes = {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        });
      var jq = Object.freeze({
        __proto__: null,
        ArcElement: Ep,
        LineElement: Ip,
        PointElement: Nq,
        BarElement: Op,
      });
      function $O(e) {
        if (e._decimated) {
          const n = e._data;
          delete e._decimated,
            delete e._data,
            Object.defineProperty(e, "data", { value: n });
        }
      }
      function qO(e) {
        e.data.datasets.forEach((n) => {
          $O(n);
        });
      }
      var qq = {
        id: "decimation",
        defaults: { algorithm: "min-max", enabled: !1 },
        beforeElementsUpdate: (e, n, t) => {
          if (!t.enabled) return void qO(e);
          const i = e.width;
          e.data.datasets.forEach((r, o) => {
            const { _data: s, indexAxis: a } = r,
              l = e.getDatasetMeta(o),
              c = s || r.data;
            if (
              "y" === Nu([a, e.options.indexAxis]) ||
              !l.controller.supportsDecimation
            )
              return;
            const u = e.scales[l.xAxisID];
            if (("linear" !== u.type && "time" !== u.type) || e.options.parsing)
              return;
            let _,
              { start: f, count: g } = (function $q(e, n) {
                const t = n.length;
                let r,
                  i = 0;
                const { iScale: o } = e,
                  {
                    min: s,
                    max: a,
                    minDefined: l,
                    maxDefined: c,
                  } = o.getUserBounds();
                return (
                  l && (i = xn(bo(n, o.axis, s).lo, 0, t - 1)),
                  (r = c ? xn(bo(n, o.axis, a).hi + 1, i, t) - i : t - i),
                  { start: i, count: r }
                );
              })(l, c);
            if (g <= (t.threshold || 4 * i)) $O(r);
            else {
              switch (
                (Xe(s) &&
                  ((r._data = c),
                  delete r.data,
                  Object.defineProperty(r, "data", {
                    configurable: !0,
                    enumerable: !0,
                    get: function () {
                      return this._decimated;
                    },
                    set: function (y) {
                      this._data = y;
                    },
                  })),
                t.algorithm)
              ) {
                case "lttb":
                  _ = (function Uq(e, n, t, i, r) {
                    const o = r.samples || i;
                    if (o >= t) return e.slice(n, n + t);
                    const s = [],
                      a = (t - 2) / (o - 2);
                    let l = 0;
                    const c = n + t - 1;
                    let f,
                      g,
                      m,
                      _,
                      y,
                      u = n;
                    for (s[l++] = e[u], f = 0; f < o - 2; f++) {
                      let C,
                        v = 0,
                        w = 0;
                      const D = Math.floor((f + 1) * a) + 1 + n,
                        S = Math.min(Math.floor((f + 2) * a) + 1, t) + n,
                        T = S - D;
                      for (C = D; C < S; C++) (v += e[C].x), (w += e[C].y);
                      (v /= T), (w /= T);
                      const L = Math.floor(f * a) + 1 + n,
                        z = Math.min(Math.floor((f + 1) * a) + 1, t) + n,
                        { x: $, y: q } = e[u];
                      for (m = _ = -1, C = L; C < z; C++)
                        (_ =
                          0.5 *
                          Math.abs(
                            ($ - v) * (e[C].y - q) - ($ - e[C].x) * (w - q)
                          )),
                          _ > m && ((m = _), (g = e[C]), (y = C));
                      (s[l++] = g), (u = y);
                    }
                    return (s[l++] = e[c]), s;
                  })(c, f, g, i, t);
                  break;
                case "min-max":
                  _ = (function Wq(e, n, t, i) {
                    let s,
                      a,
                      l,
                      c,
                      u,
                      f,
                      g,
                      m,
                      _,
                      y,
                      r = 0,
                      o = 0;
                    const v = [],
                      C = e[n].x,
                      S = e[n + t - 1].x - C;
                    for (s = n; s < n + t; ++s) {
                      (a = e[s]), (l = ((a.x - C) / S) * i), (c = a.y);
                      const T = 0 | l;
                      if (T === u)
                        c < _
                          ? ((_ = c), (f = s))
                          : c > y && ((y = c), (g = s)),
                          (r = (o * r + a.x) / ++o);
                      else {
                        const L = s - 1;
                        if (!Xe(f) && !Xe(g)) {
                          const z = Math.min(f, g),
                            $ = Math.max(f, g);
                          z !== m && z !== L && v.push({ ...e[z], x: r }),
                            $ !== m && $ !== L && v.push({ ...e[$], x: r });
                        }
                        s > 0 && L !== m && v.push(e[L]),
                          v.push(a),
                          (u = T),
                          (o = 0),
                          (_ = y = c),
                          (f = g = m = s);
                      }
                    }
                    return v;
                  })(c, f, g, i);
                  break;
                default:
                  throw new Error(
                    `Unsupported decimation algorithm '${t.algorithm}'`
                  );
              }
              r._decimated = _;
            }
          });
        },
        destroy(e) {
          qO(e);
        },
      };
      function Db(e, n, t, i) {
        if (i) return;
        let r = n[e],
          o = t[e];
        return (
          "angle" === e && ((r = Ti(r)), (o = Ti(o))),
          { property: e, start: r, end: o }
        );
      }
      function Sb(e, n, t) {
        for (; n > e; n--) {
          const i = t[n];
          if (!isNaN(i.x) && !isNaN(i.y)) break;
        }
        return n;
      }
      function GO(e, n, t, i) {
        return e && n ? i(e[t], n[t]) : e ? e[t] : n ? n[t] : 0;
      }
      function YO(e, n) {
        let t = [],
          i = !1;
        return (
          Pt(e)
            ? ((i = !0), (t = e))
            : (t = (function Yq(e, n) {
                const { x: t = null, y: i = null } = e || {},
                  r = n.points,
                  o = [];
                return (
                  n.segments.forEach(({ start: s, end: a }) => {
                    a = Sb(s, a, r);
                    const l = r[s],
                      c = r[a];
                    null !== i
                      ? (o.push({ x: l.x, y: i }), o.push({ x: c.x, y: i }))
                      : null !== t &&
                        (o.push({ x: t, y: l.y }), o.push({ x: t, y: c.y }));
                  }),
                  o
                );
              })(e, n)),
          t.length
            ? new Ip({
                points: t,
                options: { tension: 0 },
                _loop: i,
                _fullLoop: i,
              })
            : null
        );
      }
      function KO(e) {
        return e && !1 !== e.fill;
      }
      function Kq(e, n, t) {
        let r = e[n].fill;
        const o = [n];
        let s;
        if (!t) return r;
        for (; !1 !== r && -1 === o.indexOf(r); ) {
          if (!nn(r)) return r;
          if (((s = e[r]), !s)) return !1;
          if (s.visible) return r;
          o.push(r), (r = s.fill);
        }
        return !1;
      }
      function Zq(e, n, t) {
        const i = (function eG(e) {
          const n = e.options,
            t = n.fill;
          let i = Pe(t && t.target, t);
          return (
            void 0 === i && (i = !!n.backgroundColor),
            !1 !== i && null !== i && (!0 === i ? "origin" : i)
          );
        })(e);
        if (We(i)) return !isNaN(i.value) && i;
        let r = parseFloat(i);
        return nn(r) && Math.floor(r) === r
          ? (function Qq(e, n, t, i) {
              return (
                ("-" === e || "+" === e) && (t = n + t),
                !(t === n || t < 0 || t >= i) && t
              );
            })(i[0], n, r, t)
          : ["origin", "start", "end", "stack", "shape"].indexOf(i) >= 0 && i;
      }
      function iG(e, n, t) {
        const i = [];
        for (let r = 0; r < t.length; r++) {
          const o = t[r],
            { first: s, last: a, point: l } = rG(o, n, "x");
          if (!(!l || (s && a)))
            if (s) i.unshift(l);
            else if ((e.push(l), !a)) break;
        }
        e.push(...i);
      }
      function rG(e, n, t) {
        const i = e.interpolate(n, t);
        if (!i) return {};
        const r = i[t],
          o = e.segments,
          s = e.points;
        let a = !1,
          l = !1;
        for (let c = 0; c < o.length; c++) {
          const u = o[c],
            f = s[u.start][t],
            g = s[u.end][t];
          if (vo(r, f, g)) {
            (a = r === f), (l = r === g);
            break;
          }
        }
        return { first: a, last: l, point: i };
      }
      class ZO {
        constructor(n) {
          (this.x = n.x), (this.y = n.y), (this.radius = n.radius);
        }
        pathSegment(n, t, i) {
          const { x: r, y: o, radius: s } = this;
          return (
            n.arc(r, o, s, (t = t || { start: 0, end: vt }).end, t.start, !0),
            !i.bounds
          );
        }
        interpolate(n) {
          const { x: t, y: i, radius: r } = this,
            o = n.angle;
          return { x: t + Math.cos(o) * r, y: i + Math.sin(o) * r, angle: o };
        }
      }
      function kb(e, n, t) {
        const i = (function oG(e) {
            const { chart: n, fill: t, line: i } = e;
            if (nn(t))
              return (function sG(e, n) {
                const t = e.getDatasetMeta(n);
                return t && e.isDatasetVisible(n) ? t.dataset : null;
              })(n, t);
            if ("stack" === t)
              return (function tG(e) {
                const { scale: n, index: t, line: i } = e,
                  r = [],
                  o = i.segments,
                  s = i.points,
                  a = (function nG(e, n) {
                    const t = [],
                      i = e.getMatchingVisibleMetas("line");
                    for (let r = 0; r < i.length; r++) {
                      const o = i[r];
                      if (o.index === n) break;
                      o.hidden || t.unshift(o.dataset);
                    }
                    return t;
                  })(n, t);
                a.push(YO({ x: null, y: n.bottom }, i));
                for (let l = 0; l < o.length; l++) {
                  const c = o[l];
                  for (let u = c.start; u <= c.end; u++) iG(r, s[u], a);
                }
                return new Ip({ points: r, options: {} });
              })(e);
            if ("shape" === t) return !0;
            const r = (function aG(e) {
              return (e.scale || {}).getPointPositionForValue
                ? (function cG(e) {
                    const { scale: n, fill: t } = e,
                      i = n.options,
                      r = n.getLabels().length,
                      o = i.reverse ? n.max : n.min,
                      s = (function Jq(e, n, t) {
                        let i;
                        return (
                          (i =
                            "start" === e
                              ? t
                              : "end" === e
                              ? n.options.reverse
                                ? n.min
                                : n.max
                              : We(e)
                              ? e.value
                              : n.getBaseValue()),
                          i
                        );
                      })(t, n, o),
                      a = [];
                    if (i.grid.circular) {
                      const l = n.getPointPositionForValue(0, o);
                      return new ZO({
                        x: l.x,
                        y: l.y,
                        radius: n.getDistanceFromCenterForValue(s),
                      });
                    }
                    for (let l = 0; l < r; ++l)
                      a.push(n.getPointPositionForValue(l, s));
                    return a;
                  })(e)
                : (function lG(e) {
                    const { scale: n = {}, fill: t } = e,
                      i = (function Xq(e, n) {
                        let t = null;
                        return (
                          "start" === e
                            ? (t = n.bottom)
                            : "end" === e
                            ? (t = n.top)
                            : We(e)
                            ? (t = n.getPixelForValue(e.value))
                            : n.getBasePixel && (t = n.getBasePixel()),
                          t
                        );
                      })(t, n);
                    if (nn(i)) {
                      const r = n.isHorizontal();
                      return { x: r ? i : null, y: r ? null : i };
                    }
                    return null;
                  })(e);
            })(e);
            return r instanceof ZO ? r : YO(r, i);
          })(n),
          { line: r, scale: o, axis: s } = n,
          a = r.options,
          l = a.fill,
          c = a.backgroundColor,
          { above: u = c, below: f = c } = l || {};
        i &&
          r.points.length &&
          (mp(e, t),
          (function uG(e, n) {
            const {
                line: t,
                target: i,
                above: r,
                below: o,
                area: s,
                scale: a,
              } = n,
              l = t._loop ? "angle" : n.axis;
            e.save(),
              "x" === l &&
                o !== r &&
                (QO(e, i, s.top),
                XO(e, { line: t, target: i, color: r, scale: a, property: l }),
                e.restore(),
                e.save(),
                QO(e, i, s.bottom)),
              XO(e, { line: t, target: i, color: o, scale: a, property: l }),
              e.restore();
          })(e, {
            line: r,
            target: i,
            above: u,
            below: f,
            area: t,
            scale: o,
            axis: s,
          }),
          _p(e));
      }
      function QO(e, n, t) {
        const { segments: i, points: r } = n;
        let o = !0,
          s = !1;
        e.beginPath();
        for (const a of i) {
          const { start: l, end: c } = a,
            u = r[l],
            f = r[Sb(l, c, r)];
          o
            ? (e.moveTo(u.x, u.y), (o = !1))
            : (e.lineTo(u.x, t), e.lineTo(u.x, u.y)),
            (s = !!n.pathSegment(e, a, { move: s })),
            s ? e.closePath() : e.lineTo(f.x, t);
        }
        e.lineTo(n.first().x, t), e.closePath(), e.clip();
      }
      function XO(e, n) {
        const { line: t, target: i, property: r, color: o, scale: s } = n,
          a = (function Gq(e, n, t) {
            const i = e.segments,
              r = e.points,
              o = n.points,
              s = [];
            for (const a of i) {
              let { start: l, end: c } = a;
              c = Sb(l, c, r);
              const u = Db(t, r[l], r[c], a.loop);
              if (!n.segments) {
                s.push({ source: a, target: u, start: r[l], end: r[c] });
                continue;
              }
              const f = ZI(n, u);
              for (const g of f) {
                const m = Db(t, o[g.start], o[g.end], g.loop),
                  _ = KI(a, r, m);
                for (const y of _)
                  s.push({
                    source: y,
                    target: g,
                    start: { [t]: GO(u, m, "start", Math.max) },
                    end: { [t]: GO(u, m, "end", Math.min) },
                  });
              }
            }
            return s;
          })(t, i, r);
        for (const { source: l, target: c, start: u, end: f } of a) {
          const { style: { backgroundColor: g = o } = {} } = l,
            m = !0 !== i;
          e.save(),
            (e.fillStyle = g),
            dG(e, s, m && Db(r, u, f)),
            e.beginPath();
          const _ = !!t.pathSegment(e, l);
          let y;
          if (m) {
            _ ? e.closePath() : JO(e, i, f, r);
            const v = !!i.pathSegment(e, c, { move: _, reverse: !0 });
            (y = _ && v), y || JO(e, i, u, r);
          }
          e.closePath(), e.fill(y ? "evenodd" : "nonzero"), e.restore();
        }
      }
      function dG(e, n, t) {
        const { top: i, bottom: r } = n.chart.chartArea,
          { property: o, start: s, end: a } = t || {};
        "x" === o && (e.beginPath(), e.rect(s, i, a - s, r - i), e.clip());
      }
      function JO(e, n, t, i) {
        const r = n.interpolate(t, i);
        r && e.lineTo(r.x, r.y);
      }
      var hG = {
        id: "filler",
        afterDatasetsUpdate(e, n, t) {
          const i = (e.data.datasets || []).length,
            r = [];
          let o, s, a, l;
          for (s = 0; s < i; ++s)
            (o = e.getDatasetMeta(s)),
              (a = o.dataset),
              (l = null),
              a &&
                a.options &&
                a instanceof Ip &&
                (l = {
                  visible: e.isDatasetVisible(s),
                  index: s,
                  fill: Zq(a, s, i),
                  chart: e,
                  axis: o.controller.options.indexAxis,
                  scale: o.vScale,
                  line: a,
                }),
              (o.$filler = l),
              r.push(l);
          for (s = 0; s < i; ++s)
            (l = r[s]), l && !1 !== l.fill && (l.fill = Kq(r, s, t.propagate));
        },
        beforeDraw(e, n, t) {
          const i = "beforeDraw" === t.drawTime,
            r = e.getSortedVisibleDatasetMetas(),
            o = e.chartArea;
          for (let s = r.length - 1; s >= 0; --s) {
            const a = r[s].$filler;
            a &&
              (a.line.updateControlPoints(o, a.axis),
              i && a.fill && kb(e.ctx, a, o));
          }
        },
        beforeDatasetsDraw(e, n, t) {
          if ("beforeDatasetsDraw" !== t.drawTime) return;
          const i = e.getSortedVisibleDatasetMetas();
          for (let r = i.length - 1; r >= 0; --r) {
            const o = i[r].$filler;
            KO(o) && kb(e.ctx, o, e.chartArea);
          }
        },
        beforeDatasetDraw(e, n, t) {
          const i = n.meta.$filler;
          !KO(i) ||
            "beforeDatasetDraw" !== t.drawTime ||
            kb(e.ctx, i, e.chartArea);
        },
        defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
      };
      const e2 = (e, n) => {
        let { boxHeight: t = n, boxWidth: i = n } = e;
        return (
          e.usePointStyle &&
            ((t = Math.min(t, n)), (i = e.pointStyleWidth || Math.min(i, n))),
          { boxWidth: i, boxHeight: t, itemHeight: Math.max(n, t) }
        );
      };
      class t2 extends dr {
        constructor(n) {
          super(),
            (this._added = !1),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1),
            (this.chart = n.chart),
            (this.options = n.options),
            (this.ctx = n.ctx),
            (this.legendItems = void 0),
            (this.columnSizes = void 0),
            (this.lineWidths = void 0),
            (this.maxHeight = void 0),
            (this.maxWidth = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this._margins = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(n, t, i) {
          (this.maxWidth = n),
            (this.maxHeight = t),
            (this._margins = i),
            this.setDimensions(),
            this.buildLabels(),
            this.fit();
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = this._margins.left),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = this._margins.top),
              (this.bottom = this.height));
        }
        buildLabels() {
          const n = this.options.labels || {};
          let t = Ft(n.generateLabels, [this.chart], this) || [];
          n.filter && (t = t.filter((i) => n.filter(i, this.chart.data))),
            n.sort && (t = t.sort((i, r) => n.sort(i, r, this.chart.data))),
            this.options.reverse && t.reverse(),
            (this.legendItems = t);
        }
        fit() {
          const { options: n, ctx: t } = this;
          if (!n.display) return void (this.width = this.height = 0);
          const i = n.labels,
            r = _n(i.font),
            o = r.size,
            s = this._computeTitleHeight(),
            { boxWidth: a, itemHeight: l } = e2(i, o);
          let c, u;
          (t.font = r.string),
            this.isHorizontal()
              ? ((c = this.maxWidth), (u = this._fitRows(s, o, a, l) + 10))
              : ((u = this.maxHeight), (c = this._fitCols(s, o, a, l) + 10)),
            (this.width = Math.min(c, n.maxWidth || this.maxWidth)),
            (this.height = Math.min(u, n.maxHeight || this.maxHeight));
        }
        _fitRows(n, t, i, r) {
          const {
              ctx: o,
              maxWidth: s,
              options: {
                labels: { padding: a },
              },
            } = this,
            l = (this.legendHitBoxes = []),
            c = (this.lineWidths = [0]),
            u = r + a;
          let f = n;
          (o.textAlign = "left"), (o.textBaseline = "middle");
          let g = -1,
            m = -u;
          return (
            this.legendItems.forEach((_, y) => {
              const v = i + t / 2 + o.measureText(_.text).width;
              (0 === y || c[c.length - 1] + v + 2 * a > s) &&
                ((f += u), (c[c.length - (y > 0 ? 0 : 1)] = 0), (m += u), g++),
                (l[y] = { left: 0, top: m, row: g, width: v, height: r }),
                (c[c.length - 1] += v + a);
            }),
            f
          );
        }
        _fitCols(n, t, i, r) {
          const {
              ctx: o,
              maxHeight: s,
              options: {
                labels: { padding: a },
              },
            } = this,
            l = (this.legendHitBoxes = []),
            c = (this.columnSizes = []),
            u = s - n;
          let f = a,
            g = 0,
            m = 0,
            _ = 0,
            y = 0;
          return (
            this.legendItems.forEach((v, w) => {
              const C = i + t / 2 + o.measureText(v.text).width;
              w > 0 &&
                m + r + 2 * a > u &&
                ((f += g + a),
                c.push({ width: g, height: m }),
                (_ += g + a),
                y++,
                (g = m = 0)),
                (l[w] = { left: _, top: m, col: y, width: C, height: r }),
                (g = Math.max(g, C)),
                (m += r + a);
            }),
            (f += g),
            c.push({ width: g, height: m }),
            f
          );
        }
        adjustHitBoxes() {
          if (!this.options.display) return;
          const n = this._computeTitleHeight(),
            {
              legendHitBoxes: t,
              options: {
                align: i,
                labels: { padding: r },
                rtl: o,
              },
            } = this,
            s = Sl(o, this.left, this.width);
          if (this.isHorizontal()) {
            let a = 0,
              l = Hn(i, this.left + r, this.right - this.lineWidths[a]);
            for (const c of t)
              a !== c.row &&
                ((a = c.row),
                (l = Hn(i, this.left + r, this.right - this.lineWidths[a]))),
                (c.top += this.top + n + r),
                (c.left = s.leftForLtr(s.x(l), c.width)),
                (l += c.width + r);
          } else {
            let a = 0,
              l = Hn(
                i,
                this.top + n + r,
                this.bottom - this.columnSizes[a].height
              );
            for (const c of t)
              c.col !== a &&
                ((a = c.col),
                (l = Hn(
                  i,
                  this.top + n + r,
                  this.bottom - this.columnSizes[a].height
                ))),
                (c.top = l),
                (c.left += this.left + r),
                (c.left = s.leftForLtr(s.x(c.left), c.width)),
                (l += c.height + r);
          }
        }
        isHorizontal() {
          return (
            "top" === this.options.position ||
            "bottom" === this.options.position
          );
        }
        draw() {
          if (this.options.display) {
            const n = this.ctx;
            mp(n, this), this._draw(), _p(n);
          }
        }
        _draw() {
          const { options: n, columnSizes: t, lineWidths: i, ctx: r } = this,
            { align: o, labels: s } = n,
            a = $e.color,
            l = Sl(n.rtl, this.left, this.width),
            c = _n(s.font),
            { color: u, padding: f } = s,
            g = c.size,
            m = g / 2;
          let _;
          this.drawTitle(),
            (r.textAlign = l.textAlign("left")),
            (r.textBaseline = "middle"),
            (r.lineWidth = 0.5),
            (r.font = c.string);
          const { boxWidth: y, boxHeight: v, itemHeight: w } = e2(s, g),
            S = this.isHorizontal(),
            T = this._computeTitleHeight();
          (_ = S
            ? {
                x: Hn(o, this.left + f, this.right - i[0]),
                y: this.top + f + T,
                line: 0,
              }
            : {
                x: this.left + f,
                y: Hn(o, this.top + T + f, this.bottom - t[0].height),
                line: 0,
              }),
            $I(this.ctx, n.textDirection);
          const L = w + f;
          this.legendItems.forEach((z, $) => {
            (r.strokeStyle = z.fontColor || u),
              (r.fillStyle = z.fontColor || u);
            const q = r.measureText(z.text).width,
              we = l.textAlign(z.textAlign || (z.textAlign = s.textAlign)),
              Be = y + m + q;
            let Fe = _.x,
              bt = _.y;
            l.setWidth(this.width),
              S
                ? $ > 0 &&
                  Fe + Be + f > this.right &&
                  ((bt = _.y += L),
                  _.line++,
                  (Fe = _.x = Hn(o, this.left + f, this.right - i[_.line])))
                : $ > 0 &&
                  bt + L > this.bottom &&
                  ((Fe = _.x = Fe + t[_.line].width + f),
                  _.line++,
                  (bt = _.y =
                    Hn(o, this.top + T + f, this.bottom - t[_.line].height))),
              (function (z, $, q) {
                if (isNaN(y) || y <= 0 || isNaN(v) || v < 0) return;
                r.save();
                const we = Pe(q.lineWidth, 1);
                if (
                  ((r.fillStyle = Pe(q.fillStyle, a)),
                  (r.lineCap = Pe(q.lineCap, "butt")),
                  (r.lineDashOffset = Pe(q.lineDashOffset, 0)),
                  (r.lineJoin = Pe(q.lineJoin, "miter")),
                  (r.lineWidth = we),
                  (r.strokeStyle = Pe(q.strokeStyle, a)),
                  r.setLineDash(Pe(q.lineDash, [])),
                  s.usePointStyle)
                ) {
                  const Be = {
                      radius: (v * Math.SQRT2) / 2,
                      pointStyle: q.pointStyle,
                      rotation: q.rotation,
                      borderWidth: we,
                    },
                    Fe = l.xPlus(z, y / 2);
                  OI(r, Be, Fe, $ + m, s.pointStyleWidth && y);
                } else {
                  const Be = $ + Math.max((g - v) / 2, 0),
                    Fe = l.leftForLtr(z, y),
                    bt = Ks(q.borderRadius);
                  r.beginPath(),
                    Object.values(bt).some((Mn) => 0 !== Mn)
                      ? Ru(r, { x: Fe, y: Be, w: y, h: v, radius: bt })
                      : r.rect(Fe, Be, y, v),
                    r.fill(),
                    0 !== we && r.stroke();
                }
                r.restore();
              })(l.x(Fe), bt, z),
              (Fe = ((e, n, t, i) =>
                e === (i ? "left" : "right")
                  ? t
                  : "center" === e
                  ? (n + t) / 2
                  : n)(we, Fe + y + m, S ? Fe + Be : this.right, n.rtl)),
              (function (z, $, q) {
                Ys(r, q.text, z, $ + w / 2, c, {
                  strikethrough: q.hidden,
                  textAlign: l.textAlign(q.textAlign),
                });
              })(l.x(Fe), bt, z),
              S ? (_.x += Be + f) : (_.y += L);
          }),
            qI(this.ctx, n.textDirection);
        }
        drawTitle() {
          const n = this.options,
            t = n.title,
            i = _n(t.font),
            r = jn(t.padding);
          if (!t.display) return;
          const o = Sl(n.rtl, this.left, this.width),
            s = this.ctx,
            a = t.position,
            c = r.top + i.size / 2;
          let u,
            f = this.left,
            g = this.width;
          if (this.isHorizontal())
            (g = Math.max(...this.lineWidths)),
              (u = this.top + c),
              (f = Hn(n.align, f, this.right - g));
          else {
            const _ = this.columnSizes.reduce(
              (y, v) => Math.max(y, v.height),
              0
            );
            u =
              c +
              Hn(
                n.align,
                this.top,
                this.bottom - _ - n.labels.padding - this._computeTitleHeight()
              );
          }
          const m = Hn(a, f, f + g);
          (s.textAlign = o.textAlign(Qv(a))),
            (s.textBaseline = "middle"),
            (s.strokeStyle = t.color),
            (s.fillStyle = t.color),
            (s.font = i.string),
            Ys(s, t.text, m, u, i);
        }
        _computeTitleHeight() {
          const n = this.options.title,
            t = _n(n.font),
            i = jn(n.padding);
          return n.display ? t.lineHeight + i.height : 0;
        }
        _getLegendItemAt(n, t) {
          let i, r, o;
          if (vo(n, this.left, this.right) && vo(t, this.top, this.bottom))
            for (o = this.legendHitBoxes, i = 0; i < o.length; ++i)
              if (
                ((r = o[i]),
                vo(n, r.left, r.left + r.width) &&
                  vo(t, r.top, r.top + r.height))
              )
                return this.legendItems[i];
          return null;
        }
        handleEvent(n) {
          const t = this.options;
          if (
            !(function pG(e, n) {
              return !(
                (("mousemove" !== e && "mouseout" !== e) ||
                  (!n.onHover && !n.onLeave)) &&
                (!n.onClick || ("click" !== e && "mouseup" !== e))
              );
            })(n.type, t)
          )
            return;
          const i = this._getLegendItemAt(n.x, n.y);
          if ("mousemove" === n.type || "mouseout" === n.type) {
            const r = this._hoveredItem,
              o = ((e, n) =>
                null !== e &&
                null !== n &&
                e.datasetIndex === n.datasetIndex &&
                e.index === n.index)(r, i);
            r && !o && Ft(t.onLeave, [n, r, this], this),
              (this._hoveredItem = i),
              i && !o && Ft(t.onHover, [n, i, this], this);
          } else i && Ft(t.onClick, [n, i, this], this);
        }
      }
      var gG = {
        id: "legend",
        _element: t2,
        start(e, n, t) {
          const i = (e.legend = new t2({ ctx: e.ctx, options: t, chart: e }));
          Un.configure(e, i, t), Un.addBox(e, i);
        },
        stop(e) {
          Un.removeBox(e, e.legend), delete e.legend;
        },
        beforeUpdate(e, n, t) {
          const i = e.legend;
          Un.configure(e, i, t), (i.options = t);
        },
        afterUpdate(e) {
          const n = e.legend;
          n.buildLabels(), n.adjustHitBoxes();
        },
        afterEvent(e, n) {
          n.replay || e.legend.handleEvent(n.event);
        },
        defaults: {
          display: !0,
          position: "top",
          align: "center",
          fullSize: !0,
          reverse: !1,
          weight: 1e3,
          onClick(e, n, t) {
            const i = n.datasetIndex,
              r = t.chart;
            r.isDatasetVisible(i)
              ? (r.hide(i), (n.hidden = !0))
              : (r.show(i), (n.hidden = !1));
          },
          onHover: null,
          onLeave: null,
          labels: {
            color: (e) => e.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels(e) {
              const n = e.data.datasets,
                {
                  labels: {
                    usePointStyle: t,
                    pointStyle: i,
                    textAlign: r,
                    color: o,
                  },
                } = e.legend.options;
              return e._getSortedDatasetMetas().map((s) => {
                const a = s.controller.getStyle(t ? 0 : void 0),
                  l = jn(a.borderWidth);
                return {
                  text: n[s.index].label,
                  fillStyle: a.backgroundColor,
                  fontColor: o,
                  hidden: !s.visible,
                  lineCap: a.borderCapStyle,
                  lineDash: a.borderDash,
                  lineDashOffset: a.borderDashOffset,
                  lineJoin: a.borderJoinStyle,
                  lineWidth: (l.width + l.height) / 4,
                  strokeStyle: a.borderColor,
                  pointStyle: i || a.pointStyle,
                  rotation: a.rotation,
                  textAlign: r || a.textAlign,
                  borderRadius: 0,
                  datasetIndex: s.index,
                };
              }, this);
            },
          },
          title: {
            color: (e) => e.chart.options.color,
            display: !1,
            position: "center",
            text: "",
          },
        },
        descriptors: {
          _scriptable: (e) => !e.startsWith("on"),
          labels: {
            _scriptable: (e) =>
              !["generateLabels", "filter", "sort"].includes(e),
          },
        },
      };
      class Tb extends dr {
        constructor(n) {
          super(),
            (this.chart = n.chart),
            (this.options = n.options),
            (this.ctx = n.ctx),
            (this._padding = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(n, t) {
          const i = this.options;
          if (((this.left = 0), (this.top = 0), !i.display))
            return void (this.width =
              this.height =
              this.right =
              this.bottom =
                0);
          (this.width = this.right = n), (this.height = this.bottom = t);
          const r = Pt(i.text) ? i.text.length : 1;
          this._padding = jn(i.padding);
          const o = r * _n(i.font).lineHeight + this._padding.height;
          this.isHorizontal() ? (this.height = o) : (this.width = o);
        }
        isHorizontal() {
          const n = this.options.position;
          return "top" === n || "bottom" === n;
        }
        _drawArgs(n) {
          const { top: t, left: i, bottom: r, right: o, options: s } = this,
            a = s.align;
          let c,
            u,
            f,
            l = 0;
          return (
            this.isHorizontal()
              ? ((u = Hn(a, i, o)), (f = t + n), (c = o - i))
              : ("left" === s.position
                  ? ((u = i + n), (f = Hn(a, r, t)), (l = -0.5 * jt))
                  : ((u = o - n), (f = Hn(a, t, r)), (l = 0.5 * jt)),
                (c = r - t)),
            { titleX: u, titleY: f, maxWidth: c, rotation: l }
          );
        }
        draw() {
          const n = this.ctx,
            t = this.options;
          if (!t.display) return;
          const i = _n(t.font),
            o = i.lineHeight / 2 + this._padding.top,
            {
              titleX: s,
              titleY: a,
              maxWidth: l,
              rotation: c,
            } = this._drawArgs(o);
          Ys(n, t.text, 0, 0, i, {
            color: t.color,
            maxWidth: l,
            rotation: c,
            textAlign: Qv(t.align),
            textBaseline: "middle",
            translation: [s, a],
          });
        }
      }
      var _G = {
        id: "title",
        _element: Tb,
        start(e, n, t) {
          !(function mG(e, n) {
            const t = new Tb({ ctx: e.ctx, options: n, chart: e });
            Un.configure(e, t, n), Un.addBox(e, t), (e.titleBlock = t);
          })(e, t);
        },
        stop(e) {
          Un.removeBox(e, e.titleBlock), delete e.titleBlock;
        },
        beforeUpdate(e, n, t) {
          const i = e.titleBlock;
          Un.configure(e, i, t), (i.options = t);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "bold" },
          fullSize: !0,
          padding: 10,
          position: "top",
          text: "",
          weight: 2e3,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const Ap = new WeakMap();
      var yG = {
        id: "subtitle",
        start(e, n, t) {
          const i = new Tb({ ctx: e.ctx, options: t, chart: e });
          Un.configure(e, i, t), Un.addBox(e, i), Ap.set(e, i);
        },
        stop(e) {
          Un.removeBox(e, Ap.get(e)), Ap.delete(e);
        },
        beforeUpdate(e, n, t) {
          const i = Ap.get(e);
          Un.configure(e, i, t), (i.options = t);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "normal" },
          fullSize: !0,
          padding: 0,
          position: "top",
          text: "",
          weight: 1500,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const Gu = {
        average(e) {
          if (!e.length) return !1;
          let n,
            t,
            i = 0,
            r = 0,
            o = 0;
          for (n = 0, t = e.length; n < t; ++n) {
            const s = e[n].element;
            if (s && s.hasValue()) {
              const a = s.tooltipPosition();
              (i += a.x), (r += a.y), ++o;
            }
          }
          return { x: i / o, y: r / o };
        },
        nearest(e, n) {
          if (!e.length) return !1;
          let o,
            s,
            a,
            t = n.x,
            i = n.y,
            r = Number.POSITIVE_INFINITY;
          for (o = 0, s = e.length; o < s; ++o) {
            const l = e[o].element;
            if (l && l.hasValue()) {
              const u = Kv(n, l.getCenterPoint());
              u < r && ((r = u), (a = l));
            }
          }
          if (a) {
            const l = a.tooltipPosition();
            (t = l.x), (i = l.y);
          }
          return { x: t, y: i };
        },
      };
      function Vr(e, n) {
        return n && (Pt(n) ? Array.prototype.push.apply(e, n) : e.push(n)), e;
      }
      function xo(e) {
        return ("string" == typeof e || e instanceof String) &&
          e.indexOf("\n") > -1
          ? e.split("\n")
          : e;
      }
      function vG(e, n) {
        const { element: t, datasetIndex: i, index: r } = n,
          o = e.getDatasetMeta(i).controller,
          { label: s, value: a } = o.getLabelAndValue(r);
        return {
          chart: e,
          label: s,
          parsed: o.getParsed(r),
          raw: e.data.datasets[i].data[r],
          formattedValue: a,
          dataset: o.getDataset(),
          dataIndex: r,
          datasetIndex: i,
          element: t,
        };
      }
      function n2(e, n) {
        const t = e.chart.ctx,
          { body: i, footer: r, title: o } = e,
          { boxWidth: s, boxHeight: a } = n,
          l = _n(n.bodyFont),
          c = _n(n.titleFont),
          u = _n(n.footerFont),
          f = o.length,
          g = r.length,
          m = i.length,
          _ = jn(n.padding);
        let y = _.height,
          v = 0,
          w = i.reduce(
            (S, T) => S + T.before.length + T.lines.length + T.after.length,
            0
          );
        (w += e.beforeBody.length + e.afterBody.length),
          f &&
            (y +=
              f * c.lineHeight +
              (f - 1) * n.titleSpacing +
              n.titleMarginBottom),
          w &&
            (y +=
              m * (n.displayColors ? Math.max(a, l.lineHeight) : l.lineHeight) +
              (w - m) * l.lineHeight +
              (w - 1) * n.bodySpacing),
          g &&
            (y +=
              n.footerMarginTop + g * u.lineHeight + (g - 1) * n.footerSpacing);
        let C = 0;
        const D = function (S) {
          v = Math.max(v, t.measureText(S).width + C);
        };
        return (
          t.save(),
          (t.font = c.string),
          pt(e.title, D),
          (t.font = l.string),
          pt(e.beforeBody.concat(e.afterBody), D),
          (C = n.displayColors ? s + 2 + n.boxPadding : 0),
          pt(i, (S) => {
            pt(S.before, D), pt(S.lines, D), pt(S.after, D);
          }),
          (C = 0),
          (t.font = u.string),
          pt(e.footer, D),
          t.restore(),
          (v += _.width),
          { width: v, height: y }
        );
      }
      function CG(e, n, t, i) {
        const { x: r, width: o } = t,
          {
            width: s,
            chartArea: { left: a, right: l },
          } = e;
        let c = "center";
        return (
          "center" === i
            ? (c = r <= (a + l) / 2 ? "left" : "right")
            : r <= o / 2
            ? (c = "left")
            : r >= s - o / 2 && (c = "right"),
          (function wG(e, n, t, i) {
            const { x: r, width: o } = i,
              s = t.caretSize + t.caretPadding;
            if (
              ("left" === e && r + o + s > n.width) ||
              ("right" === e && r - o - s < 0)
            )
              return !0;
          })(c, e, n, t) && (c = "center"),
          c
        );
      }
      function i2(e, n, t) {
        const i =
          t.yAlign ||
          n.yAlign ||
          (function bG(e, n) {
            const { y: t, height: i } = n;
            return t < i / 2
              ? "top"
              : t > e.height - i / 2
              ? "bottom"
              : "center";
          })(e, t);
        return { xAlign: t.xAlign || n.xAlign || CG(e, n, t, i), yAlign: i };
      }
      function r2(e, n, t, i) {
        const { caretSize: r, caretPadding: o, cornerRadius: s } = e,
          { xAlign: a, yAlign: l } = t,
          c = r + o,
          { topLeft: u, topRight: f, bottomLeft: g, bottomRight: m } = Ks(s);
        let _ = (function xG(e, n) {
          let { x: t, width: i } = e;
          return "right" === n ? (t -= i) : "center" === n && (t -= i / 2), t;
        })(n, a);
        const y = (function MG(e, n, t) {
          let { y: i, height: r } = e;
          return (
            "top" === n ? (i += t) : (i -= "bottom" === n ? r + t : r / 2), i
          );
        })(n, l, c);
        return (
          "center" === l
            ? "left" === a
              ? (_ += c)
              : "right" === a && (_ -= c)
            : "left" === a
            ? (_ -= Math.max(u, g) + r)
            : "right" === a && (_ += Math.max(f, m) + r),
          { x: xn(_, 0, i.width - n.width), y: xn(y, 0, i.height - n.height) }
        );
      }
      function Pp(e, n, t) {
        const i = jn(t.padding);
        return "center" === n
          ? e.x + e.width / 2
          : "right" === n
          ? e.x + e.width - i.right
          : e.x + i.left;
      }
      function o2(e) {
        return Vr([], xo(e));
      }
      function s2(e, n) {
        const t =
          n && n.dataset && n.dataset.tooltip && n.dataset.tooltip.callbacks;
        return t ? e.override(t) : e;
      }
      let a2 = (() => {
        class e extends dr {
          constructor(t) {
            super(),
              (this.opacity = 0),
              (this._active = []),
              (this._eventPosition = void 0),
              (this._size = void 0),
              (this._cachedAnimations = void 0),
              (this._tooltipItems = []),
              (this.$animations = void 0),
              (this.$context = void 0),
              (this.chart = t.chart || t._chart),
              (this._chart = this.chart),
              (this.options = t.options),
              (this.dataPoints = void 0),
              (this.title = void 0),
              (this.beforeBody = void 0),
              (this.body = void 0),
              (this.afterBody = void 0),
              (this.footer = void 0),
              (this.xAlign = void 0),
              (this.yAlign = void 0),
              (this.x = void 0),
              (this.y = void 0),
              (this.height = void 0),
              (this.width = void 0),
              (this.caretX = void 0),
              (this.caretY = void 0),
              (this.labelColors = void 0),
              (this.labelPointStyles = void 0),
              (this.labelTextColors = void 0);
          }
          initialize(t) {
            (this.options = t),
              (this._cachedAnimations = void 0),
              (this.$context = void 0);
          }
          _resolveAnimations() {
            const t = this._cachedAnimations;
            if (t) return t;
            const i = this.chart,
              r = this.options.setContext(this.getContext()),
              o = r.enabled && i.options.animation && r.animations,
              s = new eO(this.chart, o);
            return (
              o._cacheable && (this._cachedAnimations = Object.freeze(s)), s
            );
          }
          getContext() {
            return (
              this.$context ||
              (this.$context = (function DG(e, n, t) {
                return is(e, { tooltip: n, tooltipItems: t, type: "tooltip" });
              })(this.chart.getContext(), this, this._tooltipItems))
            );
          }
          getTitle(t, i) {
            const { callbacks: r } = i,
              o = r.beforeTitle.apply(this, [t]),
              s = r.title.apply(this, [t]),
              a = r.afterTitle.apply(this, [t]);
            let l = [];
            return (
              (l = Vr(l, xo(o))), (l = Vr(l, xo(s))), (l = Vr(l, xo(a))), l
            );
          }
          getBeforeBody(t, i) {
            return o2(i.callbacks.beforeBody.apply(this, [t]));
          }
          getBody(t, i) {
            const { callbacks: r } = i,
              o = [];
            return (
              pt(t, (s) => {
                const a = { before: [], lines: [], after: [] },
                  l = s2(r, s);
                Vr(a.before, xo(l.beforeLabel.call(this, s))),
                  Vr(a.lines, l.label.call(this, s)),
                  Vr(a.after, xo(l.afterLabel.call(this, s))),
                  o.push(a);
              }),
              o
            );
          }
          getAfterBody(t, i) {
            return o2(i.callbacks.afterBody.apply(this, [t]));
          }
          getFooter(t, i) {
            const { callbacks: r } = i,
              o = r.beforeFooter.apply(this, [t]),
              s = r.footer.apply(this, [t]),
              a = r.afterFooter.apply(this, [t]);
            let l = [];
            return (
              (l = Vr(l, xo(o))), (l = Vr(l, xo(s))), (l = Vr(l, xo(a))), l
            );
          }
          _createItems(t) {
            const i = this._active,
              r = this.chart.data,
              o = [],
              s = [],
              a = [];
            let c,
              u,
              l = [];
            for (c = 0, u = i.length; c < u; ++c) l.push(vG(this.chart, i[c]));
            return (
              t.filter && (l = l.filter((f, g, m) => t.filter(f, g, m, r))),
              t.itemSort && (l = l.sort((f, g) => t.itemSort(f, g, r))),
              pt(l, (f) => {
                const g = s2(t.callbacks, f);
                o.push(g.labelColor.call(this, f)),
                  s.push(g.labelPointStyle.call(this, f)),
                  a.push(g.labelTextColor.call(this, f));
              }),
              (this.labelColors = o),
              (this.labelPointStyles = s),
              (this.labelTextColors = a),
              (this.dataPoints = l),
              l
            );
          }
          update(t, i) {
            const r = this.options.setContext(this.getContext()),
              o = this._active;
            let s,
              a = [];
            if (o.length) {
              const l = Gu[r.position].call(this, o, this._eventPosition);
              (a = this._createItems(r)),
                (this.title = this.getTitle(a, r)),
                (this.beforeBody = this.getBeforeBody(a, r)),
                (this.body = this.getBody(a, r)),
                (this.afterBody = this.getAfterBody(a, r)),
                (this.footer = this.getFooter(a, r));
              const c = (this._size = n2(this, r)),
                u = Object.assign({}, l, c),
                f = i2(this.chart, r, u),
                g = r2(r, u, f, this.chart);
              (this.xAlign = f.xAlign),
                (this.yAlign = f.yAlign),
                (s = {
                  opacity: 1,
                  x: g.x,
                  y: g.y,
                  width: c.width,
                  height: c.height,
                  caretX: l.x,
                  caretY: l.y,
                });
            } else 0 !== this.opacity && (s = { opacity: 0 });
            (this._tooltipItems = a),
              (this.$context = void 0),
              s && this._resolveAnimations().update(this, s),
              t &&
                r.external &&
                r.external.call(this, {
                  chart: this.chart,
                  tooltip: this,
                  replay: i,
                });
          }
          drawCaret(t, i, r, o) {
            const s = this.getCaretPosition(t, r, o);
            i.lineTo(s.x1, s.y1), i.lineTo(s.x2, s.y2), i.lineTo(s.x3, s.y3);
          }
          getCaretPosition(t, i, r) {
            const { xAlign: o, yAlign: s } = this,
              { caretSize: a, cornerRadius: l } = r,
              {
                topLeft: c,
                topRight: u,
                bottomLeft: f,
                bottomRight: g,
              } = Ks(l),
              { x: m, y: _ } = t,
              { width: y, height: v } = i;
            let w, C, D, S, T, L;
            return (
              "center" === s
                ? ((T = _ + v / 2),
                  "left" === o
                    ? ((w = m), (C = w - a), (S = T + a), (L = T - a))
                    : ((w = m + y), (C = w + a), (S = T - a), (L = T + a)),
                  (D = w))
                : ((C =
                    "left" === o
                      ? m + Math.max(c, f) + a
                      : "right" === o
                      ? m + y - Math.max(u, g) - a
                      : this.caretX),
                  "top" === s
                    ? ((S = _), (T = S - a), (w = C - a), (D = C + a))
                    : ((S = _ + v), (T = S + a), (w = C + a), (D = C - a)),
                  (L = S)),
              { x1: w, x2: C, x3: D, y1: S, y2: T, y3: L }
            );
          }
          drawTitle(t, i, r) {
            const o = this.title,
              s = o.length;
            let a, l, c;
            if (s) {
              const u = Sl(r.rtl, this.x, this.width);
              for (
                t.x = Pp(this, r.titleAlign, r),
                  i.textAlign = u.textAlign(r.titleAlign),
                  i.textBaseline = "middle",
                  a = _n(r.titleFont),
                  l = r.titleSpacing,
                  i.fillStyle = r.titleColor,
                  i.font = a.string,
                  c = 0;
                c < s;
                ++c
              )
                i.fillText(o[c], u.x(t.x), t.y + a.lineHeight / 2),
                  (t.y += a.lineHeight + l),
                  c + 1 === s && (t.y += r.titleMarginBottom - l);
            }
          }
          _drawColorBox(t, i, r, o, s) {
            const a = this.labelColors[r],
              l = this.labelPointStyles[r],
              { boxHeight: c, boxWidth: u, boxPadding: f } = s,
              g = _n(s.bodyFont),
              m = Pp(this, "left", s),
              _ = o.x(m),
              v = i.y + (c < g.lineHeight ? (g.lineHeight - c) / 2 : 0);
            if (s.usePointStyle) {
              const w = {
                  radius: Math.min(u, c) / 2,
                  pointStyle: l.pointStyle,
                  rotation: l.rotation,
                  borderWidth: 1,
                },
                C = o.leftForLtr(_, u) + u / 2,
                D = v + c / 2;
              (t.strokeStyle = s.multiKeyBackground),
                (t.fillStyle = s.multiKeyBackground),
                sb(t, w, C, D),
                (t.strokeStyle = a.borderColor),
                (t.fillStyle = a.backgroundColor),
                sb(t, w, C, D);
            } else {
              (t.lineWidth = We(a.borderWidth)
                ? Math.max(...Object.values(a.borderWidth))
                : a.borderWidth || 1),
                (t.strokeStyle = a.borderColor),
                t.setLineDash(a.borderDash || []),
                (t.lineDashOffset = a.borderDashOffset || 0);
              const w = o.leftForLtr(_, u - f),
                C = o.leftForLtr(o.xPlus(_, 1), u - f - 2),
                D = Ks(a.borderRadius);
              Object.values(D).some((S) => 0 !== S)
                ? (t.beginPath(),
                  (t.fillStyle = s.multiKeyBackground),
                  Ru(t, { x: w, y: v, w: u, h: c, radius: D }),
                  t.fill(),
                  t.stroke(),
                  (t.fillStyle = a.backgroundColor),
                  t.beginPath(),
                  Ru(t, { x: C, y: v + 1, w: u - 2, h: c - 2, radius: D }),
                  t.fill())
                : ((t.fillStyle = s.multiKeyBackground),
                  t.fillRect(w, v, u, c),
                  t.strokeRect(w, v, u, c),
                  (t.fillStyle = a.backgroundColor),
                  t.fillRect(C, v + 1, u - 2, c - 2));
            }
            t.fillStyle = this.labelTextColors[r];
          }
          drawBody(t, i, r) {
            const { body: o } = this,
              {
                bodySpacing: s,
                bodyAlign: a,
                displayColors: l,
                boxHeight: c,
                boxWidth: u,
                boxPadding: f,
              } = r,
              g = _n(r.bodyFont);
            let m = g.lineHeight,
              _ = 0;
            const y = Sl(r.rtl, this.x, this.width),
              v = function (q) {
                i.fillText(q, y.x(t.x + _), t.y + m / 2), (t.y += m + s);
              },
              w = y.textAlign(a);
            let C, D, S, T, L, z, $;
            for (
              i.textAlign = a,
                i.textBaseline = "middle",
                i.font = g.string,
                t.x = Pp(this, w, r),
                i.fillStyle = r.bodyColor,
                pt(this.beforeBody, v),
                _ =
                  l && "right" !== w
                    ? "center" === a
                      ? u / 2 + f
                      : u + 2 + f
                    : 0,
                T = 0,
                z = o.length;
              T < z;
              ++T
            ) {
              for (
                C = o[T],
                  D = this.labelTextColors[T],
                  i.fillStyle = D,
                  pt(C.before, v),
                  S = C.lines,
                  l &&
                    S.length &&
                    (this._drawColorBox(i, t, T, y, r),
                    (m = Math.max(g.lineHeight, c))),
                  L = 0,
                  $ = S.length;
                L < $;
                ++L
              )
                v(S[L]), (m = g.lineHeight);
              pt(C.after, v);
            }
            (_ = 0), (m = g.lineHeight), pt(this.afterBody, v), (t.y -= s);
          }
          drawFooter(t, i, r) {
            const o = this.footer,
              s = o.length;
            let a, l;
            if (s) {
              const c = Sl(r.rtl, this.x, this.width);
              for (
                t.x = Pp(this, r.footerAlign, r),
                  t.y += r.footerMarginTop,
                  i.textAlign = c.textAlign(r.footerAlign),
                  i.textBaseline = "middle",
                  a = _n(r.footerFont),
                  i.fillStyle = r.footerColor,
                  i.font = a.string,
                  l = 0;
                l < s;
                ++l
              )
                i.fillText(o[l], c.x(t.x), t.y + a.lineHeight / 2),
                  (t.y += a.lineHeight + r.footerSpacing);
            }
          }
          drawBackground(t, i, r, o) {
            const { xAlign: s, yAlign: a } = this,
              { x: l, y: c } = t,
              { width: u, height: f } = r,
              {
                topLeft: g,
                topRight: m,
                bottomLeft: _,
                bottomRight: y,
              } = Ks(o.cornerRadius);
            (i.fillStyle = o.backgroundColor),
              (i.strokeStyle = o.borderColor),
              (i.lineWidth = o.borderWidth),
              i.beginPath(),
              i.moveTo(l + g, c),
              "top" === a && this.drawCaret(t, i, r, o),
              i.lineTo(l + u - m, c),
              i.quadraticCurveTo(l + u, c, l + u, c + m),
              "center" === a && "right" === s && this.drawCaret(t, i, r, o),
              i.lineTo(l + u, c + f - y),
              i.quadraticCurveTo(l + u, c + f, l + u - y, c + f),
              "bottom" === a && this.drawCaret(t, i, r, o),
              i.lineTo(l + _, c + f),
              i.quadraticCurveTo(l, c + f, l, c + f - _),
              "center" === a && "left" === s && this.drawCaret(t, i, r, o),
              i.lineTo(l, c + g),
              i.quadraticCurveTo(l, c, l + g, c),
              i.closePath(),
              i.fill(),
              o.borderWidth > 0 && i.stroke();
          }
          _updateAnimationTarget(t) {
            const i = this.chart,
              r = this.$animations,
              o = r && r.x,
              s = r && r.y;
            if (o || s) {
              const a = Gu[t.position].call(
                this,
                this._active,
                this._eventPosition
              );
              if (!a) return;
              const l = (this._size = n2(this, t)),
                c = Object.assign({}, a, this._size),
                u = i2(i, t, c),
                f = r2(t, c, u, i);
              (o._to !== f.x || s._to !== f.y) &&
                ((this.xAlign = u.xAlign),
                (this.yAlign = u.yAlign),
                (this.width = l.width),
                (this.height = l.height),
                (this.caretX = a.x),
                (this.caretY = a.y),
                this._resolveAnimations().update(this, f));
            }
          }
          _willRender() {
            return !!this.opacity;
          }
          draw(t) {
            const i = this.options.setContext(this.getContext());
            let r = this.opacity;
            if (!r) return;
            this._updateAnimationTarget(i);
            const o = { width: this.width, height: this.height },
              s = { x: this.x, y: this.y };
            r = Math.abs(r) < 0.001 ? 0 : r;
            const a = jn(i.padding);
            i.enabled &&
              (this.title.length ||
                this.beforeBody.length ||
                this.body.length ||
                this.afterBody.length ||
                this.footer.length) &&
              (t.save(),
              (t.globalAlpha = r),
              this.drawBackground(s, t, o, i),
              $I(t, i.textDirection),
              (s.y += a.top),
              this.drawTitle(s, t, i),
              this.drawBody(s, t, i),
              this.drawFooter(s, t, i),
              qI(t, i.textDirection),
              t.restore());
          }
          getActiveElements() {
            return this._active || [];
          }
          setActiveElements(t, i) {
            const r = this._active,
              o = t.map(({ datasetIndex: l, index: c }) => {
                const u = this.chart.getDatasetMeta(l);
                if (!u) throw new Error("Cannot find a dataset at index " + l);
                return { datasetIndex: l, element: u.data[c], index: c };
              }),
              s = !ap(r, o),
              a = this._positionChanged(o, i);
            (s || a) &&
              ((this._active = o),
              (this._eventPosition = i),
              (this._ignoreReplayEvents = !0),
              this.update(!0));
          }
          handleEvent(t, i, r = !0) {
            if (i && this._ignoreReplayEvents) return !1;
            this._ignoreReplayEvents = !1;
            const o = this.options,
              s = this._active || [],
              a = this._getActiveElements(t, s, i, r),
              l = this._positionChanged(a, t),
              c = i || !ap(a, s) || l;
            return (
              c &&
                ((this._active = a),
                (o.enabled || o.external) &&
                  ((this._eventPosition = { x: t.x, y: t.y }),
                  this.update(!0, i))),
              c
            );
          }
          _getActiveElements(t, i, r, o) {
            const s = this.options;
            if ("mouseout" === t.type) return [];
            if (!o) return i;
            const a = this.chart.getElementsAtEventForMode(t, s.mode, s, r);
            return s.reverse && a.reverse(), a;
          }
          _positionChanged(t, i) {
            const { caretX: r, caretY: o, options: s } = this,
              a = Gu[s.position].call(this, t, i);
            return !1 !== a && (r !== a.x || o !== a.y);
          }
        }
        return (e.positioners = Gu), e;
      })();
      var SG = {
          id: "tooltip",
          _element: a2,
          positioners: Gu,
          afterInit(e, n, t) {
            t && (e.tooltip = new a2({ chart: e, options: t }));
          },
          beforeUpdate(e, n, t) {
            e.tooltip && e.tooltip.initialize(t);
          },
          reset(e, n, t) {
            e.tooltip && e.tooltip.initialize(t);
          },
          afterDraw(e) {
            const n = e.tooltip;
            if (n && n._willRender()) {
              const t = { tooltip: n };
              if (!1 === e.notifyPlugins("beforeTooltipDraw", t)) return;
              n.draw(e.ctx), e.notifyPlugins("afterTooltipDraw", t);
            }
          },
          afterEvent(e, n) {
            e.tooltip &&
              e.tooltip.handleEvent(n.event, n.replay, n.inChartArea) &&
              (n.changed = !0);
          },
          defaults: {
            enabled: !0,
            external: null,
            position: "average",
            backgroundColor: "rgba(0,0,0,0.8)",
            titleColor: "#fff",
            titleFont: { weight: "bold" },
            titleSpacing: 2,
            titleMarginBottom: 6,
            titleAlign: "left",
            bodyColor: "#fff",
            bodySpacing: 2,
            bodyFont: {},
            bodyAlign: "left",
            footerColor: "#fff",
            footerSpacing: 2,
            footerMarginTop: 6,
            footerFont: { weight: "bold" },
            footerAlign: "left",
            padding: 6,
            caretPadding: 2,
            caretSize: 5,
            cornerRadius: 6,
            boxHeight: (e, n) => n.bodyFont.size,
            boxWidth: (e, n) => n.bodyFont.size,
            multiKeyBackground: "#fff",
            displayColors: !0,
            boxPadding: 0,
            borderColor: "rgba(0,0,0,0)",
            borderWidth: 0,
            animation: { duration: 400, easing: "easeOutQuart" },
            animations: {
              numbers: {
                type: "number",
                properties: ["x", "y", "width", "height", "caretX", "caretY"],
              },
              opacity: { easing: "linear", duration: 200 },
            },
            callbacks: {
              beforeTitle: yo,
              title(e) {
                if (e.length > 0) {
                  const n = e[0],
                    t = n.chart.data.labels,
                    i = t ? t.length : 0;
                  if (this && this.options && "dataset" === this.options.mode)
                    return n.dataset.label || "";
                  if (n.label) return n.label;
                  if (i > 0 && n.dataIndex < i) return t[n.dataIndex];
                }
                return "";
              },
              afterTitle: yo,
              beforeBody: yo,
              beforeLabel: yo,
              label(e) {
                if (this && this.options && "dataset" === this.options.mode)
                  return e.label + ": " + e.formattedValue || e.formattedValue;
                let n = e.dataset.label || "";
                n && (n += ": ");
                const t = e.formattedValue;
                return Xe(t) || (n += t), n;
              },
              labelColor(e) {
                const t = e.chart
                  .getDatasetMeta(e.datasetIndex)
                  .controller.getStyle(e.dataIndex);
                return {
                  borderColor: t.borderColor,
                  backgroundColor: t.backgroundColor,
                  borderWidth: t.borderWidth,
                  borderDash: t.borderDash,
                  borderDashOffset: t.borderDashOffset,
                  borderRadius: 0,
                };
              },
              labelTextColor() {
                return this.options.bodyColor;
              },
              labelPointStyle(e) {
                const t = e.chart
                  .getDatasetMeta(e.datasetIndex)
                  .controller.getStyle(e.dataIndex);
                return { pointStyle: t.pointStyle, rotation: t.rotation };
              },
              afterLabel: yo,
              afterBody: yo,
              beforeFooter: yo,
              footer: yo,
              afterFooter: yo,
            },
          },
          defaultRoutes: {
            bodyFont: "font",
            footerFont: "font",
            titleFont: "font",
          },
          descriptors: {
            _scriptable: (e) =>
              "filter" !== e && "itemSort" !== e && "external" !== e,
            _indexable: !1,
            callbacks: { _scriptable: !1, _indexable: !1 },
            animation: { _fallback: !1 },
            animations: { _fallback: "animation" },
          },
          additionalOptionScopes: ["interaction"],
        },
        kG = Object.freeze({
          __proto__: null,
          Decimation: qq,
          Filler: hG,
          Legend: gG,
          SubTitle: yG,
          Title: _G,
          Tooltip: SG,
        });
      class Fp extends Js {
        constructor(n) {
          super(n),
            (this._startValue = void 0),
            (this._valueRange = 0),
            (this._addedLabels = []);
        }
        init(n) {
          const t = this._addedLabels;
          if (t.length) {
            const i = this.getLabels();
            for (const { index: r, label: o } of t)
              i[r] === o && i.splice(r, 1);
            this._addedLabels = [];
          }
          super.init(n);
        }
        parse(n, t) {
          if (Xe(n)) return null;
          const i = this.getLabels();
          return ((e, n) => (null === e ? null : xn(Math.round(e), 0, n)))(
            (t =
              isFinite(t) && i[t] === n
                ? t
                : (function EG(e, n, t, i) {
                    const r = e.indexOf(n);
                    return -1 === r
                      ? ((e, n, t, i) => (
                          "string" == typeof n
                            ? ((t = e.push(n) - 1),
                              i.unshift({ index: t, label: n }))
                            : isNaN(n) && (t = null),
                          t
                        ))(e, n, t, i)
                      : r !== e.lastIndexOf(n)
                      ? t
                      : r;
                  })(i, n, Pe(t, n), this._addedLabels)),
            i.length - 1
          );
        }
        determineDataLimits() {
          const { minDefined: n, maxDefined: t } = this.getUserBounds();
          let { min: i, max: r } = this.getMinMax(!0);
          "ticks" === this.options.bounds &&
            (n || (i = 0), t || (r = this.getLabels().length - 1)),
            (this.min = i),
            (this.max = r);
        }
        buildTicks() {
          const n = this.min,
            t = this.max,
            i = this.options.offset,
            r = [];
          let o = this.getLabels();
          (o = 0 === n && t === o.length - 1 ? o : o.slice(n, t + 1)),
            (this._valueRange = Math.max(o.length - (i ? 0 : 1), 1)),
            (this._startValue = this.min - (i ? 0.5 : 0));
          for (let s = n; s <= t; s++) r.push({ value: s });
          return r;
        }
        getLabelForValue(n) {
          const t = this.getLabels();
          return n >= 0 && n < t.length ? t[n] : n;
        }
        configure() {
          super.configure(),
            this.isHorizontal() || (this._reversePixels = !this._reversePixels);
        }
        getPixelForValue(n) {
          return (
            "number" != typeof n && (n = this.parse(n)),
            null === n
              ? NaN
              : this.getPixelForDecimal(
                  (n - this._startValue) / this._valueRange
                )
          );
        }
        getPixelForTick(n) {
          const t = this.ticks;
          return n < 0 || n > t.length - 1
            ? null
            : this.getPixelForValue(t[n].value);
        }
        getValueForPixel(n) {
          return Math.round(
            this._startValue + this.getDecimalForPixel(n) * this._valueRange
          );
        }
        getBasePixel() {
          return this.bottom;
        }
      }
      function l2(e, n, { horizontal: t, minRotation: i }) {
        const r = ur(i),
          o = (t ? Math.sin(r) : Math.cos(r)) || 0.001;
        return Math.min(n / o, 0.75 * n * ("" + e).length);
      }
      (Fp.id = "category"),
        (Fp.defaults = { ticks: { callback: Fp.prototype.getLabelForValue } });
      class Rp extends Js {
        constructor(n) {
          super(n),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._endValue = void 0),
            (this._valueRange = 0);
        }
        parse(n, t) {
          return Xe(n) ||
            (("number" == typeof n || n instanceof Number) && !isFinite(+n))
            ? null
            : +n;
        }
        handleTickRangeOptions() {
          const { beginAtZero: n } = this.options,
            { minDefined: t, maxDefined: i } = this.getUserBounds();
          let { min: r, max: o } = this;
          const s = (l) => (r = t ? r : l),
            a = (l) => (o = i ? o : l);
          if (n) {
            const l = Nr(r),
              c = Nr(o);
            l < 0 && c < 0 ? a(0) : l > 0 && c > 0 && s(0);
          }
          if (r === o) {
            let l = 1;
            (o >= Number.MAX_SAFE_INTEGER || r <= Number.MIN_SAFE_INTEGER) &&
              (l = Math.abs(0.05 * o)),
              a(o + l),
              n || s(r - l);
          }
          (this.min = r), (this.max = o);
        }
        getTickLimit() {
          const n = this.options.ticks;
          let r,
            { maxTicksLimit: t, stepSize: i } = n;
          return (
            i
              ? ((r = Math.ceil(this.max / i) - Math.floor(this.min / i) + 1),
                r > 1e3 &&
                  (console.warn(
                    `scales.${this.id}.ticks.stepSize: ${i} would result generating up to ${r} ticks. Limiting to 1000.`
                  ),
                  (r = 1e3)))
              : ((r = this.computeTickLimit()), (t = t || 11)),
            t && (r = Math.min(t, r)),
            r
          );
        }
        computeTickLimit() {
          return Number.POSITIVE_INFINITY;
        }
        buildTicks() {
          const n = this.options,
            t = n.ticks;
          let i = this.getTickLimit();
          i = Math.max(2, i);
          const s = (function OG(e, n) {
            const t = [],
              {
                bounds: r,
                step: o,
                min: s,
                max: a,
                precision: l,
                count: c,
                maxTicks: u,
                maxDigits: f,
                includeBounds: g,
              } = e,
              m = o || 1,
              _ = u - 1,
              { min: y, max: v } = n,
              w = !Xe(s),
              C = !Xe(a),
              D = !Xe(c),
              S = (v - y) / (f + 1);
            let L,
              z,
              $,
              q,
              T = aI((v - y) / _ / m) * m;
            if (T < 1e-14 && !w && !C) return [{ value: y }, { value: v }];
            (q = Math.ceil(v / T) - Math.floor(y / T)),
              q > _ && (T = aI((q * T) / _ / m) * m),
              Xe(l) || ((L = Math.pow(10, l)), (T = Math.ceil(T * L) / L)),
              "ticks" === r
                ? ((z = Math.floor(y / T) * T), ($ = Math.ceil(v / T) * T))
                : ((z = y), ($ = v)),
              w &&
              C &&
              o &&
              (function d$(e, n) {
                const t = Math.round(e);
                return t - n <= e && t + n >= e;
              })((a - s) / o, T / 1e3)
                ? ((q = Math.round(Math.min((a - s) / T, u))),
                  (T = (a - s) / q),
                  (z = s),
                  ($ = a))
                : D
                ? ((z = w ? s : z),
                  ($ = C ? a : $),
                  (q = c - 1),
                  (T = ($ - z) / q))
                : ((q = ($ - z) / T),
                  (q = Tu(q, Math.round(q), T / 1e3)
                    ? Math.round(q)
                    : Math.ceil(q)));
            const we = Math.max(cI(T), cI(z));
            (L = Math.pow(10, Xe(l) ? we : l)),
              (z = Math.round(z * L) / L),
              ($ = Math.round($ * L) / L);
            let Be = 0;
            for (
              w &&
              (g && z !== s
                ? (t.push({ value: s }),
                  z < s && Be++,
                  Tu(Math.round((z + Be * T) * L) / L, s, l2(s, S, e)) && Be++)
                : z < s && Be++);
              Be < q;
              ++Be
            )
              t.push({ value: Math.round((z + Be * T) * L) / L });
            return (
              C && g && $ !== a
                ? t.length && Tu(t[t.length - 1].value, a, l2(a, S, e))
                  ? (t[t.length - 1].value = a)
                  : t.push({ value: a })
                : (!C || $ === a) && t.push({ value: $ }),
              t
            );
          })(
            {
              maxTicks: i,
              bounds: n.bounds,
              min: n.min,
              max: n.max,
              precision: t.precision,
              step: t.stepSize,
              count: t.count,
              maxDigits: this._maxDigits(),
              horizontal: this.isHorizontal(),
              minRotation: t.minRotation || 0,
              includeBounds: !1 !== t.includeBounds,
            },
            this._range || this
          );
          return (
            "ticks" === n.bounds && lI(s, this, "value"),
            n.reverse
              ? (s.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            s
          );
        }
        configure() {
          const n = this.ticks;
          let t = this.min,
            i = this.max;
          if ((super.configure(), this.options.offset && n.length)) {
            const r = (i - t) / Math.max(n.length - 1, 1) / 2;
            (t -= r), (i += r);
          }
          (this._startValue = t),
            (this._endValue = i),
            (this._valueRange = i - t);
        }
        getLabelForValue(n) {
          return Lu(n, this.chart.options.locale, this.options.ticks.format);
        }
      }
      class Eb extends Rp {
        determineDataLimits() {
          const { min: n, max: t } = this.getMinMax(!0);
          (this.min = nn(n) ? n : 0),
            (this.max = nn(t) ? t : 1),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          const n = this.isHorizontal(),
            t = n ? this.width : this.height,
            i = ur(this.options.ticks.minRotation),
            r = (n ? Math.sin(i) : Math.cos(i)) || 0.001,
            o = this._resolveTickFontOptions(0);
          return Math.ceil(t / Math.min(40, o.lineHeight / r));
        }
        getPixelForValue(n) {
          return null === n
            ? NaN
            : this.getPixelForDecimal(
                (n - this._startValue) / this._valueRange
              );
        }
        getValueForPixel(n) {
          return (
            this._startValue + this.getDecimalForPixel(n) * this._valueRange
          );
        }
      }
      function c2(e) {
        return e / Math.pow(10, Math.floor(Wi(e))) == 1;
      }
      (Eb.id = "linear"),
        (Eb.defaults = { ticks: { callback: wp.formatters.numeric } });
      class Ib extends Js {
        constructor(n) {
          super(n),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._valueRange = 0);
        }
        parse(n, t) {
          const i = Rp.prototype.parse.apply(this, [n, t]);
          if (0 !== i) return nn(i) && i > 0 ? i : null;
          this._zero = !0;
        }
        determineDataLimits() {
          const { min: n, max: t } = this.getMinMax(!0);
          (this.min = nn(n) ? Math.max(0, n) : null),
            (this.max = nn(t) ? Math.max(0, t) : null),
            this.options.beginAtZero && (this._zero = !0),
            this.handleTickRangeOptions();
        }
        handleTickRangeOptions() {
          const { minDefined: n, maxDefined: t } = this.getUserBounds();
          let i = this.min,
            r = this.max;
          const o = (l) => (i = n ? i : l),
            s = (l) => (r = t ? r : l),
            a = (l, c) => Math.pow(10, Math.floor(Wi(l)) + c);
          i === r && (i <= 0 ? (o(1), s(10)) : (o(a(i, -1)), s(a(r, 1)))),
            i <= 0 && o(a(r, -1)),
            r <= 0 && s(a(i, 1)),
            this._zero &&
              this.min !== this._suggestedMin &&
              i === a(this.min, 0) &&
              o(a(i, -1)),
            (this.min = i),
            (this.max = r);
        }
        buildTicks() {
          const n = this.options,
            i = (function AG(e, n) {
              const t = Math.floor(Wi(n.max)),
                i = Math.ceil(n.max / Math.pow(10, t)),
                r = [];
              let o = ji(e.min, Math.pow(10, Math.floor(Wi(n.min)))),
                s = Math.floor(Wi(o)),
                a = Math.floor(o / Math.pow(10, s)),
                l = s < 0 ? Math.pow(10, Math.abs(s)) : 1;
              do {
                r.push({ value: o, major: c2(o) }),
                  ++a,
                  10 === a && ((a = 1), ++s, (l = s >= 0 ? 1 : l)),
                  (o = Math.round(a * Math.pow(10, s) * l) / l);
              } while (s < t || (s === t && a < i));
              const c = ji(e.max, o);
              return r.push({ value: c, major: c2(o) }), r;
            })({ min: this._userMin, max: this._userMax }, this);
          return (
            "ticks" === n.bounds && lI(i, this, "value"),
            n.reverse
              ? (i.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            i
          );
        }
        getLabelForValue(n) {
          return void 0 === n
            ? "0"
            : Lu(n, this.chart.options.locale, this.options.ticks.format);
        }
        configure() {
          const n = this.min;
          super.configure(),
            (this._startValue = Wi(n)),
            (this._valueRange = Wi(this.max) - Wi(n));
        }
        getPixelForValue(n) {
          return (
            (void 0 === n || 0 === n) && (n = this.min),
            null === n || isNaN(n)
              ? NaN
              : this.getPixelForDecimal(
                  n === this.min
                    ? 0
                    : (Wi(n) - this._startValue) / this._valueRange
                )
          );
        }
        getValueForPixel(n) {
          const t = this.getDecimalForPixel(n);
          return Math.pow(10, this._startValue + t * this._valueRange);
        }
      }
      function Ob(e) {
        const n = e.ticks;
        if (n.display && e.display) {
          const t = jn(n.backdropPadding);
          return Pe(n.font && n.font.size, $e.font.size) + t.height;
        }
        return 0;
      }
      function PG(e, n, t) {
        return (
          (t = Pt(t) ? t : [t]),
          { w: U$(e, n.string, t), h: t.length * n.lineHeight }
        );
      }
      function u2(e, n, t, i, r) {
        return e === i || e === r
          ? { start: n - t / 2, end: n + t / 2 }
          : e < i || e > r
          ? { start: n - t, end: n }
          : { start: n, end: n + t };
      }
      function RG(e, n, t, i, r) {
        const o = Math.abs(Math.sin(t)),
          s = Math.abs(Math.cos(t));
        let a = 0,
          l = 0;
        i.start < n.l
          ? ((a = (n.l - i.start) / o), (e.l = Math.min(e.l, n.l - a)))
          : i.end > n.r &&
            ((a = (i.end - n.r) / o), (e.r = Math.max(e.r, n.r + a))),
          r.start < n.t
            ? ((l = (n.t - r.start) / s), (e.t = Math.min(e.t, n.t - l)))
            : r.end > n.b &&
              ((l = (r.end - n.b) / s), (e.b = Math.max(e.b, n.b + l)));
      }
      function LG(e) {
        return 0 === e || 180 === e ? "center" : e < 180 ? "left" : "right";
      }
      function BG(e, n, t) {
        return "right" === t ? (e -= n) : "center" === t && (e -= n / 2), e;
      }
      function VG(e, n, t) {
        return (
          90 === t || 270 === t
            ? (e -= n / 2)
            : (t > 270 || t < 90) && (e -= n),
          e
        );
      }
      function d2(e, n, t, i) {
        const { ctx: r } = e;
        if (t) r.arc(e.xCenter, e.yCenter, n, 0, vt);
        else {
          let o = e.getPointPosition(0, n);
          r.moveTo(o.x, o.y);
          for (let s = 1; s < i; s++)
            (o = e.getPointPosition(s, n)), r.lineTo(o.x, o.y);
        }
      }
      (Ib.id = "logarithmic"),
        (Ib.defaults = {
          ticks: {
            callback: wp.formatters.logarithmic,
            major: { enabled: !0 },
          },
        });
      class Yu extends Rp {
        constructor(n) {
          super(n),
            (this.xCenter = void 0),
            (this.yCenter = void 0),
            (this.drawingArea = void 0),
            (this._pointLabels = []),
            (this._pointLabelItems = []);
        }
        setDimensions() {
          const n = (this._padding = jn(Ob(this.options) / 2)),
            t = (this.width = this.maxWidth - n.width),
            i = (this.height = this.maxHeight - n.height);
          (this.xCenter = Math.floor(this.left + t / 2 + n.left)),
            (this.yCenter = Math.floor(this.top + i / 2 + n.top)),
            (this.drawingArea = Math.floor(Math.min(t, i) / 2));
        }
        determineDataLimits() {
          const { min: n, max: t } = this.getMinMax(!1);
          (this.min = nn(n) && !isNaN(n) ? n : 0),
            (this.max = nn(t) && !isNaN(t) ? t : 0),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          return Math.ceil(this.drawingArea / Ob(this.options));
        }
        generateTickLabels(n) {
          Rp.prototype.generateTickLabels.call(this, n),
            (this._pointLabels = this.getLabels()
              .map((t, i) => {
                const r = Ft(this.options.pointLabels.callback, [t, i], this);
                return r || 0 === r ? r : "";
              })
              .filter((t, i) => this.chart.getDataVisibility(i)));
        }
        fit() {
          const n = this.options;
          n.display && n.pointLabels.display
            ? (function FG(e) {
                const n = {
                    l: e.left + e._padding.left,
                    r: e.right - e._padding.right,
                    t: e.top + e._padding.top,
                    b: e.bottom - e._padding.bottom,
                  },
                  t = Object.assign({}, n),
                  i = [],
                  r = [],
                  o = e._pointLabels.length,
                  s = e.options.pointLabels,
                  a = s.centerPointLabels ? jt / o : 0;
                for (let l = 0; l < o; l++) {
                  const c = s.setContext(e.getPointLabelContext(l));
                  r[l] = c.padding;
                  const u = e.getPointPosition(l, e.drawingArea + r[l], a),
                    f = _n(c.font),
                    g = PG(e.ctx, f, e._pointLabels[l]);
                  i[l] = g;
                  const m = Ti(e.getIndexAngle(l) + a),
                    _ = Math.round(Yv(m));
                  RG(
                    t,
                    n,
                    m,
                    u2(_, u.x, g.w, 0, 180),
                    u2(_, u.y, g.h, 90, 270)
                  );
                }
                e.setCenterPoint(n.l - t.l, t.r - n.r, n.t - t.t, t.b - n.b),
                  (e._pointLabelItems = (function NG(e, n, t) {
                    const i = [],
                      r = e._pointLabels.length,
                      o = e.options,
                      s = Ob(o) / 2,
                      a = e.drawingArea,
                      l = o.pointLabels.centerPointLabels ? jt / r : 0;
                    for (let c = 0; c < r; c++) {
                      const u = e.getPointPosition(c, a + s + t[c], l),
                        f = Math.round(Yv(Ti(u.angle + Kt))),
                        g = n[c],
                        m = VG(u.y, g.h, f),
                        _ = LG(f),
                        y = BG(u.x, g.w, _);
                      i.push({
                        x: u.x,
                        y: m,
                        textAlign: _,
                        left: y,
                        top: m,
                        right: y + g.w,
                        bottom: m + g.h,
                      });
                    }
                    return i;
                  })(e, i, r));
              })(this)
            : this.setCenterPoint(0, 0, 0, 0);
        }
        setCenterPoint(n, t, i, r) {
          (this.xCenter += Math.floor((n - t) / 2)),
            (this.yCenter += Math.floor((i - r) / 2)),
            (this.drawingArea -= Math.min(
              this.drawingArea / 2,
              Math.max(n, t, i, r)
            ));
        }
        getIndexAngle(n) {
          return Ti(
            n * (vt / (this._pointLabels.length || 1)) +
              ur(this.options.startAngle || 0)
          );
        }
        getDistanceFromCenterForValue(n) {
          if (Xe(n)) return NaN;
          const t = this.drawingArea / (this.max - this.min);
          return this.options.reverse ? (this.max - n) * t : (n - this.min) * t;
        }
        getValueForDistanceFromCenter(n) {
          if (Xe(n)) return NaN;
          const t = n / (this.drawingArea / (this.max - this.min));
          return this.options.reverse ? this.max - t : this.min + t;
        }
        getPointLabelContext(n) {
          const t = this._pointLabels || [];
          if (n >= 0 && n < t.length) {
            const i = t[n];
            return (function jG(e, n, t) {
              return is(e, { label: t, index: n, type: "pointLabel" });
            })(this.getContext(), n, i);
          }
        }
        getPointPosition(n, t, i = 0) {
          const r = this.getIndexAngle(n) - Kt + i;
          return {
            x: Math.cos(r) * t + this.xCenter,
            y: Math.sin(r) * t + this.yCenter,
            angle: r,
          };
        }
        getPointPositionForValue(n, t) {
          return this.getPointPosition(
            n,
            this.getDistanceFromCenterForValue(t)
          );
        }
        getBasePosition(n) {
          return this.getPointPositionForValue(n || 0, this.getBaseValue());
        }
        getPointLabelPosition(n) {
          const {
            left: t,
            top: i,
            right: r,
            bottom: o,
          } = this._pointLabelItems[n];
          return { left: t, top: i, right: r, bottom: o };
        }
        drawBackground() {
          const {
            backgroundColor: n,
            grid: { circular: t },
          } = this.options;
          if (n) {
            const i = this.ctx;
            i.save(),
              i.beginPath(),
              d2(
                this,
                this.getDistanceFromCenterForValue(this._endValue),
                t,
                this._pointLabels.length
              ),
              i.closePath(),
              (i.fillStyle = n),
              i.fill(),
              i.restore();
          }
        }
        drawGrid() {
          const n = this.ctx,
            t = this.options,
            { angleLines: i, grid: r } = t,
            o = this._pointLabels.length;
          let s, a, l;
          if (
            (t.pointLabels.display &&
              (function zG(e, n) {
                const {
                  ctx: t,
                  options: { pointLabels: i },
                } = e;
                for (let r = n - 1; r >= 0; r--) {
                  const o = i.setContext(e.getPointLabelContext(r)),
                    s = _n(o.font),
                    {
                      x: a,
                      y: l,
                      textAlign: c,
                      left: u,
                      top: f,
                      right: g,
                      bottom: m,
                    } = e._pointLabelItems[r],
                    { backdropColor: _ } = o;
                  if (!Xe(_)) {
                    const y = Ks(o.borderRadius),
                      v = jn(o.backdropPadding);
                    t.fillStyle = _;
                    const w = u - v.left,
                      C = f - v.top,
                      D = g - u + v.width,
                      S = m - f + v.height;
                    Object.values(y).some((T) => 0 !== T)
                      ? (t.beginPath(),
                        Ru(t, { x: w, y: C, w: D, h: S, radius: y }),
                        t.fill())
                      : t.fillRect(w, C, D, S);
                  }
                  Ys(t, e._pointLabels[r], a, l + s.lineHeight / 2, s, {
                    color: o.color,
                    textAlign: c,
                    textBaseline: "middle",
                  });
                }
              })(this, o),
            r.display &&
              this.ticks.forEach((c, u) => {
                0 !== u &&
                  ((a = this.getDistanceFromCenterForValue(c.value)),
                  (function HG(e, n, t, i) {
                    const r = e.ctx,
                      o = n.circular,
                      { color: s, lineWidth: a } = n;
                    (!o && !i) ||
                      !s ||
                      !a ||
                      t < 0 ||
                      (r.save(),
                      (r.strokeStyle = s),
                      (r.lineWidth = a),
                      r.setLineDash(n.borderDash),
                      (r.lineDashOffset = n.borderDashOffset),
                      r.beginPath(),
                      d2(e, t, o, i),
                      r.closePath(),
                      r.stroke(),
                      r.restore());
                  })(this, r.setContext(this.getContext(u - 1)), a, o));
              }),
            i.display)
          ) {
            for (n.save(), s = o - 1; s >= 0; s--) {
              const c = i.setContext(this.getPointLabelContext(s)),
                { color: u, lineWidth: f } = c;
              !f ||
                !u ||
                ((n.lineWidth = f),
                (n.strokeStyle = u),
                n.setLineDash(c.borderDash),
                (n.lineDashOffset = c.borderDashOffset),
                (a = this.getDistanceFromCenterForValue(
                  t.ticks.reverse ? this.min : this.max
                )),
                (l = this.getPointPosition(s, a)),
                n.beginPath(),
                n.moveTo(this.xCenter, this.yCenter),
                n.lineTo(l.x, l.y),
                n.stroke());
            }
            n.restore();
          }
        }
        drawBorder() {}
        drawLabels() {
          const n = this.ctx,
            t = this.options,
            i = t.ticks;
          if (!i.display) return;
          const r = this.getIndexAngle(0);
          let o, s;
          n.save(),
            n.translate(this.xCenter, this.yCenter),
            n.rotate(r),
            (n.textAlign = "center"),
            (n.textBaseline = "middle"),
            this.ticks.forEach((a, l) => {
              if (0 === l && !t.reverse) return;
              const c = i.setContext(this.getContext(l)),
                u = _n(c.font);
              if (
                ((o = this.getDistanceFromCenterForValue(this.ticks[l].value)),
                c.showLabelBackdrop)
              ) {
                (n.font = u.string),
                  (s = n.measureText(a.label).width),
                  (n.fillStyle = c.backdropColor);
                const f = jn(c.backdropPadding);
                n.fillRect(
                  -s / 2 - f.left,
                  -o - u.size / 2 - f.top,
                  s + f.width,
                  u.size + f.height
                );
              }
              Ys(n, a.label, 0, -o, u, { color: c.color });
            }),
            n.restore();
        }
        drawTitle() {}
      }
      (Yu.id = "radialLinear"),
        (Yu.defaults = {
          display: !0,
          animate: !0,
          position: "chartArea",
          angleLines: {
            display: !0,
            lineWidth: 1,
            borderDash: [],
            borderDashOffset: 0,
          },
          grid: { circular: !1 },
          startAngle: 0,
          ticks: { showLabelBackdrop: !0, callback: wp.formatters.numeric },
          pointLabels: {
            backdropColor: void 0,
            backdropPadding: 2,
            display: !0,
            font: { size: 10 },
            callback: (e) => e,
            padding: 5,
            centerPointLabels: !1,
          },
        }),
        (Yu.defaultRoutes = {
          "angleLines.color": "borderColor",
          "pointLabels.color": "color",
          "ticks.color": "color",
        }),
        (Yu.descriptors = { angleLines: { _fallback: "grid" } });
      const Np = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        hi = Object.keys(Np);
      function UG(e, n) {
        return e - n;
      }
      function h2(e, n) {
        if (Xe(n)) return null;
        const t = e._adapter,
          { parser: i, round: r, isoWeekday: o } = e._parseOpts;
        let s = n;
        return (
          "function" == typeof i && (s = i(s)),
          nn(s) || (s = "string" == typeof i ? t.parse(s, i) : t.parse(s)),
          null === s
            ? null
            : (r &&
                (s =
                  "week" !== r || (!Cl(o) && !0 !== o)
                    ? t.startOf(s, r)
                    : t.startOf(s, "isoWeek", o)),
              +s)
        );
      }
      function f2(e, n, t, i) {
        const r = hi.length;
        for (let o = hi.indexOf(e); o < r - 1; ++o) {
          const s = Np[hi[o]];
          if (
            s.common &&
            Math.ceil(
              (t - n) / ((s.steps ? s.steps : Number.MAX_SAFE_INTEGER) * s.size)
            ) <= i
          )
            return hi[o];
        }
        return hi[r - 1];
      }
      function p2(e, n, t) {
        if (t) {
          if (t.length) {
            const { lo: i, hi: r } = Zv(t, n);
            e[t[i] >= n ? t[i] : t[r]] = !0;
          }
        } else e[n] = !0;
      }
      function g2(e, n, t) {
        const i = [],
          r = {},
          o = n.length;
        let s, a;
        for (s = 0; s < o; ++s)
          (a = n[s]), (r[a] = s), i.push({ value: a, major: !1 });
        return 0 !== o && t
          ? (function qG(e, n, t, i) {
              const r = e._adapter,
                o = +r.startOf(n[0].value, i),
                s = n[n.length - 1].value;
              let a, l;
              for (a = o; a <= s; a = +r.add(a, 1, i))
                (l = t[a]), l >= 0 && (n[l].major = !0);
              return n;
            })(e, i, r, t)
          : i;
      }
      let Ab = (() => {
        class e extends Js {
          constructor(t) {
            super(t),
              (this._cache = { data: [], labels: [], all: [] }),
              (this._unit = "day"),
              (this._majorUnit = void 0),
              (this._offsets = {}),
              (this._normalized = !1),
              (this._parseOpts = void 0);
          }
          init(t, i) {
            const r = t.time || (t.time = {}),
              o = (this._adapter = new _O._date(t.adapters.date));
            o.init(i),
              Su(r.displayFormats, o.formats()),
              (this._parseOpts = {
                parser: r.parser,
                round: r.round,
                isoWeekday: r.isoWeekday,
              }),
              super.init(t),
              (this._normalized = i.normalized);
          }
          parse(t, i) {
            return void 0 === t ? null : h2(this, t);
          }
          beforeLayout() {
            super.beforeLayout(),
              (this._cache = { data: [], labels: [], all: [] });
          }
          determineDataLimits() {
            const t = this.options,
              i = this._adapter,
              r = t.time.unit || "day";
            let {
              min: o,
              max: s,
              minDefined: a,
              maxDefined: l,
            } = this.getUserBounds();
            function c(u) {
              !a && !isNaN(u.min) && (o = Math.min(o, u.min)),
                !l && !isNaN(u.max) && (s = Math.max(s, u.max));
            }
            (!a || !l) &&
              (c(this._getLabelBounds()),
              ("ticks" !== t.bounds || "labels" !== t.ticks.source) &&
                c(this.getMinMax(!1))),
              (o = nn(o) && !isNaN(o) ? o : +i.startOf(Date.now(), r)),
              (s = nn(s) && !isNaN(s) ? s : +i.endOf(Date.now(), r) + 1),
              (this.min = Math.min(o, s - 1)),
              (this.max = Math.max(o + 1, s));
          }
          _getLabelBounds() {
            const t = this.getLabelTimestamps();
            let i = Number.POSITIVE_INFINITY,
              r = Number.NEGATIVE_INFINITY;
            return (
              t.length && ((i = t[0]), (r = t[t.length - 1])),
              { min: i, max: r }
            );
          }
          buildTicks() {
            const t = this.options,
              i = t.time,
              r = t.ticks,
              o =
                "labels" === r.source
                  ? this.getLabelTimestamps()
                  : this._generate();
            "ticks" === t.bounds &&
              o.length &&
              ((this.min = this._userMin || o[0]),
              (this.max = this._userMax || o[o.length - 1]));
            const s = this.min,
              l = (function g$(e, n, t) {
                let i = 0,
                  r = e.length;
                for (; i < r && e[i] < n; ) i++;
                for (; r > i && e[r - 1] > t; ) r--;
                return i > 0 || r < e.length ? e.slice(i, r) : e;
              })(o, s, this.max);
            return (
              (this._unit =
                i.unit ||
                (r.autoSkip
                  ? f2(i.minUnit, this.min, this.max, this._getLabelCapacity(s))
                  : (function WG(e, n, t, i, r) {
                      for (let o = hi.length - 1; o >= hi.indexOf(t); o--) {
                        const s = hi[o];
                        if (Np[s].common && e._adapter.diff(r, i, s) >= n - 1)
                          return s;
                      }
                      return hi[t ? hi.indexOf(t) : 0];
                    })(this, l.length, i.minUnit, this.min, this.max))),
              (this._majorUnit =
                r.major.enabled && "year" !== this._unit
                  ? (function $G(e) {
                      for (let n = hi.indexOf(e) + 1, t = hi.length; n < t; ++n)
                        if (Np[hi[n]].common) return hi[n];
                    })(this._unit)
                  : void 0),
              this.initOffsets(o),
              t.reverse && l.reverse(),
              g2(this, l, this._majorUnit)
            );
          }
          afterAutoSkip() {
            this.options.offsetAfterAutoskip &&
              this.initOffsets(this.ticks.map((t) => +t.value));
          }
          initOffsets(t) {
            let o,
              s,
              i = 0,
              r = 0;
            this.options.offset &&
              t.length &&
              ((o = this.getDecimalForValue(t[0])),
              (i =
                1 === t.length
                  ? 1 - o
                  : (this.getDecimalForValue(t[1]) - o) / 2),
              (s = this.getDecimalForValue(t[t.length - 1])),
              (r =
                1 === t.length
                  ? s
                  : (s - this.getDecimalForValue(t[t.length - 2])) / 2));
            const a = t.length < 3 ? 0.5 : 0.25;
            (i = xn(i, 0, a)),
              (r = xn(r, 0, a)),
              (this._offsets = { start: i, end: r, factor: 1 / (i + 1 + r) });
          }
          _generate() {
            const t = this._adapter,
              i = this.min,
              r = this.max,
              o = this.options,
              s = o.time,
              a = s.unit || f2(s.minUnit, i, r, this._getLabelCapacity(i)),
              l = Pe(s.stepSize, 1),
              c = "week" === a && s.isoWeekday,
              u = Cl(c) || !0 === c,
              f = {};
            let m,
              _,
              g = i;
            if (
              (u && (g = +t.startOf(g, "isoWeek", c)),
              (g = +t.startOf(g, u ? "day" : a)),
              t.diff(r, i, a) > 1e5 * l)
            )
              throw new Error(
                i +
                  " and " +
                  r +
                  " are too far apart with stepSize of " +
                  l +
                  " " +
                  a
              );
            const y = "data" === o.ticks.source && this.getDataTimestamps();
            for (m = g, _ = 0; m < r; m = +t.add(m, l, a), _++) p2(f, m, y);
            return (
              (m === r || "ticks" === o.bounds || 1 === _) && p2(f, m, y),
              Object.keys(f)
                .sort((v, w) => v - w)
                .map((v) => +v)
            );
          }
          getLabelForValue(t) {
            const r = this.options.time;
            return this._adapter.format(
              t,
              r.tooltipFormat ? r.tooltipFormat : r.displayFormats.datetime
            );
          }
          _tickFormatFunction(t, i, r, o) {
            const s = this.options,
              a = s.time.displayFormats,
              l = this._unit,
              c = this._majorUnit,
              f = c && a[c],
              g = r[i],
              _ = this._adapter.format(
                t,
                o || (c && f && g && g.major ? f : l && a[l])
              ),
              y = s.ticks.callback;
            return y ? Ft(y, [_, i, r], this) : _;
          }
          generateTickLabels(t) {
            let i, r, o;
            for (i = 0, r = t.length; i < r; ++i)
              (o = t[i]), (o.label = this._tickFormatFunction(o.value, i, t));
          }
          getDecimalForValue(t) {
            return null === t ? NaN : (t - this.min) / (this.max - this.min);
          }
          getPixelForValue(t) {
            const i = this._offsets,
              r = this.getDecimalForValue(t);
            return this.getPixelForDecimal((i.start + r) * i.factor);
          }
          getValueForPixel(t) {
            const i = this._offsets,
              r = this.getDecimalForPixel(t) / i.factor - i.end;
            return this.min + r * (this.max - this.min);
          }
          _getLabelSize(t) {
            const i = this.options.ticks,
              r = this.ctx.measureText(t).width,
              o = ur(this.isHorizontal() ? i.maxRotation : i.minRotation),
              s = Math.cos(o),
              a = Math.sin(o),
              l = this._resolveTickFontOptions(0).size;
            return { w: r * s + l * a, h: r * a + l * s };
          }
          _getLabelCapacity(t) {
            const i = this.options.time,
              r = i.displayFormats,
              o = r[i.unit] || r.millisecond,
              s = this._tickFormatFunction(
                t,
                0,
                g2(this, [t], this._majorUnit),
                o
              ),
              a = this._getLabelSize(s),
              l =
                Math.floor(
                  this.isHorizontal() ? this.width / a.w : this.height / a.h
                ) - 1;
            return l > 0 ? l : 1;
          }
          getDataTimestamps() {
            let i,
              r,
              t = this._cache.data || [];
            if (t.length) return t;
            const o = this.getMatchingVisibleMetas();
            if (this._normalized && o.length)
              return (this._cache.data =
                o[0].controller.getAllParsedValues(this));
            for (i = 0, r = o.length; i < r; ++i)
              t = t.concat(o[i].controller.getAllParsedValues(this));
            return (this._cache.data = this.normalize(t));
          }
          getLabelTimestamps() {
            const t = this._cache.labels || [];
            let i, r;
            if (t.length) return t;
            const o = this.getLabels();
            for (i = 0, r = o.length; i < r; ++i) t.push(h2(this, o[i]));
            return (this._cache.labels = this._normalized
              ? t
              : this.normalize(t));
          }
          normalize(t) {
            return fI(t.sort(UG));
          }
        }
        return (
          (e.id = "time"),
          (e.defaults = {
            bounds: "data",
            adapters: {},
            time: {
              parser: !1,
              unit: !1,
              round: !1,
              isoWeekday: !1,
              minUnit: "millisecond",
              displayFormats: {},
            },
            ticks: { source: "auto", major: { enabled: !1 } },
          }),
          e
        );
      })();
      function Lp(e, n, t) {
        let o,
          s,
          a,
          l,
          i = 0,
          r = e.length - 1;
        t
          ? (n >= e[i].pos &&
              n <= e[r].pos &&
              ({ lo: i, hi: r } = bo(e, "pos", n)),
            ({ pos: o, time: a } = e[i]),
            ({ pos: s, time: l } = e[r]))
          : (n >= e[i].time &&
              n <= e[r].time &&
              ({ lo: i, hi: r } = bo(e, "time", n)),
            ({ time: o, pos: a } = e[i]),
            ({ time: s, pos: l } = e[r]));
        const c = s - o;
        return c ? a + ((l - a) * (n - o)) / c : a;
      }
      class Pb extends Ab {
        constructor(n) {
          super(n),
            (this._table = []),
            (this._minPos = void 0),
            (this._tableRange = void 0);
        }
        initOffsets() {
          const n = this._getTimestampsForTable(),
            t = (this._table = this.buildLookupTable(n));
          (this._minPos = Lp(t, this.min)),
            (this._tableRange = Lp(t, this.max) - this._minPos),
            super.initOffsets(n);
        }
        buildLookupTable(n) {
          const { min: t, max: i } = this,
            r = [],
            o = [];
          let s, a, l, c, u;
          for (s = 0, a = n.length; s < a; ++s)
            (c = n[s]), c >= t && c <= i && r.push(c);
          if (r.length < 2)
            return [
              { time: t, pos: 0 },
              { time: i, pos: 1 },
            ];
          for (s = 0, a = r.length; s < a; ++s)
            (u = r[s + 1]),
              (l = r[s - 1]),
              (c = r[s]),
              Math.round((u + l) / 2) !== c &&
                o.push({ time: c, pos: s / (a - 1) });
          return o;
        }
        _getTimestampsForTable() {
          let n = this._cache.all || [];
          if (n.length) return n;
          const t = this.getDataTimestamps(),
            i = this.getLabelTimestamps();
          return (
            (n =
              t.length && i.length
                ? this.normalize(t.concat(i))
                : t.length
                ? t
                : i),
            (n = this._cache.all = n),
            n
          );
        }
        getDecimalForValue(n) {
          return (Lp(this._table, n) - this._minPos) / this._tableRange;
        }
        getValueForPixel(n) {
          const t = this._offsets,
            i = this.getDecimalForPixel(n) / t.factor - t.end;
          return Lp(this._table, i * this._tableRange + this._minPos, !0);
        }
      }
      (Pb.id = "timeseries"), (Pb.defaults = Ab.defaults);
      const YG = [
          O9,
          jq,
          kG,
          Object.freeze({
            __proto__: null,
            CategoryScale: Fp,
            LinearScale: Eb,
            LogarithmicScale: Ib,
            RadialLinearScale: Yu,
            TimeScale: Ab,
            TimeSeriesScale: Pb,
          }),
        ],
        Bp = function QG(e, n) {
          return e === n || (e != e && n != n);
        },
        Vp = function XG(e, n) {
          for (var t = e.length; t--; ) if (Bp(e[t][0], n)) return t;
          return -1;
        };
      var eY = Array.prototype.splice;
      function Tl(e) {
        var n = -1,
          t = null == e ? 0 : e.length;
        for (this.clear(); ++n < t; ) {
          var i = e[n];
          this.set(i[0], i[1]);
        }
      }
      (Tl.prototype.clear = function KG() {
        (this.__data__ = []), (this.size = 0);
      }),
        (Tl.prototype.delete = function tY(e) {
          var n = this.__data__,
            t = Vp(n, e);
          return !(
            t < 0 ||
            (t == n.length - 1 ? n.pop() : eY.call(n, t, 1), --this.size, 0)
          );
        }),
        (Tl.prototype.get = function iY(e) {
          var n = this.__data__,
            t = Vp(n, e);
          return t < 0 ? void 0 : n[t][1];
        }),
        (Tl.prototype.has = function oY(e) {
          return Vp(this.__data__, e) > -1;
        }),
        (Tl.prototype.set = function aY(e, n) {
          var t = this.__data__,
            i = Vp(t, e);
          return i < 0 ? (++this.size, t.push([e, n])) : (t[i][1] = n), this;
        });
      const zp = Tl,
        m2 =
          "object" == typeof global &&
          global &&
          global.Object === Object &&
          global;
      var yY =
        "object" == typeof self && self && self.Object === Object && self;
      const El = m2 || yY || Function("return this")();
      var bY = El.Symbol,
        _2 = Object.prototype,
        wY = _2.hasOwnProperty,
        CY = _2.toString,
        Ku = bY ? bY.toStringTag : void 0;
      var SY = Object.prototype.toString;
      var y2 = bY ? bY.toStringTag : void 0;
      const jp = function OY(e) {
          return null == e
            ? void 0 === e
              ? "[object Undefined]"
              : "[object Null]"
            : y2 && y2 in Object(e)
            ? (function xY(e) {
                var n = wY.call(e, Ku),
                  t = e[Ku];
                try {
                  e[Ku] = void 0;
                  var i = !0;
                } catch {}
                var r = CY.call(e);
                return i && (n ? (e[Ku] = t) : delete e[Ku]), r;
              })(e)
            : (function kY(e) {
                return SY.call(e);
              })(e);
        },
        ta = function AY(e) {
          var n = typeof e;
          return null != e && ("object" == n || "function" == n);
        },
        Fb = function LY(e) {
          if (!ta(e)) return !1;
          var n = jp(e);
          return (
            "[object Function]" == n ||
            "[object GeneratorFunction]" == n ||
            "[object AsyncFunction]" == n ||
            "[object Proxy]" == n
          );
        };
      var e,
        BY = El["__core-js_shared__"],
        v2 = (e = /[^.]+$/.exec((BY && BY.keys && BY.keys.IE_PROTO) || ""))
          ? "Symbol(src)_1." + e
          : "";
      var jY = Function.prototype.toString;
      var qY = /^\[object .+?Constructor\]$/,
        QY = RegExp(
          "^" +
            Function.prototype.toString
              .call(Object.prototype.hasOwnProperty)
              .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
              .replace(
                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                "$1.*?"
              ) +
            "$"
        );
      const JY = function XY(e) {
          return (
            !(
              !ta(e) ||
              (function VY(e) {
                return !!v2 && v2 in e;
              })(e)
            ) &&
            (Fb(e) ? QY : qY).test(
              (function UY(e) {
                if (null != e) {
                  try {
                    return jY.call(e);
                  } catch {}
                  try {
                    return e + "";
                  } catch {}
                }
                return "";
              })(e)
            )
          );
        },
        Nb = function nK(e, n) {
          var t = (function eK(e, n) {
            return e?.[n];
          })(e, n);
          return JY(t) ? t : void 0;
        },
        b2 = Nb(El, "Map"),
        Zu = Nb(Object, "create");
      var dK = Object.prototype.hasOwnProperty;
      var gK = Object.prototype.hasOwnProperty;
      function Il(e) {
        var n = -1,
          t = null == e ? 0 : e.length;
        for (this.clear(); ++n < t; ) {
          var i = e[n];
          this.set(i[0], i[1]);
        }
      }
      (Il.prototype.clear = function oK() {
        (this.__data__ = Zu ? Zu(null) : {}), (this.size = 0);
      }),
        (Il.prototype.delete = function aK(e) {
          var n = this.has(e) && delete this.__data__[e];
          return (this.size -= n ? 1 : 0), n;
        }),
        (Il.prototype.get = function hK(e) {
          var n = this.__data__;
          if (Zu) {
            var t = n[e];
            return "__lodash_hash_undefined__" === t ? void 0 : t;
          }
          return dK.call(n, e) ? n[e] : void 0;
        }),
        (Il.prototype.has = function mK(e) {
          var n = this.__data__;
          return Zu ? void 0 !== n[e] : gK.call(n, e);
        }),
        (Il.prototype.set = function vK(e, n) {
          var t = this.__data__;
          return (
            (this.size += this.has(e) ? 0 : 1),
            (t[e] = Zu && void 0 === n ? "__lodash_hash_undefined__" : n),
            this
          );
        });
      const w2 = Il,
        Up = function DK(e, n) {
          var t = e.__data__;
          return (function xK(e) {
            var n = typeof e;
            return "string" == n ||
              "number" == n ||
              "symbol" == n ||
              "boolean" == n
              ? "__proto__" !== e
              : null === e;
          })(n)
            ? t["string" == typeof n ? "string" : "hash"]
            : t.map;
        };
      function Ol(e) {
        var n = -1,
          t = null == e ? 0 : e.length;
        for (this.clear(); ++n < t; ) {
          var i = e[n];
          this.set(i[0], i[1]);
        }
      }
      (Ol.prototype.clear = function wK() {
        (this.size = 0),
          (this.__data__ = {
            hash: new w2(),
            map: new (b2 || zp)(),
            string: new w2(),
          });
      }),
        (Ol.prototype.delete = function SK(e) {
          var n = Up(this, e).delete(e);
          return (this.size -= n ? 1 : 0), n;
        }),
        (Ol.prototype.get = function TK(e) {
          return Up(this, e).get(e);
        }),
        (Ol.prototype.has = function IK(e) {
          return Up(this, e).has(e);
        }),
        (Ol.prototype.set = function AK(e, n) {
          var t = Up(this, e),
            i = t.size;
          return t.set(e, n), (this.size += t.size == i ? 0 : 1), this;
        });
      const FK = Ol;
      function Al(e) {
        var n = (this.__data__ = new zp(e));
        this.size = n.size;
      }
      (Al.prototype.clear = function cY() {
        (this.__data__ = new zp()), (this.size = 0);
      }),
        (Al.prototype.delete = function dY(e) {
          var n = this.__data__,
            t = n.delete(e);
          return (this.size = n.size), t;
        }),
        (Al.prototype.get = function fY(e) {
          return this.__data__.get(e);
        }),
        (Al.prototype.has = function gY(e) {
          return this.__data__.has(e);
        }),
        (Al.prototype.set = function NK(e, n) {
          var t = this.__data__;
          if (t instanceof zp) {
            var i = t.__data__;
            if (!b2 || i.length < 199)
              return i.push([e, n]), (this.size = ++t.size), this;
            t = this.__data__ = new FK(i);
          }
          return t.set(e, n), (this.size = t.size), this;
        });
      const BK = Al;
      var VK = (function () {
        try {
          var e = Nb(Object, "defineProperty");
          return e({}, "", {}), e;
        } catch {}
      })();
      const Wp = VK,
        Lb = function zK(e, n, t) {
          "__proto__" == n && Wp
            ? Wp(e, n, {
                configurable: !0,
                enumerable: !0,
                value: t,
                writable: !0,
              })
            : (e[n] = t);
        },
        Bb = function HK(e, n, t) {
          ((void 0 !== t && !Bp(e[n], t)) || (void 0 === t && !(n in e))) &&
            Lb(e, n, t);
        };
      var UK = (function jK(e) {
        return function (n, t, i) {
          for (var r = -1, o = Object(n), s = i(n), a = s.length; a--; ) {
            var l = s[e ? a : ++r];
            if (!1 === t(o[l], l, o)) break;
          }
          return n;
        };
      })();
      const WK = UK;
      var C2 =
          "object" == typeof exports && exports && !exports.nodeType && exports,
        x2 =
          C2 &&
          "object" == typeof module &&
          module &&
          !module.nodeType &&
          module,
        M2 = x2 && x2.exports === C2 ? El.Buffer : void 0,
        D2 = M2 ? M2.allocUnsafe : void 0;
      const S2 = El.Uint8Array,
        XK = function QK(e, n) {
          var t = n
            ? (function KK(e) {
                var n = new e.constructor(e.byteLength);
                return new S2(n).set(new S2(e)), n;
              })(e.buffer)
            : e.buffer;
          return new e.constructor(t, e.byteOffset, e.length);
        };
      var k2 = Object.create,
        tZ = (function () {
          function e() {}
          return function (n) {
            if (!ta(n)) return {};
            if (k2) return k2(n);
            e.prototype = n;
            var t = new e();
            return (e.prototype = void 0), t;
          };
        })();
      const nZ = tZ;
      var rZ = (function iZ(e, n) {
        return function (t) {
          return e(n(t));
        };
      })(Object.getPrototypeOf, Object);
      const T2 = rZ;
      var oZ = Object.prototype;
      const E2 = function sZ(e) {
          var n = e && e.constructor;
          return e === (("function" == typeof n && n.prototype) || oZ);
        },
        Qu = function cZ(e) {
          return null != e && "object" == typeof e;
        },
        I2 = function dZ(e) {
          return Qu(e) && "[object Arguments]" == jp(e);
        };
      var O2 = Object.prototype,
        hZ = O2.hasOwnProperty,
        fZ = O2.propertyIsEnumerable,
        pZ = I2(
          (function () {
            return arguments;
          })()
        )
          ? I2
          : function (e) {
              return Qu(e) && hZ.call(e, "callee") && !fZ.call(e, "callee");
            };
      const Vb = pZ,
        zb = Array.isArray,
        A2 = function _Z(e) {
          return (
            "number" == typeof e &&
            e > -1 &&
            e % 1 == 0 &&
            e <= 9007199254740991
          );
        },
        Hb = function yZ(e) {
          return null != e && A2(e.length) && !Fb(e);
        };
      var P2 =
          "object" == typeof exports && exports && !exports.nodeType && exports,
        F2 =
          P2 &&
          "object" == typeof module &&
          module &&
          !module.nodeType &&
          module,
        R2 = F2 && F2.exports === P2 ? El.Buffer : void 0;
      const N2 =
        (R2 ? R2.isBuffer : void 0) ||
        function wZ() {
          return !1;
        };
      var L2 = Function.prototype.toString,
        EZ = Object.prototype.hasOwnProperty,
        IZ = L2.call(Object);
      var Nt = {};
      (Nt["[object Float32Array]"] =
        Nt["[object Float64Array]"] =
        Nt["[object Int8Array]"] =
        Nt["[object Int16Array]"] =
        Nt["[object Int32Array]"] =
        Nt["[object Uint8Array]"] =
        Nt["[object Uint8ClampedArray]"] =
        Nt["[object Uint16Array]"] =
        Nt["[object Uint32Array]"] =
          !0),
        (Nt["[object Arguments]"] =
          Nt["[object Array]"] =
          Nt["[object ArrayBuffer]"] =
          Nt["[object Boolean]"] =
          Nt["[object DataView]"] =
          Nt["[object Date]"] =
          Nt["[object Error]"] =
          Nt["[object Function]"] =
          Nt["[object Map]"] =
          Nt["[object Number]"] =
          Nt["[object Object]"] =
          Nt["[object RegExp]"] =
          Nt["[object Set]"] =
          Nt["[object String]"] =
          Nt["[object WeakMap]"] =
            !1);
      var B2 =
          "object" == typeof exports && exports && !exports.nodeType && exports,
        Xu =
          B2 &&
          "object" == typeof module &&
          module &&
          !module.nodeType &&
          module,
        jb = Xu && Xu.exports === B2 && m2.process,
        lQ = (function () {
          try {
            return (
              (Xu && Xu.require && Xu.require("util").types) ||
              (jb && jb.binding && jb.binding("util"))
            );
          } catch {}
        })(),
        z2 = lQ && lQ.isTypedArray;
      const H2 = z2
          ? (function oQ(e) {
              return function (n) {
                return e(n);
              };
            })(z2)
          : function iQ(e) {
              return Qu(e) && A2(e.length) && !!Nt[jp(e)];
            },
        Ub = function uQ(e, n) {
          if (
            ("constructor" !== n || "function" != typeof e[n]) &&
            "__proto__" != n
          )
            return e[n];
        };
      var hQ = Object.prototype.hasOwnProperty;
      const pQ = function fQ(e, n, t) {
        var i = e[n];
        (!hQ.call(e, n) || !Bp(i, t) || (void 0 === t && !(n in e))) &&
          Lb(e, n, t);
      };
      var bQ = /^(?:0|[1-9]\d*)$/;
      const j2 = function wQ(e, n) {
        var t = typeof e;
        return (
          !!(n = n ?? 9007199254740991) &&
          ("number" == t || ("symbol" != t && bQ.test(e))) &&
          e > -1 &&
          e % 1 == 0 &&
          e < n
        );
      };
      var xQ = Object.prototype.hasOwnProperty;
      const DQ = function MQ(e, n) {
        var t = zb(e),
          i = !t && Vb(e),
          r = !t && !i && N2(e),
          o = !t && !i && !r && H2(e),
          s = t || i || r || o,
          a = s
            ? (function _Q(e, n) {
                for (var t = -1, i = Array(e); ++t < e; ) i[t] = n(t);
                return i;
              })(e.length, String)
            : [],
          l = a.length;
        for (var c in e)
          (n || xQ.call(e, c)) &&
            (!s ||
              !(
                "length" == c ||
                (r && ("offset" == c || "parent" == c)) ||
                (o &&
                  ("buffer" == c || "byteLength" == c || "byteOffset" == c)) ||
                j2(c, l)
              )) &&
            a.push(c);
        return a;
      };
      var EQ = Object.prototype.hasOwnProperty;
      const OQ = function IQ(e) {
          if (!ta(e))
            return (function SQ(e) {
              var n = [];
              if (null != e) for (var t in Object(e)) n.push(t);
              return n;
            })(e);
          var n = E2(e),
            t = [];
          for (var i in e)
            ("constructor" == i && (n || !EQ.call(e, i))) || t.push(i);
          return t;
        },
        U2 = function AQ(e) {
          return Hb(e) ? DQ(e, !0) : OQ(e);
        },
        FQ = function PQ(e) {
          return (function gQ(e, n, t, i) {
            var r = !t;
            t || (t = {});
            for (var o = -1, s = n.length; ++o < s; ) {
              var a = n[o],
                l = i ? i(t[a], e[a], a, t, e) : void 0;
              void 0 === l && (l = e[a]), r ? Lb(t, a, l) : pQ(t, a, l);
            }
            return t;
          })(e, U2(e));
        },
        NQ = function RQ(e, n, t, i, r, o, s) {
          var a = Ub(e, t),
            l = Ub(n, t),
            c = s.get(l);
          if (c) Bb(e, t, c);
          else {
            var u = o ? o(a, l, t + "", e, n, s) : void 0,
              f = void 0 === u;
            if (f) {
              var g = zb(l),
                m = !g && N2(l),
                _ = !g && !m && H2(l);
              (u = l),
                g || m || _
                  ? zb(a)
                    ? (u = a)
                    : (function vZ(e) {
                        return Qu(e) && Hb(e);
                      })(a)
                    ? (u = (function JK(e, n) {
                        var t = -1,
                          i = e.length;
                        for (n || (n = Array(i)); ++t < i; ) n[t] = e[t];
                        return n;
                      })(a))
                    : m
                    ? ((f = !1),
                      (u = (function qK(e, n) {
                        if (n) return e.slice();
                        var t = e.length,
                          i = D2 ? D2(t) : new e.constructor(t);
                        return e.copy(i), i;
                      })(l, !0)))
                    : _
                    ? ((f = !1), (u = XK(l, !0)))
                    : (u = [])
                  : (function OZ(e) {
                      if (!Qu(e) || "[object Object]" != jp(e)) return !1;
                      var n = T2(e);
                      if (null === n) return !0;
                      var t = EZ.call(n, "constructor") && n.constructor;
                      return (
                        "function" == typeof t &&
                        t instanceof t &&
                        L2.call(t) == IZ
                      );
                    })(l) || Vb(l)
                  ? ((u = a),
                    Vb(a)
                      ? (u = FQ(a))
                      : (!ta(a) || Fb(a)) &&
                        (u = (function aZ(e) {
                          return "function" != typeof e.constructor || E2(e)
                            ? {}
                            : nZ(T2(e));
                        })(l)))
                  : (f = !1);
            }
            f && (s.set(l, u), r(u, l, i, o, s), s.delete(l)), Bb(e, t, u);
          }
        },
        LQ = function W2(e, n, t, i, r) {
          e !== n &&
            WK(
              n,
              function (o, s) {
                if ((r || (r = new BK()), ta(o))) NQ(e, n, s, t, W2, i, r);
                else {
                  var a = i ? i(Ub(e, s), o, s + "", e, n, r) : void 0;
                  void 0 === a && (a = o), Bb(e, s, a);
                }
              },
              U2
            );
        },
        $2 = function BQ(e) {
          return e;
        };
      var q2 = Math.max;
      const WQ = function UQ(e) {
        return function () {
          return e;
        };
      };
      var $Q = Wp
          ? function (e, n) {
              return Wp(e, "toString", {
                configurable: !0,
                enumerable: !1,
                value: WQ(n),
                writable: !0,
              });
            }
          : $2,
        KQ = Date.now,
        QQ = (function ZQ(e) {
          var n = 0,
            t = 0;
          return function () {
            var i = KQ(),
              r = 16 - (i - t);
            if (((t = i), r > 0)) {
              if (++n >= 800) return arguments[0];
            } else n = 0;
            return e.apply(void 0, arguments);
          };
        })($Q);
      const XQ = QQ,
        eX = function JQ(e, n) {
          return XQ(
            (function HQ(e, n, t) {
              return (
                (n = q2(void 0 === n ? e.length - 1 : n, 0)),
                function () {
                  for (
                    var i = arguments,
                      r = -1,
                      o = q2(i.length - n, 0),
                      s = Array(o);
                    ++r < o;

                  )
                    s[r] = i[n + r];
                  r = -1;
                  for (var a = Array(n + 1); ++r < n; ) a[r] = i[r];
                  return (
                    (a[n] = t(s)),
                    (function VQ(e, n, t) {
                      switch (t.length) {
                        case 0:
                          return e.call(n);
                        case 1:
                          return e.call(n, t[0]);
                        case 2:
                          return e.call(n, t[0], t[1]);
                        case 3:
                          return e.call(n, t[0], t[1], t[2]);
                      }
                      return e.apply(n, t);
                    })(e, this, a)
                  );
                }
              );
            })(e, n, $2),
            e + ""
          );
        };
      var rX = (function iX(e) {
        return eX(function (n, t) {
          var i = -1,
            r = t.length,
            o = r > 1 ? t[r - 1] : void 0,
            s = r > 2 ? t[2] : void 0;
          for (
            o = e.length > 3 && "function" == typeof o ? (r--, o) : void 0,
              s &&
                (function tX(e, n, t) {
                  if (!ta(t)) return !1;
                  var i = typeof n;
                  return (
                    !!("number" == i
                      ? Hb(t) && j2(n, t.length)
                      : "string" == i && (n in t)) && Bp(t[n], e)
                  );
                })(t[0], t[1], s) &&
                ((o = r < 3 ? void 0 : o), (r = 1)),
              n = Object(n);
            ++i < r;

          ) {
            var a = t[i];
            a && e(n, a, i, o);
          }
          return n;
        });
      })(function (e, n, t) {
        LQ(e, n, t);
      });
      const G2 = rX;
      let oX = (() => {
          class e {
            constructor() {
              this.colorschemesOptions = new Tn(void 0);
            }
            setColorschemesOptions(t) {
              (this.pColorschemesOptions = t), this.colorschemesOptions.next(t);
            }
            getColorschemesOptions() {
              return this.pColorschemesOptions;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        Y2 = (() => {
          class e {
            constructor(t, i, r) {
              (this.zone = i),
                (this.themeService = r),
                (this.type = "bar"),
                (this.plugins = []),
                (this.chartClick = new le()),
                (this.chartHover = new le()),
                (this.subs = []),
                (this.themeOverrides = {}),
                (this.ctx = t.nativeElement.getContext("2d")),
                this.subs.push(
                  this.themeService.colorschemesOptions
                    .pipe(uc())
                    .subscribe((o) => this.themeChanged(o))
                );
            }
            ngOnChanges(t) {
              const i = ["type"],
                r = Object.getOwnPropertyNames(t);
              if (
                r.some((o) => i.includes(o)) ||
                r.every((o) => t[o].isFirstChange())
              )
                this.render();
              else {
                const o = this.getChartConfiguration();
                this.chart &&
                  (Object.assign(this.chart.config.data, o.data),
                  this.chart.config.plugins &&
                    Object.assign(this.chart.config.plugins, o.plugins),
                  this.chart.config.options &&
                    Object.assign(this.chart.config.options, o.options)),
                  this.update();
              }
            }
            ngOnDestroy() {
              this.chart && (this.chart.destroy(), (this.chart = void 0)),
                this.subs.forEach((t) => t.unsubscribe());
            }
            render() {
              return (
                this.chart && this.chart.destroy(),
                this.zone.runOutsideAngular(
                  () =>
                    (this.chart = new qu(
                      this.ctx,
                      this.getChartConfiguration()
                    ))
                )
              );
            }
            update(t) {
              this.chart &&
                this.zone.runOutsideAngular(() => this.chart?.update(t));
            }
            hideDataset(t, i) {
              this.chart &&
                ((this.chart.getDatasetMeta(t).hidden = i), this.update());
            }
            isDatasetHidden(t) {
              return this.chart?.getDatasetMeta(t)?.hidden;
            }
            toBase64Image() {
              return this.chart?.toBase64Image();
            }
            themeChanged(t) {
              (this.themeOverrides = t),
                this.chart &&
                  (this.chart.config.options &&
                    Object.assign(
                      this.chart.config.options,
                      this.getChartOptions()
                    ),
                  this.update());
            }
            getChartOptions() {
              return G2(
                {
                  onHover: (t, i) => {
                    (!this.chartHover.observed &&
                      !this.chartHover.observers?.length) ||
                      this.zone.run(() =>
                        this.chartHover.emit({ event: t, active: i })
                      );
                  },
                  onClick: (t, i) => {
                    (!this.chartClick.observed &&
                      !this.chartClick.observers?.length) ||
                      this.zone.run(() =>
                        this.chartClick.emit({ event: t, active: i })
                      );
                  },
                },
                this.themeOverrides,
                this.options,
                { plugins: { legend: { display: this.legend } } }
              );
            }
            getChartConfiguration() {
              return {
                type: this.type,
                data: this.getChartData(),
                options: this.getChartOptions(),
                plugins: this.plugins,
              };
            }
            getChartData() {
              return this.data
                ? this.data
                : { labels: this.labels || [], datasets: this.datasets || [] };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(pn), M(ht), M(oX));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["canvas", "baseChart", ""]],
              inputs: {
                type: "type",
                legend: "legend",
                data: "data",
                options: "options",
                plugins: "plugins",
                labels: "labels",
                datasets: "datasets",
              },
              outputs: { chartClick: "chartClick", chartHover: "chartHover" },
              exportAs: ["base-chart"],
              features: [si],
            }));
          }
          return e;
        })();
      const sX = [
          [255, 99, 132],
          [54, 162, 235],
          [255, 206, 86],
          [231, 233, 237],
          [75, 192, 192],
          [151, 187, 205],
          [220, 220, 220],
          [247, 70, 74],
          [70, 191, 189],
          [253, 180, 92],
          [148, 159, 177],
          [77, 83, 96],
        ],
        aX = {
          plugins: { colors: { enabled: !1 } },
          datasets: {
            line: {
              backgroundColor: (e) => ss(as(e.datasetIndex), 0.4),
              borderColor: (e) => ss(as(e.datasetIndex), 1),
              pointBackgroundColor: (e) => ss(as(e.datasetIndex), 1),
              pointBorderColor: "#fff",
            },
            bar: {
              backgroundColor: (e) => ss(as(e.datasetIndex), 0.6),
              borderColor: (e) => ss(as(e.datasetIndex), 1),
            },
            get radar() {
              return this.line;
            },
            doughnut: {
              backgroundColor: (e) => ss(as(e.dataIndex), 0.6),
              borderColor: "#fff",
            },
            get pie() {
              return this.doughnut;
            },
            polarArea: {
              backgroundColor: (e) => ss(as(e.dataIndex), 0.6),
              borderColor: (e) => ss(as(e.dataIndex), 1),
            },
            get bubble() {
              return this.doughnut;
            },
            get scatter() {
              return this.doughnut;
            },
            get area() {
              return this.polarArea;
            },
          },
        };
      function ss(e, n) {
        return "rgba(" + e.concat(n).join(",") + ")";
      }
      function Wb(e, n) {
        return Math.floor(Math.random() * (n - e + 1)) + e;
      }
      function as(e = 0) {
        return (
          sX[e] ||
          (function lX() {
            return [Wb(0, 255), Wb(0, 255), Wb(0, 255)];
          })()
        );
      }
      let K2 = (() => {
        class e {
          constructor() {
            this.generateColors = !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      qu.register(...YG);
      let cX = (() => {
        class e {
          constructor(t) {
            t?.plugins && qu.register(...t.plugins);
            const i = G2(t?.generateColors ? aX : {}, t?.defaults || {});
            $e.set(i);
          }
          static forRoot(t) {
            return { ngModule: e, providers: [{ provide: K2, useValue: t }] };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(K2, 8));
          });
          static #t = (this.ɵmod = Vt({ type: e }));
          static #n = (this.ɵinj = Rt({}));
        }
        return e;
      })();
      function Ju(...e) {
        const n = cc(e),
          t = Dw(e),
          { args: i, keys: r } = dT(e);
        if (0 === i.length) return dn([], n);
        const o = new wt(
          (function dX(e, n, t = pi) {
            return (i) => {
              Z2(
                n,
                () => {
                  const { length: r } = e,
                    o = new Array(r);
                  let s = r,
                    a = r;
                  for (let l = 0; l < r; l++)
                    Z2(
                      n,
                      () => {
                        const c = dn(e[l], n);
                        let u = !1;
                        c.subscribe(
                          Tt(
                            i,
                            (f) => {
                              (o[l] = f),
                                u || ((u = !0), a--),
                                a || i.next(t(o.slice()));
                            },
                            () => {
                              --s || i.complete();
                            }
                          )
                        );
                      },
                      i
                    );
                },
                i
              );
            };
          })(i, n, r ? (s) => fT(r, s) : pi)
        );
        return t ? o.pipe(hT(t)) : o;
      }
      function Z2(e, n, t) {
        e ? Xr(t, e, n) : n();
      }
      const ed = ii(
        (e) =>
          function () {
            e(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      function $b(...e) {
        return (function hX() {
          return ya(1);
        })()(dn(e, cc(e)));
      }
      function Q2(e) {
        return new wt((n) => {
          mi(e()).subscribe(n);
        });
      }
      function td(e, n) {
        const t = qe(e) ? e : () => e,
          i = (r) => r.error(t());
        return new wt(n ? (r) => n.schedule(i, 0, r) : i);
      }
      function qb() {
        return kt((e, n) => {
          let t = null;
          e._refCount++;
          const i = Tt(n, void 0, void 0, void 0, () => {
            if (!e || e._refCount <= 0 || 0 < --e._refCount)
              return void (t = null);
            const r = e._connection,
              o = t;
            (t = null),
              r && (!o || r === o) && r.unsubscribe(),
              n.unsubscribe();
          });
          e.subscribe(i), i.closed || (t = e.connect());
        });
      }
      class X2 extends wt {
        constructor(n, t) {
          super(),
            (this.source = n),
            (this.subjectFactory = t),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            rc(n) && (this.lift = n.lift);
        }
        _subscribe(n) {
          return this.getSubject().subscribe(n);
        }
        getSubject() {
          const n = this._subject;
          return (
            (!n || n.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: n } = this;
          (this._subject = this._connection = null), n?.unsubscribe();
        }
        connect() {
          let n = this._connection;
          if (!n) {
            n = this._connection = new qt();
            const t = this.getSubject();
            n.add(
              this.source.subscribe(
                Tt(
                  t,
                  void 0,
                  () => {
                    this._teardown(), t.complete();
                  },
                  (i) => {
                    this._teardown(), t.error(i);
                  },
                  () => this._teardown()
                )
              )
            ),
              n.closed && ((this._connection = null), (n = qt.EMPTY));
          }
          return n;
        }
        refCount() {
          return qb()(this);
        }
      }
      function ls(e) {
        return e <= 0
          ? () => vr
          : kt((n, t) => {
              let i = 0;
              n.subscribe(
                Tt(t, (r) => {
                  ++i <= e && (t.next(r), e <= i && t.complete());
                })
              );
            });
      }
      function zr(e, n) {
        return kt((t, i) => {
          let r = 0;
          t.subscribe(Tt(i, (o) => e.call(n, o, r++) && i.next(o)));
        });
      }
      function $p(e) {
        return kt((n, t) => {
          let i = !1;
          n.subscribe(
            Tt(
              t,
              (r) => {
                (i = !0), t.next(r);
              },
              () => {
                i || t.next(e), t.complete();
              }
            )
          );
        });
      }
      function J2(e = pX) {
        return kt((n, t) => {
          let i = !1;
          n.subscribe(
            Tt(
              t,
              (r) => {
                (i = !0), t.next(r);
              },
              () => (i ? t.complete() : t.error(e()))
            )
          );
        });
      }
      function pX() {
        return new ed();
      }
      function na(e, n) {
        const t = arguments.length >= 2;
        return (i) =>
          i.pipe(
            e ? zr((r, o) => e(r, o, i)) : pi,
            ls(1),
            t ? $p(n) : J2(() => new ed())
          );
      }
      function Pl(e, n) {
        return qe(n) ? kn(e, n, 1) : kn(e, 1);
      }
      function Fn(e, n, t) {
        const i = qe(e) || n || t ? { next: e, error: n, complete: t } : e;
        return i
          ? kt((r, o) => {
              var s;
              null === (s = i.subscribe) || void 0 === s || s.call(i);
              let a = !0;
              r.subscribe(
                Tt(
                  o,
                  (l) => {
                    var c;
                    null === (c = i.next) || void 0 === c || c.call(i, l),
                      o.next(l);
                  },
                  () => {
                    var l;
                    (a = !1),
                      null === (l = i.complete) || void 0 === l || l.call(i),
                      o.complete();
                  },
                  (l) => {
                    var c;
                    (a = !1),
                      null === (c = i.error) || void 0 === c || c.call(i, l),
                      o.error(l);
                  },
                  () => {
                    var l, c;
                    a &&
                      (null === (l = i.unsubscribe) ||
                        void 0 === l ||
                        l.call(i)),
                      null === (c = i.finalize) || void 0 === c || c.call(i);
                  }
                )
              );
            })
          : pi;
      }
      function ia(e) {
        return kt((n, t) => {
          let o,
            i = null,
            r = !1;
          (i = n.subscribe(
            Tt(t, void 0, void 0, (s) => {
              (o = mi(e(s, ia(e)(n)))),
                i ? (i.unsubscribe(), (i = null), o.subscribe(t)) : (r = !0);
            })
          )),
            r && (i.unsubscribe(), (i = null), o.subscribe(t));
        });
      }
      function Gb(e) {
        return e <= 0
          ? () => vr
          : kt((n, t) => {
              let i = [];
              n.subscribe(
                Tt(
                  t,
                  (r) => {
                    i.push(r), e < i.length && i.shift();
                  },
                  () => {
                    for (const r of i) t.next(r);
                    t.complete();
                  },
                  void 0,
                  () => {
                    i = null;
                  }
                )
              );
            });
      }
      function nd(e) {
        return kt((n, t) => {
          try {
            n.subscribe(t);
          } finally {
            t.add(e);
          }
        });
      }
      const Oe = "primary",
        id = Symbol("RouteTitle");
      class bX {
        constructor(n) {
          this.params = n || {};
        }
        has(n) {
          return Object.prototype.hasOwnProperty.call(this.params, n);
        }
        get(n) {
          if (this.has(n)) {
            const t = this.params[n];
            return Array.isArray(t) ? t[0] : t;
          }
          return null;
        }
        getAll(n) {
          if (this.has(n)) {
            const t = this.params[n];
            return Array.isArray(t) ? t : [t];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function Fl(e) {
        return new bX(e);
      }
      function wX(e, n, t) {
        const i = t.path.split("/");
        if (
          i.length > e.length ||
          ("full" === t.pathMatch && (n.hasChildren() || i.length < e.length))
        )
          return null;
        const r = {};
        for (let o = 0; o < i.length; o++) {
          const s = i[o],
            a = e[o];
          if (s.startsWith(":")) r[s.substring(1)] = a;
          else if (s !== a.path) return null;
        }
        return { consumed: e.slice(0, i.length), posParams: r };
      }
      function Hr(e, n) {
        const t = e ? Object.keys(e) : void 0,
          i = n ? Object.keys(n) : void 0;
        if (!t || !i || t.length != i.length) return !1;
        let r;
        for (let o = 0; o < t.length; o++)
          if (((r = t[o]), !eA(e[r], n[r]))) return !1;
        return !0;
      }
      function eA(e, n) {
        if (Array.isArray(e) && Array.isArray(n)) {
          if (e.length !== n.length) return !1;
          const t = [...e].sort(),
            i = [...n].sort();
          return t.every((r, o) => i[o] === r);
        }
        return e === n;
      }
      function tA(e) {
        return e.length > 0 ? e[e.length - 1] : null;
      }
      function cs(e) {
        return (function uX(e) {
          return !!e && (e instanceof wt || (qe(e.lift) && qe(e.subscribe)));
        })(e)
          ? e
          : Qc(e)
          ? dn(Promise.resolve(e))
          : me(e);
      }
      const xX = {
          exact: function rA(e, n, t) {
            if (
              !ra(e.segments, n.segments) ||
              !qp(e.segments, n.segments, t) ||
              e.numberOfChildren !== n.numberOfChildren
            )
              return !1;
            for (const i in n.children)
              if (!e.children[i] || !rA(e.children[i], n.children[i], t))
                return !1;
            return !0;
          },
          subset: oA,
        },
        nA = {
          exact: function MX(e, n) {
            return Hr(e, n);
          },
          subset: function DX(e, n) {
            return (
              Object.keys(n).length <= Object.keys(e).length &&
              Object.keys(n).every((t) => eA(e[t], n[t]))
            );
          },
          ignored: () => !0,
        };
      function iA(e, n, t) {
        return (
          xX[t.paths](e.root, n.root, t.matrixParams) &&
          nA[t.queryParams](e.queryParams, n.queryParams) &&
          !("exact" === t.fragment && e.fragment !== n.fragment)
        );
      }
      function oA(e, n, t) {
        return sA(e, n, n.segments, t);
      }
      function sA(e, n, t, i) {
        if (e.segments.length > t.length) {
          const r = e.segments.slice(0, t.length);
          return !(!ra(r, t) || n.hasChildren() || !qp(r, t, i));
        }
        if (e.segments.length === t.length) {
          if (!ra(e.segments, t) || !qp(e.segments, t, i)) return !1;
          for (const r in n.children)
            if (!e.children[r] || !oA(e.children[r], n.children[r], i))
              return !1;
          return !0;
        }
        {
          const r = t.slice(0, e.segments.length),
            o = t.slice(e.segments.length);
          return (
            !!(ra(e.segments, r) && qp(e.segments, r, i) && e.children[Oe]) &&
            sA(e.children[Oe], n, o, i)
          );
        }
      }
      function qp(e, n, t) {
        return n.every((i, r) => nA[t](e[r].parameters, i.parameters));
      }
      class Rl {
        constructor(n = new gt([], {}), t = {}, i = null) {
          (this.root = n), (this.queryParams = t), (this.fragment = i);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Fl(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return TX.serialize(this);
        }
      }
      class gt {
        constructor(n, t) {
          (this.segments = n),
            (this.children = t),
            (this.parent = null),
            Object.values(t).forEach((i) => (i.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Gp(this);
        }
      }
      class rd {
        constructor(n, t) {
          (this.path = n), (this.parameters = t);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = Fl(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return cA(this);
        }
      }
      function ra(e, n) {
        return e.length === n.length && e.every((t, i) => t.path === n[i].path);
      }
      let od = (() => {
        class e {
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: function () {
              return new Yb();
            },
            providedIn: "root",
          }));
        }
        return e;
      })();
      class Yb {
        parse(n) {
          const t = new VX(n);
          return new Rl(
            t.parseRootSegment(),
            t.parseQueryParams(),
            t.parseFragment()
          );
        }
        serialize(n) {
          const t = `/${sd(n.root, !0)}`,
            i = (function OX(e) {
              const n = Object.keys(e)
                .map((t) => {
                  const i = e[t];
                  return Array.isArray(i)
                    ? i.map((r) => `${Yp(t)}=${Yp(r)}`).join("&")
                    : `${Yp(t)}=${Yp(i)}`;
                })
                .filter((t) => !!t);
              return n.length ? `?${n.join("&")}` : "";
            })(n.queryParams),
            r =
              "string" == typeof n.fragment
                ? `#${(function EX(e) {
                    return encodeURI(e);
                  })(n.fragment)}`
                : "";
          return `${t}${i}${r}`;
        }
      }
      const TX = new Yb();
      function Gp(e) {
        return e.segments.map((n) => cA(n)).join("/");
      }
      function sd(e, n) {
        if (!e.hasChildren()) return Gp(e);
        if (n) {
          const t = e.children[Oe] ? sd(e.children[Oe], !1) : "",
            i = [];
          return (
            Object.entries(e.children).forEach(([r, o]) => {
              r !== Oe && i.push(`${r}:${sd(o, !1)}`);
            }),
            i.length > 0 ? `${t}(${i.join("//")})` : t
          );
        }
        {
          const t = (function kX(e, n) {
            let t = [];
            return (
              Object.entries(e.children).forEach(([i, r]) => {
                i === Oe && (t = t.concat(n(r, i)));
              }),
              Object.entries(e.children).forEach(([i, r]) => {
                i !== Oe && (t = t.concat(n(r, i)));
              }),
              t
            );
          })(e, (i, r) =>
            r === Oe ? [sd(e.children[Oe], !1)] : [`${r}:${sd(i, !1)}`]
          );
          return 1 === Object.keys(e.children).length && null != e.children[Oe]
            ? `${Gp(e)}/${t[0]}`
            : `${Gp(e)}/(${t.join("//")})`;
        }
      }
      function aA(e) {
        return encodeURIComponent(e)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Yp(e) {
        return aA(e).replace(/%3B/gi, ";");
      }
      function Kb(e) {
        return aA(e)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Kp(e) {
        return decodeURIComponent(e);
      }
      function lA(e) {
        return Kp(e.replace(/\+/g, "%20"));
      }
      function cA(e) {
        return `${Kb(e.path)}${(function IX(e) {
          return Object.keys(e)
            .map((n) => `;${Kb(n)}=${Kb(e[n])}`)
            .join("");
        })(e.parameters)}`;
      }
      const AX = /^[^\/()?;#]+/;
      function Zb(e) {
        const n = e.match(AX);
        return n ? n[0] : "";
      }
      const PX = /^[^\/()?;=#]+/,
        RX = /^[^=?&#]+/,
        LX = /^[^&#]+/;
      class VX {
        constructor(n) {
          (this.url = n), (this.remaining = n);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new gt([], {})
              : new gt([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const n = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(n);
            } while (this.consumeOptional("&"));
          return n;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const n = [];
          for (
            this.peekStartsWith("(") || n.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), n.push(this.parseSegment());
          let t = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (t = this.parseParens(!0)));
          let i = {};
          return (
            this.peekStartsWith("(") && (i = this.parseParens(!1)),
            (n.length > 0 || Object.keys(t).length > 0) &&
              (i[Oe] = new gt(n, t)),
            i
          );
        }
        parseSegment() {
          const n = Zb(this.remaining);
          if ("" === n && this.peekStartsWith(";")) throw new P(4009, !1);
          return this.capture(n), new rd(Kp(n), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const n = {};
          for (; this.consumeOptional(";"); ) this.parseParam(n);
          return n;
        }
        parseParam(n) {
          const t = (function FX(e) {
            const n = e.match(PX);
            return n ? n[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let i = "";
          if (this.consumeOptional("=")) {
            const r = Zb(this.remaining);
            r && ((i = r), this.capture(i));
          }
          n[Kp(t)] = Kp(i);
        }
        parseQueryParam(n) {
          const t = (function NX(e) {
            const n = e.match(RX);
            return n ? n[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let i = "";
          if (this.consumeOptional("=")) {
            const s = (function BX(e) {
              const n = e.match(LX);
              return n ? n[0] : "";
            })(this.remaining);
            s && ((i = s), this.capture(i));
          }
          const r = lA(t),
            o = lA(i);
          if (n.hasOwnProperty(r)) {
            let s = n[r];
            Array.isArray(s) || ((s = [s]), (n[r] = s)), s.push(o);
          } else n[r] = o;
        }
        parseParens(n) {
          const t = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const i = Zb(this.remaining),
              r = this.remaining[i.length];
            if ("/" !== r && ")" !== r && ";" !== r) throw new P(4010, !1);
            let o;
            i.indexOf(":") > -1
              ? ((o = i.slice(0, i.indexOf(":"))),
                this.capture(o),
                this.capture(":"))
              : n && (o = Oe);
            const s = this.parseChildren();
            (t[o] = 1 === Object.keys(s).length ? s[Oe] : new gt([], s)),
              this.consumeOptional("//");
          }
          return t;
        }
        peekStartsWith(n) {
          return this.remaining.startsWith(n);
        }
        consumeOptional(n) {
          return (
            !!this.peekStartsWith(n) &&
            ((this.remaining = this.remaining.substring(n.length)), !0)
          );
        }
        capture(n) {
          if (!this.consumeOptional(n)) throw new P(4011, !1);
        }
      }
      function uA(e) {
        return e.segments.length > 0 ? new gt([], { [Oe]: e }) : e;
      }
      function dA(e) {
        const n = {};
        for (const i of Object.keys(e.children)) {
          const o = dA(e.children[i]);
          if (i === Oe && 0 === o.segments.length && o.hasChildren())
            for (const [s, a] of Object.entries(o.children)) n[s] = a;
          else (o.segments.length > 0 || o.hasChildren()) && (n[i] = o);
        }
        return (function zX(e) {
          if (1 === e.numberOfChildren && e.children[Oe]) {
            const n = e.children[Oe];
            return new gt(e.segments.concat(n.segments), n.children);
          }
          return e;
        })(new gt(e.segments, n));
      }
      function oa(e) {
        return e instanceof Rl;
      }
      function hA(e) {
        let n;
        const r = uA(
          (function t(o) {
            const s = {};
            for (const l of o.children) {
              const c = t(l);
              s[l.outlet] = c;
            }
            const a = new gt(o.url, s);
            return o === e && (n = a), a;
          })(e.root)
        );
        return n ?? r;
      }
      function fA(e, n, t, i) {
        let r = e;
        for (; r.parent; ) r = r.parent;
        if (0 === n.length) return Qb(r, r, r, t, i);
        const o = (function jX(e) {
          if ("string" == typeof e[0] && 1 === e.length && "/" === e[0])
            return new gA(!0, 0, e);
          let n = 0,
            t = !1;
          const i = e.reduce((r, o, s) => {
            if ("object" == typeof o && null != o) {
              if (o.outlets) {
                const a = {};
                return (
                  Object.entries(o.outlets).forEach(([l, c]) => {
                    a[l] = "string" == typeof c ? c.split("/") : c;
                  }),
                  [...r, { outlets: a }]
                );
              }
              if (o.segmentPath) return [...r, o.segmentPath];
            }
            return "string" != typeof o
              ? [...r, o]
              : 0 === s
              ? (o.split("/").forEach((a, l) => {
                  (0 == l && "." === a) ||
                    (0 == l && "" === a
                      ? (t = !0)
                      : ".." === a
                      ? n++
                      : "" != a && r.push(a));
                }),
                r)
              : [...r, o];
          }, []);
          return new gA(t, n, i);
        })(n);
        if (o.toRoot()) return Qb(r, r, new gt([], {}), t, i);
        const s = (function UX(e, n, t) {
            if (e.isAbsolute) return new Qp(n, !0, 0);
            if (!t) return new Qp(n, !1, NaN);
            if (null === t.parent) return new Qp(t, !0, 0);
            const i = Zp(e.commands[0]) ? 0 : 1;
            return (function WX(e, n, t) {
              let i = e,
                r = n,
                o = t;
              for (; o > r; ) {
                if (((o -= r), (i = i.parent), !i)) throw new P(4005, !1);
                r = i.segments.length;
              }
              return new Qp(i, !1, r - o);
            })(t, t.segments.length - 1 + i, e.numberOfDoubleDots);
          })(o, r, e),
          a = s.processChildren
            ? ld(s.segmentGroup, s.index, o.commands)
            : mA(s.segmentGroup, s.index, o.commands);
        return Qb(r, s.segmentGroup, a, t, i);
      }
      function Zp(e) {
        return (
          "object" == typeof e && null != e && !e.outlets && !e.segmentPath
        );
      }
      function ad(e) {
        return "object" == typeof e && null != e && e.outlets;
      }
      function Qb(e, n, t, i, r) {
        let s,
          o = {};
        i &&
          Object.entries(i).forEach(([l, c]) => {
            o[l] = Array.isArray(c) ? c.map((u) => `${u}`) : `${c}`;
          }),
          (s = e === n ? t : pA(e, n, t));
        const a = uA(dA(s));
        return new Rl(a, o, r);
      }
      function pA(e, n, t) {
        const i = {};
        return (
          Object.entries(e.children).forEach(([r, o]) => {
            i[r] = o === n ? t : pA(o, n, t);
          }),
          new gt(e.segments, i)
        );
      }
      class gA {
        constructor(n, t, i) {
          if (
            ((this.isAbsolute = n),
            (this.numberOfDoubleDots = t),
            (this.commands = i),
            n && i.length > 0 && Zp(i[0]))
          )
            throw new P(4003, !1);
          const r = i.find(ad);
          if (r && r !== tA(i)) throw new P(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class Qp {
        constructor(n, t, i) {
          (this.segmentGroup = n), (this.processChildren = t), (this.index = i);
        }
      }
      function mA(e, n, t) {
        if (
          (e || (e = new gt([], {})),
          0 === e.segments.length && e.hasChildren())
        )
          return ld(e, n, t);
        const i = (function qX(e, n, t) {
            let i = 0,
              r = n;
            const o = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; r < e.segments.length; ) {
              if (i >= t.length) return o;
              const s = e.segments[r],
                a = t[i];
              if (ad(a)) break;
              const l = `${a}`,
                c = i < t.length - 1 ? t[i + 1] : null;
              if (r > 0 && void 0 === l) break;
              if (l && c && "object" == typeof c && void 0 === c.outlets) {
                if (!yA(l, c, s)) return o;
                i += 2;
              } else {
                if (!yA(l, {}, s)) return o;
                i++;
              }
              r++;
            }
            return { match: !0, pathIndex: r, commandIndex: i };
          })(e, n, t),
          r = t.slice(i.commandIndex);
        if (i.match && i.pathIndex < e.segments.length) {
          const o = new gt(e.segments.slice(0, i.pathIndex), {});
          return (
            (o.children[Oe] = new gt(
              e.segments.slice(i.pathIndex),
              e.children
            )),
            ld(o, 0, r)
          );
        }
        return i.match && 0 === r.length
          ? new gt(e.segments, {})
          : i.match && !e.hasChildren()
          ? Xb(e, n, t)
          : i.match
          ? ld(e, 0, r)
          : Xb(e, n, t);
      }
      function ld(e, n, t) {
        if (0 === t.length) return new gt(e.segments, {});
        {
          const i = (function $X(e) {
              return ad(e[0]) ? e[0].outlets : { [Oe]: e };
            })(t),
            r = {};
          if (
            Object.keys(i).some((o) => o !== Oe) &&
            e.children[Oe] &&
            1 === e.numberOfChildren &&
            0 === e.children[Oe].segments.length
          ) {
            const o = ld(e.children[Oe], n, t);
            return new gt(e.segments, o.children);
          }
          return (
            Object.entries(i).forEach(([o, s]) => {
              "string" == typeof s && (s = [s]),
                null !== s && (r[o] = mA(e.children[o], n, s));
            }),
            Object.entries(e.children).forEach(([o, s]) => {
              void 0 === i[o] && (r[o] = s);
            }),
            new gt(e.segments, r)
          );
        }
      }
      function Xb(e, n, t) {
        const i = e.segments.slice(0, n);
        let r = 0;
        for (; r < t.length; ) {
          const o = t[r];
          if (ad(o)) {
            const l = GX(o.outlets);
            return new gt(i, l);
          }
          if (0 === r && Zp(t[0])) {
            i.push(new rd(e.segments[n].path, _A(t[0]))), r++;
            continue;
          }
          const s = ad(o) ? o.outlets[Oe] : `${o}`,
            a = r < t.length - 1 ? t[r + 1] : null;
          s && a && Zp(a)
            ? (i.push(new rd(s, _A(a))), (r += 2))
            : (i.push(new rd(s, {})), r++);
        }
        return new gt(i, {});
      }
      function GX(e) {
        const n = {};
        return (
          Object.entries(e).forEach(([t, i]) => {
            "string" == typeof i && (i = [i]),
              null !== i && (n[t] = Xb(new gt([], {}), 0, i));
          }),
          n
        );
      }
      function _A(e) {
        const n = {};
        return Object.entries(e).forEach(([t, i]) => (n[t] = `${i}`)), n;
      }
      function yA(e, n, t) {
        return e == t.path && Hr(n, t.parameters);
      }
      const cd = "imperative";
      class jr {
        constructor(n, t) {
          (this.id = n), (this.url = t);
        }
      }
      class Xp extends jr {
        constructor(n, t, i = "imperative", r = null) {
          super(n, t),
            (this.type = 0),
            (this.navigationTrigger = i),
            (this.restoredState = r);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class us extends jr {
        constructor(n, t, i) {
          super(n, t), (this.urlAfterRedirects = i), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class ud extends jr {
        constructor(n, t, i, r) {
          super(n, t), (this.reason = i), (this.code = r), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Nl extends jr {
        constructor(n, t, i, r) {
          super(n, t), (this.reason = i), (this.code = r), (this.type = 16);
        }
      }
      class Jp extends jr {
        constructor(n, t, i, r) {
          super(n, t), (this.error = i), (this.target = r), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class vA extends jr {
        constructor(n, t, i, r) {
          super(n, t),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class YX extends jr {
        constructor(n, t, i, r) {
          super(n, t),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class KX extends jr {
        constructor(n, t, i, r, o) {
          super(n, t),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.shouldActivate = o),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class ZX extends jr {
        constructor(n, t, i, r) {
          super(n, t),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class QX extends jr {
        constructor(n, t, i, r) {
          super(n, t),
            (this.urlAfterRedirects = i),
            (this.state = r),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class XX {
        constructor(n) {
          (this.route = n), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class JX {
        constructor(n) {
          (this.route = n), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class eJ {
        constructor(n) {
          (this.snapshot = n), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class tJ {
        constructor(n) {
          (this.snapshot = n), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class nJ {
        constructor(n) {
          (this.snapshot = n), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class iJ {
        constructor(n) {
          (this.snapshot = n), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class bA {
        constructor(n, t, i) {
          (this.routerEvent = n),
            (this.position = t),
            (this.anchor = i),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class Jb {}
      class e0 {
        constructor(n) {
          this.url = n;
        }
      }
      class rJ {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.injector = null),
            (this.children = new dd()),
            (this.attachRef = null);
        }
      }
      let dd = (() => {
        class e {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(t, i) {
            const r = this.getOrCreateContext(t);
            (r.outlet = i), this.contexts.set(t, r);
          }
          onChildOutletDestroyed(t) {
            const i = this.getContext(t);
            i && ((i.outlet = null), (i.attachRef = null));
          }
          onOutletDeactivated() {
            const t = this.contexts;
            return (this.contexts = new Map()), t;
          }
          onOutletReAttached(t) {
            this.contexts = t;
          }
          getOrCreateContext(t) {
            let i = this.getContext(t);
            return i || ((i = new rJ()), this.contexts.set(t, i)), i;
          }
          getContext(t) {
            return this.contexts.get(t) || null;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      class wA {
        constructor(n) {
          this._root = n;
        }
        get root() {
          return this._root.value;
        }
        parent(n) {
          const t = this.pathFromRoot(n);
          return t.length > 1 ? t[t.length - 2] : null;
        }
        children(n) {
          const t = t0(n, this._root);
          return t ? t.children.map((i) => i.value) : [];
        }
        firstChild(n) {
          const t = t0(n, this._root);
          return t && t.children.length > 0 ? t.children[0].value : null;
        }
        siblings(n) {
          const t = n0(n, this._root);
          return t.length < 2
            ? []
            : t[t.length - 2].children
                .map((r) => r.value)
                .filter((r) => r !== n);
        }
        pathFromRoot(n) {
          return n0(n, this._root).map((t) => t.value);
        }
      }
      function t0(e, n) {
        if (e === n.value) return n;
        for (const t of n.children) {
          const i = t0(e, t);
          if (i) return i;
        }
        return null;
      }
      function n0(e, n) {
        if (e === n.value) return [n];
        for (const t of n.children) {
          const i = n0(e, t);
          if (i.length) return i.unshift(n), i;
        }
        return [];
      }
      class Mo {
        constructor(n, t) {
          (this.value = n), (this.children = t);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Ll(e) {
        const n = {};
        return e && e.children.forEach((t) => (n[t.value.outlet] = t)), n;
      }
      class CA extends wA {
        constructor(n, t) {
          super(n), (this.snapshot = t), r0(this, n);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function xA(e, n) {
        const t = (function oJ(e, n) {
            const s = new eg([], {}, {}, "", {}, Oe, n, null, {});
            return new DA("", new Mo(s, []));
          })(0, n),
          i = new Tn([new rd("", {})]),
          r = new Tn({}),
          o = new Tn({}),
          s = new Tn({}),
          a = new Tn(""),
          l = new Bl(i, r, s, a, o, Oe, n, t.root);
        return (l.snapshot = t.root), new CA(new Mo(l, []), t);
      }
      class Bl {
        constructor(n, t, i, r, o, s, a, l) {
          (this.urlSubject = n),
            (this.paramsSubject = t),
            (this.queryParamsSubject = i),
            (this.fragmentSubject = r),
            (this.dataSubject = o),
            (this.outlet = s),
            (this.component = a),
            (this._futureSnapshot = l),
            (this.title =
              this.dataSubject?.pipe(Ae((c) => c[id])) ?? me(void 0)),
            (this.url = n),
            (this.params = t),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = o);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Ae((n) => Fl(n)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(Ae((n) => Fl(n)))),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function MA(e, n = "emptyOnly") {
        const t = e.pathFromRoot;
        let i = 0;
        if ("always" !== n)
          for (i = t.length - 1; i >= 1; ) {
            const r = t[i],
              o = t[i - 1];
            if (r.routeConfig && "" === r.routeConfig.path) i--;
            else {
              if (o.component) break;
              i--;
            }
          }
        return (function sJ(e) {
          return e.reduce(
            (n, t) => ({
              params: { ...n.params, ...t.params },
              data: { ...n.data, ...t.data },
              resolve: {
                ...t.data,
                ...n.resolve,
                ...t.routeConfig?.data,
                ...t._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(t.slice(i));
      }
      class eg {
        get title() {
          return this.data?.[id];
        }
        constructor(n, t, i, r, o, s, a, l, c) {
          (this.url = n),
            (this.params = t),
            (this.queryParams = i),
            (this.fragment = r),
            (this.data = o),
            (this.outlet = s),
            (this.component = a),
            (this.routeConfig = l),
            (this._resolve = c);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = Fl(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = Fl(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((i) => i.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class DA extends wA {
        constructor(n, t) {
          super(t), (this.url = n), r0(this, t);
        }
        toString() {
          return SA(this._root);
        }
      }
      function r0(e, n) {
        (n.value._routerState = e), n.children.forEach((t) => r0(e, t));
      }
      function SA(e) {
        const n =
          e.children.length > 0 ? ` { ${e.children.map(SA).join(", ")} } ` : "";
        return `${e.value}${n}`;
      }
      function o0(e) {
        if (e.snapshot) {
          const n = e.snapshot,
            t = e._futureSnapshot;
          (e.snapshot = t),
            Hr(n.queryParams, t.queryParams) ||
              e.queryParamsSubject.next(t.queryParams),
            n.fragment !== t.fragment && e.fragmentSubject.next(t.fragment),
            Hr(n.params, t.params) || e.paramsSubject.next(t.params),
            (function CX(e, n) {
              if (e.length !== n.length) return !1;
              for (let t = 0; t < e.length; ++t) if (!Hr(e[t], n[t])) return !1;
              return !0;
            })(n.url, t.url) || e.urlSubject.next(t.url),
            Hr(n.data, t.data) || e.dataSubject.next(t.data);
        } else
          (e.snapshot = e._futureSnapshot),
            e.dataSubject.next(e._futureSnapshot.data);
      }
      function s0(e, n) {
        const t =
          Hr(e.params, n.params) &&
          (function SX(e, n) {
            return (
              ra(e, n) && e.every((t, i) => Hr(t.parameters, n[i].parameters))
            );
          })(e.url, n.url);
        return (
          t &&
          !(!e.parent != !n.parent) &&
          (!e.parent || s0(e.parent, n.parent))
        );
      }
      let a0 = (() => {
        class e {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = Oe),
              (this.activateEvents = new le()),
              (this.deactivateEvents = new le()),
              (this.attachEvents = new le()),
              (this.detachEvents = new le()),
              (this.parentContexts = K(dd)),
              (this.location = K(Vn)),
              (this.changeDetector = K(Wo)),
              (this.environmentInjector = K(Ci)),
              (this.inputBinder = K(tg, { optional: !0 })),
              (this.supportsBindingToComponentInputs = !0);
          }
          get activatedComponentRef() {
            return this.activated;
          }
          ngOnChanges(t) {
            if (t.name) {
              const { firstChange: i, previousValue: r } = t.name;
              if (i) return;
              this.isTrackedInParentContexts(r) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(r)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name),
              this.inputBinder?.unsubscribeFromRouteData(this);
          }
          isTrackedInParentContexts(t) {
            return this.parentContexts.getContext(t)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const t = this.parentContexts.getContext(this.name);
            t?.route &&
              (t.attachRef
                ? this.attach(t.attachRef, t.route)
                : this.activateWith(t.route, t.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new P(4012, !1);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new P(4012, !1);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new P(4012, !1);
            this.location.detach();
            const t = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(t.instance),
              t
            );
          }
          attach(t, i) {
            (this.activated = t),
              (this._activatedRoute = i),
              this.location.insert(t.hostView),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.attachEvents.emit(t.instance);
          }
          deactivate() {
            if (this.activated) {
              const t = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(t);
            }
          }
          activateWith(t, i) {
            if (this.isActivated) throw new P(4013, !1);
            this._activatedRoute = t;
            const r = this.location,
              s = t.snapshot.component,
              a = this.parentContexts.getOrCreateContext(this.name).children,
              l = new aJ(t, a, r.injector);
            (this.activated = r.createComponent(s, {
              index: r.length,
              injector: l,
              environmentInjector: i ?? this.environmentInjector,
            })),
              this.changeDetector.markForCheck(),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.activateEvents.emit(this.activated.instance);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["router-outlet"]],
            inputs: { name: "name" },
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
            standalone: !0,
            features: [si],
          }));
        }
        return e;
      })();
      class aJ {
        constructor(n, t, i) {
          (this.route = n), (this.childContexts = t), (this.parent = i);
        }
        get(n, t) {
          return n === Bl
            ? this.route
            : n === dd
            ? this.childContexts
            : this.parent.get(n, t);
        }
      }
      const tg = new Q("");
      let kA = (() => {
        class e {
          constructor() {
            this.outletDataSubscriptions = new Map();
          }
          bindActivatedRouteToOutletComponent(t) {
            this.unsubscribeFromRouteData(t), this.subscribeToRouteData(t);
          }
          unsubscribeFromRouteData(t) {
            this.outletDataSubscriptions.get(t)?.unsubscribe(),
              this.outletDataSubscriptions.delete(t);
          }
          subscribeToRouteData(t) {
            const { activatedRoute: i } = t,
              r = Ju([i.queryParams, i.params, i.data])
                .pipe(
                  Oi(
                    ([o, s, a], l) => (
                      (a = { ...o, ...s, ...a }),
                      0 === l ? me(a) : Promise.resolve(a)
                    )
                  )
                )
                .subscribe((o) => {
                  if (
                    !t.isActivated ||
                    !t.activatedComponentRef ||
                    t.activatedRoute !== i ||
                    null === i.component
                  )
                    return void this.unsubscribeFromRouteData(t);
                  const s = (function z6(e) {
                    const n = Ge(e);
                    if (!n) return null;
                    const t = new $c(n);
                    return {
                      get selector() {
                        return t.selector;
                      },
                      get type() {
                        return t.componentType;
                      },
                      get inputs() {
                        return t.inputs;
                      },
                      get outputs() {
                        return t.outputs;
                      },
                      get ngContentSelectors() {
                        return t.ngContentSelectors;
                      },
                      get isStandalone() {
                        return n.standalone;
                      },
                      get isSignal() {
                        return n.signals;
                      },
                    };
                  })(i.component);
                  if (s)
                    for (const { templateName: a } of s.inputs)
                      t.activatedComponentRef.setInput(a, o[a]);
                  else this.unsubscribeFromRouteData(t);
                });
            this.outletDataSubscriptions.set(t, r);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      function hd(e, n, t) {
        if (t && e.shouldReuseRoute(n.value, t.value.snapshot)) {
          const i = t.value;
          i._futureSnapshot = n.value;
          const r = (function cJ(e, n, t) {
            return n.children.map((i) => {
              for (const r of t.children)
                if (e.shouldReuseRoute(i.value, r.value.snapshot))
                  return hd(e, i, r);
              return hd(e, i);
            });
          })(e, n, t);
          return new Mo(i, r);
        }
        {
          if (e.shouldAttach(n.value)) {
            const o = e.retrieve(n.value);
            if (null !== o) {
              const s = o.route;
              return (
                (s.value._futureSnapshot = n.value),
                (s.children = n.children.map((a) => hd(e, a))),
                s
              );
            }
          }
          const i = (function uJ(e) {
              return new Bl(
                new Tn(e.url),
                new Tn(e.params),
                new Tn(e.queryParams),
                new Tn(e.fragment),
                new Tn(e.data),
                e.outlet,
                e.component,
                e
              );
            })(n.value),
            r = n.children.map((o) => hd(e, o));
          return new Mo(i, r);
        }
      }
      const l0 = "ngNavigationCancelingError";
      function TA(e, n) {
        const { redirectTo: t, navigationBehaviorOptions: i } = oa(n)
            ? { redirectTo: n, navigationBehaviorOptions: void 0 }
            : n,
          r = EA(!1, 0, n);
        return (r.url = t), (r.navigationBehaviorOptions = i), r;
      }
      function EA(e, n, t) {
        const i = new Error("NavigationCancelingError: " + (e || ""));
        return (i[l0] = !0), (i.cancellationCode = n), t && (i.url = t), i;
      }
      function IA(e) {
        return e && e[l0];
      }
      let OA = (() => {
        class e {
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["ng-component"]],
            standalone: !0,
            features: [GD],
            decls: 1,
            vars: 0,
            template: function (i, r) {
              1 & i && k(0, "router-outlet");
            },
            dependencies: [a0],
            encapsulation: 2,
          }));
        }
        return e;
      })();
      function c0(e) {
        const n = e.children && e.children.map(c0),
          t = n ? { ...e, children: n } : { ...e };
        return (
          !t.component &&
            !t.loadComponent &&
            (n || t.loadChildren) &&
            t.outlet &&
            t.outlet !== Oe &&
            (t.component = OA),
          t
        );
      }
      function hr(e) {
        return e.outlet || Oe;
      }
      function fd(e) {
        if (!e) return null;
        if (e.routeConfig?._injector) return e.routeConfig._injector;
        for (let n = e.parent; n; n = n.parent) {
          const t = n.routeConfig;
          if (t?._loadedInjector) return t._loadedInjector;
          if (t?._injector) return t._injector;
        }
        return null;
      }
      class yJ {
        constructor(n, t, i, r, o) {
          (this.routeReuseStrategy = n),
            (this.futureState = t),
            (this.currState = i),
            (this.forwardEvent = r),
            (this.inputBindingEnabled = o);
        }
        activate(n) {
          const t = this.futureState._root,
            i = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(t, i, n),
            o0(this.futureState.root),
            this.activateChildRoutes(t, i, n);
        }
        deactivateChildRoutes(n, t, i) {
          const r = Ll(t);
          n.children.forEach((o) => {
            const s = o.value.outlet;
            this.deactivateRoutes(o, r[s], i), delete r[s];
          }),
            Object.values(r).forEach((o) => {
              this.deactivateRouteAndItsChildren(o, i);
            });
        }
        deactivateRoutes(n, t, i) {
          const r = n.value,
            o = t ? t.value : null;
          if (r === o)
            if (r.component) {
              const s = i.getContext(r.outlet);
              s && this.deactivateChildRoutes(n, t, s.children);
            } else this.deactivateChildRoutes(n, t, i);
          else o && this.deactivateRouteAndItsChildren(t, i);
        }
        deactivateRouteAndItsChildren(n, t) {
          n.value.component &&
          this.routeReuseStrategy.shouldDetach(n.value.snapshot)
            ? this.detachAndStoreRouteSubtree(n, t)
            : this.deactivateRouteAndOutlet(n, t);
        }
        detachAndStoreRouteSubtree(n, t) {
          const i = t.getContext(n.value.outlet),
            r = i && n.value.component ? i.children : t,
            o = Ll(n);
          for (const s of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[s], r);
          if (i && i.outlet) {
            const s = i.outlet.detach(),
              a = i.children.onOutletDeactivated();
            this.routeReuseStrategy.store(n.value.snapshot, {
              componentRef: s,
              route: n,
              contexts: a,
            });
          }
        }
        deactivateRouteAndOutlet(n, t) {
          const i = t.getContext(n.value.outlet),
            r = i && n.value.component ? i.children : t,
            o = Ll(n);
          for (const s of Object.keys(o))
            this.deactivateRouteAndItsChildren(o[s], r);
          i &&
            (i.outlet &&
              (i.outlet.deactivate(), i.children.onOutletDeactivated()),
            (i.attachRef = null),
            (i.route = null));
        }
        activateChildRoutes(n, t, i) {
          const r = Ll(t);
          n.children.forEach((o) => {
            this.activateRoutes(o, r[o.value.outlet], i),
              this.forwardEvent(new iJ(o.value.snapshot));
          }),
            n.children.length && this.forwardEvent(new tJ(n.value.snapshot));
        }
        activateRoutes(n, t, i) {
          const r = n.value,
            o = t ? t.value : null;
          if ((o0(r), r === o))
            if (r.component) {
              const s = i.getOrCreateContext(r.outlet);
              this.activateChildRoutes(n, t, s.children);
            } else this.activateChildRoutes(n, t, i);
          else if (r.component) {
            const s = i.getOrCreateContext(r.outlet);
            if (this.routeReuseStrategy.shouldAttach(r.snapshot)) {
              const a = this.routeReuseStrategy.retrieve(r.snapshot);
              this.routeReuseStrategy.store(r.snapshot, null),
                s.children.onOutletReAttached(a.contexts),
                (s.attachRef = a.componentRef),
                (s.route = a.route.value),
                s.outlet && s.outlet.attach(a.componentRef, a.route.value),
                o0(a.route.value),
                this.activateChildRoutes(n, null, s.children);
            } else {
              const a = fd(r.snapshot);
              (s.attachRef = null),
                (s.route = r),
                (s.injector = a),
                s.outlet && s.outlet.activateWith(r, s.injector),
                this.activateChildRoutes(n, null, s.children);
            }
          } else this.activateChildRoutes(n, null, i);
        }
      }
      class AA {
        constructor(n) {
          (this.path = n), (this.route = this.path[this.path.length - 1]);
        }
      }
      class ng {
        constructor(n, t) {
          (this.component = n), (this.route = t);
        }
      }
      function vJ(e, n, t) {
        const i = e._root;
        return pd(i, n ? n._root : null, t, [i.value]);
      }
      function Vl(e, n) {
        const t = Symbol(),
          i = n.get(e, t);
        return i === t
          ? "function" != typeof e ||
            (function tR(e) {
              return null !== $d(e);
            })(e)
            ? n.get(e)
            : e
          : i;
      }
      function pd(
        e,
        n,
        t,
        i,
        r = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const o = Ll(n);
        return (
          e.children.forEach((s) => {
            (function wJ(
              e,
              n,
              t,
              i,
              r = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const o = e.value,
                s = n ? n.value : null,
                a = t ? t.getContext(e.value.outlet) : null;
              if (s && o.routeConfig === s.routeConfig) {
                const l = (function CJ(e, n, t) {
                  if ("function" == typeof t) return t(e, n);
                  switch (t) {
                    case "pathParamsChange":
                      return !ra(e.url, n.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !ra(e.url, n.url) || !Hr(e.queryParams, n.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !s0(e, n) || !Hr(e.queryParams, n.queryParams);
                    default:
                      return !s0(e, n);
                  }
                })(s, o, o.routeConfig.runGuardsAndResolvers);
                l
                  ? r.canActivateChecks.push(new AA(i))
                  : ((o.data = s.data), (o._resolvedData = s._resolvedData)),
                  pd(e, n, o.component ? (a ? a.children : null) : t, i, r),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    r.canDeactivateChecks.push(new ng(a.outlet.component, s));
              } else
                s && gd(n, a, r),
                  r.canActivateChecks.push(new AA(i)),
                  pd(e, null, o.component ? (a ? a.children : null) : t, i, r);
            })(s, o[s.value.outlet], t, i.concat([s.value]), r),
              delete o[s.value.outlet];
          }),
          Object.entries(o).forEach(([s, a]) => gd(a, t.getContext(s), r)),
          r
        );
      }
      function gd(e, n, t) {
        const i = Ll(e),
          r = e.value;
        Object.entries(i).forEach(([o, s]) => {
          gd(s, r.component ? (n ? n.children.getContext(o) : null) : n, t);
        }),
          t.canDeactivateChecks.push(
            new ng(
              r.component && n && n.outlet && n.outlet.isActivated
                ? n.outlet.component
                : null,
              r
            )
          );
      }
      function md(e) {
        return "function" == typeof e;
      }
      function PA(e) {
        return e instanceof ed || "EmptyError" === e?.name;
      }
      const ig = Symbol("INITIAL_VALUE");
      function zl() {
        return Oi((e) =>
          Ju(
            e.map((n) =>
              n.pipe(
                ls(1),
                (function fX(...e) {
                  const n = cc(e);
                  return kt((t, i) => {
                    (n ? $b(e, t, n) : $b(e, t)).subscribe(i);
                  });
                })(ig)
              )
            )
          ).pipe(
            Ae((n) => {
              for (const t of n)
                if (!0 !== t) {
                  if (t === ig) return ig;
                  if (!1 === t || t instanceof Rl) return t;
                }
              return !0;
            }),
            zr((n) => n !== ig),
            ls(1)
          )
        );
      }
      function FA(e) {
        return (function Eg(...e) {
          return ws(e);
        })(
          Fn((n) => {
            if (oa(n)) throw TA(0, n);
          }),
          Ae((n) => !0 === n)
        );
      }
      class rg {
        constructor(n) {
          this.segmentGroup = n || null;
        }
      }
      class RA {
        constructor(n) {
          this.urlTree = n;
        }
      }
      function Hl(e) {
        return td(new rg(e));
      }
      function NA(e) {
        return td(new RA(e));
      }
      class jJ {
        constructor(n, t) {
          (this.urlSerializer = n), (this.urlTree = t);
        }
        noMatchError(n) {
          return new P(4002, !1);
        }
        lineralizeSegments(n, t) {
          let i = [],
            r = t.root;
          for (;;) {
            if (((i = i.concat(r.segments)), 0 === r.numberOfChildren))
              return me(i);
            if (r.numberOfChildren > 1 || !r.children[Oe])
              return td(new P(4e3, !1));
            r = r.children[Oe];
          }
        }
        applyRedirectCommands(n, t, i) {
          return this.applyRedirectCreateUrlTree(
            t,
            this.urlSerializer.parse(t),
            n,
            i
          );
        }
        applyRedirectCreateUrlTree(n, t, i, r) {
          const o = this.createSegmentGroup(n, t.root, i, r);
          return new Rl(
            o,
            this.createQueryParams(t.queryParams, this.urlTree.queryParams),
            t.fragment
          );
        }
        createQueryParams(n, t) {
          const i = {};
          return (
            Object.entries(n).forEach(([r, o]) => {
              if ("string" == typeof o && o.startsWith(":")) {
                const a = o.substring(1);
                i[r] = t[a];
              } else i[r] = o;
            }),
            i
          );
        }
        createSegmentGroup(n, t, i, r) {
          const o = this.createSegments(n, t.segments, i, r);
          let s = {};
          return (
            Object.entries(t.children).forEach(([a, l]) => {
              s[a] = this.createSegmentGroup(n, l, i, r);
            }),
            new gt(o, s)
          );
        }
        createSegments(n, t, i, r) {
          return t.map((o) =>
            o.path.startsWith(":")
              ? this.findPosParam(n, o, r)
              : this.findOrReturn(o, i)
          );
        }
        findPosParam(n, t, i) {
          const r = i[t.path.substring(1)];
          if (!r) throw new P(4001, !1);
          return r;
        }
        findOrReturn(n, t) {
          let i = 0;
          for (const r of t) {
            if (r.path === n.path) return t.splice(i), r;
            i++;
          }
          return n;
        }
      }
      const u0 = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function UJ(e, n, t, i, r) {
        const o = d0(e, n, t);
        return o.matched
          ? ((i = (function hJ(e, n) {
              return (
                e.providers &&
                  !e._injector &&
                  (e._injector = Y_(e.providers, n, `Route: ${e.path}`)),
                e._injector ?? n
              );
            })(n, i)),
            (function VJ(e, n, t, i) {
              const r = n.canMatch;
              return r && 0 !== r.length
                ? me(
                    r.map((s) => {
                      const a = Vl(s, e);
                      return cs(
                        (function TJ(e) {
                          return e && md(e.canMatch);
                        })(a)
                          ? a.canMatch(n, t)
                          : e.runInContext(() => a(n, t))
                      );
                    })
                  ).pipe(zl(), FA())
                : me(!0);
            })(i, n, t).pipe(Ae((s) => (!0 === s ? o : { ...u0 }))))
          : me(o);
      }
      function d0(e, n, t) {
        if ("" === n.path)
          return "full" === n.pathMatch && (e.hasChildren() || t.length > 0)
            ? { ...u0 }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: t,
                parameters: {},
                positionalParamSegments: {},
              };
        const r = (n.matcher || wX)(t, e, n);
        if (!r) return { ...u0 };
        const o = {};
        Object.entries(r.posParams ?? {}).forEach(([a, l]) => {
          o[a] = l.path;
        });
        const s =
          r.consumed.length > 0
            ? { ...o, ...r.consumed[r.consumed.length - 1].parameters }
            : o;
        return {
          matched: !0,
          consumedSegments: r.consumed,
          remainingSegments: t.slice(r.consumed.length),
          parameters: s,
          positionalParamSegments: r.posParams ?? {},
        };
      }
      function LA(e, n, t, i) {
        return t.length > 0 &&
          (function qJ(e, n, t) {
            return t.some((i) => og(e, n, i) && hr(i) !== Oe);
          })(e, t, i)
          ? {
              segmentGroup: new gt(n, $J(i, new gt(t, e.children))),
              slicedSegments: [],
            }
          : 0 === t.length &&
            (function GJ(e, n, t) {
              return t.some((i) => og(e, n, i));
            })(e, t, i)
          ? {
              segmentGroup: new gt(e.segments, WJ(e, 0, t, i, e.children)),
              slicedSegments: t,
            }
          : { segmentGroup: new gt(e.segments, e.children), slicedSegments: t };
      }
      function WJ(e, n, t, i, r) {
        const o = {};
        for (const s of i)
          if (og(e, t, s) && !r[hr(s)]) {
            const a = new gt([], {});
            o[hr(s)] = a;
          }
        return { ...r, ...o };
      }
      function $J(e, n) {
        const t = {};
        t[Oe] = n;
        for (const i of e)
          if ("" === i.path && hr(i) !== Oe) {
            const r = new gt([], {});
            t[hr(i)] = r;
          }
        return t;
      }
      function og(e, n, t) {
        return (
          (!(e.hasChildren() || n.length > 0) || "full" !== t.pathMatch) &&
          "" === t.path
        );
      }
      class QJ {
        constructor(n, t, i, r, o, s, a) {
          (this.injector = n),
            (this.configLoader = t),
            (this.rootComponentType = i),
            (this.config = r),
            (this.urlTree = o),
            (this.paramsInheritanceStrategy = s),
            (this.urlSerializer = a),
            (this.allowRedirects = !0),
            (this.applyRedirects = new jJ(this.urlSerializer, this.urlTree));
        }
        noMatchError(n) {
          return new P(4002, !1);
        }
        recognize() {
          const n = LA(this.urlTree.root, [], [], this.config).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n,
            Oe
          ).pipe(
            ia((t) => {
              if (t instanceof RA)
                return (
                  (this.allowRedirects = !1),
                  (this.urlTree = t.urlTree),
                  this.match(t.urlTree)
                );
              throw t instanceof rg ? this.noMatchError(t) : t;
            }),
            Ae((t) => {
              const i = new eg(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  Oe,
                  this.rootComponentType,
                  null,
                  {}
                ),
                r = new Mo(i, t),
                o = new DA("", r),
                s = (function HX(e, n, t = null, i = null) {
                  return fA(hA(e), n, t, i);
                })(i, [], this.urlTree.queryParams, this.urlTree.fragment);
              return (
                (s.queryParams = this.urlTree.queryParams),
                (o.url = this.urlSerializer.serialize(s)),
                this.inheritParamsAndData(o._root),
                { state: o, tree: s }
              );
            })
          );
        }
        match(n) {
          return this.processSegmentGroup(
            this.injector,
            this.config,
            n.root,
            Oe
          ).pipe(
            ia((i) => {
              throw i instanceof rg ? this.noMatchError(i) : i;
            })
          );
        }
        inheritParamsAndData(n) {
          const t = n.value,
            i = MA(t, this.paramsInheritanceStrategy);
          (t.params = Object.freeze(i.params)),
            (t.data = Object.freeze(i.data)),
            n.children.forEach((r) => this.inheritParamsAndData(r));
        }
        processSegmentGroup(n, t, i, r) {
          return 0 === i.segments.length && i.hasChildren()
            ? this.processChildren(n, t, i)
            : this.processSegment(n, t, i, i.segments, r, !0);
        }
        processChildren(n, t, i) {
          const r = [];
          for (const o of Object.keys(i.children))
            "primary" === o ? r.unshift(o) : r.push(o);
          return dn(r).pipe(
            Pl((o) => {
              const s = i.children[o],
                a = (function mJ(e, n) {
                  const t = e.filter((i) => hr(i) === n);
                  return t.push(...e.filter((i) => hr(i) !== n)), t;
                })(t, o);
              return this.processSegmentGroup(n, a, s, o);
            }),
            (function mX(e, n) {
              return kt(
                (function gX(e, n, t, i, r) {
                  return (o, s) => {
                    let a = t,
                      l = n,
                      c = 0;
                    o.subscribe(
                      Tt(
                        s,
                        (u) => {
                          const f = c++;
                          (l = a ? e(l, u, f) : ((a = !0), u)), i && s.next(l);
                        },
                        r &&
                          (() => {
                            a && s.next(l), s.complete();
                          })
                      )
                    );
                  };
                })(e, n, arguments.length >= 2, !0)
              );
            })((o, s) => (o.push(...s), o)),
            $p(null),
            (function _X(e, n) {
              const t = arguments.length >= 2;
              return (i) =>
                i.pipe(
                  e ? zr((r, o) => e(r, o, i)) : pi,
                  Gb(1),
                  t ? $p(n) : J2(() => new ed())
                );
            })(),
            kn((o) => {
              if (null === o) return Hl(i);
              const s = BA(o);
              return (
                (function XJ(e) {
                  e.sort((n, t) =>
                    n.value.outlet === Oe
                      ? -1
                      : t.value.outlet === Oe
                      ? 1
                      : n.value.outlet.localeCompare(t.value.outlet)
                  );
                })(s),
                me(s)
              );
            })
          );
        }
        processSegment(n, t, i, r, o, s) {
          return dn(t).pipe(
            Pl((a) =>
              this.processSegmentAgainstRoute(
                a._injector ?? n,
                t,
                a,
                i,
                r,
                o,
                s
              ).pipe(
                ia((l) => {
                  if (l instanceof rg) return me(null);
                  throw l;
                })
              )
            ),
            na((a) => !!a),
            ia((a) => {
              if (PA(a))
                return (function KJ(e, n, t) {
                  return 0 === n.length && !e.children[t];
                })(i, r, o)
                  ? me([])
                  : Hl(i);
              throw a;
            })
          );
        }
        processSegmentAgainstRoute(n, t, i, r, o, s, a) {
          return (function YJ(e, n, t, i) {
            return (
              !!(hr(e) === i || (i !== Oe && og(n, t, e))) &&
              ("**" === e.path || d0(n, e, t).matched)
            );
          })(i, r, o, s)
            ? void 0 === i.redirectTo
              ? this.matchSegmentAgainstRoute(n, r, i, o, s, a)
              : a && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(n, r, t, i, o, s)
              : Hl(r)
            : Hl(r);
        }
        expandSegmentAgainstRouteUsingRedirect(n, t, i, r, o, s) {
          return "**" === r.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(n, i, r, s)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                n,
                t,
                i,
                r,
                o,
                s
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(n, t, i, r) {
          const o = this.applyRedirects.applyRedirectCommands(
            [],
            i.redirectTo,
            {}
          );
          return i.redirectTo.startsWith("/")
            ? NA(o)
            : this.applyRedirects.lineralizeSegments(i, o).pipe(
                kn((s) => {
                  const a = new gt(s, {});
                  return this.processSegment(n, t, a, s, r, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(n, t, i, r, o, s) {
          const {
            matched: a,
            consumedSegments: l,
            remainingSegments: c,
            positionalParamSegments: u,
          } = d0(t, r, o);
          if (!a) return Hl(t);
          const f = this.applyRedirects.applyRedirectCommands(
            l,
            r.redirectTo,
            u
          );
          return r.redirectTo.startsWith("/")
            ? NA(f)
            : this.applyRedirects
                .lineralizeSegments(r, f)
                .pipe(
                  kn((g) => this.processSegment(n, i, t, g.concat(c), s, !1))
                );
        }
        matchSegmentAgainstRoute(n, t, i, r, o, s) {
          let a;
          if ("**" === i.path) {
            const l = r.length > 0 ? tA(r).parameters : {};
            (a = me({
              snapshot: new eg(
                r,
                l,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                VA(i),
                hr(i),
                i.component ?? i._loadedComponent ?? null,
                i,
                zA(i)
              ),
              consumedSegments: [],
              remainingSegments: [],
            })),
              (t.children = {});
          } else
            a = UJ(t, i, r, n).pipe(
              Ae(
                ({
                  matched: l,
                  consumedSegments: c,
                  remainingSegments: u,
                  parameters: f,
                }) =>
                  l
                    ? {
                        snapshot: new eg(
                          c,
                          f,
                          Object.freeze({ ...this.urlTree.queryParams }),
                          this.urlTree.fragment,
                          VA(i),
                          hr(i),
                          i.component ?? i._loadedComponent ?? null,
                          i,
                          zA(i)
                        ),
                        consumedSegments: c,
                        remainingSegments: u,
                      }
                    : null
              )
            );
          return a.pipe(
            Oi((l) =>
              null === l
                ? Hl(t)
                : this.getChildConfig((n = i._injector ?? n), i, r).pipe(
                    Oi(({ routes: c }) => {
                      const u = i._loadedInjector ?? n,
                        {
                          snapshot: f,
                          consumedSegments: g,
                          remainingSegments: m,
                        } = l,
                        { segmentGroup: _, slicedSegments: y } = LA(t, g, m, c);
                      if (0 === y.length && _.hasChildren())
                        return this.processChildren(u, c, _).pipe(
                          Ae((w) => (null === w ? null : [new Mo(f, w)]))
                        );
                      if (0 === c.length && 0 === y.length)
                        return me([new Mo(f, [])]);
                      const v = hr(i) === o;
                      return this.processSegment(
                        u,
                        c,
                        _,
                        y,
                        v ? Oe : o,
                        !0
                      ).pipe(Ae((w) => [new Mo(f, w)]));
                    })
                  )
            )
          );
        }
        getChildConfig(n, t, i) {
          return t.children
            ? me({ routes: t.children, injector: n })
            : t.loadChildren
            ? void 0 !== t._loadedRoutes
              ? me({ routes: t._loadedRoutes, injector: t._loadedInjector })
              : (function BJ(e, n, t, i) {
                  const r = n.canLoad;
                  return void 0 === r || 0 === r.length
                    ? me(!0)
                    : me(
                        r.map((s) => {
                          const a = Vl(s, e);
                          return cs(
                            (function MJ(e) {
                              return e && md(e.canLoad);
                            })(a)
                              ? a.canLoad(n, t)
                              : e.runInContext(() => a(n, t))
                          );
                        })
                      ).pipe(zl(), FA());
                })(n, t, i).pipe(
                  kn((r) =>
                    r
                      ? this.configLoader.loadChildren(n, t).pipe(
                          Fn((o) => {
                            (t._loadedRoutes = o.routes),
                              (t._loadedInjector = o.injector);
                          })
                        )
                      : (function HJ(e) {
                          return td(EA(!1, 3));
                        })()
                  )
                )
            : me({ routes: [], injector: n });
        }
      }
      function JJ(e) {
        const n = e.value.routeConfig;
        return n && "" === n.path;
      }
      function BA(e) {
        const n = [],
          t = new Set();
        for (const i of e) {
          if (!JJ(i)) {
            n.push(i);
            continue;
          }
          const r = n.find((o) => i.value.routeConfig === o.value.routeConfig);
          void 0 !== r ? (r.children.push(...i.children), t.add(r)) : n.push(i);
        }
        for (const i of t) {
          const r = BA(i.children);
          n.push(new Mo(i.value, r));
        }
        return n.filter((i) => !t.has(i));
      }
      function VA(e) {
        return e.data || {};
      }
      function zA(e) {
        return e.resolve || {};
      }
      function HA(e) {
        return "string" == typeof e.title || null === e.title;
      }
      function h0(e) {
        return Oi((n) => {
          const t = e(n);
          return t ? dn(t).pipe(Ae(() => n)) : me(n);
        });
      }
      const jl = new Q("ROUTES");
      let f0 = (() => {
        class e {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = K(LS));
          }
          loadComponent(t) {
            if (this.componentLoaders.get(t))
              return this.componentLoaders.get(t);
            if (t._loadedComponent) return me(t._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(t);
            const i = cs(t.loadComponent()).pipe(
                Ae(jA),
                Fn((o) => {
                  this.onLoadEndListener && this.onLoadEndListener(t),
                    (t._loadedComponent = o);
                }),
                nd(() => {
                  this.componentLoaders.delete(t);
                })
              ),
              r = new X2(i, () => new Ze()).pipe(qb());
            return this.componentLoaders.set(t, r), r;
          }
          loadChildren(t, i) {
            if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
            if (i._loadedRoutes)
              return me({
                routes: i._loadedRoutes,
                injector: i._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(i);
            const o = (function see(e, n, t, i) {
                return cs(e.loadChildren()).pipe(
                  Ae(jA),
                  kn((r) =>
                    r instanceof $D || Array.isArray(r)
                      ? me(r)
                      : dn(n.compileModuleAsync(r))
                  ),
                  Ae((r) => {
                    i && i(e);
                    let o,
                      s,
                      a = !1;
                    return (
                      Array.isArray(r)
                        ? ((s = r), !0)
                        : ((o = r.create(t).injector),
                          (s = o
                            .get(jl, [], { optional: !0, self: !0 })
                            .flat())),
                      { routes: s.map(c0), injector: o }
                    );
                  })
                );
              })(i, this.compiler, t, this.onLoadEndListener).pipe(
                nd(() => {
                  this.childrenLoaders.delete(i);
                })
              ),
              s = new X2(o, () => new Ze()).pipe(qb());
            return this.childrenLoaders.set(i, s), s;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      function jA(e) {
        return (function aee(e) {
          return e && "object" == typeof e && "default" in e;
        })(e)
          ? e.default
          : e;
      }
      let sg = (() => {
        class e {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.currentTransition = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new Ze()),
              (this.transitionAbortSubject = new Ze()),
              (this.configLoader = K(f0)),
              (this.environmentInjector = K(Ci)),
              (this.urlSerializer = K(od)),
              (this.rootContexts = K(dd)),
              (this.inputBindingEnabled = null !== K(tg, { optional: !0 })),
              (this.navigationId = 0),
              (this.afterPreactivation = () => me(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (r) =>
                this.events.next(new JX(r))),
              (this.configLoader.onLoadStartListener = (r) =>
                this.events.next(new XX(r)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(t) {
            const i = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...t, id: i });
          }
          setupNavigations(t, i, r) {
            return (
              (this.transitions = new Tn({
                id: 0,
                currentUrlTree: i,
                currentRawUrl: i,
                currentBrowserUrl: i,
                extractedUrl: t.urlHandlingStrategy.extract(i),
                urlAfterRedirects: t.urlHandlingStrategy.extract(i),
                rawUrl: i,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: cd,
                restoredState: null,
                currentSnapshot: r.snapshot,
                targetSnapshot: null,
                currentRouterState: r,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                zr((o) => 0 !== o.id),
                Ae((o) => ({
                  ...o,
                  extractedUrl: t.urlHandlingStrategy.extract(o.rawUrl),
                })),
                Oi((o) => {
                  this.currentTransition = o;
                  let s = !1,
                    a = !1;
                  return me(o).pipe(
                    Fn((l) => {
                      this.currentNavigation = {
                        id: l.id,
                        initialUrl: l.rawUrl,
                        extractedUrl: l.extractedUrl,
                        trigger: l.source,
                        extras: l.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    Oi((l) => {
                      const c = l.currentBrowserUrl.toString(),
                        u =
                          !t.navigated ||
                          l.extractedUrl.toString() !== c ||
                          c !== l.currentUrlTree.toString();
                      if (
                        !u &&
                        "reload" !==
                          (l.extras.onSameUrlNavigation ??
                            t.onSameUrlNavigation)
                      ) {
                        const g = "";
                        return (
                          this.events.next(
                            new Nl(
                              l.id,
                              this.urlSerializer.serialize(l.rawUrl),
                              g,
                              0
                            )
                          ),
                          l.resolve(null),
                          vr
                        );
                      }
                      if (t.urlHandlingStrategy.shouldProcessUrl(l.rawUrl))
                        return me(l).pipe(
                          Oi((g) => {
                            const m = this.transitions?.getValue();
                            return (
                              this.events.next(
                                new Xp(
                                  g.id,
                                  this.urlSerializer.serialize(g.extractedUrl),
                                  g.source,
                                  g.restoredState
                                )
                              ),
                              m !== this.transitions?.getValue()
                                ? vr
                                : Promise.resolve(g)
                            );
                          }),
                          (function eee(e, n, t, i, r, o) {
                            return kn((s) =>
                              (function ZJ(e, n, t, i, r, o, s = "emptyOnly") {
                                return new QJ(e, n, t, i, r, s, o).recognize();
                              })(e, n, t, i, s.extractedUrl, r, o).pipe(
                                Ae(({ state: a, tree: l }) => ({
                                  ...s,
                                  targetSnapshot: a,
                                  urlAfterRedirects: l,
                                }))
                              )
                            );
                          })(
                            this.environmentInjector,
                            this.configLoader,
                            this.rootComponentType,
                            t.config,
                            this.urlSerializer,
                            t.paramsInheritanceStrategy
                          ),
                          Fn((g) => {
                            (o.targetSnapshot = g.targetSnapshot),
                              (o.urlAfterRedirects = g.urlAfterRedirects),
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: g.urlAfterRedirects,
                              });
                            const m = new vA(
                              g.id,
                              this.urlSerializer.serialize(g.extractedUrl),
                              this.urlSerializer.serialize(g.urlAfterRedirects),
                              g.targetSnapshot
                            );
                            this.events.next(m);
                          })
                        );
                      if (
                        u &&
                        t.urlHandlingStrategy.shouldProcessUrl(l.currentRawUrl)
                      ) {
                        const {
                            id: g,
                            extractedUrl: m,
                            source: _,
                            restoredState: y,
                            extras: v,
                          } = l,
                          w = new Xp(g, this.urlSerializer.serialize(m), _, y);
                        this.events.next(w);
                        const C = xA(0, this.rootComponentType).snapshot;
                        return (
                          (this.currentTransition = o =
                            {
                              ...l,
                              targetSnapshot: C,
                              urlAfterRedirects: m,
                              extras: {
                                ...v,
                                skipLocationChange: !1,
                                replaceUrl: !1,
                              },
                            }),
                          me(o)
                        );
                      }
                      {
                        const g = "";
                        return (
                          this.events.next(
                            new Nl(
                              l.id,
                              this.urlSerializer.serialize(l.extractedUrl),
                              g,
                              1
                            )
                          ),
                          l.resolve(null),
                          vr
                        );
                      }
                    }),
                    Fn((l) => {
                      const c = new YX(
                        l.id,
                        this.urlSerializer.serialize(l.extractedUrl),
                        this.urlSerializer.serialize(l.urlAfterRedirects),
                        l.targetSnapshot
                      );
                      this.events.next(c);
                    }),
                    Ae(
                      (l) => (
                        (this.currentTransition = o =
                          {
                            ...l,
                            guards: vJ(
                              l.targetSnapshot,
                              l.currentSnapshot,
                              this.rootContexts
                            ),
                          }),
                        o
                      )
                    ),
                    (function IJ(e, n) {
                      return kn((t) => {
                        const {
                          targetSnapshot: i,
                          currentSnapshot: r,
                          guards: {
                            canActivateChecks: o,
                            canDeactivateChecks: s,
                          },
                        } = t;
                        return 0 === s.length && 0 === o.length
                          ? me({ ...t, guardsResult: !0 })
                          : (function OJ(e, n, t, i) {
                              return dn(e).pipe(
                                kn((r) =>
                                  (function LJ(e, n, t, i, r) {
                                    const o =
                                      n && n.routeConfig
                                        ? n.routeConfig.canDeactivate
                                        : null;
                                    return o && 0 !== o.length
                                      ? me(
                                          o.map((a) => {
                                            const l = fd(n) ?? r,
                                              c = Vl(a, l);
                                            return cs(
                                              (function kJ(e) {
                                                return e && md(e.canDeactivate);
                                              })(c)
                                                ? c.canDeactivate(e, n, t, i)
                                                : l.runInContext(() =>
                                                    c(e, n, t, i)
                                                  )
                                            ).pipe(na());
                                          })
                                        ).pipe(zl())
                                      : me(!0);
                                  })(r.component, r.route, t, n, i)
                                ),
                                na((r) => !0 !== r, !0)
                              );
                            })(s, i, r, e).pipe(
                              kn((a) =>
                                a &&
                                (function xJ(e) {
                                  return "boolean" == typeof e;
                                })(a)
                                  ? (function AJ(e, n, t, i) {
                                      return dn(n).pipe(
                                        Pl((r) =>
                                          $b(
                                            (function FJ(e, n) {
                                              return (
                                                null !== e && n && n(new eJ(e)),
                                                me(!0)
                                              );
                                            })(r.route.parent, i),
                                            (function PJ(e, n) {
                                              return (
                                                null !== e && n && n(new nJ(e)),
                                                me(!0)
                                              );
                                            })(r.route, i),
                                            (function NJ(e, n, t) {
                                              const i = n[n.length - 1],
                                                o = n
                                                  .slice(0, n.length - 1)
                                                  .reverse()
                                                  .map((s) =>
                                                    (function bJ(e) {
                                                      const n = e.routeConfig
                                                        ? e.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return n && 0 !== n.length
                                                        ? { node: e, guards: n }
                                                        : null;
                                                    })(s)
                                                  )
                                                  .filter((s) => null !== s)
                                                  .map((s) =>
                                                    Q2(() =>
                                                      me(
                                                        s.guards.map((l) => {
                                                          const c =
                                                              fd(s.node) ?? t,
                                                            u = Vl(l, c);
                                                          return cs(
                                                            (function SJ(e) {
                                                              return (
                                                                e &&
                                                                md(
                                                                  e.canActivateChild
                                                                )
                                                              );
                                                            })(u)
                                                              ? u.canActivateChild(
                                                                  i,
                                                                  e
                                                                )
                                                              : c.runInContext(
                                                                  () => u(i, e)
                                                                )
                                                          ).pipe(na());
                                                        })
                                                      ).pipe(zl())
                                                    )
                                                  );
                                              return me(o).pipe(zl());
                                            })(e, r.path, t),
                                            (function RJ(e, n, t) {
                                              const i = n.routeConfig
                                                ? n.routeConfig.canActivate
                                                : null;
                                              if (!i || 0 === i.length)
                                                return me(!0);
                                              const r = i.map((o) =>
                                                Q2(() => {
                                                  const s = fd(n) ?? t,
                                                    a = Vl(o, s);
                                                  return cs(
                                                    (function DJ(e) {
                                                      return (
                                                        e && md(e.canActivate)
                                                      );
                                                    })(a)
                                                      ? a.canActivate(n, e)
                                                      : s.runInContext(() =>
                                                          a(n, e)
                                                        )
                                                  ).pipe(na());
                                                })
                                              );
                                              return me(r).pipe(zl());
                                            })(e, r.route, t)
                                          )
                                        ),
                                        na((r) => !0 !== r, !0)
                                      );
                                    })(i, o, e, n)
                                  : me(a)
                              ),
                              Ae((a) => ({ ...t, guardsResult: a }))
                            );
                      });
                    })(this.environmentInjector, (l) => this.events.next(l)),
                    Fn((l) => {
                      if (
                        ((o.guardsResult = l.guardsResult), oa(l.guardsResult))
                      )
                        throw TA(0, l.guardsResult);
                      const c = new KX(
                        l.id,
                        this.urlSerializer.serialize(l.extractedUrl),
                        this.urlSerializer.serialize(l.urlAfterRedirects),
                        l.targetSnapshot,
                        !!l.guardsResult
                      );
                      this.events.next(c);
                    }),
                    zr(
                      (l) =>
                        !!l.guardsResult ||
                        (this.cancelNavigationTransition(l, "", 3), !1)
                    ),
                    h0((l) => {
                      if (l.guards.canActivateChecks.length)
                        return me(l).pipe(
                          Fn((c) => {
                            const u = new ZX(
                              c.id,
                              this.urlSerializer.serialize(c.extractedUrl),
                              this.urlSerializer.serialize(c.urlAfterRedirects),
                              c.targetSnapshot
                            );
                            this.events.next(u);
                          }),
                          Oi((c) => {
                            let u = !1;
                            return me(c).pipe(
                              (function tee(e, n) {
                                return kn((t) => {
                                  const {
                                    targetSnapshot: i,
                                    guards: { canActivateChecks: r },
                                  } = t;
                                  if (!r.length) return me(t);
                                  let o = 0;
                                  return dn(r).pipe(
                                    Pl((s) =>
                                      (function nee(e, n, t, i) {
                                        const r = e.routeConfig,
                                          o = e._resolve;
                                        return (
                                          void 0 !== r?.title &&
                                            !HA(r) &&
                                            (o[id] = r.title),
                                          (function iee(e, n, t, i) {
                                            const r = (function ree(e) {
                                              return [
                                                ...Object.keys(e),
                                                ...Object.getOwnPropertySymbols(
                                                  e
                                                ),
                                              ];
                                            })(e);
                                            if (0 === r.length) return me({});
                                            const o = {};
                                            return dn(r).pipe(
                                              kn((s) =>
                                                (function oee(e, n, t, i) {
                                                  const r = fd(n) ?? i,
                                                    o = Vl(e, r);
                                                  return cs(
                                                    o.resolve
                                                      ? o.resolve(n, t)
                                                      : r.runInContext(() =>
                                                          o(n, t)
                                                        )
                                                  );
                                                })(e[s], n, t, i).pipe(
                                                  na(),
                                                  Fn((a) => {
                                                    o[s] = a;
                                                  })
                                                )
                                              ),
                                              Gb(1),
                                              (function yX(e) {
                                                return Ae(() => e);
                                              })(o),
                                              ia((s) => (PA(s) ? vr : td(s)))
                                            );
                                          })(o, e, n, i).pipe(
                                            Ae(
                                              (s) => (
                                                (e._resolvedData = s),
                                                (e.data = MA(e, t).resolve),
                                                r &&
                                                  HA(r) &&
                                                  (e.data[id] = r.title),
                                                null
                                              )
                                            )
                                          )
                                        );
                                      })(s.route, i, e, n)
                                    ),
                                    Fn(() => o++),
                                    Gb(1),
                                    kn((s) => (o === r.length ? me(t) : vr))
                                  );
                                });
                              })(
                                t.paramsInheritanceStrategy,
                                this.environmentInjector
                              ),
                              Fn({
                                next: () => (u = !0),
                                complete: () => {
                                  u ||
                                    this.cancelNavigationTransition(c, "", 2);
                                },
                              })
                            );
                          }),
                          Fn((c) => {
                            const u = new QX(
                              c.id,
                              this.urlSerializer.serialize(c.extractedUrl),
                              this.urlSerializer.serialize(c.urlAfterRedirects),
                              c.targetSnapshot
                            );
                            this.events.next(u);
                          })
                        );
                    }),
                    h0((l) => {
                      const c = (u) => {
                        const f = [];
                        u.routeConfig?.loadComponent &&
                          !u.routeConfig._loadedComponent &&
                          f.push(
                            this.configLoader.loadComponent(u.routeConfig).pipe(
                              Fn((g) => {
                                u.component = g;
                              }),
                              Ae(() => {})
                            )
                          );
                        for (const g of u.children) f.push(...c(g));
                        return f;
                      };
                      return Ju(c(l.targetSnapshot.root)).pipe($p(), ls(1));
                    }),
                    h0(() => this.afterPreactivation()),
                    Ae((l) => {
                      const c = (function lJ(e, n, t) {
                        const i = hd(e, n._root, t ? t._root : void 0);
                        return new CA(i, n);
                      })(
                        t.routeReuseStrategy,
                        l.targetSnapshot,
                        l.currentRouterState
                      );
                      return (
                        (this.currentTransition = o =
                          { ...l, targetRouterState: c }),
                        o
                      );
                    }),
                    Fn(() => {
                      this.events.next(new Jb());
                    }),
                    ((e, n, t, i) =>
                      Ae(
                        (r) => (
                          new yJ(
                            n,
                            r.targetRouterState,
                            r.currentRouterState,
                            t,
                            i
                          ).activate(e),
                          r
                        )
                      ))(
                      this.rootContexts,
                      t.routeReuseStrategy,
                      (l) => this.events.next(l),
                      this.inputBindingEnabled
                    ),
                    ls(1),
                    Fn({
                      next: (l) => {
                        (s = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          this.events.next(
                            new us(
                              l.id,
                              this.urlSerializer.serialize(l.extractedUrl),
                              this.urlSerializer.serialize(l.urlAfterRedirects)
                            )
                          ),
                          t.titleStrategy?.updateTitle(
                            l.targetRouterState.snapshot
                          ),
                          l.resolve(!0);
                      },
                      complete: () => {
                        s = !0;
                      },
                    }),
                    (function vX(e) {
                      return kt((n, t) => {
                        mi(e).subscribe(Tt(t, () => t.complete(), A)),
                          !t.closed && n.subscribe(t);
                      });
                    })(
                      this.transitionAbortSubject.pipe(
                        Fn((l) => {
                          throw l;
                        })
                      )
                    ),
                    nd(() => {
                      s || a || this.cancelNavigationTransition(o, "", 1),
                        this.currentNavigation?.id === o.id &&
                          (this.currentNavigation = null);
                    }),
                    ia((l) => {
                      if (((a = !0), IA(l)))
                        this.events.next(
                          new ud(
                            o.id,
                            this.urlSerializer.serialize(o.extractedUrl),
                            l.message,
                            l.cancellationCode
                          )
                        ),
                          (function dJ(e) {
                            return IA(e) && oa(e.url);
                          })(l)
                            ? this.events.next(new e0(l.url))
                            : o.resolve(!1);
                      else {
                        this.events.next(
                          new Jp(
                            o.id,
                            this.urlSerializer.serialize(o.extractedUrl),
                            l,
                            o.targetSnapshot ?? void 0
                          )
                        );
                        try {
                          o.resolve(t.errorHandler(l));
                        } catch (c) {
                          o.reject(c);
                        }
                      }
                      return vr;
                    })
                  );
                })
              )
            );
          }
          cancelNavigationTransition(t, i, r) {
            const o = new ud(
              t.id,
              this.urlSerializer.serialize(t.extractedUrl),
              i,
              r
            );
            this.events.next(o), t.resolve(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      function UA(e) {
        return e !== cd;
      }
      let WA = (() => {
          class e {
            buildTitle(t) {
              let i,
                r = t.root;
              for (; void 0 !== r; )
                (i = this.getResolvedTitleForRoute(r) ?? i),
                  (r = r.children.find((o) => o.outlet === Oe));
              return i;
            }
            getResolvedTitleForRoute(t) {
              return t.data[id];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: function () {
                return K(lee);
              },
              providedIn: "root",
            }));
          }
          return e;
        })(),
        lee = (() => {
          class e extends WA {
            constructor(t) {
              super(), (this.title = t);
            }
            updateTitle(t) {
              const i = this.buildTitle(t);
              void 0 !== i && this.title.setTitle(i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(sT));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        cee = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: function () {
                return K(dee);
              },
              providedIn: "root",
            }));
          }
          return e;
        })();
      class uee {
        shouldDetach(n) {
          return !1;
        }
        store(n, t) {}
        shouldAttach(n) {
          return !1;
        }
        retrieve(n) {
          return null;
        }
        shouldReuseRoute(n, t) {
          return n.routeConfig === t.routeConfig;
        }
      }
      let dee = (() => {
        class e extends uee {
          static #e = (this.ɵfac = (function () {
            let t;
            return function (r) {
              return (t || (t = vn(e)))(r || e);
            };
          })());
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const ag = new Q("", { providedIn: "root", factory: () => ({}) });
      let hee = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: function () {
                return K(fee);
              },
              providedIn: "root",
            }));
          }
          return e;
        })(),
        fee = (() => {
          class e {
            shouldProcessUrl(t) {
              return !0;
            }
            extract(t) {
              return t;
            }
            merge(t, i) {
              return t;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      var _d = (function (e) {
        return (
          (e[(e.COMPLETE = 0)] = "COMPLETE"),
          (e[(e.FAILED = 1)] = "FAILED"),
          (e[(e.REDIRECTING = 2)] = "REDIRECTING"),
          e
        );
      })(_d || {});
      function $A(e, n) {
        e.events
          .pipe(
            zr(
              (t) =>
                t instanceof us ||
                t instanceof ud ||
                t instanceof Jp ||
                t instanceof Nl
            ),
            Ae((t) =>
              t instanceof us || t instanceof Nl
                ? _d.COMPLETE
                : t instanceof ud && (0 === t.code || 1 === t.code)
                ? _d.REDIRECTING
                : _d.FAILED
            ),
            zr((t) => t !== _d.REDIRECTING),
            ls(1)
          )
          .subscribe(() => {
            n();
          });
      }
      function pee(e) {
        throw e;
      }
      function gee(e, n, t) {
        return n.parse("/");
      }
      const mee = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        _ee = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let qi = (() => {
        class e {
          get navigationId() {
            return this.navigationTransitions.navigationId;
          }
          get browserPageId() {
            return "computed" !== this.canceledNavigationResolution
              ? this.currentPageId
              : this.location.getState()?.ɵrouterPageId ?? this.currentPageId;
          }
          get events() {
            return this._events;
          }
          constructor() {
            (this.disposed = !1),
              (this.currentPageId = 0),
              (this.console = K(NS)),
              (this.isNgZoneEnabled = !1),
              (this._events = new Ze()),
              (this.options = K(ag, { optional: !0 }) || {}),
              (this.pendingTasks = K(ff)),
              (this.errorHandler = this.options.errorHandler || pee),
              (this.malformedUriErrorHandler =
                this.options.malformedUriErrorHandler || gee),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.urlHandlingStrategy = K(hee)),
              (this.routeReuseStrategy = K(cee)),
              (this.titleStrategy = K(WA)),
              (this.onSameUrlNavigation =
                this.options.onSameUrlNavigation || "ignore"),
              (this.paramsInheritanceStrategy =
                this.options.paramsInheritanceStrategy || "emptyOnly"),
              (this.urlUpdateStrategy =
                this.options.urlUpdateStrategy || "deferred"),
              (this.canceledNavigationResolution =
                this.options.canceledNavigationResolution || "replace"),
              (this.config = K(jl, { optional: !0 })?.flat() ?? []),
              (this.navigationTransitions = K(sg)),
              (this.urlSerializer = K(od)),
              (this.location = K(ky)),
              (this.componentInputBindingEnabled = !!K(tg, { optional: !0 })),
              (this.eventsSubscription = new qt()),
              (this.isNgZoneEnabled =
                K(ht) instanceof ht && ht.isInAngularZone()),
              this.resetConfig(this.config),
              (this.currentUrlTree = new Rl()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = xA(0, null)),
              this.navigationTransitions
                .setupNavigations(this, this.currentUrlTree, this.routerState)
                .subscribe(
                  (t) => {
                    (this.lastSuccessfulId = t.id),
                      (this.currentPageId = this.browserPageId);
                  },
                  (t) => {
                    this.console.warn(`Unhandled Navigation Error: ${t}`);
                  }
                ),
              this.subscribeToNavigationEvents();
          }
          subscribeToNavigationEvents() {
            const t = this.navigationTransitions.events.subscribe((i) => {
              try {
                const { currentTransition: r } = this.navigationTransitions;
                if (null === r) return void (qA(i) && this._events.next(i));
                if (i instanceof Xp)
                  UA(r.source) && (this.browserUrlTree = r.extractedUrl);
                else if (i instanceof Nl) this.rawUrlTree = r.rawUrl;
                else if (i instanceof vA) {
                  if ("eager" === this.urlUpdateStrategy) {
                    if (!r.extras.skipLocationChange) {
                      const o = this.urlHandlingStrategy.merge(
                        r.urlAfterRedirects,
                        r.rawUrl
                      );
                      this.setBrowserUrl(o, r);
                    }
                    this.browserUrlTree = r.urlAfterRedirects;
                  }
                } else if (i instanceof Jb)
                  (this.currentUrlTree = r.urlAfterRedirects),
                    (this.rawUrlTree = this.urlHandlingStrategy.merge(
                      r.urlAfterRedirects,
                      r.rawUrl
                    )),
                    (this.routerState = r.targetRouterState),
                    "deferred" === this.urlUpdateStrategy &&
                      (r.extras.skipLocationChange ||
                        this.setBrowserUrl(this.rawUrlTree, r),
                      (this.browserUrlTree = r.urlAfterRedirects));
                else if (i instanceof ud)
                  0 !== i.code && 1 !== i.code && (this.navigated = !0),
                    (3 === i.code || 2 === i.code) && this.restoreHistory(r);
                else if (i instanceof e0) {
                  const o = this.urlHandlingStrategy.merge(
                      i.url,
                      r.currentRawUrl
                    ),
                    s = {
                      skipLocationChange: r.extras.skipLocationChange,
                      replaceUrl:
                        "eager" === this.urlUpdateStrategy || UA(r.source),
                    };
                  this.scheduleNavigation(o, cd, null, s, {
                    resolve: r.resolve,
                    reject: r.reject,
                    promise: r.promise,
                  });
                }
                i instanceof Jp && this.restoreHistory(r, !0),
                  i instanceof us && (this.navigated = !0),
                  qA(i) && this._events.next(i);
              } catch (r) {
                this.navigationTransitions.transitionAbortSubject.next(r);
              }
            });
            this.eventsSubscription.add(t);
          }
          resetRootComponentType(t) {
            (this.routerState.root.component = t),
              (this.navigationTransitions.rootComponentType = t);
          }
          initialNavigation() {
            if (
              (this.setUpLocationChangeListener(),
              !this.navigationTransitions.hasRequestedNavigation)
            ) {
              const t = this.location.getState();
              this.navigateToSyncWithBrowser(this.location.path(!0), cd, t);
            }
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((t) => {
                const i = "popstate" === t.type ? "popstate" : "hashchange";
                "popstate" === i &&
                  setTimeout(() => {
                    this.navigateToSyncWithBrowser(t.url, i, t.state);
                  }, 0);
              }));
          }
          navigateToSyncWithBrowser(t, i, r) {
            const o = { replaceUrl: !0 },
              s = r?.navigationId ? r : null;
            if (r) {
              const l = { ...r };
              delete l.navigationId,
                delete l.ɵrouterPageId,
                0 !== Object.keys(l).length && (o.state = l);
            }
            const a = this.parseUrl(t);
            this.scheduleNavigation(a, i, s, o);
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.navigationTransitions.currentNavigation;
          }
          get lastSuccessfulNavigation() {
            return this.navigationTransitions.lastSuccessfulNavigation;
          }
          resetConfig(t) {
            (this.config = t.map(c0)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.navigationTransitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0),
              this.eventsSubscription.unsubscribe();
          }
          createUrlTree(t, i = {}) {
            const {
                relativeTo: r,
                queryParams: o,
                fragment: s,
                queryParamsHandling: a,
                preserveFragment: l,
              } = i,
              c = l ? this.currentUrlTree.fragment : s;
            let f,
              u = null;
            switch (a) {
              case "merge":
                u = { ...this.currentUrlTree.queryParams, ...o };
                break;
              case "preserve":
                u = this.currentUrlTree.queryParams;
                break;
              default:
                u = o || null;
            }
            null !== u && (u = this.removeEmptyProps(u));
            try {
              f = hA(r ? r.snapshot : this.routerState.snapshot.root);
            } catch {
              ("string" != typeof t[0] || !t[0].startsWith("/")) && (t = []),
                (f = this.currentUrlTree.root);
            }
            return fA(f, t, u, c ?? null);
          }
          navigateByUrl(t, i = { skipLocationChange: !1 }) {
            const r = oa(t) ? t : this.parseUrl(t),
              o = this.urlHandlingStrategy.merge(r, this.rawUrlTree);
            return this.scheduleNavigation(o, cd, null, i);
          }
          navigate(t, i = { skipLocationChange: !1 }) {
            return (
              (function yee(e) {
                for (let n = 0; n < e.length; n++)
                  if (null == e[n]) throw new P(4008, !1);
              })(t),
              this.navigateByUrl(this.createUrlTree(t, i), i)
            );
          }
          serializeUrl(t) {
            return this.urlSerializer.serialize(t);
          }
          parseUrl(t) {
            let i;
            try {
              i = this.urlSerializer.parse(t);
            } catch (r) {
              i = this.malformedUriErrorHandler(r, this.urlSerializer, t);
            }
            return i;
          }
          isActive(t, i) {
            let r;
            if (
              ((r = !0 === i ? { ...mee } : !1 === i ? { ..._ee } : i), oa(t))
            )
              return iA(this.currentUrlTree, t, r);
            const o = this.parseUrl(t);
            return iA(this.currentUrlTree, o, r);
          }
          removeEmptyProps(t) {
            return Object.keys(t).reduce((i, r) => {
              const o = t[r];
              return null != o && (i[r] = o), i;
            }, {});
          }
          scheduleNavigation(t, i, r, o, s) {
            if (this.disposed) return Promise.resolve(!1);
            let a, l, c;
            s
              ? ((a = s.resolve), (l = s.reject), (c = s.promise))
              : (c = new Promise((f, g) => {
                  (a = f), (l = g);
                }));
            const u = this.pendingTasks.add();
            return (
              $A(this, () => {
                queueMicrotask(() => this.pendingTasks.remove(u));
              }),
              this.navigationTransitions.handleNavigationRequest({
                source: i,
                restoredState: r,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                currentBrowserUrl: this.browserUrlTree,
                rawUrl: t,
                extras: o,
                resolve: a,
                reject: l,
                promise: c,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              c.catch((f) => Promise.reject(f))
            );
          }
          setBrowserUrl(t, i) {
            const r = this.urlSerializer.serialize(t);
            if (this.location.isCurrentPathEqualTo(r) || i.extras.replaceUrl) {
              const s = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, this.browserPageId),
              };
              this.location.replaceState(r, "", s);
            } else {
              const o = {
                ...i.extras.state,
                ...this.generateNgRouterState(i.id, this.browserPageId + 1),
              };
              this.location.go(r, "", o);
            }
          }
          restoreHistory(t, i = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const o = this.currentPageId - this.browserPageId;
              0 !== o
                ? this.location.historyGo(o)
                : this.currentUrlTree ===
                    this.getCurrentNavigation()?.finalUrl &&
                  0 === o &&
                  (this.resetState(t),
                  (this.browserUrlTree = t.currentUrlTree),
                  this.resetUrlToCurrentUrlTree());
            } else
              "replace" === this.canceledNavigationResolution &&
                (i && this.resetState(t), this.resetUrlToCurrentUrlTree());
          }
          resetState(t) {
            (this.routerState = t.currentRouterState),
              (this.currentUrlTree = t.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                t.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          generateNgRouterState(t, i) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: t, ɵrouterPageId: i }
              : { navigationId: t };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      function qA(e) {
        return !(e instanceof Jb || e instanceof e0);
      }
      let Ul = (() => {
        class e {
          constructor(t, i, r, o, s, a) {
            (this.router = t),
              (this.route = i),
              (this.tabIndexAttribute = r),
              (this.renderer = o),
              (this.el = s),
              (this.locationStrategy = a),
              (this.href = null),
              (this.commands = null),
              (this.onChanges = new Ze()),
              (this.preserveFragment = !1),
              (this.skipLocationChange = !1),
              (this.replaceUrl = !1);
            const l = s.nativeElement.tagName?.toLowerCase();
            (this.isAnchorElement = "a" === l || "area" === l),
              this.isAnchorElement
                ? (this.subscription = t.events.subscribe((c) => {
                    c instanceof us && this.updateHref();
                  }))
                : this.setTabIndexIfNotOnNativeEl("0");
          }
          setTabIndexIfNotOnNativeEl(t) {
            null != this.tabIndexAttribute ||
              this.isAnchorElement ||
              this.applyAttributeValue("tabindex", t);
          }
          ngOnChanges(t) {
            this.isAnchorElement && this.updateHref(),
              this.onChanges.next(this);
          }
          set routerLink(t) {
            null != t
              ? ((this.commands = Array.isArray(t) ? t : [t]),
                this.setTabIndexIfNotOnNativeEl("0"))
              : ((this.commands = null), this.setTabIndexIfNotOnNativeEl(null));
          }
          onClick(t, i, r, o, s) {
            return (
              !!(
                null === this.urlTree ||
                (this.isAnchorElement &&
                  (0 !== t ||
                    i ||
                    r ||
                    o ||
                    s ||
                    ("string" == typeof this.target && "_self" != this.target)))
              ) ||
              (this.router.navigateByUrl(this.urlTree, {
                skipLocationChange: this.skipLocationChange,
                replaceUrl: this.replaceUrl,
                state: this.state,
              }),
              !this.isAnchorElement)
            );
          }
          ngOnDestroy() {
            this.subscription?.unsubscribe();
          }
          updateHref() {
            this.href =
              null !== this.urlTree && this.locationStrategy
                ? this.locationStrategy?.prepareExternalUrl(
                    this.router.serializeUrl(this.urlTree)
                  )
                : null;
            const t =
              null === this.href
                ? null
                : (function K1(e, n, t) {
                    return (function d3(e, n) {
                      return ("src" === n &&
                        ("embed" === e ||
                          "frame" === e ||
                          "iframe" === e ||
                          "media" === e ||
                          "script" === e)) ||
                        ("href" === n && ("base" === e || "link" === e))
                        ? Y1
                        : Ho;
                    })(
                      n,
                      t
                    )(e);
                  })(
                    this.href,
                    this.el.nativeElement.tagName.toLowerCase(),
                    "href"
                  );
            this.applyAttributeValue("href", t);
          }
          applyAttributeValue(t, i) {
            const r = this.renderer,
              o = this.el.nativeElement;
            null !== i ? r.setAttribute(o, t, i) : r.removeAttribute(o, t);
          }
          get urlTree() {
            return null === this.commands
              ? null
              : this.router.createUrlTree(this.commands, {
                  relativeTo:
                    void 0 !== this.relativeTo ? this.relativeTo : this.route,
                  queryParams: this.queryParams,
                  fragment: this.fragment,
                  queryParamsHandling: this.queryParamsHandling,
                  preserveFragment: this.preserveFragment,
                });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(
              M(qi),
              M(Bl),
              (function hh(e) {
                return (function TN(e, n) {
                  if ("class" === n) return e.classes;
                  if ("style" === n) return e.styles;
                  const t = e.attrs;
                  if (t) {
                    const i = t.length;
                    let r = 0;
                    for (; r < i; ) {
                      const o = t[r];
                      if (Hw(o)) break;
                      if (0 === o) r += 2;
                      else if ("number" == typeof o)
                        for (r++; r < i && "string" == typeof t[r]; ) r++;
                      else {
                        if (o === n) return t[r + 1];
                        r += 2;
                      }
                    }
                  }
                  return null;
                })(An(), e);
              })("tabindex"),
              M(oo),
              M(pn),
              M(Vs)
            );
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["", "routerLink", ""]],
            hostVars: 1,
            hostBindings: function (i, r) {
              1 & i &&
                F("click", function (s) {
                  return r.onClick(
                    s.button,
                    s.ctrlKey,
                    s.shiftKey,
                    s.altKey,
                    s.metaKey
                  );
                }),
                2 & i && sn("target", r.target);
            },
            inputs: {
              target: "target",
              queryParams: "queryParams",
              fragment: "fragment",
              queryParamsHandling: "queryParamsHandling",
              state: "state",
              relativeTo: "relativeTo",
              preserveFragment: ["preserveFragment", "preserveFragment", gl],
              skipLocationChange: [
                "skipLocationChange",
                "skipLocationChange",
                gl,
              ],
              replaceUrl: ["replaceUrl", "replaceUrl", gl],
              routerLink: "routerLink",
            },
            standalone: !0,
            features: [lM, si],
          }));
        }
        return e;
      })();
      class YA {}
      let bee = (() => {
        class e {
          constructor(t, i, r, o, s) {
            (this.router = t),
              (this.injector = r),
              (this.preloadingStrategy = o),
              (this.loader = s);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                zr((t) => t instanceof us),
                Pl(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(t, i) {
            const r = [];
            for (const o of i) {
              o.providers &&
                !o._injector &&
                (o._injector = Y_(o.providers, t, `Route: ${o.path}`));
              const s = o._injector ?? t,
                a = o._loadedInjector ?? s;
              ((o.loadChildren && !o._loadedRoutes && void 0 === o.canLoad) ||
                (o.loadComponent && !o._loadedComponent)) &&
                r.push(this.preloadConfig(s, o)),
                (o.children || o._loadedRoutes) &&
                  r.push(this.processRoutes(a, o.children ?? o._loadedRoutes));
            }
            return dn(r).pipe(ya());
          }
          preloadConfig(t, i) {
            return this.preloadingStrategy.preload(i, () => {
              let r;
              r =
                i.loadChildren && void 0 === i.canLoad
                  ? this.loader.loadChildren(t, i)
                  : me(null);
              const o = r.pipe(
                kn((s) =>
                  null === s
                    ? me(void 0)
                    : ((i._loadedRoutes = s.routes),
                      (i._loadedInjector = s.injector),
                      this.processRoutes(s.injector ?? t, s.routes))
                )
              );
              return i.loadComponent && !i._loadedComponent
                ? dn([o, this.loader.loadComponent(i)]).pipe(ya())
                : o;
            });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(qi), O(LS), O(Ci), O(YA), O(f0));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const p0 = new Q("");
      let KA = (() => {
        class e {
          constructor(t, i, r, o, s = {}) {
            (this.urlSerializer = t),
              (this.transitions = i),
              (this.viewportScroller = r),
              (this.zone = o),
              (this.options = s),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (s.scrollPositionRestoration =
                s.scrollPositionRestoration || "disabled"),
              (s.anchorScrolling = s.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((t) => {
              t instanceof Xp
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = t.navigationTrigger),
                  (this.restoredId = t.restoredState
                    ? t.restoredState.navigationId
                    : 0))
                : t instanceof us
                ? ((this.lastId = t.id),
                  this.scheduleScrollEvent(
                    t,
                    this.urlSerializer.parse(t.urlAfterRedirects).fragment
                  ))
                : t instanceof Nl &&
                  0 === t.code &&
                  ((this.lastSource = void 0),
                  (this.restoredId = 0),
                  this.scheduleScrollEvent(
                    t,
                    this.urlSerializer.parse(t.url).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((t) => {
              t instanceof bA &&
                (t.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(t.position)
                  : t.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(t.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(t, i) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new bA(
                      t,
                      "popstate" === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      i
                    )
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            !(function Rx() {
              throw new Error("invalid");
            })();
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      function Do(e, n) {
        return { ɵkind: e, ɵproviders: n };
      }
      function QA() {
        const e = K(ci);
        return (n) => {
          const t = e.get(Ls);
          if (n !== t.components[0]) return;
          const i = e.get(qi),
            r = e.get(XA);
          1 === e.get(g0) && i.initialNavigation(),
            e.get(JA, null, ze.Optional)?.setUpPreloading(),
            e.get(p0, null, ze.Optional)?.init(),
            i.resetRootComponentType(t.componentTypes[0]),
            r.closed || (r.next(), r.complete(), r.unsubscribe());
        };
      }
      const XA = new Q("", { factory: () => new Ze() }),
        g0 = new Q("", { providedIn: "root", factory: () => 1 }),
        JA = new Q("");
      function Mee(e) {
        return Do(0, [
          { provide: JA, useExisting: bee },
          { provide: YA, useExisting: e },
        ]);
      }
      const eP = new Q("ROUTER_FORROOT_GUARD"),
        See = [
          ky,
          { provide: od, useClass: Yb },
          qi,
          dd,
          {
            provide: Bl,
            useFactory: function ZA(e) {
              return e.routerState.root;
            },
            deps: [qi],
          },
          f0,
          [],
        ];
      function kee() {
        return new WS("Router", qi);
      }
      let tP = (() => {
        class e {
          constructor(t) {}
          static forRoot(t, i) {
            return {
              ngModule: e,
              providers: [
                See,
                [],
                { provide: jl, multi: !0, useValue: t },
                {
                  provide: eP,
                  useFactory: Oee,
                  deps: [[qi, new gh(), new mh()]],
                },
                { provide: ag, useValue: i || {} },
                i?.useHash
                  ? { provide: Vs, useClass: $6 }
                  : { provide: Vs, useClass: bk },
                {
                  provide: p0,
                  useFactory: () => {
                    const e = K(oj),
                      n = K(ht),
                      t = K(ag),
                      i = K(sg),
                      r = K(od);
                    return (
                      t.scrollOffset && e.setOffset(t.scrollOffset),
                      new KA(r, i, e, n, t)
                    );
                  },
                },
                i?.preloadingStrategy
                  ? Mee(i.preloadingStrategy).ɵproviders
                  : [],
                { provide: WS, multi: !0, useFactory: kee },
                i?.initialNavigation ? Aee(i) : [],
                i?.bindToComponentInputs
                  ? Do(8, [kA, { provide: tg, useExisting: kA }]).ɵproviders
                  : [],
                [
                  { provide: nP, useFactory: QA },
                  { provide: _y, multi: !0, useExisting: nP },
                ],
              ],
            };
          }
          static forChild(t) {
            return {
              ngModule: e,
              providers: [{ provide: jl, multi: !0, useValue: t }],
            };
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(eP, 8));
          });
          static #t = (this.ɵmod = Vt({ type: e }));
          static #n = (this.ɵinj = Rt({}));
        }
        return e;
      })();
      function Oee(e) {
        return "guarded";
      }
      function Aee(e) {
        return [
          "disabled" === e.initialNavigation
            ? Do(3, [
                {
                  provide: hf,
                  multi: !0,
                  useFactory: () => {
                    const n = K(qi);
                    return () => {
                      n.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: g0, useValue: 2 },
              ]).ɵproviders
            : [],
          "enabledBlocking" === e.initialNavigation
            ? Do(2, [
                { provide: g0, useValue: 0 },
                {
                  provide: hf,
                  multi: !0,
                  deps: [ci],
                  useFactory: (n) => {
                    const t = n.get(U6, Promise.resolve());
                    return () =>
                      t.then(
                        () =>
                          new Promise((i) => {
                            const r = n.get(qi),
                              o = n.get(XA);
                            $A(r, () => {
                              i(!0);
                            }),
                              (n.get(sg).afterPreactivation = () => (
                                i(!0), o.closed ? me(void 0) : o
                              )),
                              r.initialNavigation();
                          })
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const nP = new Q("");
      function iP(e, n, t, i, r, o, s) {
        try {
          var a = e[o](s),
            l = a.value;
        } catch (c) {
          return void t(c);
        }
        a.done ? n(l) : Promise.resolve(l).then(i, r);
      }
      function fr(e) {
        return function () {
          var n = this,
            t = arguments;
          return new Promise(function (i, r) {
            var o = e.apply(n, t);
            function s(l) {
              iP(o, i, r, s, a, "next", l);
            }
            function a(l) {
              iP(o, i, r, s, a, "throw", l);
            }
            s(void 0);
          });
        };
      }
      const m0 = { now: () => (m0.delegate || Date).now(), delegate: void 0 };
      class ct extends Ze {
        constructor(n = 1 / 0, t = 1 / 0, i = m0) {
          super(),
            (this._bufferSize = n),
            (this._windowTime = t),
            (this._timestampProvider = i),
            (this._buffer = []),
            (this._infiniteTimeWindow = !0),
            (this._infiniteTimeWindow = t === 1 / 0),
            (this._bufferSize = Math.max(1, n)),
            (this._windowTime = Math.max(1, t));
        }
        next(n) {
          const {
            isStopped: t,
            _buffer: i,
            _infiniteTimeWindow: r,
            _timestampProvider: o,
            _windowTime: s,
          } = this;
          t || (i.push(n), !r && i.push(o.now() + s)),
            this._trimBuffer(),
            super.next(n);
        }
        _subscribe(n) {
          this._throwIfClosed(), this._trimBuffer();
          const t = this._innerSubscribe(n),
            { _infiniteTimeWindow: i, _buffer: r } = this,
            o = r.slice();
          for (let s = 0; s < o.length && !n.closed; s += i ? 1 : 2)
            n.next(o[s]);
          return this._checkFinalizedStatuses(n), t;
        }
        _trimBuffer() {
          const {
              _bufferSize: n,
              _timestampProvider: t,
              _buffer: i,
              _infiniteTimeWindow: r,
            } = this,
            o = (r ? 1 : 2) * n;
          if ((n < 1 / 0 && o < i.length && i.splice(0, i.length - o), !r)) {
            const s = t.now();
            let a = 0;
            for (let l = 1; l < i.length && i[l] <= s; l += 2) a = l;
            a && i.splice(0, a + 1);
          }
        }
      }
      var Zt = (function (e) {
        return (
          (e.normal = "normal"),
          (e.smallBoss = "smallBoss"),
          (e.boss = "boss"),
          (e.labyNormal = "labyNormal"),
          (e.labySmallBoss = "labySmallBoss"),
          (e.labyBoss = "labyBoss"),
          (e.worldEndBoss = "worldEndBoss"),
          (e.dungeonEndBoss = "dungeonEndBoss"),
          e
        );
      })(Zt || {});
      const ds = (e) => 0.5 + (e / 100) * 0.25,
        hs = (e) => {
          const n = e / 100;
          return 30 + (n > 9 ? 88 * (n - 9) ** 2 : 0) + 8 * n;
        },
        lg = [
          {
            type: Zt.normal,
            healthFunc: (e) => hs(e),
            dmgFunc: (e) => ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => Math.random() > 0.5 * Math.pow(0.95, e),
          },
          {
            type: Zt.smallBoss,
            healthFunc: (e) => 1.5 * hs(e),
            dmgFunc: (e) => 1.2 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => Math.random() > 0.6 * Math.pow(0.95, e),
          },
          {
            type: Zt.boss,
            healthFunc: (e) => 3 * hs(e),
            dmgFunc: (e) => 1.5 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => !0,
          },
          {
            type: Zt.labyNormal,
            healthFunc: (e) => 0.8 * hs(e),
            dmgFunc: (e) => 0.7 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => !0,
          },
          {
            type: Zt.labySmallBoss,
            healthFunc: (e) => 1 * hs(e),
            dmgFunc: (e) => 1 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => !0,
          },
          {
            type: Zt.labyBoss,
            healthFunc: (e) => 2 * hs(e),
            dmgFunc: (e) => 1 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => !0,
          },
          {
            type: Zt.worldEndBoss,
            healthFunc: (e) => 10 * hs(e),
            dmgFunc: (e) => 1.6 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => !0,
          },
          {
            type: Zt.dungeonEndBoss,
            healthFunc: (e) => 5 * hs(e),
            dmgFunc: (e) => 1.4 * ds(e),
            minDmg: 20,
            maxDmg: 20,
            lootChance: (e) => !0,
          },
        ];
      class cg {
        constructor(n) {
          (this.x = n.x ?? 0),
            (this.y = n.y ?? 0),
            (this.walls = n.walls ?? [!0, !0, !0, !0]),
            (this.prepared = n.prepared ?? !1),
            (this.deadEnd = n.deadEnd ?? !1),
            (this.visited = n.visited ?? !1),
            (this.visible = n.visible ?? !1),
            (this.active = n.active ?? !1),
            (this.looted = n.looted ?? !1);
        }
        wallsToString() {
          let n = "";
          return (
            this.walls[0] && (n += " has-wall-top"),
            this.walls[1] && (n += " has-wall-right"),
            this.walls[2] && (n += " has-wall-bottom"),
            this.walls[3] && (n += " has-wall-left"),
            n
          );
        }
      }
      var he = (function (e) {
        return (
          (e[(e.menu = 0)] = "menu"),
          (e[(e.world = 1)] = "world"),
          (e[(e.labyrinth = 2)] = "labyrinth"),
          (e[(e.explore = 3)] = "explore"),
          (e[(e.dungeon = 4)] = "dungeon"),
          (e[(e.portal = 5)] = "portal"),
          e
        );
      })(he || {});
      class Fee {
        constructor(n) {
          (this.health = n.health ?? 50),
            (this.level = n.level ?? 0),
            (this.ep = n.ep ?? 0),
            (this.isThrottled = n.isThrottled ?? !1),
            (this.upgrades = n.upgrades ?? []),
            (this.curWorldPos = n.curWorldPos ?? 0),
            (this.labyKeys = n.labyKeys ?? 0),
            (this.labyBonus = n.labyBonus ?? 1),
            (this.highestMap = n.highestMap ?? 0),
            (this.myTurn = n.myTurn ?? !1),
            (this.openMapI = n.openMapI ?? 0),
            (this.curWorldMap = n.curWorldMap),
            (this.labyrinth = n.labyrinth ?? []),
            (this.dungeons = n.dungeons ?? []),
            (this.curMenu = n.curMenu ?? he.labyrinth);
        }
      }
      const Nee = [
          {
            map: 19,
            optionRatio: [1],
            option: [
              [
                {
                  item: { name: "soul", type: "fluid", value: 0.1 },
                  lootIncrease: (e) => 9e3 + Math.pow(0.1 * (e - 20), 2),
                },
              ],
            ],
          },
        ],
        Lee = [
          {
            map: -1,
            optionRatio: [0.9, 0.1],
            option: [
              [
                {
                  item: { name: "slime", type: "fluid", value: 100 },
                  lootIncrease: (e) => 100 + 30 * e,
                },
              ],
              [
                {
                  item: { name: "blood", type: "fluid", value: 100 },
                  lootIncrease: (e) => 150 + 30 * e,
                },
              ],
            ],
          },
          {
            map: 9,
            optionRatio: [0.95, 0.05],
            option: [
              [
                {
                  item: { name: "slime", type: "fluid", value: 80 },
                  lootIncrease: (e) => 30 * e,
                },
              ],
              [
                {
                  item: { name: "blood", type: "fluid", value: 80 },
                  lootIncrease: (e) => 30 * e,
                },
              ],
            ],
          },
        ],
        Bee = [
          {
            map: -1,
            optionRatio: [0.9, 0.1],
            option: [
              [
                {
                  item: { name: "slime", type: "fluid", value: 300 },
                  lootIncrease: (e) => 300,
                },
              ],
              [
                {
                  item: { name: "blood", type: "fluid", value: 300 },
                  lootIncrease: (e) => 300,
                },
              ],
            ],
          },
          {
            map: 10,
            optionRatio: [0.8, 0.2],
            option: [
              [
                {
                  item: { name: "slime", type: "fluid", value: 80 },
                  lootIncrease: (e) => 90 * e,
                },
              ],
              [
                {
                  item: { name: "blood", type: "fluid", value: 80 },
                  lootIncrease: (e) => 90 * e,
                },
              ],
            ],
          },
          {
            map: 15,
            optionRatio: [0.5, 0.35, 0.15],
            option: [
              [
                {
                  item: { name: "slime", type: "fluid", value: 90 },
                  lootIncrease: (e) => 90 * e,
                },
              ],
              [
                {
                  item: { name: "blood", type: "fluid", value: 90 },
                  lootIncrease: (e) => 90 * e,
                },
              ],
              [
                {
                  item: { name: "water", type: "fluid", value: 90 },
                  lootIncrease: (e) => 90 * e,
                },
              ],
            ],
          },
        ];
      class fs {
        static calcMinMaxMult(n, t) {
          return 1 + (Math.random() * (t + n) - n) / 100;
        }
        static randomBetweenPerc(n, t) {
          return (
            (n *= 100),
            (t *= 100),
            (Math.floor(Math.random() * (t - n + 1)) + n) / 100
          );
        }
        static randomBetweenInt(n, t) {
          return Math.floor(Math.random() * (t - n + 1)) + n;
        }
      }
      var So = (function (e) {
        return (e.slime = "slime"), (e.blood = "blood"), (e.water = "water"), e;
      })(So || {});
      class rP {
        static stackItems(n) {
          return n.reduce((t, i) => {
            const r = t.find((o) => o.type === i.type && o.name === i.name);
            return r ? (r.value += i.value) : t.push(i), t;
          }, []);
        }
      }
      let pr = (() => {
        class e {
          static #e = (this.exploreDungeonDifficulty = (t) => ({
            min: 1 - t / 200,
            max: 1.5 - (9 * t) / 1e3,
          }));
          static #t = (this.exploreDungeonLoot = (t) => ({
            min: 0.8 + t / 100,
            max: 1 + t / 100,
          }));
          static #n = (this.exploreDungeonSize = (t) => ({
            rows: {
              min: 9 - Math.floor((3 * t) / 40),
              max: 12 - Math.floor(t / 10),
            },
            cols: {
              min: 10 - Math.floor((5 * t) / 105),
              max: 15 - Math.floor((5 * t) / 50),
            },
          }));
          static #i = (this.extraCostForLvl = (t) => 1 + 0.1 * (t - 10));
          static getDungeonExploreExtraCostDifficult(t, i, r) {
            return (
              console.log(
                "DungeonTypeStrategy.extraCostForLvl(lvl)",
                i,
                e.extraCostForLvl(i)
              ),
              e.extraCostForLvl(i) * t.extraCostMulti.difficult(r)
            );
          }
          static getDungeonExploreExtraCostLoot(t, i, r) {
            return e.extraCostForLvl(i) * t.extraCostMulti.loot(r);
          }
          static getDungeonExploreExtraCostSize(t, i, r) {
            return e.extraCostForLvl(i) * t.extraCostMulti.size(r);
          }
          static getDungeonExploreTotalCost(t, i, r, o, s) {
            const a = [];
            a.push(...JSON.parse(JSON.stringify(t.cost)));
            const l = this.getDungeonExploreExtraCostDifficult(t, i, r),
              c = this.getDungeonExploreExtraCostLoot(t, i, o),
              u = this.getDungeonExploreExtraCostSize(t, i, s);
            let f = [...t.extraCost.difficult],
              g = [...t.extraCost.loot],
              m = [...t.extraCost.size];
            return (
              l &&
                ((f = f.map((_) => ({
                  name: _.name,
                  type: _.type,
                  value: Math.ceil(_.value * l),
                }))),
                a.push(...f)),
              c &&
                ((g = g.map((_) => ({
                  name: _.name,
                  type: _.type,
                  value: Math.ceil(_.value * c),
                }))),
                a.push(...g)),
              u &&
                ((m = m.map((_) => ({
                  name: _.name,
                  type: _.type,
                  value: Math.ceil(_.value * u),
                }))),
                a.push(...m)),
              rP.stackItems(a)
            );
          }
        }
        return e;
      })();
      const _0 = [
        {
          type: So.slime,
          name: "Slumpy Swamp",
          minLvl: 10,
          enemyLoot: [
            {
              map: -1,
              optionRatio: [0.95, 0.1],
              option: [
                [
                  {
                    item: { name: "slime", type: "fluid", value: 50 },
                    lootIncrease: (e) => 30 + 30 * e,
                  },
                ],
                [
                  {
                    item: { name: "blood", type: "fluid", value: 50 },
                    lootIncrease: (e) => 30 + 30 * e,
                  },
                ],
              ],
            },
          ],
          cost: [{ name: "blood", type: "flask", value: 15 }],
          extraCost: {
            difficult: [{ name: "slime", type: "flask", value: 0.008 }],
            loot: [{ name: "blood", type: "flask", value: 0.004 }],
            size: [{ name: "water", type: "flask", value: 0.0025 }],
          },
          extraCostMulti: {
            difficult: (e) => Math.pow(e, 2),
            loot: (e) => Math.pow(e, 2),
            size: (e) => Math.pow(e, 2),
          },
        },
        {
          type: So.blood,
          name: "Bloody Desert",
          minLvl: 10,
          enemyLoot: [
            {
              map: -1,
              optionRatio: [1],
              option: [
                [
                  {
                    item: { name: "blood", type: "fluid", value: 50 },
                    lootIncrease: (e) => 30 + 30 * e,
                  },
                ],
              ],
            },
          ],
          cost: [{ name: "blood", type: "flask", value: 500 }],
          extraCost: {
            difficult: [{ name: "slime", type: "flask", value: 500 }],
            loot: [{ name: "slime", type: "flask", value: 500 }],
            size: [{ name: "slime", type: "flask", value: 500 }],
          },
          extraCostMulti: {
            difficult: (e) => Math.pow(e, 2),
            loot: (e) => Math.pow(e, 2),
            size: (e) => Math.pow(e, 2),
          },
        },
        {
          type: So.water,
          name: "Empty Lake",
          minLvl: 20,
          enemyLoot: [
            {
              map: -1,
              optionRatio: [1],
              option: [
                [
                  {
                    item: { name: "water", type: "fluid", value: 120 },
                    lootIncrease: (e) => 30 + 30 * e,
                  },
                ],
              ],
            },
          ],
          cost: [{ name: "water", type: "flask", value: 500 }],
          extraCost: {
            difficult: [{ name: "water", type: "flask", value: 500 }],
            loot: [{ name: "water", type: "flask", value: 500 }],
            size: [{ name: "water", type: "flask", value: 500 }],
          },
          extraCostMulti: {
            difficult: (e) => Math.pow(e, 2),
            loot: (e) => Math.pow(e, 2),
            size: (e) => Math.pow(e, 2),
          },
        },
      ];
      class ko {
        constructor(
          n,
          t = !1,
          i = 0,
          r = Zt.normal,
          o = he.world,
          s = So.slime,
          a = !1,
          l = 1,
          c = 1
        ) {
          (this.type = lg[0]),
            (this.loot = []),
            (this.strengthModifier = 1),
            (this.strengthModifier = l),
            (this.type = lg.find(
              n.type ? (u) => u.type === n.type.type : (u) => u.type === r
            )),
            (this.level = n.level ?? 0),
            (this.maxHealth = n.maxHealth ?? 0),
            (this.health = n.health ?? 0),
            (this.soulAmount = n.soulAmount ?? 0),
            (this.loot = n.loot ?? []),
            (this.hasLoot = n.hasLoot ?? []),
            (this.pos = n.pos ?? 0),
            t &&
              ((this.level =
                o === he.labyrinth ? 10 + 100 * i : n.level + 100 * i),
              (this.type = lg.find((u) => u.type === r)),
              (this.maxHealth = this.type.healthFunc(this.level) * l),
              (this.health = this.maxHealth),
              (this.soulAmount = ((e) =>
                Math.round(Math.pow(this.level / 100, 1.8)))()),
              this.setLoot(a, s, o, i, c));
        }
        setLoot(n, t, i, r, o) {
          if (n || this.type.lootChance(0)) {
            let s = Lee;
            switch (i) {
              case he.labyrinth:
                s = Bee;
                break;
              case he.dungeon:
                s = _0.find((g) => g.type === t).enemyLoot;
            }
            s = s.filter((g) => g.map <= r).sort((g, m) => m.map - g.map);
            const a = s[0],
              l = Math.random();
            let c = 0,
              u = a.optionRatio[c];
            for (; l > u && void 0 !== a.optionRatio[c + 1]; )
              c++, (u += a.optionRatio[c]);
            const f = JSON.parse(JSON.stringify(a.option[c]));
            for (let g = 0; g < f.length; g++)
              f[g].item.value =
                a.option[c][g].lootIncrease(r) * fs.calcMinMaxMult(20, 20) * o;
            if (this.type.type === Zt.worldEndBoss) {
              const g = Nee.filter((m) => m.map <= r).sort(
                (m, _) => _.map - m.map
              )[0];
              if (g) {
                for (
                  u = g.optionRatio[c];
                  l > u && void 0 !== g.optionRatio[c + 1];

                )
                  c++, (u += g.optionRatio[c]);
                const m = JSON.parse(JSON.stringify(g.option[c]));
                for (let _ = 0; _ < m.length; _++)
                  m[_].item.value =
                    g.option[c][_].lootIncrease(r) *
                    fs.calcMinMaxMult(20, 20) *
                    o;
                this.loot.push(...m.map((_) => _.item));
              }
            }
            this.loot.push(...f.map((g) => g.item)),
              (this.hasLoot = this.loot.map((g) => g.type));
          }
        }
        makeDmg() {
          return (
            this.type.dmgFunc(this.level) *
            fs.calcMinMaxMult(this.type.minDmg, this.type.maxDmg) *
            this.strengthModifier
          );
        }
      }
      class y0 {
        constructor(n) {
          (this.cols = n.cols ?? 10),
            (this.rows = n.rows ?? 10),
            (this.mapLevel = n.mapLevel ?? 0),
            (this.cellAmount = n.cellAmount ?? 0),
            (this.enemy = n.enemy ? n.enemy.map((t) => new ko(t)) : []),
            (this.cell = n.cell ? n.cell.map((t) => new cg(t)) : []),
            (this.name = n.name ?? "World " + (1 + this.mapLevel)),
            (this.cellAmount = this.rows * this.cols);
        }
        gridIndex(n, t) {
          return n < 0 || t < 0 || n > this.cols - 1 || t > this.rows - 1
            ? -1
            : n + t * this.cols;
        }
        getCell(n) {
          return this.cell[n];
        }
        getCellByCoord(n, t) {
          if (!(n < 0 || t < 0 || n > this.cols - 1 || t > this.rows - 1))
            return this.cell[n + t * this.cols];
        }
        getEnemy(n) {
          return this.enemy.find((t) => t.pos === n);
        }
        allDead() {
          return this.enemy.every((n) => n.health <= 0);
        }
      }
      class v0 extends y0 {
        constructor(n, t = !1) {
          if ((super(n), t)) {
            this.mapLevel < 10 &&
              ((this.rows = this.mapLevel + 1),
              (this.cellAmount = this.rows * this.cols));
            for (let i = 0; i < this.rows; i++)
              for (let r = 0; r < this.cols; r++)
                this.cell.push(new cg({ x: r, y: i }));
            for (let i = 0; i < this.cellAmount; i++)
              this.enemy.push(
                i === this.cellAmount - 1
                  ? new ko(
                      { level: i, pos: i },
                      !0,
                      this.mapLevel,
                      Zt.worldEndBoss,
                      he.world
                    )
                  : new ko({ level: i, pos: i }, !0, this.mapLevel, Zt.normal)
              );
            (this.cell[0].active = !0), (this.cell[0].visited = !0);
          }
        }
      }
      class b0 extends y0 {
        constructor(n, t = !1) {
          if (
            (super(n),
            (this.createdWithKeys = 1),
            (this.curPos = 0),
            (this.createdWithKeys = n.createdWithKeys ?? 1),
            (this.curPos = n.curPos ?? 0),
            t)
          ) {
            this.name = "Labyrinth";
            for (let o = 0; o < this.rows; o++)
              for (let s = 0; s < this.cols; s++)
                this.cell.push(new cg({ x: s, y: o }));
            const i = [];
            let r = this.cell[0];
            for (
              r.prepared = !0, r.active = !0, r.visible = !0, r.visited = !0;
              void 0 !== this.checkNeighbours(r) || i.length > 0;

            ) {
              const o = this.checkNeighbours(r);
              o
                ? ((o.prepared = !0),
                  this.checkNeighbours(o) ? i.push(r) : (o.deadEnd = !0),
                  this.removeWallsBetween(r, o),
                  (r = o))
                : i.length > 0 && (r = i.pop());
            }
            for (let o = 0; o < this.cellAmount; o++)
              if (0 !== o) {
                const s = Math.random();
                this.cell[o].deadEnd
                  ? this.enemy.push(
                      new ko(
                        { level: o, pos: o },
                        !0,
                        this.mapLevel,
                        s > 0.4 ? Zt.boss : s > 0.1 ? Zt.smallBoss : Zt.normal,
                        he.labyrinth,
                        null,
                        !0
                      )
                    )
                  : s > 0.7 &&
                    this.enemy.push(
                      new ko(
                        { level: o, pos: o },
                        !0,
                        this.mapLevel,
                        Zt.normal,
                        he.labyrinth
                      )
                    );
              }
          }
        }
        removeWallsBetween(n, t) {
          const i = t.x - n.x,
            r = t.y - n.y;
          1 === i
            ? ((n.walls[1] = !1), (t.walls[3] = !1))
            : -1 === i
            ? ((n.walls[3] = !1), (t.walls[1] = !1))
            : 1 === r
            ? ((n.walls[2] = !1), (t.walls[0] = !1))
            : -1 === r && ((n.walls[0] = !1), (t.walls[2] = !1));
        }
        checkNeighbours(n) {
          const t = [],
            i = this.cell[this.gridIndex(n.x, n.y + 1)],
            r = this.cell[this.gridIndex(n.x + 1, n.y)],
            o = this.cell[this.gridIndex(n.x, n.y - 1)],
            s = this.cell[this.gridIndex(n.x - 1, n.y)];
          if (
            (i && !i.prepared && t.push(i),
            r && !r.prepared && t.push(r),
            o && !o.prepared && t.push(o),
            s && !s.prepared && t.push(s),
            t.length > 0)
          )
            return t[Math.floor(Math.random() * t.length)];
        }
        setAllNeighboursVisible(n, t, i) {
          const r = [];
          if (
            (r.push(this.getCellByCoord(n, t - 1)),
            r.push(this.getCellByCoord(n + 1, t)),
            r.push(this.getCellByCoord(n, t + 1)),
            r.push(this.getCellByCoord(n - 1, t)),
            0 === i)
          ) {
            let o = t;
            for (
              ;
              this.getCellByCoord(n, o) && !this.getCellByCoord(n, o).walls[i];

            )
              o--, r.push(this.getCellByCoord(n, o));
          } else if (2 === i) {
            let o = t;
            for (
              ;
              this.getCellByCoord(n, o) && !this.getCellByCoord(n, o).walls[i];

            )
              o++, r.push(this.getCellByCoord(n, o));
          } else if (1 === i) {
            let o = n;
            for (
              ;
              this.getCellByCoord(o, t) && !this.getCellByCoord(o, t).walls[i];

            )
              o++, r.push(this.getCellByCoord(o, t));
          } else if (3 === i) {
            let o = n;
            for (
              ;
              this.getCellByCoord(o, t) && !this.getCellByCoord(o, t).walls[i];

            )
              o--, r.push(this.getCellByCoord(o, t));
          }
          r.map((o) => {
            o && (o.visible = !0);
          });
        }
      }
      const oP = {
        health: 50,
        level: 0,
        ep: 0,
        isThrottled: !1,
        curWorldPos: 0,
        upgrades: [],
        openMapI: 0,
        labyKeys: 0,
        labyBonus: 0,
        highestMap: 0,
        myTurn: !0,
        curWorldMap: new v0({ cols: 10, rows: 1 }, !0),
        labyrinth: [new b0({ cols: 10, rows: 8 }, !0)],
        dungeons: [],
        curMenu: he.labyrinth,
      };
      class sP {
        constructor(n) {
          (this.name = "slime"),
            (this.value = 0),
            (this.name = n?.name ?? "slime"),
            (this.value = n?.value ?? 0);
        }
      }
      const aP = {
        fluid: [new sP({ name: "slime", value: 0 })],
        flask: [],
        mana: 0,
        maxMana: 0,
        reactor: [],
        magicReactor: [],
        upgrades: [{ id: 0, type: "clicker", subType: "frog", text: "start" }],
        capacityUpgrades: [],
        combatUpgrades: [],
        brewingQueue: [],
        combat: void 0,
        clicker: [],
        alreadySupported: !1,
      };
      class w0 {
        constructor(n) {
          (this.name = n.name), (this.type = n.type), (this.value = n.value);
        }
      }
      class Vee {
        constructor(n) {
          (this.item = n.item),
            (this.duration = n.duration ?? 0),
            (this.startDate = n.startDate ?? 0);
        }
      }
      class C0 {
        constructor(n) {
          (this.fluid = n?.fluid ?? []),
            (this.flask = n?.flask ?? []),
            (this.reactor = n?.reactor ?? []),
            (this.magicReactor = n?.magicReactor ?? []),
            (this.upgrades = n?.upgrades ?? []),
            (this.combatUpgrades = n?.combatUpgrades ?? []),
            (this.capacityUpgrades = n?.capacityUpgrades ?? []),
            (this.combat = n?.combat),
            (this.clicker = n?.clicker ?? []),
            (this.brewingQueue = n?.brewingQueue ?? []),
            (this.alreadySupported = n.alreadySupported ?? !1);
        }
      }
      class x0 {
        constructor(n) {
          (this.portalUpgrades = n?.portalUpgrades ?? []),
            (this.eternal = n?.eternal ?? []);
        }
      }
      class M0 {
        constructor(n) {
          (this.autoBrewing = n.autoBrewing ?? ""),
            (this.hideChart = n.hideChart ?? !1),
            (this.hideAlmostBuyableFluid = n.hideAlmostBuyableFluid ?? !1),
            (this.autoHeal = n.autoHeal ?? !1),
            (this.autoShrink = n.autoShrink ?? !1),
            (this.statisticMaxPoints = n.statisticMaxPoints ?? 500),
            (this.statisticDelay = n.statisticDelay ?? 60),
            (this.lastMenuTab = n.lastMenuTab ?? "upgrades"),
            (this.bonusSeconds = n.bonusSeconds ?? 0),
            (this.lastSave = n?.lastSave ?? Date.now());
        }
      }
      class D0 {
        constructor(n) {
          (this.timing = n.timing ?? new Hee({})),
            (this.world = n.world ?? new zee({}));
        }
      }
      class zee {
        constructor(n) {
          this.highest = n.highest ?? 0;
        }
      }
      class Hee {
        constructor(n) {
          (this.lastTimeCheck = n.lastTimeCheck ?? Date.now()),
            (this.timeForRound = n.timeForRound ?? 0),
            (this.timeTotal = n.timeTotal ?? 0);
        }
      }
      class S0 extends y0 {
        constructor(n, t = !1) {
          if (
            (super(n),
            (this.curPos = 0),
            (this.cleared = 0),
            (this.enemyStrength = n.enemyStrength ?? 1),
            (this.lootPerc = n.lootPerc ?? 1),
            (this.name = n.name ?? "Dungeon " + (1 + n.mapLevel)),
            (this.curPos = n.curPos ?? 0),
            (this.cleared = n.cleared ?? 0),
            (this.type = n.type),
            t)
          ) {
            for (let i = 0; i < this.rows; i++)
              for (let r = 0; r < this.cols; r++)
                this.cell.push(new cg({ x: r, y: i }));
            for (let i = 0; i < this.cellAmount; i++)
              this.enemy.push(
                new ko(
                  { level: i, pos: i },
                  !0,
                  this.mapLevel,
                  i === this.cellAmount - 1 ? Zt.boss : Zt.normal,
                  he.dungeon,
                  this.type,
                  !1,
                  this.enemyStrength,
                  this.lootPerc
                )
              );
            (this.cell[0].active = !0), (this.cell[0].visited = !0);
          }
        }
      }
      class lP {
        static createCombat(n) {
          return new Fee({
            health: n.health,
            level: n.level,
            ep: n.ep,
            isThrottled: n.isThrottled,
            upgrades: n.upgrades,
            curWorldPos: n.curWorldPos,
            labyKeys: n.labyKeys,
            labyBonus: n.labyBonus,
            highestMap: n.highestMap,
            myTurn: n.myTurn,
            curWorldMap: n.curWorldMap ? new v0(n.curWorldMap) : oP.curWorldMap,
            openMapI: n.openMapI,
            labyrinth: n.labyrinth?.map((t) => new b0(t)),
            dungeons: n.dungeons?.map((t) => new S0(t)),
            curMenu: n.curMenu,
          });
        }
      }
      const k0 = [
          {
            id: 1,
            type: "capacity",
            subType: "slime",
            text: "double slime capacity",
            cost: [{ name: "slime", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) =>
              10 * Math.pow(2, e) -
              4 * e -
              2 -
              Math.floor(10 * Math.pow(2, e) * 0.5 * (e / (e + 20))),
            requireWorld: 0,
          },
          {
            id: 10,
            type: "capacity",
            subType: "blood",
            text: "double blood capacity",
            cost: [{ name: "blood", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) => 5 * Math.pow(2, e),
            requireWorld: 0,
          },
          {
            id: 20,
            type: "capacity",
            subType: "water",
            text: "double water capacity",
            cost: [{ name: "water", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) =>
              5 * Math.pow(2, e) -
              Math.floor(5 * Math.pow(2, e) * 0.5 * (e / (e + 40))),
            requireWorld: 3,
          },
          {
            id: 30,
            type: "capacity",
            subType: "ink",
            text: "double ink capacity",
            cost: [{ name: "ink", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) =>
              9 * Math.pow(2, e) -
              Math.floor(5 * Math.pow(2, e) * 0.5 * (e / (e + 40))),
            requireWorld: 3,
          },
          {
            id: 40,
            type: "capacity",
            subType: "oxygen",
            text: "double oxygen capacity",
            cost: [{ name: "oxygen", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) =>
              5 * Math.pow(2, e) -
              Math.floor(5 * Math.pow(2, e) * 0.5 * (e / (e + 40))),
            requireWorld: 5,
          },
          {
            id: 50,
            type: "capacity",
            subType: "soul",
            text: "double soul capacity",
            cost: [{ name: "soul", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) =>
              500 * Math.pow(2, e) -
              4 * e -
              2 -
              Math.floor(500 * Math.pow(2, e) * 0.5 * (e / (e + 20))),
            requireWorld: 0,
          },
          {
            id: 60,
            type: "capacity",
            subType: "clear soul",
            text: "double clear soul capacity",
            cost: [{ name: "clear soul", type: "fluid", value: 1 }],
            bonusAmount: (e) => 0,
            bonusAmountSpeed: (e) => 1,
            costIncrease: (e) =>
              10 * Math.pow(2, e) -
              Math.floor(5 * Math.pow(2, e) * 0.5 * (e / (e + 40))),
            requireWorld: 0,
          },
        ],
        sa = [
          {
            id: 1,
            type: "brewingmulti",
            subType: "slime",
            text: "Brew 3x as many flasks, but the duration is twice as long.",
            cost: [{ name: "slime", type: "eternity", value: 15 }],
            bonusAmount: (e) => Math.pow(3, e),
            bonusAmountSpeed: (e) => Math.pow(2, e),
            costIncrease: (e) => Math.pow(2, e),
            requireWorld: 20,
          },
          {
            id: 2,
            type: "brewingmulti",
            subType: "blood",
            text: "Brew 3x as many flasks, but the duration is twice as long.",
            cost: [{ name: "blood", type: "eternity", value: 5 }],
            bonusAmount: (e) => Math.pow(3, e),
            bonusAmountSpeed: (e) => Math.pow(2, e),
            costIncrease: (e) => Math.pow(2, e),
            requireWorld: 20,
          },
          {
            id: 3,
            type: "clickerRewardAmount",
            subType: "frog",
            text: "Frog clicking gives twices the slime",
            cost: [{ name: "slime", type: "eternity", value: 1 }],
            bonusAmount: (e) => e,
            bonusAmountSpeed: (e) => Math.pow(2, e),
            costIncrease: (e) => Math.pow(10, e),
            requireWorld: 30,
          },
        ],
        Wl = [
          {
            name: "slime",
            manaCost: 1e3,
            ticksToComplete: 100,
            input: [
              { name: "slime", type: "flask", value: 100 },
              { name: "clear soul", type: "flask", value: 1 },
            ],
            output: { name: "slime", value: 1, type: "eternity" },
          },
          {
            name: "blood",
            manaCost: 1e3,
            ticksToComplete: 100,
            input: [
              { name: "blood", type: "flask", value: 100 },
              { name: "clear soul", type: "flask", value: 1 },
            ],
            output: { name: "blood", value: 1, type: "eternity" },
          },
          {
            name: "bloodflaskgenerator",
            manaCost: 1e3,
            ticksToComplete: 10,
            input: [{ name: "clear soul", type: "flask", value: 10 }],
            output: { name: "blood", value: 100, type: "flask" },
          },
        ];
      class T0 {
        constructor(n) {
          (this.curType = n.curType),
            (this.shrink = !1),
            (this.started = !1),
            (this.ticks = n.ticks ?? 0),
            (this.inputMana = n.inputMana ?? 0),
            (this.inputValue = n.inputValue ?? []),
            (this.outputValue = n.outputValue ?? []);
        }
        getType() {
          return Wl.find((n) => n.name === this.curType);
        }
        run() {
          return 5;
        }
        toggleShrink() {
          this.shrink = !this.shrink;
        }
      }
      const gr = [
        {
          name: "slime",
          input: [
            { name: "slime", value: 0.5 / 1.2, type: "fluid" },
            { name: "blood", value: 0.1 / 1.2, type: "fluid" },
          ],
          reagentRatio: [5 / 6, 1 / 6],
          visibleRatio: [0.8, 0.2],
          output: { name: "blood", value: 0.5, type: "fluid" },
          power: 1,
          capacity: 16,
          outputCapacity: 12,
          inputFlow: [0.21001, 0.042001],
          inputFlowPerc: 0.01,
          outputFlow: 0.25,
          upgrades: [
            {
              id: 1,
              type: "inputFlowAndCapacity",
              subType: "inputFlowAndCapacity",
              text: "Increase your input by 100% and your capacity by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "slime", value: 20, type: "flask" },
                { name: "blood", value: 0.18, type: "flask" },
              ],
              costIncrease: [
                (e) => (e < 6 ? 20 * e + 10 : 22.5 * Math.pow(2, e)),
                (e) => 0.18 * Math.pow(2, e),
              ],
              infinite: !0,
            },
            {
              id: 2,
              type: "power",
              subType: "power",
              text: "Increase your Power by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "slime", value: 40, type: "fluid" },
                { name: "blood", value: 0.4, type: "flask" },
              ],
              costIncrease: [
                (e) => 40 * Math.pow(2, e),
                (e) => 0.4 * Math.pow(2, e),
              ],
              infinite: !0,
            },
            {
              id: 3,
              type: "outputFlow",
              subType: "outputFlow",
              text: "Increase your output by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "slime", value: 60, type: "fluid" },
                { name: "blood", value: 0.32, type: "flask" },
              ],
              costIncrease: [
                (e) => 60 * Math.pow(2, e),
                (e) => 0.32 * Math.pow(2, e),
              ],
              infinite: !0,
            },
          ],
        },
        {
          name: "waterslimer",
          input: [
            { name: "water", value: 0.024, type: "fluid" },
            { name: "blood", value: 0.024, type: "fluid" },
          ],
          reagentRatio: [0.5, 0.5],
          visibleRatio: [0.5, 0.5],
          output: { name: "slime", value: 2.2, type: "fluid" },
          power: 1,
          capacity: 0.2,
          outputCapacity: 20,
          inputFlow: [0.003, 0.003],
          inputFlowPerc: 0.01,
          outputFlow: 0.55,
          upgrades: [
            {
              id: 1,
              type: "inputFlowAndCapacity",
              subType: "inputFlowAndCapacity",
              text: "Increase your input by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "slime", value: 0.1, type: "flask" },
                { name: "water", value: 0.00125, type: "flask" },
              ],
              costIncrease: [(e) => 2 * e + 2, (e) => 0.00125 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 2,
              type: "power",
              subType: "power",
              text: "Increase your Power by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "slime", value: 2, type: "flask" },
                { name: "water", value: 0.09625, type: "flask" },
              ],
              costIncrease: [(e) => 2 * e + 2, (e) => 0.09625 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 3,
              type: "outputFlow",
              subType: "outputFlow",
              text: "Increase your output by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "slime", value: 5, type: "flask" },
                { name: "water", value: 0.001875, type: "flask" },
              ],
              costIncrease: [
                (e) => 3 * e + 5,
                (e) => 0.001875 * Math.pow(2, e),
              ],
              infinite: !0,
            },
          ],
        },
        {
          name: "water extractor",
          input: [{ name: "water", value: 10, type: "fluid" }],
          reagentRatio: [1],
          visibleRatio: [1],
          output: { name: "oxygen", value: 0.1, type: "fluid" },
          power: 1,
          capacity: 10,
          outputCapacity: 0.5,
          inputFlow: [0.15626],
          inputFlowPerc: 0.01,
          outputFlow: 0.0015626,
          upgrades: [
            {
              id: 1,
              type: "inputFlowAndCapacity",
              subType: "inputFlowAndCapacity",
              text: "Increase your input by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "water", value: 2, type: "flask" },
                { name: "oxygen", value: 0.00125, type: "flask" },
              ],
              costIncrease: [
                (e) => 2 * e + 2,
                (e) => (e < 5 ? 0 : 0.00125 * Math.pow(2, e)),
              ],
              infinite: !0,
            },
            {
              id: 2,
              type: "power",
              subType: "power",
              text: "Increase your Power by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "oxygen", value: 0.09625, type: "flask" }],
              costIncrease: [(e) => 0.09625 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 3,
              type: "outputFlow",
              subType: "outputFlow",
              text: "Increase your output by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [
                { name: "water", value: 6, type: "flask" },
                { name: "oxygen", value: 0.001875, type: "flask" },
              ],
              costIncrease: [
                (e) => 3 * e + 5,
                (e) => (e < 4 ? 0 : 0.001875 * Math.pow(2, e)),
              ],
              infinite: !0,
            },
          ],
        },
        {
          name: "inktowater",
          input: [{ name: "ink", value: 0.5, type: "fluid" }],
          reagentRatio: [1],
          visibleRatio: [1],
          output: { name: "water", value: 150, type: "fluid" },
          power: 0.5,
          capacity: 1,
          outputCapacity: 150,
          inputFlow: [0.001953125],
          inputFlowPerc: 0.01,
          outputFlow: 0.029296875,
          upgrades: [
            {
              id: 1,
              type: "inputFlowAndCapacity",
              subType: "inputFlowAndCapacity",
              text: "Increase your input by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "water", value: 2, type: "flask" }],
              costIncrease: [(e) => 2 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 2,
              type: "power",
              subType: "power",
              text: "Increase your Power by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "water", value: 6, type: "flask" }],
              costIncrease: [(e) => 15 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 3,
              type: "outputFlow",
              subType: "outputFlow",
              text: "Increase your output by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "water", value: 6, type: "flask" }],
              costIncrease: [(e) => 0.15625 * Math.pow(2, e)],
              infinite: !0,
            },
          ],
        },
        {
          name: "soul cleansing",
          input: [{ name: "soul", value: 0.6, type: "fluid" }],
          reagentRatio: [1],
          visibleRatio: [1],
          output: { name: "clear soul", value: 0.002, type: "fluid" },
          power: 1,
          capacity: 100,
          outputCapacity: 0.2,
          inputFlow: [1],
          inputFlowPerc: 0.01,
          outputFlow: 2e-4,
          upgrades: [
            {
              id: 1,
              type: "inputFlowAndCapacity",
              subType: "inputFlowAndCapacity",
              text: "Increase your input by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "clear soul", value: 2, type: "flask" }],
              costIncrease: [(e) => 2 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 2,
              type: "power",
              subType: "power",
              text: "Increase your Power by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "clear soul", value: 6, type: "flask" }],
              costIncrease: [(e) => 15 * Math.pow(2, e)],
              infinite: !0,
            },
            {
              id: 3,
              type: "outputFlow",
              subType: "outputFlow",
              text: "Increase your output by 100%",
              bonusMulti: (e) => Math.pow(2, e),
              cost: [{ name: "clear soul", value: 6, type: "flask" }],
              costIncrease: [(e) => 0.3125 * Math.pow(2, e)],
              infinite: !0,
            },
          ],
        },
        {
          name: "alkali mixture",
          input: [
            { name: "blood", value: 0.75, type: "fluid" },
            { name: "oxygen", value: 0.095 / 1.2, type: "fluid" },
          ],
          reagentRatio: [0.9, 0.095],
          visibleRatio: [0.9, 0.095],
          output: { name: "alkali", value: 0.1, type: "fluid" },
          power: 1,
          capacity: 10,
          outputCapacity: 5,
          inputFlow: [0.09, 0.095],
          inputFlowPerc: 0.01,
          outputFlow: 0.1,
          upgrades: [
            {
              id: 1,
              type: "inputFlowAndCapacity",
              subType: "inputFlowAndCapacity",
              text: "Increase your input by 50%",
              bonusMulti: (e) => Math.pow(1.5, e),
              cost: [
                { name: "water", value: 60, type: "fluid" },
                { name: "oxygen", value: 0.125, type: "fluid" },
              ],
              costIncrease: [
                (e) => 60 * Math.pow(1.5, e),
                (e) => 0.125 * Math.pow(1.5, e),
              ],
              infinite: !0,
            },
            {
              id: 2,
              type: "power",
              subType: "power",
              text: "Increase your Power by 50%",
              bonusMulti: (e) => Math.pow(1.5, e),
              cost: [{ name: "oxygen", value: 6, type: "fluid" }],
              costIncrease: [(e) => 6 * Math.pow(1.5, e)],
              infinite: !0,
            },
            {
              id: 3,
              type: "outputFlow",
              subType: "outputFlow",
              text: "Increase your output by 50%",
              bonusMulti: (e) => Math.pow(1.5, e),
              cost: [{ name: "oxygen", value: 0.1875, type: "fluid" }],
              costIncrease: [(e) => 0.1875 * Math.pow(1.5, e)],
              infinite: !0,
            },
          ],
        },
      ];
      class E0 {
        constructor(n) {
          (this.curType = n.curType),
            (this.inputFlow = n.inputFlow ?? []),
            (this.inputFlowPerc = n.inputFlowPerc ?? 0.01),
            (this.outputFlow = n.outputFlow ?? 0.5),
            (this.power = n.power ?? 1),
            (this.isRunning = !1),
            (this.lastOutput = 0),
            (this.lastInput = []),
            (this.lastReagent = 0),
            (this.reagentRatio = n.reagentRatio ?? [5 / 6, 1 / 6]),
            (this.visibleRatio = n.visibleRatio ?? [0.8, 0.2]),
            (this.shrink = !1),
            (this.stopInput = n.stopInput ?? this.inputFlow.map(() => !1)),
            (this.inputValue = n.inputValue ?? this.inputFlow.map(() => 0)),
            (this.outputValue = n.outputValue ?? 0),
            (this.upgrades = n.upgrades ?? []),
            this.recalc();
        }
        run() {
          const n = gr.find((s) => s.name === this.curType);
          if (void 0 === n) return this.outputValue;
          const t = this.power,
            i = [];
          for (const s of n.input) i.push(t * s.value);
          const r = t * n.output.value;
          let o = !1;
          return (
            n.input.map((s, a) => {
              this.inputValue[a] < i[a] && (o = !0);
            }),
            o || this.outputValue + r > this.capacity("output")
              ? ((this.isRunning = !1), this.outputValue)
              : (n.input.map((s, a) => {
                  this.inputValue[a] -= i[a];
                }),
                (this.outputValue += r),
                (this.isRunning = !0),
                this.outputValue)
          );
        }
        recalc() {
          const n = gr.find((l) => l.name === this.curType);
          if (void 0 === n) return;
          const t = this.upgrades.find((l) => "power" === l.type),
            i = n.upgrades.find((l) => l.id === t.id);
          t && i
            ? (this.power = i.bonusMulti(t.level) * n.power)
            : console.log("NOT FOUND1");
          const r = this.upgrades.find(
              (l) => "inputFlowAndCapacity" === l.type
            ),
            o = n.upgrades.find((l) => l.id === r.id);
          r && o
            ? this.inputFlow.map((l, c) => {
                this.inputFlow[c] = o.bonusMulti(r.level) * n.inputFlow[c];
              })
            : console.log("NOT FOUND2");
          const s = this.upgrades.find((l) => "outputFlow" === l.type),
            a = n.upgrades.find((l) => l.id === s.id);
          s && a
            ? (this.outputFlow = a.bonusMulti(s.level) * n.outputFlow)
            : console.log("NOT FOUND3");
        }
        getFluidFlow() {
          const n = gr.find((t) => t.name === this.curType);
          if (void 0 !== n)
            return {
              inputNames: n.input.map((t) => t.name),
              output: n.output,
              inputFlow: this.inputFlow,
              inputFlowPerc: this.inputFlowPerc,
              outputFlow: this.outputFlow,
            };
        }
        capacity(n = "") {
          const t = gr.find((o) => o.name === this.curType);
          if (void 0 === t) return;
          const i = this.upgrades.find(
              (o) => "inputFlowAndCapacity" === o.type
            ),
            r = t.upgrades.find((o) => o.id === i.id);
          return i && r
            ? "output" === n
              ? t.outputCapacity * r.bonusMulti(i.level)
              : t.capacity * r.bonusMulti(i.level)
            : "output" === n
            ? t.outputCapacity
            : t.capacity;
        }
        toggleShrink() {
          this.shrink = !this.shrink;
        }
        toggleInput(n) {
          void 0 !== this.stopInput[n] &&
            (this.stopInput[n] = !this.stopInput[n]);
        }
        addValues(n, t) {
          (this.lastInput[t] = n), (this.inputValue[t] += n);
        }
        buyUpgrade(n) {
          const t = this.upgrades.find((i) => i.id === n);
          void 0 !== t && t.level++, this.recalc();
        }
        addOutputValue(n) {
          (this.lastOutput = -n), (this.outputValue += n);
        }
      }
      class jee {
        constructor(n) {
          (this.id = n.id ?? 0),
            (this.type = n.type ?? ""),
            (this.subType = n.subType ?? ""),
            (this.level = n.level ?? 0),
            (this.text = n.text ?? "");
        }
      }
      class Uee {
        constructor(n) {
          (this.id = n.id ?? 0),
            (this.type = n.type ?? ""),
            (this.subType = n.subType ?? ""),
            (this.text = n.text ?? "");
        }
      }
      class cP {
        static createUpgrade(n) {
          return new jee({
            id: n.id,
            type: n.type,
            subType: n.subType,
            level: 0,
            text: n.text,
          });
        }
      }
      let I0 = (() => {
        class e {
          static syncNewFeatures(t, i) {
            this.findNewInfinityUpgrades(t, i), this.reClassReactors(t);
          }
          static findNewInfinityUpgrades(t, i) {
            for (const r of k0)
              t.capacityUpgrades.map((o) => o.id).includes(r.id) ||
                t.capacityUpgrades.push(cP.createUpgrade(r));
            for (const r of sa)
              i.portalUpgrades.map((o) => o.id).includes(r.id)
                ? (i.portalUpgrades.find((s) => s.id === r.id).text = r.text)
                : i.portalUpgrades.push(cP.createUpgrade(r));
          }
          static reClassReactors(t) {
            const i = t.reactor;
            t.reactor = [];
            for (const o of i) t.reactor.push(new E0(o));
            const r = t.magicReactor;
            t.magicReactor = [];
            for (const o of r) t.magicReactor.push(new T0(o));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const uP = [
        {
          id: 0,
          type: "clicker",
          subType: "frog",
          text: "start",
          cost: [],
          require: [],
          requireWorldZone: 0,
        },
        {
          id: 5,
          type: "clickspeed",
          subType: "frog",
          text: "Frog Clicker<br>Reduces the waiting time by 80%.",
          cost: [{ name: "slime", type: "fluid", value: 10 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 10,
          type: "doubleclicks",
          subType: "frog",
          text: "I hate clicking!<br>Increase the click reward by 90% AND the click duration by 60%",
          cost: [{ name: "slime", type: "fluid", value: 14 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 20,
          type: "autoClicker",
          subType: "frog",
          text: "AUTOCLICKER!",
          cost: [{ name: "slime", type: "flask", value: 3 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 40,
          type: "specialCountDecrease",
          subType: "frog",
          text: "kill the frog 20% faster",
          cost: [{ name: "blood", type: "fluid", value: 2 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 50,
          type: "unlockBrewing",
          subType: "slime",
          text: "Enable the ability to store fluids in flasks",
          cost: [
            { name: "slime", type: "fluid", value: 36 },
            { name: "blood", type: "fluid", value: 1 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 55,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [{ name: "slime", type: "flask", value: 2 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 60,
          type: "specialCountDecrease",
          subType: "frog",
          text: "kill the frog 20% faster",
          cost: [
            { name: "slime", type: "fluid", value: 50 },
            { name: "slime", type: "flask", value: 1 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 70,
          type: "doubleclicks",
          subType: "frog",
          text: "Frog Killer<br>Increase the click reward by 90% AND the click duration by 60%",
          cost: [{ name: "slime", type: "flask", value: 3 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 80,
          type: "specialCountDecrease",
          subType: "frog",
          text: "kill the frog 20% faster",
          cost: [
            { name: "blood", type: "fluid", value: 3 },
            { name: "slime", type: "flask", value: 1 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 90,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [{ name: "slime", type: "flask", value: 3 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 95,
          type: "clickspeed",
          subType: "frog",
          text: "Frog Clicker<br>Reduces the waiting time by 80%.",
          cost: [{ name: "slime", type: "flask", value: 10 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 100,
          type: "specialCountDecrease",
          subType: "frog",
          text: "kill the frog 20% faster",
          cost: [
            { name: "slime", type: "fluid", value: 50 },
            { name: "blood", type: "fluid", value: 4 },
            { name: "slime", type: "flask", value: 3 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 110,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [
            { name: "slime", type: "fluid", value: 100 },
            { name: "slime", type: "flask", value: 3 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 120,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [
            { name: "slime", type: "fluid", value: 150 },
            { name: "blood", type: "fluid", value: 3 },
            { name: "slime", type: "flask", value: 5 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 130,
          type: "doubleclicks",
          subType: "frog",
          text: "Frog Killer<br>Increase the click reward by 90% AND the click duration by 60%",
          cost: [
            { name: "slime", type: "fluid", value: 100 },
            { name: "slime", type: "flask", value: 5 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 150,
          type: "specialCountDecrease",
          subType: "frog",
          text: "kill the frog 20% faster",
          cost: [
            { name: "slime", type: "fluid", value: 200 },
            { name: "slime", type: "flask", value: 8 },
            { name: "blood", type: "fluid", value: 5 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 160,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [
            { name: "slime", type: "fluid", value: 350 },
            { name: "slime", type: "flask", value: 20 },
            { name: "blood", type: "fluid", value: 20 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 170,
          type: "unlockBrewing",
          subType: "blood",
          text: "brew blood flasks",
          cost: [
            { name: "slime", type: "fluid", value: 250 },
            { name: "slime", type: "flask", value: 15 },
            { name: "blood", type: "fluid", value: 10 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 190,
          type: "reactor",
          subType: "reactor",
          text: "buy your first reactor",
          cost: [{ name: "slime", type: "flask", value: 40 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 195,
          type: "autoBrewing",
          subType: "slime",
          text: "slime flasks will be generated automatically, if the queue is empty",
          cost: [
            { name: "slime", type: "fluid", value: 1e3 },
            { name: "blood", type: "flask", value: 1 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 210,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [
            { name: "slime", type: "fluid", value: 400 },
            { name: "slime", type: "flask", value: 50 },
            { name: "blood", type: "flask", value: 2 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 220,
          type: "brewingTimeBonus",
          subType: "blood",
          text: "Decrease blood brewing time by 10s (only new added flasks)",
          cost: [
            { name: "slime", type: "fluid", value: 500 },
            { name: "blood", type: "fluid", value: 150 },
            { name: "slime", type: "flask", value: 60 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 224,
          type: "clickspeed",
          subType: "frog",
          text: "Frog Clicker<br>Reduces the waiting time by 80%.",
          cost: [{ name: "blood", type: "flask", value: 10 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 225,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [
            { name: "slime", type: "fluid", value: 500 },
            { name: "blood", type: "fluid", value: 250 },
            { name: "slime", type: "flask", value: 75 },
            { name: "blood", type: "flask", value: 3 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 230,
          type: "doubleclicks",
          subType: "frog",
          text: "Frog Killer<br>Increase the click reward by 90% AND the click duration by 60%",
          cost: [
            { name: "blood", type: "fluid", value: 800 },
            { name: "slime", type: "flask", value: 80 },
            { name: "blood", type: "flask", value: 4 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 240,
          type: "brewingTimeBonus",
          subType: "blood",
          text: "Decrease blood brewing time by 10s (only new added flasks)",
          cost: [
            { name: "blood", type: "fluid", value: 1e3 },
            { name: "blood", type: "flask", value: 3 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 245,
          type: "autoBrewing",
          subType: "blood",
          text: "auto brewing for blood flasks",
          cost: [{ name: "blood", type: "flask", value: 50 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 260,
          type: "brewingTimeBonus",
          subType: "blood",
          text: "Decrease blood brewing time by 10s (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 30 },
            { name: "blood", type: "flask", value: 8 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 270,
          type: "brewingTimeBonus",
          subType: "slime",
          text: "Decrease slime brewing time by 25% (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 50 },
            { name: "blood", type: "flask", value: 10 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 280,
          type: "unlockCombat",
          subType: "unlockCombat",
          text: "is there anything more?",
          cost: [
            { name: "slime", type: "fluid", value: 2e3 },
            { name: "blood", type: "fluid", value: 3e3 },
            { name: "slime", type: "flask", value: 100 },
            { name: "blood", type: "flask", value: 50 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 290,
          type: "brewingTimeBonus",
          subType: "blood",
          text: "Decrease blood brewing time by 10s (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "blood", type: "flask", value: 30 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 300,
          type: "brewingTimeBonus",
          subType: "blood",
          text: "Decrease blood brewing time by 10s (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 150 },
            { name: "blood", type: "flask", value: 40 },
          ],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 320,
          type: "brewingTimeBonus",
          subType: "blood",
          text: "Decrease blood brewing time by 5s (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 150 },
            { name: "blood", type: "flask", value: 80 },
          ],
          require: ["frog"],
          requireWorldZone: 3,
        },
        {
          id: 330,
          type: "clicker",
          subType: "ghost",
          text: "something new",
          cost: [
            { name: "blood", type: "fluid", value: 5e3 },
            { name: "slime", type: "flask", value: 500 },
            { name: "blood", type: "flask", value: 100 },
          ],
          require: ["frog"],
          requireWorldZone: 5,
        },
        {
          id: 340,
          type: "doubleclicks",
          subType: "frog",
          text: "Frog Killer<br>Increase the click reward by 90% AND the click duration by 60%",
          cost: [{ name: "slime", type: "fluid", value: 5e3 }],
          require: ["frog"],
          requireWorldZone: 0,
        },
        {
          id: 350,
          type: "dungeonUnlock",
          subType: "slime",
          text: "Unlock the slumpy swamp",
          cost: [
            { name: "slime", type: "flask", value: 150 },
            { name: "blood", type: "flask", value: 120 },
          ],
          require: ["frog"],
          requireWorldZone: 9,
        },
        {
          id: 360,
          type: "autoClicker",
          subType: "ghost",
          text: "ghost AUTOCLICKER!",
          cost: [{ name: "ink", type: "fluid", value: 1 }],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 370,
          type: "unlockBrewing",
          subType: "water",
          text: "create waterflasks",
          cost: [
            { name: "ink", type: "fluid", value: 1 },
            { name: "water", type: "fluid", value: 80 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 380,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 1 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 390,
          type: "clickspeed",
          subType: "ghost",
          text: "Ghost can be clicked 50% more often",
          cost: [
            { name: "slime", type: "flask", value: 200 },
            { name: "water", type: "flask", value: 2 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 400,
          type: "reactor",
          subType: "reactor",
          text: "buy another reactor",
          cost: [
            { name: "ink", type: "fluid", value: 1 },
            { name: "water", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 410,
          type: "unlockReactor",
          subType: "waterslimer",
          text: "unlock new reactor type",
          cost: [
            { name: "blood", type: "fluid", value: 1e3 },
            { name: "water", type: "fluid", value: 100 },
            { name: "ink", type: "fluid", value: 5 },
            { name: "water", type: "flask", value: 4 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 420,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "blood", type: "flask", value: 50 },
            { name: "water", type: "flask", value: 5 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 430,
          type: "autoBrewing",
          subType: "water",
          text: "water flask will be filled automatically, if the queue is empty",
          cost: [
            { name: "blood", type: "fluid", value: 5e3 },
            { name: "water", type: "fluid", value: 1e3 },
            { name: "water", type: "flask", value: 8 },
          ],
          require: ["frog"],
          requireWorldZone: 14,
        },
        {
          id: 440,
          type: "clickspeed",
          subType: "ghost",
          text: "Ghost can be clicked 50% more often",
          cost: [
            { name: "slime", type: "flask", value: 300 },
            { name: "blood", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 8 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 450,
          type: "unlockReactor",
          subType: "water extractor",
          text: "water here wathere there waiter what?<br>unlock new reactor type",
          cost: [
            { name: "slime", type: "fluid", value: 2e4 },
            { name: "blood", type: "fluid", value: 1e4 },
            { name: "ink", type: "fluid", value: 25 },
            { name: "slime", type: "flask", value: 500 },
            { name: "blood", type: "flask", value: 250 },
            { name: "water", type: "flask", value: 15 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 460,
          type: "brewingTimeBonus",
          subType: "water",
          text: "Decrease water filling time by 30 sec (only new added flasks)",
          cost: [{ name: "water", type: "fluid", value: 1e3 }],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 470,
          type: "reactor",
          subType: "reactor",
          text: "buy a reactor",
          cost: [
            { name: "ink", type: "fluid", value: 1 },
            { name: "blood", type: "fluid", value: 1e4 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 480,
          type: "unlockReactor",
          subType: "inktowater",
          text: "new reactortype: transform ink to water",
          cost: [
            { name: "blood", type: "fluid", value: 1e4 },
            { name: "water", type: "fluid", value: 100 },
            { name: "ink", type: "fluid", value: 3 },
            { name: "oxygen", type: "fluid", value: 10 },
            { name: "slime", type: "flask", value: 100 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 490,
          type: "brewingTimeBonus",
          subType: "water",
          text: "Decrease water filling time by 30 sec (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "fluid", value: 150 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 500,
          type: "doubleclicks",
          subType: "frog",
          text: "Frog Killer<br>Increase the click reward by 90% AND the click duration by 60%",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "blood", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 4 },
            { name: "oxygen", type: "fluid", value: 10 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 510,
          type: "unlockBrewing",
          subType: "oxygen",
          text: "filter oxygen into flasks",
          cost: [
            { name: "water", type: "flask", value: 1 },
            { name: "oxygen", type: "fluid", value: 15 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 520,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "slime", type: "fluid", value: 1e4 },
            { name: "water", type: "flask", value: 1 },
            { name: "oxygen", type: "fluid", value: 5 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 530,
          type: "unlockSupport",
          subType: "unlockSupport",
          text: "Support my Work",
          cost: [
            { name: "slime", type: "fluid", value: 100 },
            { name: "blood", type: "fluid", value: 10 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 540,
          type: "clickspeed",
          subType: "ghost",
          text: "Ghost can be clicked 50% more often",
          cost: [
            { name: "blood", type: "fluid", value: 15e3 },
            { name: "water", type: "flask", value: 5 },
            { name: "oxygen", type: "fluid", value: 15 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 550,
          type: "brewingTimeBonus",
          subType: "water",
          text: "Decrease water filling time by 30 sec (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "fluid", value: 500 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 560,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 8 },
            { name: "oxygen", type: "fluid", value: 25 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 570,
          type: "magicreactor",
          subType: "magicreactor",
          text: "new reactor type",
          cost: [{ name: "blood", type: "fluid", value: 5e4 }],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 580,
          type: "clickspeed",
          subType: "ghost",
          text: "Ghost can be clicked 50% more often",
          cost: [
            { name: "water", type: "flask", value: 10 },
            { name: "oxygen", type: "fluid", value: 40 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 590,
          type: "brewingTimeBonus",
          subType: "water",
          text: "Decrease water filling time by 30 sec (only new added flasks)",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "fluid", value: 1e3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 600,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 12 },
            { name: "oxygen", type: "fluid", value: 50 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 610,
          type: "unlockReactor",
          subType: "soul cleansing",
          text: "soul cleansing",
          cost: [
            { name: "water", type: "fluid", value: 3e3 },
            { name: "water", type: "flask", value: 10 },
            { name: "oxygen", type: "flask", value: 1 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 620,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 15 },
            { name: "oxygen", type: "flask", value: 1 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 630,
          type: "clickspeed",
          subType: "ghost",
          text: "Ghost can be clicked 50% more often",
          cost: [
            { name: "slime", type: "flask", value: 100 },
            { name: "water", type: "flask", value: 20 },
            { name: "oxygen", type: "flask", value: 1 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 640,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 60 },
            { name: "oxygen", type: "flask", value: 2 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 650,
          type: "autoBrewing",
          subType: "oxygen",
          text: "oxygen flask will be filled automatically, if the queue is empty",
          cost: [
            { name: "blood", type: "flask", value: 100 },
            { name: "oxygen", type: "fluid", value: 100 },
            { name: "water", type: "flask", value: 50 },
          ],
          require: ["frog"],
          requireWorldZone: 14,
        },
        {
          id: 660,
          type: "unlockBrewing",
          subType: "clear soul",
          text: "filter souls into flasks",
          cost: [{ name: "oxygen", type: "flask", value: 10 }],
          require: ["ghost"],
          requireWorldZone: 20,
        },
        {
          id: 670,
          type: "unlockMagicReactor",
          subType: "eternalslime",
          text: "make slime for eternity",
          cost: [
            { name: "slime", type: "fluid", value: 1e5 },
            { name: "clear soul", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 680,
          type: "magicreactor",
          subType: "magicreactor",
          text: "magicreactor 2",
          cost: [
            { name: "oxygen", type: "flask", value: 5 },
            { name: "clear soul", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 690,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 70 },
            { name: "oxygen", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 700,
          type: "unlockMagicReactor",
          subType: "eternalblood",
          text: "make blood for eternity",
          cost: [
            { name: "blood", type: "fluid", value: 1e5 },
            { name: "clear soul", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 710,
          type: "brewingTimeBonus",
          subType: "oxygen",
          text: "Decrease oxygen filling time by 30 sec (only new added flasks)",
          cost: [
            { name: "water", type: "flask", value: 80 },
            { name: "oxygen", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 720,
          type: "clickspeed",
          subType: "ghost",
          text: "Ghost can be clicked 50% more often",
          cost: [
            { name: "water", type: "flask", value: 80 },
            { name: "oxygen", type: "flask", value: 4 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 730,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 7 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 740,
          type: "brewingTimeBonus",
          subType: "oxygen",
          text: "Decrease oxygen filling time by 30 sec (only new added flasks)",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 8 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 750,
          type: "unlockReactor",
          subType: "watertoink",
          text: "transform water back to ink",
          cost: [
            { name: "water", type: "flask", value: 90 },
            { name: "oxygen", type: "flask", value: 3 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 760,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 10 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 770,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 15 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 780,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 20 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 790,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 25 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 800,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 30 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 810,
          type: "brewingTimeBonus",
          subType: "oxygen",
          text: "Decrease oxygen filling time by 30 sec (only new added flasks)",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 35 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 820,
          type: "doubleclicks",
          subType: "ghost",
          text: "increase your ghostwater by 50% but also the clickspeed by 20%",
          cost: [
            { name: "water", type: "flask", value: 100 },
            { name: "oxygen", type: "flask", value: 50 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
        {
          id: 99999999,
          type: "unlockReactor",
          subType: "alkali mixture",
          text: "unlock new reactor type",
          cost: [
            { name: "water", type: "fluid", value: 3e3 },
            { name: "oxygen", type: "fluid", value: 50 },
          ],
          require: ["ghost"],
          requireWorldZone: 0,
        },
      ];
      let dP = (() => {
        class e {
          constructor() {
            (this.storage = localStorage), (this.cache = {});
          }
          get(t, i, r = !1) {
            if (!r && this.cache[t]) return this.cache[t];
            const o = JSON.parse(this.storage.getItem(t));
            return null === o && i ? i : o;
          }
          save(t, i, r = !1) {
            r || (this.cache[t] = JSON.stringify(i)),
              this.storage.setItem(t, JSON.stringify(i));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      class A0 {
        constructor(n, t = [], i = "", r = Date.now()) {
          (this.text = n),
            (this.loot = t),
            (this.innerHtml = i),
            (this.date = r);
        }
      }
      let yd = (() => {
        class e {
          constructor() {
            (this.obsLogs = new ct(10)), (this._logs = []);
          }
          addLog(t) {
            this._logs.push(t), this.obsLogs.next(this._logs);
          }
          add(t) {
            this.addLog(new A0(t));
          }
          addLoot(t) {
            this.addLog(new A0("your loot: ", t));
          }
          addInnerHtml(t) {
            this.addLog(new A0("", null, t));
          }
          getImg(t) {
            return dg[t];
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      var dg = (function (e) {
        return (e.labyKey = "assets/img/my/addons_44_t.png"), e;
      })(dg || {});
      let ps = (() => {
          class e {
            constructor(t) {
              (this.log = t), (this.obsOccure = new Ze());
            }
            occure(t, i, r) {
              this.obsOccure.next({ type: t, subType: i, level: r }),
                "newGame" === t
                  ? this.log.add(
                      "Welcome. Click the frog to start. You can also hold the spacebar or Enter or R to get through this anoying starting phase."
                    )
                  : "existingGame" === t
                  ? this.log.add("Welcome back. You missed nothing.")
                  : "capacity" === t && "slime" === i && 1 === r
                  ? this.log.add(
                      "Look at this graph beside me. Isn't it beautiful?"
                    )
                  : "clickerpressing" === t && "frog" === i
                  ? this.log.add("You can now hold the space key")
                  : "capacity" === t && "slime" === i && 3 === r
                  ? this.log.add("SPOILER: Soon you get an autoclicker!")
                  : "capacity" === t && "slime" === i && 4 === r
                  ? this.log.add("Warning: Don't overfill your brewing queue!")
                  : "capacity" === t && "slime" === i && 6 === r
                  ? this.log.add("Reactors with green backgrounds are running.")
                  : "capacity" === t && "blood" === i && 4 === r
                  ? this.log.add(
                      "Making more flasks than necessary may throttle your progress!"
                    )
                  : "capacity" === t && "blood" === i && 5 === r
                  ? this.log.add("Do you even care about my tips?")
                  : "capacity" === t && "blood" === i && 6 === r
                  ? this.log.add(
                      "Converting fluids is sometimes not a good idea. You can stop the reactor by pressing stop"
                    )
                  : "unlockBrewing" === t && "slime" === i
                  ? this.log.add(
                      "If you brew more than one flask the other are in queue."
                    )
                  : "reactor" === t
                  ? this.log.add(
                      "Reactors can transform fluids into fluids. Awesome!"
                    )
                  : "unlockCombat" === t
                  ? (this.log.add(
                      "You can find the Combat tab on the top right corner"
                    ),
                    this.log.add(
                      "You can Stop the auto Brewing by selecting the checkbox again"
                    ))
                  : "initialCombatWorldUnlock" === t
                  ? this.log.add("Use W A S D or the arrow keys to move")
                  : "clickerpressing" === t && "gohst" === i
                  ? this.log.add(
                      "For all multi-monitor-players: Theres a small hack, hold the space key and click outside the browser if you lazy to hold your key."
                    )
                  : "unlockReactor" === t && "inktowater" === i
                  ? this.log.add(
                      "You need to remove one of your reactor to use another. (Select a reactor and click on the trash can.) This will delete all upgrades and fluids inside the reactor."
                    )
                  : "fight" === t && "newWorldMap" === i
                  ? this.log.add("beaten: " + r)
                  : console.log("event nicht geloggt", t, i, r);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(yd));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        Wee = (() => {
          class e {
            constructor(t, i) {
              (this._storage = t), (this.event = i);
            }
            loadGame() {
              var t = this;
              return fr(function* () {
                return new Promise((i, r) => {
                  try {
                    let o = t._storage.get("alchyData");
                    null == o
                      ? (t.event.occure("newGame"), i(aP))
                      : (t.event.occure("existingGame"), i(o));
                  } catch (o) {
                    r({ err: o });
                  }
                });
              })();
            }
            load(t, i) {
              var r = this;
              return fr(function* () {
                return new Promise((o, s) => {
                  try {
                    let a = r._storage.get(t);
                    null == a
                      ? (r.event.occure("new" + t), o(i))
                      : (r.event.occure("found" + t), o(a));
                  } catch (a) {
                    s({ err: a });
                  }
                });
              })();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(dP), O(ps));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        $ee = (() => {
          class e {
            constructor(t) {
              this._storageService = t;
            }
            save(t, i) {
              this._storageService.save(t, i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(dP));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        je = (() => {
          class e {
            static #e = (this.GAME = "alchyData");
            static #t = (this.UPGRADE_UPDATE = "alchyUpgradeUpdate");
            static #n = (this.STATS = "alchyStatistic");
            static #i = (this.SETTINGS = "alchySettings");
            static #r = (this.GAME_PORTAL_DATA = "alchyPortalData");
            constructor(t, i, r) {
              (this.loadService = t),
                (this.saveService = i),
                (this._log = r),
                (this._saveInterval = 3e5),
                (this.isGameUpdated = new ct(1)),
                (this.obsResetGame = new Ze()),
                (this._isLoaded = !1),
                setInterval(() => this.save(), this._saveInterval);
            }
            resetGame() {
              (this.game = new C0(aP)),
                (this.settings.autoBrewing = ""),
                (this.settings.autoHeal = !1),
                (this.settings.lastMenuTab = "upgrades"),
                I0.syncNewFeatures(this.game, this.portal),
                this.obsResetGame.next();
            }
            load() {
              var t = this;
              return fr(function* () {
                (t.game = new C0(yield t.loadService.loadGame())),
                  (t.settings = new M0(
                    yield t.loadService.load(e.SETTINGS, new M0({}))
                  )),
                  (t.portal = new x0(
                    yield t.loadService.load(e.GAME_PORTAL_DATA, new x0({}))
                  )),
                  (t.upgradeUpdate = yield t.loadService.load(
                    e.UPGRADE_UPDATE,
                    "4"
                  )),
                  "4" !== t.upgradeUpdate &&
                    ((t.upgradeUpdate = "4"),
                    t.isGameUpdated.next(!0),
                    (t.game.reactor = []),
                    (t.game.magicReactor = []),
                    (t.game.combatUpgrades = []),
                    (t.game.upgrades = [
                      {
                        id: 0,
                        type: "clicker",
                        subType: "frog",
                        text: "start",
                      },
                    ])),
                  (t.statistic = new D0(
                    yield t.loadService.load(e.STATS, new D0({}))
                  )),
                  I0.syncNewFeatures(t.game, t.portal),
                  t.getBonusSeconds(),
                  t.prepareTiming(),
                  t.prepareCombat(),
                  (t._isLoaded = !0);
              })();
            }
            save() {
              this._isLoaded &&
                this.game &&
                ((this.settings.lastSave = Date.now()),
                this.saveService.save(e.GAME, this.game),
                this.saveService.save(e.GAME_PORTAL_DATA, this.portal),
                this.saveService.save(e.SETTINGS, this.settings),
                this.saveService.save(e.STATS, this.statistic),
                this.saveService.save(e.UPGRADE_UPDATE, this.upgradeUpdate),
                this._log.add("Game saved"));
            }
            getBonusSeconds() {
              this.settings.bonusSeconds += Math.floor(
                (Date.now() - this.settings.lastSave) / 1e3
              );
            }
            prepareTiming() {
              this.statistic.timing.lastTimeCheck = Date.now();
            }
            prepareCombat() {
              this.game.combat = lP.createCombat(
                this.game.combat ? this.game.combat : oP
              );
            }
            tryToImport(t, i, r, o) {
              var s = this;
              return fr(function* () {
                (s._isLoaded = !1),
                  (s.game = new C0(t)),
                  (s.settings = new M0(i)),
                  (s.portal = new x0(o)),
                  (s.statistic = new D0(r)),
                  I0.syncNewFeatures(s.game, s.portal),
                  s.getBonusSeconds(),
                  s.prepareCombat(),
                  s.save(),
                  (s._isLoaded = !0),
                  s.obsResetGame.next();
              })();
            }
            static #o = (this.ɵfac = function (i) {
              return new (i || e)(O(Wee), O($ee), O(yd));
            });
            static #s = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        hP = (() => {
          class e {
            constructor() {
              (this.alchyKey = "KeyR"),
                (this.pressing = new le()),
                (this._keydown = !1);
            }
            onKeyDown(t) {
              (t.code === this.alchyKey ||
                "Space" === t.code ||
                "Enter" === t.key) &&
                !this._keydown &&
                ((this._keydown = !0), this.startPressing());
            }
            onKeyUp(t) {
              t.stopPropagation(),
                (t.code === this.alchyKey || "Space" === t.code) &&
                  ((this._keydown = !1), clearInterval(this._timer));
            }
            startPressing() {
              this._keydown &&
                (this.pressing.emit(),
                setTimeout(() => {
                  this.startPressing();
                }, 100));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["", "alchyKey", ""]],
              hostBindings: function (i, r) {
                1 & i &&
                  F(
                    "keydown",
                    function (s) {
                      return r.onKeyDown(s);
                    },
                    0,
                    ao
                  )(
                    "keyup",
                    function (s) {
                      return r.onKeyUp(s);
                    },
                    !1,
                    ao
                  );
              },
              inputs: { alchyKey: "alchyKey" },
              outputs: { pressing: "pressing" },
            }));
          }
          return e;
        })();
      function X(e, n = !1) {
        return kt((t, i) => {
          let r = 0;
          t.subscribe(
            Tt(i, (o) => {
              const s = e(o, r++);
              (s || n) && i.next(o), !s && i.complete();
            })
          );
        });
      }
      class Qt {
        static #e = (this.POWERS = [
          { key: "Q", value: Math.pow(10, 15) },
          { key: "T", value: Math.pow(10, 12) },
          { key: "B", value: Math.pow(10, 9) },
          { key: "M", value: Math.pow(10, 6) },
          { key: "K", value: Math.pow(10, 3) },
        ]);
        transform(n, t = 2, i = !1) {
          if (isNaN(n) || null === n) return null;
          if (0 === n) return "0";
          let r = Math.abs(n);
          const o = Math.pow(10, t),
            s = n < 0;
          let a = "",
            l = Math.round;
          if ((i && (l = Math.floor), n < 0.01)) {
            const c = Math.floor(Math.log(n) / Math.LN10);
            let u = n / Math.pow(10, c);
            return (u = Math.round(u * o) / o), u + "e" + c;
          }
          if (n < 1) return "" + l(n * o) / o;
          if (n < 10) return "" + l((n * o) / 10) / (o / 10);
          if (n < 100 || n < 1e3) return "" + l((n * o) / 100) / (o / 100);
          if (n > 1e3 * Qt.POWERS[0].value) {
            const c = Math.ceil(Math.log(n + 1) / Math.LN10) - 1;
            let u = n / Math.pow(10, c);
            return (u = l(u * o) / o), u + "e" + c;
          }
          for (const c of Qt.POWERS) {
            let u = r / c.value;
            if (((u = Math.round(u * o) / o), u >= 1)) {
              (r = u), (a = c.key);
              break;
            }
          }
          return (s ? "-" : "") + r + a;
        }
        static #t = (this.ɵfac = function (t) {
          return new (t || Qt)();
        });
        static #n = (this.ɵpipe = Rn({
          name: "bignumber",
          type: Qt,
          pure: !0,
        }));
      }
      function qee(e, n) {
        1 & e && k(0, "i"),
          2 & e && Te("fas fa-tint " + I(2).item.name.replace(" ", "-"));
      }
      function Gee(e, n) {
        1 & e && k(0, "i"),
          2 & e && Te("fas fa-flask " + I(2).item.name.replace(" ", "-"));
      }
      function Yee(e, n) {
        if (
          (1 & e &&
            (Ct(0),
            h(1),
            pe(2, "bignumber"),
            E(3, qee, 1, 2, "i", 2),
            E(4, Gee, 1, 2, "i", 2),
            xt()),
          2 & e)
        ) {
          const t = I();
          b(1),
            ne(
              " ",
              Me(
                2,
                3,
                void 0 !== t.value
                  ? t.value * t.multiplier
                  : t.item.value * t.multiplier
              ),
              " "
            ),
            b(2),
            x("ngIf", "fluid" === t.item.type),
            b(1),
            x("ngIf", "flask" === t.item.type);
        }
      }
      function Kee(e, n) {
        if ((1 & e && k(0, "img", 5), 2 & e)) {
          const t = I(2);
          Te("eternal-" + t.item.name), x("src", t.eternityImg, Ho);
        }
      }
      function Zee(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 3),
            h(1),
            pe(2, "bignumber"),
            E(3, Kee, 1, 3, "img", 4),
            d()),
          2 & e)
        ) {
          const t = I();
          b(1),
            ne(
              " ",
              Me(
                2,
                2,
                void 0 !== t.value
                  ? t.value * t.multiplier
                  : t.item.value * t.multiplier
              ),
              " "
            ),
            b(2),
            x("ngIf", "eternity" === t.item.type);
        }
      }
      let Gi = (() => {
        class e {
          constructor() {
            this.multiplier = 1;
          }
          get eternityImg() {
            switch (this.item.name) {
              case "eterunalslime":
              case "blood":
                return "assets/img/my/38.PNG";
            }
            return "assets/img/my/38.PNG";
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-item"]],
            inputs: { item: "item", value: "value", multiplier: "multiplier" },
            decls: 2,
            vars: 2,
            consts: [
              [4, "ngIf"],
              ["class", "eternity", 4, "ngIf"],
              [3, "class", 4, "ngIf"],
              [1, "eternity"],
              [3, "class", "src", 4, "ngIf"],
              [3, "src"],
            ],
            template: function (i, r) {
              1 & i &&
                (E(0, Yee, 5, 5, "ng-container", 0), E(1, Zee, 4, 4, "div", 1)),
                2 & i &&
                  (x("ngIf", "eternity" !== r.item.type),
                  b(1),
                  x("ngIf", "eternity" === r.item.type));
            },
            dependencies: [be, Qt],
            styles: [
              "img[_ngcontent-%COMP%]{width:22px}.eternity[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.eternal-blood[_ngcontent-%COMP%]{filter:hue-rotate(210deg)}",
            ],
          }));
        }
        return e;
      })();
      const Qee = ["scrollContainer"];
      function Xee(e, n) {
        1 & e && k(0, "span", 6),
          2 & e && x("innerHTML", I().$implicit.innerHtml, zo);
      }
      function Jee(e, n) {
        if ((1 & e && (p(0, "div", 7), k(1, "alchy-item", 8), d()), 2 & e)) {
          const t = n.$implicit;
          b(1), x("item", t);
        }
      }
      function ete(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 3),
            h(1),
            pe(2, "date"),
            E(3, Xee, 1, 1, "span", 4),
            E(4, Jee, 2, 1, "div", 5),
            d()),
          2 & e)
        ) {
          const t = n.$implicit;
          b(1),
            mn(" ", lf(2, 4, t.date, "HH:mm"), " ", t.text, " "),
            b(2),
            x("ngIf", t.innerHtml),
            b(1),
            x("ngForOf", t.loot);
        }
      }
      let tte = (() => {
        class e {
          constructor(t) {
            (this._logService = t), (this.logs = []), (this._alive = !0);
          }
          ngOnInit() {
            this._logService.obsLogs
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                (this.logs = t),
                  this.scrollContainer?.nativeElement &&
                    setTimeout(() => {
                      this.scrollContainer.nativeElement.scrollTop =
                        this.scrollContainer.nativeElement.scrollHeight;
                    }, 100);
              });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(yd));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-log"]],
            viewQuery: function (i, r) {
              if ((1 & i && wn(Qee, 5), 2 & i)) {
                let o;
                an((o = ln())) && (r.scrollContainer = o.first);
              }
            },
            decls: 3,
            vars: 1,
            consts: [
              [1, "logs"],
              ["scrollContainer", ""],
              ["class", "log", 4, "ngFor", "ngForOf"],
              [1, "log"],
              [3, "innerHTML", 4, "ngIf"],
              ["class", "loot", 4, "ngFor", "ngForOf"],
              [3, "innerHTML"],
              [1, "loot"],
              [3, "item"],
            ],
            template: function (i, r) {
              1 & i && (p(0, "div", 0, 1), E(2, ete, 5, 7, "div", 2), d()),
                2 & i && (b(2), x("ngForOf", r.logs));
            },
            dependencies: [Qe, be, Gi, Lk],
            styles: [
              "[_nghost-%COMP%]{display:flex;height:100%}.logs[_ngcontent-%COMP%]{margin-top:auto;padding:8px;width:100%;max-height:250px;overflow-x:hidden;overflow-y:auto;background-color:#111}.logs[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#aaa;background-image:-webkit-linear-gradient(90deg,rgba(0,0,0,.8) 0%,rgba(0,0,0,.5) 50%,rgba(0,0,0,.8) 100%)}.logs[_ngcontent-%COMP%]::-webkit-scrollbar{width:10px;background-color:#aaa;background-image:-webkit-linear-gradient(90deg,rgba(0,0,0,.8) 0%,rgba(0,0,0,.5) 50%,rgba(0,0,0,.8) 100%)}.logs[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#555;background-image:-webkit-linear-gradient(90deg,rgba(255,255,255,.1) 0%,transparent,rgba(255,255,255,.1) 100%)}.logs[_ngcontent-%COMP%]   .log[_ngcontent-%COMP%]{padding:2px 8px;width:calc(100% - 18px);color:#aaa;background-color:#222;margin:1px 0}.logs[_ngcontent-%COMP%]   .log[_ngcontent-%COMP%]   .loot[_ngcontent-%COMP%]{display:inline}",
            ],
          }));
        }
        return e;
      })();
      const nte = [
        { name: "slime", startValue: 10, bonus: (e) => 10 * Math.pow(2, e) },
        { name: "blood", startValue: 10, bonus: (e) => 10 * Math.pow(2, e) },
        { name: "water", startValue: 5, bonus: (e) => 5 * Math.pow(2, e) },
        { name: "oxygen", startValue: 10, bonus: (e) => 10 * Math.pow(2, e) },
        { name: "ink", startValue: 10, bonus: (e) => 10 * Math.pow(2, e) },
        { name: "alkali", startValue: 10, bonus: (e) => 10 * Math.pow(2, e) },
        { name: "poison", startValue: 100, bonus: (e) => 100 * Math.pow(2, e) },
        { name: "soul", startValue: 1e4, bonus: (e) => 1e4 * Math.pow(2, e) },
        {
          name: "clear soul",
          startValue: 10,
          bonus: (e) => 10 * Math.pow(2, e),
        },
      ];
      let hg = (() => {
        class e {
          constructor(t) {
            this._data = t;
          }
          fluidCapacity(t) {
            const i = nte.find((o) => o.name === t);
            let r = 0;
            return (
              this._data.game.capacityUpgrades.forEach((o) => {
                "capacity" === o.type && o.subType === t && (r += o.level);
              }),
              void 0 !== i ? i.bonus(r) : 100
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(je));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const ite = function (e) {
        return { width: e };
      };
      let rte = (() => {
          class e {
            get capacity() {
              return this._fluidCapacityService.fluidCapacity(this.fluid.name);
            }
            constructor(t) {
              (this._fluidCapacityService = t), (this.small = !1);
            }
            ngOnInit() {}
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(hg));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-fluid-bar"]],
              inputs: { fluid: "fluid", small: "small" },
              decls: 6,
              vars: 15,
              consts: [
                [1, "bar", 3, "ngStyle"],
                [1, "label"],
              ],
              template: function (i, r) {
                1 & i &&
                  (p(0, "div"),
                  k(1, "div", 0),
                  p(2, "div", 1),
                  h(3),
                  pe(4, "bignumber"),
                  pe(5, "bignumber"),
                  d()()),
                  2 & i &&
                    (Te("fluid " + r.fluid.name.replace(" ", "-")),
                    Le("small", r.small),
                    b(1),
                    x(
                      "ngStyle",
                      Xn(13, ite, (100 * r.fluid.value) / r.capacity + "%")
                    ),
                    b(2),
                    mn(
                      "",
                      (function oS(e, n, t, i, r) {
                        const o = e + He,
                          s = B(),
                          a = ka(s, o);
                        return ou(s, o)
                          ? nS(s, Yn(), n, a.transform, t, i, r, a)
                          : a.transform(t, i, r);
                      })(4, 7, r.fluid.value, 2, !0),
                      " / ",
                      Me(5, 11, r.capacity),
                      ""
                    ));
              },
              dependencies: [Di, Qt],
              styles: [
                ".fluid[_ngcontent-%COMP%]{height:40px;line-height:40px;position:relative;border:1px solid #000;margin-bottom:10px;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.fluid.small[_ngcontent-%COMP%]{height:20px;line-height:20px;margin-bottom:4px}.fluid[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;text-align:center;z-index:2;opacity:.8}.fluid[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;height:100%;z-index:1;transition:.5s}.fluid.slime[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#277554}.fluid.blood[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#ab3939}",
              ],
            }));
          }
          return e;
        })(),
        fg = (() => {
          class e {
            constructor(t, i) {
              (this._data = t), (this._fluidCapacityService = i);
            }
            addFluid(t, i = 1) {
              const r = this._data.game.fluid.find((o) => o.name === t);
              r
                ? ((r.value += i),
                  r.value > this._fluidCapacityService.fluidCapacity(t) &&
                    (r.value = this._fluidCapacityService.fluidCapacity(t)))
                : (i > this._fluidCapacityService.fluidCapacity(t) &&
                    (i = this._fluidCapacityService.fluidCapacity(t)),
                  this._data.game.fluid.push(new sP({ name: t, value: i })));
            }
            get(t) {
              return this._data.game.fluid.find((i) => i.name === t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(hg));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      class ote {
        constructor(n) {
          (this.name = "slime"),
            (this.value = 0),
            (this.name = n?.name ?? "slime"),
            (this.value = n?.value ?? 0);
        }
      }
      let P0 = (() => {
          class e {
            constructor(t) {
              this._data = t;
            }
            addFlask(t, i = 1) {
              const r = this._data.game.flask.find((o) => o.name === t);
              r
                ? (r.value += i)
                : this._data.game.flask.push(new ote({ name: t, value: i }));
            }
            get(t) {
              return this._data.game.flask.find((i) => i.name === t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        ste = (() => {
          class e {
            constructor(t) {
              this._data = t;
            }
            addEternity(t, i = 1) {
              const r = this._data.portal.eternal.find((o) => o.name === t);
              r
                ? (r.value += i)
                : this._data.portal.eternal.push(
                    new w0({ name: t, value: i, type: "eternity" })
                  );
            }
            get(t) {
              return this._data.portal.eternal.find((i) => i.name === t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        Wn = (() => {
          class e {
            constructor(t, i, r, o) {
              (this._fluidService = t),
                (this._flaskService = i),
                (this._eternalService = r),
                (this._fluidCapacityService = o);
            }
            buy(t, i = 1) {
              for (const r of t)
                0 !== r.value &&
                  ("fluid" === r.type
                    ? this._fluidService.addFluid(r.name, -r.value * i)
                    : "flask" === r.type
                    ? this._flaskService.addFlask(r.name, -r.value * i)
                    : "eternity" === r.type &&
                      this._eternalService.addEternity(r.name, -r.value * i));
            }
            add(t, i = 1) {
              for (const r of t)
                "fluid" === r.type
                  ? this._fluidService.addFluid(r.name, r.value * i)
                  : "flask" === r.type
                  ? this._flaskService.addFlask(r.name, r.value * i)
                  : "eternity" === r.type &&
                    this._eternalService.addEternity(r.name, r.value * i);
            }
            buyable(t, i = 1) {
              for (const r of t)
                if (0 !== r.value)
                  if ("fluid" === r.type) {
                    if (
                      !this._fluidService.get(r.name) ||
                      r.value * i > this._fluidService.get(r.name)?.value
                    )
                      return !1;
                  } else if ("flask" === r.type) {
                    if (
                      !this._flaskService.get(r.name) ||
                      r.value * i > this._flaskService.get(r.name)?.value
                    )
                      return !1;
                  } else if (
                    "eternity" === r.type &&
                    (!this._eternalService.get(r.name) ||
                      r.value * i > this._eternalService.get(r.name)?.value)
                  )
                    return !1;
              return !0;
            }
            buyableHalf(t, i = 1) {
              for (const r of t)
                if (0 !== r.value)
                  if ("fluid" === r.type) {
                    if (
                      !this._fluidService.get(r.name) ||
                      r.value * i * 0.5 > this._fluidService.get(r.name)?.value
                    )
                      return !1;
                  } else if ("flask" === r.type) {
                    if (
                      !this._flaskService.get(r.name) ||
                      r.value * i * 0.5 > this._flaskService.get(r.name)?.value
                    )
                      return !1;
                  } else if (
                    "eternity" === r.type &&
                    (!this._eternalService.get(r.name) ||
                      r.value * i * 0.5 >
                        this._eternalService.get(r.name)?.value)
                  )
                    return !1;
              return !0;
            }
            buyableOnePercent(t, i = 1) {
              for (const r of t)
                if (0 !== r.value)
                  if ("fluid" === r.type) {
                    if (
                      !this._fluidService.get(r.name) ||
                      !this._fluidCapacityService.fluidCapacity(r.name) ||
                      this._fluidService.get(r.name)?.value <
                        0.03 *
                          this._fluidCapacityService.fluidCapacity(r.name) +
                          r.value * i
                    )
                      return !1;
                  } else if ("flask" === r.type) {
                    if (
                      !this._flaskService.get(r.name) ||
                      r.value * i > this._flaskService.get(r.name)?.value
                    )
                      return !1;
                  } else if (
                    "eternity" === r.type &&
                    (!this._eternalService.get(r.name) ||
                      r.value * i > this._eternalService.get(r.name)?.value)
                  )
                    return !1;
              return !0;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(fg), O(P0), O(ste), O(hg));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        ate = (() => {
          class e {
            constructor(t, i, r) {
              (this._data = t), (this._buyService = i), (this._event = r);
            }
            buy(t) {
              const i = k0.find((r) => r.id === t.id);
              if (this._buyService.buyable(i.cost, i.costIncrease(t.level))) {
                this._buyService.buy(i.cost, i.costIncrease(t.level));
                const r = this._data.game.capacityUpgrades.find(
                  (o) => o.id === i.id
                );
                if (r)
                  return (
                    this._event.occure(t.type, t.subType, t.level),
                    r.level++,
                    !0
                  );
              }
              return !1;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Wn), O(ps));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        $l = (() => {
          class e {
            constructor(t) {
              (this._data = t),
                (this.obsAutoHeal = new ct()),
                (this.obsAutoShrink = new ct()),
                (this.obsHideChart = new ct()),
                (this.obsHideAlmostBuyableFluid = new ct()),
                this.obsAutoHeal.next(this._data.settings.autoHeal);
            }
            changeAutoHeal(t) {
              (this._data.settings.autoHeal = t), this.obsAutoHeal.next(t);
            }
            toggleAutoShrink(t = !this._data.settings.autoHeal) {
              (this._data.settings.autoHeal = t),
                this.obsAutoShrink.next(this._data.settings.autoHeal);
            }
            toggleHideChart(t = !this._data.settings.hideChart) {
              (this._data.settings.hideChart = t),
                this.obsHideChart.next(this._data.settings.hideChart);
            }
            toggleHideAlmostBuyableFluid(
              t = !this._data.settings.hideAlmostBuyableFluid
            ) {
              (this._data.settings.hideAlmostBuyableFluid = t),
                this.obsHideAlmostBuyableFluid.next(
                  this._data.settings.hideAlmostBuyableFluid
                );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      function lte(e, n) {
        if ((1 & e && (p(0, "span"), k(1, "alchy-item", 5), d()), 2 & e)) {
          const t = n.$implicit,
            i = I(2);
          b(1),
            x("item", t)("value", i.blueprint.costIncrease(i.upgrade.level));
        }
      }
      function cte(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 1),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.buy(r.upgrade));
            }),
            p(1, "div", 2),
            h(2),
            d(),
            p(3, "div", 3),
            E(4, lte, 2, 2, "span", 4),
            d()();
        }
        if (2 & e) {
          const t = I();
          Le("buyable", t.buyable),
            b(2),
            ne(" ", t.upgrade.text, " "),
            b(2),
            x("ngForOf", t.blueprint.cost);
        }
      }
      let ute = (() => {
        class e {
          get blueprint() {
            return k0.find((t) => t.id === this.upgrade.id);
          }
          get buyable() {
            return this._buyService.buyable(
              this.blueprint.cost,
              this.blueprint.costIncrease(this.upgrade.level)
            );
          }
          get buyableHalf() {
            return (
              this.buyable ||
              (!this._isHideAlmostBuyableFluid &&
                this._buyService.buyableHalf(
                  this.blueprint.cost,
                  this.blueprint.costIncrease(this.upgrade.level)
                ))
            );
          }
          constructor(t, i, r) {
            (this._capacityUpgradeService = t),
              (this._buyService = i),
              (this._settingService = r),
              (this._isHideAlmostBuyableFluid = !1),
              (this._alive = !0),
              this._settingService.obsHideAlmostBuyableFluid
                .pipe(X(() => this._alive))
                .subscribe((o) => (this._isHideAlmostBuyableFluid = o));
          }
          buy(t) {
            this._capacityUpgradeService.buy(t);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(ate), M(Wn), M($l));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-fluid-upgrade"]],
            inputs: { upgrade: "upgrade" },
            decls: 1,
            vars: 1,
            consts: [
              ["class", "upgrade", 3, "buyable", "click", 4, "ngIf"],
              [1, "upgrade", 3, "click"],
              [1, "text"],
              [1, "costs"],
              [4, "ngFor", "ngForOf"],
              [3, "item", "value"],
            ],
            template: function (i, r) {
              1 & i && E(0, cte, 5, 4, "div", 0),
                2 & i && x("ngIf", r.buyableHalf);
            },
            dependencies: [Qe, be, Gi],
            styles: [
              ".upgrade[_ngcontent-%COMP%]{margin:10px 0;padding:10px;border:1px solid #000;transition:.3s;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.upgrade[_ngcontent-%COMP%]:hover{background-color:#444}.upgrade[_ngcontent-%COMP%]   .costs[_ngcontent-%COMP%]{text-align:right}.upgrade.buyable[_ngcontent-%COMP%]{background-color:#363}.upgrade.buyable[_ngcontent-%COMP%]:hover{background-color:#484}",
            ],
          }));
        }
        return e;
      })();
      function dte(e, n) {
        if ((1 & e && k(0, "alchy-fluid-bar", 2), 2 & e)) {
          const t = n.$implicit;
          x("small", I().fluids.length > 8)("fluid", t);
        }
      }
      function hte(e, n) {
        1 & e && k(0, "alchy-fluid-upgrade", 3),
          2 & e && x("upgrade", n.$implicit);
      }
      let fte = (() => {
        class e {
          constructor(t) {
            (this._data = t), (this.fluids = []), (this._alive = !0);
          }
          ngOnInit() {
            (this.fluids = this._data.game.fluid),
              (this.upgrades = this._data.game.capacityUpgrades),
              this._data.obsResetGame
                .pipe(X(() => this._alive))
                .subscribe(() => {
                  (this.fluids = this._data.game.fluid),
                    (this.upgrades = this._data.game.capacityUpgrades);
                });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-fluid"]],
            decls: 2,
            vars: 2,
            consts: [
              [3, "small", "fluid", 4, "ngFor", "ngForOf"],
              [3, "upgrade", 4, "ngFor", "ngForOf"],
              [3, "small", "fluid"],
              [3, "upgrade"],
            ],
            template: function (i, r) {
              1 & i &&
                (E(0, dte, 1, 2, "alchy-fluid-bar", 0),
                E(1, hte, 1, 1, "alchy-fluid-upgrade", 1)),
                2 & i &&
                  (x("ngForOf", r.fluids), b(1), x("ngForOf", r.upgrades));
            },
            dependencies: [Qe, rte, ute],
            styles: ["[_nghost-%COMP%]{margin:1rem 1rem 0;position:relative}"],
          }));
        }
        return e;
      })();
      function pte(e, n) {
        if (
          (1 & e && (p(0, "div"), h(1), pe(2, "bignumber"), k(3, "i"), d()),
          2 & e)
        ) {
          const t = n.$implicit;
          Te("flask " + t.name.replace(" ", "-")),
            b(1),
            ne(" ", Me(2, 5, t.value), " "),
            b(2),
            Te("fas fa-flask");
        }
      }
      let gte = (() => {
        class e {
          constructor(t) {
            (this._data = t), (this._alive = !0);
          }
          ngOnInit() {
            (this.flasks = this._data.game.flask),
              this._data.obsResetGame
                .pipe(X(() => this._alive))
                .subscribe(() => {
                  this.flasks = this._data.game.flask;
                });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-flask"]],
            decls: 2,
            vars: 1,
            consts: [
              [1, "stored-flask"],
              [3, "class", 4, "ngFor", "ngForOf"],
            ],
            template: function (i, r) {
              1 & i && (p(0, "div", 0), E(1, pte, 4, 7, "div", 1), d()),
                2 & i && (b(1), x("ngForOf", r.flasks));
            },
            dependencies: [Qe, Qt],
            styles: [
              ".stored-flask[_ngcontent-%COMP%]{margin:2rem 1rem;display:flex;justify-content:center;align-items:center;flex-wrap:wrap}.stored-flask[_ngcontent-%COMP%]   .flask[_ngcontent-%COMP%]{margin:.5rem}",
            ],
          }));
        }
        return e;
      })();
      var Ur = (function (e) {
        return (
          (e[(e.top = 0)] = "top"),
          (e[(e.right = 1)] = "right"),
          (e[(e.bottom = 2)] = "bottom"),
          (e[(e.left = 3)] = "left"),
          e
        );
      })(Ur || {});
      class Wr {
        constructor(n = 0, t = 0) {
          (this.x = 0), (this.y = 0), (this.x = n), (this.y = t);
        }
      }
      class mte {
        static directionToPoint(n) {
          return n === Ur.top
            ? new Wr(0, -1)
            : n === Ur.right
            ? new Wr(1, 0)
            : n === Ur.bottom
            ? new Wr(0, 1)
            : n === Ur.left
            ? new Wr(-1, 0)
            : void 0;
        }
      }
      class ut {
        static defaultEP(n) {
          return 10 + n / 1e3;
        }
        static enemyEP(n, t) {
          return n === Zt.smallBoss
            ? Math.floor(2 * this.defaultEP(t))
            : n === Zt.boss
            ? Math.floor(5 * this.defaultEP(t))
            : Math.floor(this.defaultEP(t));
        }
        static maxEP(n) {
          return 10 + 100 * n;
        }
        static maxHP(n) {
          return 50 + 5 * n;
        }
        static labyBonus(n) {
          return n > 9 ? (n > 40 ? n - 9 : (0.6 * n ** 2) / (n - 9)) : 0;
        }
        static labyKeyBonus(n) {
          return n > 9 ? n - 9 : 0;
        }
        static getMyDefaultDmg(n, t) {
          return 10 + n + t;
        }
        static getMyMinPercDmg() {
          return 50;
        }
        static getMyMaxPercDmg() {
          return 10;
        }
        static healFlaskAmount(n) {
          return 10 + 10 * n;
        }
        static enemyLootMulti(n) {
          return 1 + 0.5 * n;
        }
        static dungeonCostMulti(n) {
          return 1 + 0.5 * n;
        }
      }
      let Yi = (() => {
        class e {
          static #e = (this.maxOfflineSeconds = 1814400);
          constructor(t) {
            (this._data = t),
              (this._bonusSpeed = 1),
              (this._extraSecondsCost = 0),
              (this.obsToggleBonus = new ct()),
              this._data.settings.bonusSeconds > e.maxOfflineSeconds &&
                (this._data.settings.bonusSeconds = e.maxOfflineSeconds),
              this.changeSpeed(1),
              (this._handler = setTimeout(
                () => this.looseBonus(),
                1e3 * this.getBonusMulti()
              ));
          }
          changeSpeed(t) {
            t > 0 &&
              ((this._bonusSpeed = 1 / t),
              (this._extraSecondsCost = t - 1),
              this.obsToggleBonus.next(this.getBonusMulti()));
          }
          looseBonus() {
            clearTimeout(this._handler),
              (this._handler = null),
              this._extraSecondsCost > 0 &&
                ((this._data.settings.bonusSeconds -= this._extraSecondsCost),
                this._data.settings.bonusSeconds < 0 &&
                  (this.changeSpeed(1),
                  (this._data.settings.bonusSeconds = 0))),
              (this._handler = setTimeout(() => this.looseBonus(), 1e3));
          }
          getBonusMulti() {
            return this._bonusSpeed;
          }
          static #t = (this.ɵfac = function (i) {
            return new (i || e)(O(je));
          });
          static #n = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const fP = [
        {
          id: 0,
          type: "initialCombatWorldUnlock",
          subType: "initialCombatWorldUnlock",
          text: "Unlock your Combat Map",
          cost: [
            { name: "blood", type: "fluid", value: 1e3 },
            { name: "slime", type: "flask", value: 300 },
            { name: "blood", type: "flask", value: 100 },
          ],
          require: [],
          requireWorldZone: 0,
        },
        {
          id: 2,
          type: "auto",
          subType: "healing",
          text: "auto heal when needed",
          cost: [
            { name: "slime", type: "flask", value: 300 },
            { name: "blood", type: "flask", value: 50 },
          ],
          require: ["initialCombatWorldUnlock"],
          requireWorldZone: 2,
        },
      ];
      class pP {
        static createUpgrade(n) {
          return new Uee({
            id: n.id,
            type: n.type,
            subType: n.subType,
            text: n.text,
          });
        }
      }
      let ql = (() => {
          class e {
            constructor(t, i, r) {
              (this._data = t),
                (this._buyService = i),
                (this._event = r),
                (this.boughtUpgrades = new ct()),
                (this.unboughtUpgrades = new ct()),
                this.refreshUpgrades(),
                this._data.obsResetGame.subscribe(() => {
                  this.refreshUpgrades();
                });
            }
            refreshUpgrades() {
              const t = fP.filter(
                (r) =>
                  !this._data.game.combatUpgrades.some((o) => o.id === r.id)
              );
              this.unboughtUpgrades.next(t.sort(this.sortById));
              const i = fP.filter((r) =>
                this._data.game.combatUpgrades.some((o) => o.id === r.id)
              );
              this.boughtUpgrades.next(i.sort(this.sortById));
            }
            sortById(t, i) {
              return t.id < i.id ? -1 : 1;
            }
            buy(t) {
              if (this._buyService.buyable(t.cost)) {
                this._buyService.buy(t.cost);
                const i = pP.createUpgrade(t);
                return (
                  this._data.game.combatUpgrades.push(i),
                  this.onBuyUpgrade(t),
                  this.refreshUpgrades(),
                  this._event.occure(t.type, t.subType),
                  !0
                );
              }
              return !1;
            }
            onBuyUpgrade(t) {}
            getAmount(t, i) {
              let r = 0;
              return (
                this._data.game.combatUpgrades.forEach((o) => {
                  o.type === t && o.subType === i && r++;
                }),
                r
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Wn), O(ps));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        vd = (() => {
          class e {
            static #e = (this.DEFAULT_FIGHT_SPEED = 2e3);
            static #t = (this.DEFAULT_LABY_FIGHT_SPEED = 1e3);
            constructor(t, i, r, o, s, a) {
              (this._data = t),
                (this._offline = i),
                (this._log = r),
                (this._buyService = o),
                (this._combatUpgradeService = s),
                (this._event = a),
                (this.dungeonChanged = new ct()),
                (this.combatChanged = new ct()),
                (this.fightData = new ct()),
                (this.playerDmg = new Ze()),
                (this.enemyDmg = new Ze()),
                (this.loot = new Ze()),
                (this.fightSpeed = e.DEFAULT_FIGHT_SPEED),
                (this.fightTimer = null),
                (this.lastFight = Date.now()),
                (this._initialCombatWorldUnlock = !1),
                (this.c = this._data.game.combat),
                this._offline.obsToggleBonus.subscribe((l) => {
                  this.setFightSpeed();
                }),
                this._combatUpgradeService.boughtUpgrades.subscribe((l) => {
                  this._initialCombatWorldUnlock = !!l.find(
                    (c) => "initialCombatWorldUnlock" === c.type
                  );
                }),
                this.postFightData(),
                (this.c.curMenu === he.world ||
                  this.c.curMenu === he.labyrinth ||
                  this.c.curMenu === he.dungeon) &&
                  this.checkThrottleOrContinue();
            }
            getEP(t) {
              (this.c.ep += ut.enemyEP(t.type.type, t.level)),
                this.c.ep >= ut.maxEP(this.c.level) &&
                  ((this.c.ep -= ut.maxEP(this.c.level)), this.c.level++);
            }
            startFight() {
              !this.fightTimer &&
                this._initialCombatWorldUnlock &&
                (this.setFightSpeed(),
                (this.fightTimer = setTimeout(
                  () => this.fight(),
                  this.fightSpeed
                )),
                this.postFightData());
            }
            setFightSpeed() {
              this.fightSpeed =
                this.c.curMenu === he.labyrinth
                  ? e.DEFAULT_LABY_FIGHT_SPEED * this._offline.getBonusMulti()
                  : e.DEFAULT_FIGHT_SPEED * this._offline.getBonusMulti();
            }
            inFight() {
              return null !== this.fightTimer || this.c.isThrottled;
            }
            fight() {
              if (this.c.isThrottled)
                (this.c.health += Math.ceil(0.04 * ut.maxHP(this.c.level))),
                  this.c.health >= ut.maxHP(this.c.level) &&
                    ((this.c.health = ut.maxHP(this.c.level)),
                    (this.c.isThrottled = !1));
              else {
                const i = this.getCurEnemy();
                if (!i || 0 === i.health) return void this.stopFight();
                if (this.c.myTurn) {
                  const r = this.getMyDmg();
                  if (
                    ((i.health -= r),
                    this.enemyDmg.next({ dmg: r, speed: this.fightSpeed }),
                    i.health <= 0)
                  )
                    if (
                      ((i.health = 0),
                      i.loot.length > 0 &&
                        !this.getCurCell().looted &&
                        (this._buyService.add(i.loot),
                        this._log.addLoot(i.loot),
                        this.loot.next(i.loot)),
                      this.getEP(i),
                      (this.getCurCell().looted = !0),
                      this.c.curMenu === he.world)
                    )
                      this.moveToNextWorldCell();
                    else {
                      if (this.c.curMenu === he.labyrinth)
                        return (
                          this.c.labyrinth[this.c.openMapI].allDead() &&
                            ((this.c.labyBonus +=
                              ut.labyBonus(
                                this.c.labyrinth[this.c.openMapI].mapLevel
                              ) *
                              this.c.labyrinth[this.c.openMapI]
                                .createdWithKeys),
                            (this.c.curMenu = 0),
                            this.c.labyrinth.splice(this.c.openMapI, 1),
                            (this.c.openMapI = -1)),
                          void this.stopFight()
                        );
                      this.c.curMenu === he.dungeon &&
                        this.moveToNextDungeonCell();
                    }
                  this.c.myTurn = !this.c.myTurn;
                } else if (i.health > 0) {
                  const r = i.makeDmg();
                  (this.c.health -= r),
                    this.playerDmg.next({ dmg: r, speed: this.fightSpeed }),
                    (this.c.myTurn = !this.c.myTurn),
                    this.c.health <= 1 &&
                      ((this.c.isThrottled = !0),
                      (this.c.health = 1),
                      (this.c.myTurn = !1));
                }
              }
              this.postFightData();
              let t = 0;
              this.lastFightLength &&
                (t = Date.now() - this.lastFight - this.lastFightLength),
                (this.lastFight = Date.now()),
                (this.lastFightLength = this.fightSpeed - t),
                (this.fightTimer = setTimeout(
                  () => this.fight(),
                  this.lastFightLength
                ));
            }
            checkThrottleOrContinue() {
              this.c.isThrottled &&
                this.c.health >= ut.maxHP(this.c.level) &&
                (this.c.isThrottled = !1),
                this.startFight();
            }
            stopFight() {
              clearTimeout(this.fightTimer),
                (this.fightTimer = null),
                (this.lastFightLength = null),
                this.postFightData();
            }
            clearThrottle() {
              this.c.isThrottled = !1;
            }
            getEnemy(t) {
              return this.c.curMenu === he.world
                ? this.c.curWorldMap.getEnemy(t)
                : this.c.curMenu === he.labyrinth
                ? this.c.labyrinth[this.c.openMapI].getEnemy(t)
                : this.c.curMenu === he.dungeon
                ? this.c.dungeons[this.c.openMapI].getEnemy(t)
                : void 0;
            }
            getCurEnemy() {
              return this.c.curMenu === he.world
                ? this.c.curWorldMap.getEnemy(this.c.curWorldPos)
                : this.c.curMenu === he.labyrinth
                ? this.c.labyrinth[this.c.openMapI].getEnemy(
                    this.c.labyrinth[this.c.openMapI].curPos
                  )
                : this.c.curMenu === he.dungeon
                ? this.c.dungeons[this.c.openMapI].getEnemy(
                    this.c.dungeons[this.c.openMapI].curPos
                  )
                : void 0;
            }
            getCurCell() {
              return this.c.curMenu === he.world
                ? this.c.curWorldMap.getCell(this.c.curWorldPos)
                : this.c.curMenu === he.labyrinth
                ? this.c.labyrinth[this.c.openMapI].getCell(
                    this.c.labyrinth[this.c.openMapI].curPos
                  )
                : this.c.curMenu === he.dungeon
                ? this.c.dungeons[this.c.openMapI].getCell(
                    this.c.dungeons[this.c.openMapI].curPos
                  )
                : void 0;
            }
            getMyDmg() {
              return (
                ut.getMyDefaultDmg(this.c.level, this.c.labyBonus) *
                fs.calcMinMaxMult(ut.getMyMinPercDmg(), ut.getMyMaxPercDmg())
              );
            }
            postFightData() {
              this.fightData.next({
                health: this.c.health,
                maxHealth: ut.maxHP(this.c.level),
                level: this.c.level,
                ep: this.c.ep,
                maxEP: ut.maxEP(this.c.level),
                enemy: this.getCurEnemy(),
                minDmg:
                  ut.getMyDefaultDmg(this.c.level, this.c.labyBonus) *
                  (1 - 0.01 * ut.getMyMinPercDmg()),
                maxDmg:
                  ut.getMyDefaultDmg(this.c.level, this.c.labyBonus) *
                  (1 + 0.01 * ut.getMyMaxPercDmg()),
                labyBonus: this.c.labyBonus,
                isThrottled: this.c.isThrottled,
              }),
                this.combatChanged.next();
            }
            moveToNextWorldCell() {
              if (
                this.c.curMenu === he.world &&
                this.getCurEnemy() &&
                this.getCurEnemy().health <= 0
              )
                if (this.c.curWorldMap.getEnemy(this.c.curWorldPos + 1)) {
                  (this.c.curWorldMap.getCell(this.c.curWorldPos).active = !1),
                    this.c.curWorldPos++;
                  const i = this.c.curWorldMap.getCell(this.c.curWorldPos);
                  (i.active = !0), (i.visited = !0);
                } else
                  (this.c.labyKeys += ut.labyKeyBonus(
                    this.c.curWorldMap.mapLevel
                  )),
                    ut.labyKeyBonus(this.c.curWorldMap.mapLevel) &&
                      this._log.addInnerHtml(
                        "Worldzone cleared. There are " +
                          ut.labyKeyBonus(this.c.curWorldMap.mapLevel) +
                          '<img class="icon-img" src="' +
                          dg.labyKey +
                          '"> laying on the floor'
                      ),
                    this.nextWorldMap();
            }
            nextWorldMap() {
              this.c.curWorldPos = 0;
              const t = this.c.curWorldMap.mapLevel + 1;
              t > this.c.highestMap && (this.c.highestMap = t),
                t > this._data.statistic.world.highest &&
                  (this._data.statistic.world.highest = t),
                this._event.occure("fight", "newWorldMap", t),
                (this.c.curWorldMap = new v0({ mapLevel: t }, !0));
            }
            moveToNextDungeonCell() {
              if (
                this.c.curMenu === he.dungeon &&
                this.getCurEnemy() &&
                this.getCurEnemy().health <= 0
              ) {
                const t = this.c.dungeons[this.c.openMapI].getCell(
                  this.c.dungeons[this.c.openMapI].curPos + 1
                );
                t
                  ? ((this.c.dungeons[this.c.openMapI].getCell(
                      this.c.dungeons[this.c.openMapI].curPos
                    ).active = !1),
                    this.c.dungeons[this.c.openMapI].curPos++,
                    (t.active = !0),
                    (t.visited = !0))
                  : ((this.c.labyKeys += ut.labyKeyBonus(
                      this.c.dungeons[this.c.openMapI].mapLevel
                    )),
                    ut.labyKeyBonus(
                      this.c.dungeons[this.c.openMapI].mapLevel
                    ) &&
                      this._log.addInnerHtml(
                        "Dungeon cleared. There are " +
                          ut.labyKeyBonus(
                            this.c.dungeons[this.c.openMapI].mapLevel
                          ) +
                          '<img class="icon-img" src="' +
                          dg.labyKey +
                          '"> laying on the floor'
                      ),
                    this.nextDungeonMap());
              }
            }
            nextDungeonMap() {
              (this.c.dungeons[this.c.openMapI] = new S0(
                {
                  name: this.c.dungeons[this.c.openMapI].name,
                  type: this.c.dungeons[this.c.openMapI].type,
                  cols: this.c.dungeons[this.c.openMapI].cols,
                  rows: this.c.dungeons[this.c.openMapI].rows,
                  mapLevel: this.c.dungeons[this.c.openMapI].mapLevel,
                  cleared: this.c.dungeons[this.c.openMapI].cleared + 1,
                },
                !0
              )),
                this.dungeonChanged.next(),
                this.postFightData();
            }
            static #n = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Yi), O(yd), O(Wn), O(ql), O(ps));
            });
            static #i = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        Ki = (() => {
          class e {
            constructor(t, i, r, o, s) {
              (this._event = t),
                (this._data = i),
                (this._log = r),
                (this._buyService = o),
                (this._fightHandler = s),
                (this.combat = new ct()),
                (this.curLaby = new ct()),
                (this.curDungeon = new ct()),
                (this.c = this._data.game.combat),
                this.combat.next(this._data.game.combat),
                this.setCurLaby(this._data.game.combat),
                this.setCurDungeon(this._data.game.combat),
                this._fightHandler.combatChanged.subscribe(() =>
                  this.combat.next(this._data.game.combat)
                ),
                this._fightHandler.dungeonChanged.subscribe(() =>
                  this.setCurDungeon(this._data.game.combat)
                ),
                this._data.obsResetGame.subscribe(() => {
                  (this.c = this._data.game.combat),
                    this.combat.next(this._data.game.combat);
                }),
                this._event.obsOccure.subscribe((a) => {
                  "fight" === a.type &&
                    "newWorldMap" === a.subType &&
                    5 === a.level &&
                    (this._log.add("You found another Labyrinth"),
                    this.exploreLaby(0));
                });
            }
            move(t) {
              if (
                null == t ||
                this.c.curMenu !== he.labyrinth ||
                this._fightHandler.inFight()
              )
                return;
              const i = this.c.labyrinth[this.c.openMapI];
              if (!i) return;
              const r = i.getCell(i.curPos);
              if (!r) throw new Error("Cell not Found");
              if (!0 === r.walls[t]) return;
              const o = mte.directionToPoint(t),
                s = i.getCellByCoord(r.x + o.x, r.y + o.y);
              if (!s) throw new Error("Next Cell Not Found");
              (r.active = !1),
                (s.active = !0),
                (s.visible = !0),
                (s.visited = !0),
                i.setAllNeighboursVisible(s.x, s.y, t);
              const a = i.gridIndex(r.x + o.x, r.y + o.y);
              i.curPos = a;
              const l = i.getEnemy(a);
              l && l.health > 0 && this._fightHandler.startFight();
            }
            open(t, i = 0) {
              (this.c.curMenu = t),
                t === he.menu
                  ? (this._fightHandler.clearThrottle(),
                    this._fightHandler.stopFight())
                  : t === he.world
                  ? this._fightHandler.startFight()
                  : t === he.labyrinth
                  ? this.c.labyrinth[i] &&
                    ((this.c.openMapI = i),
                    this.setCurLaby(this._data.game.combat),
                    this._fightHandler.startFight())
                  : t === he.dungeon &&
                    this.c.dungeons[i] &&
                    ((this.c.openMapI = i),
                    this.setCurDungeon(this._data.game.combat),
                    this._fightHandler.startFight());
            }
            setCurLaby(t) {
              this.curLaby.next(t.labyrinth[t.openMapI]);
            }
            setCurDungeon(t) {
              this.curDungeon.next(t.dungeons[t.openMapI]);
            }
            exploreLaby(t) {
              this.c.labyKeys >= t &&
                ((this.c.labyKeys -= t),
                this.c.labyrinth.push(
                  new b0(
                    {
                      mapLevel: this.c.curWorldMap.mapLevel,
                      rows: 8,
                      cols: 10,
                      createdWithKeys: t,
                    },
                    !0
                  )
                ),
                this.combat.next(this._data.game.combat));
            }
            exploreDungeon(t, i, r, o, s, a = !1) {
              const l = pr.getDungeonExploreTotalCost(t, i, r, o, s);
              if (!a && !this._buyService.buyable(l)) return !1;
              a || this._buyService.buy(l);
              const c = pr.exploreDungeonDifficulty(r),
                u = fs.randomBetweenPerc(c.min, c.max),
                f = pr.exploreDungeonLoot(o),
                g = fs.randomBetweenPerc(f.min, f.max),
                m = pr.exploreDungeonSize(s),
                _ = fs.randomBetweenInt(m.cols.min, m.cols.max),
                y = fs.randomBetweenInt(m.rows.min, m.rows.max);
              return (
                this.c.dungeons.push(
                  new S0(
                    {
                      type: t.type,
                      mapLevel: this.c.curWorldMap.mapLevel,
                      rows: y,
                      cols: _,
                      enemyStrength: u,
                      lootPerc: g,
                    },
                    !0
                  )
                ),
                this.combat.next(this._data.game.combat),
                !0
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(ps), O(je), O(yd), O(Wn), O(vd));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      function _te(e, n) {
        if ((1 & e && (p(0, "div", 2), h(1), k(2, "img", 3), d()), 2 & e)) {
          const t = I();
          b(1), ne(" ", t.combat.labyKeys, " ");
        }
      }
      let gP = (() => {
          class e {
            constructor(t) {
              (this._combatService = t), (this._alive = !0);
            }
            ngOnInit() {
              this._combatService.combat
                .pipe(X(() => this._alive))
                .subscribe((t) => (this.combat = t));
            }
            ngOnDestroy() {
              this._alive = !1;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(Ki));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-combat-loot"]],
              decls: 2,
              vars: 1,
              consts: [
                [1, "loot"],
                ["class", "item", 4, "ngIf"],
                [1, "item"],
                ["src", "assets/img/my/addons_44_t.png", 1, "icon-img"],
              ],
              template: function (i, r) {
                1 & i && (p(0, "div", 0), E(1, _te, 3, 1, "div", 1), d()),
                  2 & i &&
                    (b(1),
                    x("ngIf", null == r.combat ? null : r.combat.labyKeys));
              },
              dependencies: [be],
              styles: [
                ".loot[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-size:1rem}.loot[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:.25rem}",
              ],
            }));
          }
          return e;
        })(),
        yte = (() => {
          class e {
            constructor() {}
            ngOnInit() {}
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-left"]],
              decls: 4,
              vars: 0,
              template: function (i, r) {
                1 & i &&
                  k(0, "alchy-fluid")(1, "alchy-flask")(2, "alchy-combat-loot")(
                    3,
                    "alchy-log"
                  );
              },
              dependencies: [tte, fte, gte, gP],
              styles: [
                "[_nghost-%COMP%]{background-color:#282828;display:flex;justify-content:flex-start;flex-direction:column;align-items:stretch}",
              ],
            }));
          }
          return e;
        })();
      const aa = [
        {
          name: "frog",
          rewardName: "slime",
          rewardAmount: 1,
          specialName: "blood",
          specialAmount: 1,
          specialCount: 30,
          speed: 2e3,
          autoClickSpeed: 1e3,
          bonusSpeed: (e, n) => Math.pow(1.6, e) / Math.pow(1.8, n),
          clickBonus: (e, n) => Math.pow(1.9, e) * (1 + 0.05 * n),
        },
        {
          name: "ghost",
          rewardName: "water",
          rewardAmount: 0.3425487,
          specialName: "ink",
          specialAmount: 1,
          specialCount: 100,
          speed: 3382,
          autoClickSpeed: 1e3,
          bonusSpeed: (e, n) => Math.pow(1.2, e) / Math.pow(1.5, n),
          clickBonus: (e, n) => Math.pow(1.5, e) * (1 + 0.05 * n),
        },
      ];
      class bte {
        constructor(n) {
          (this.name = "frog"),
            (this.speed = 1e3),
            (this.isAuto = !1),
            (this.clicks = 0),
            (this.clicksReward = 0),
            (this.name = n?.name ?? "frog"),
            (this.speed = n?.speed ?? 1e3),
            (this.isAuto = n?.isAuto ?? !1),
            (this.clicks = n?.clicks ?? 0),
            (this.clicksReward = n?.clicksReward ?? 0);
        }
      }
      class wte {
        static createClicker(n) {
          return new bte({ name: n.name, speed: n.speed });
        }
      }
      const pg = [
        {
          name: "slime",
          desr: "perfekt for the slimetific",
          require: [{ name: "slime", type: "fluid", value: 10 }],
          duration: 29966.1636946,
          bonusTime: (e) => Math.pow(0.75, e),
          bonusAmount: (e) => Math.pow(10, e),
        },
        {
          name: "blood",
          desr: "restore health",
          require: [{ name: "blood", type: "fluid", value: 100 }],
          duration: 6e4,
          bonusTime: (e) =>
            1 - (e < 6 ? e / 6 : 6 === e ? 11 / 12 : 1 - 1 / (12 * e)),
          bonusAmount: (e) => Math.pow(10, e),
        },
        {
          name: "water",
          desr: "water",
          require: [{ name: "water", type: "fluid", value: 100 }],
          duration: 18e4,
          bonusTime: (e) => 1 - e / 6,
          bonusAmount: (e) => Math.pow(10, e),
        },
        {
          name: "oxygen",
          desr: "oxygen",
          require: [
            { name: "oxygen", type: "fluid", value: 100 },
            { name: "ink", type: "fluid", value: 1 },
          ],
          duration: 3e5,
          bonusTime: (e) => 1 - e / 10,
          bonusAmount: (e) => Math.pow(10, e),
        },
        {
          name: "clear soul",
          desr: "clear soul",
          require: [{ name: "clear soul", type: "fluid", value: 1 }],
          duration: 3e4,
          bonusTime: (e) => 1 - e / 10,
          bonusAmount: (e) => Math.pow(10, e),
        },
      ];
      class Cte {
        constructor(n) {
          (this.name = n.name ?? ""),
            (this.desr = n.desr ?? ""),
            (this.require = n.require ?? []),
            (this.duration = n.duration ?? 1);
        }
      }
      class xte {
        static createBrewing(n) {
          return new Cte({
            name: n.name,
            desr: n.desr,
            require: n.require,
            duration: n.duration,
          });
        }
      }
      let mr = (() => {
        class e {
          constructor(t, i, r) {
            (this._data = t),
              (this._buyService = i),
              (this._event = r),
              (this.boughtUpgrades = new ct()),
              (this.unboughtUpgrades = new ct()),
              (this.availableBrewings = new ct()),
              this.refreshUpgrades(),
              this._data.obsResetGame.subscribe(() => {
                this.refreshUpgrades();
              });
          }
          buy(t) {
            if (this._buyService.buyable(t.cost)) {
              this._buyService.buy(t.cost);
              const i = pP.createUpgrade(t);
              return (
                this._data.game.upgrades.push(i),
                this.onBuyUpgrade(t),
                this.refreshUpgrades(),
                this._event.occure(t.type, t.subType),
                !0
              );
            }
            return !1;
          }
          refreshUpgrades() {
            const t = uP.filter(
              (r) => !this._data.game.upgrades.some((o) => o.id === r.id)
            );
            this.unboughtUpgrades.next(t.sort(this.sortById));
            const i = uP.filter((r) =>
              this._data.game.upgrades.some((o) => o.id === r.id)
            );
            this.boughtUpgrades.next(i.sort(this.sortById)),
              this.availableBrewings.next(this.getAvailableBrewingTypes());
          }
          sortByCost(t, i) {
            const r = void 0 !== t.cost[0]?.value ? t.cost[0]?.value : 0,
              o = void 0 !== i.cost[0]?.value ? i.cost[0]?.value : 0;
            return r < o ? -1 : r > o ? 1 : 0;
          }
          sortById(t, i) {
            return t.id < i.id ? -1 : 1;
          }
          buyableHalf(t) {
            return this._buyService.buyableHalf(t.cost);
          }
          getAvailableBrewingTypes() {
            const t = [];
            return (
              this._data.game.upgrades.forEach((i, r) => {
                if ("unlockBrewing" === i.type) {
                  const o = pg.find((s) => s.name === i.subType);
                  void 0 !== o && t.push(xte.createBrewing(o));
                }
              }),
              t
            );
          }
          getBrewingTimeBonus(t) {
            const i = pg.find((o) => o.name === t);
            if (void 0 === i) return 6e4;
            let r = 0;
            return (
              this._data.game.upgrades.forEach((o) => {
                "brewingTimeBonus" === o.type && o.subType === t && r++;
              }),
              i.duration * i.bonusTime(r)
            );
          }
          onBuyUpgrade(t) {
            "reactor" === t.type
              ? this._data.game.reactor.push(new E0({}))
              : "magicreactor" === t.type &&
                this._data.game.magicReactor.push(new T0({}));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(je), O(Wn), O(ps));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const Mte = bl("fillHeight", [
          qf("start", Cn({ height: 0 })),
          qf("end", Cn({ height: "100%" })),
          Fr("start => end", [zi("{{duration}}")], {
            params: { duration: ".5s" },
          }),
          Fr(":leave", [zi("0s")]),
        ]),
        mP = bl("fillWidth", [
          Fr(
            "start => end",
            [
              Cn({ width: "{{startWidth}}%" }),
              zi("{{duration}}", Cn({ width: "100%" })),
            ],
            { params: { duration: ".5s", startWidth: "0%" } }
          ),
          Fr(":leave", [zi("0s")]),
        ]),
        Dte = bl("toggleHeight", [
          Fr(":enter", [
            Cn({ transform: "scale(0.5) translateY(-80px)", opacity: 0 }),
            zi(
              "1s cubic-bezier(.8, -0.6, 0.2, 1.5)",
              Cn({ transform: "scale(1)", opacity: 1 })
            ),
          ]),
          Fr(":leave", [
            Cn({ transform: "scale(1)", opacity: 1, height: "*" }),
            zi(
              "1s cubic-bezier(.8, -0.6, 0.2, 1.5)",
              Cn({ transform: "scale(0.5)", opacity: 0 })
            ),
          ]),
        ]),
        Ste = bl("floatTop", [
          Fr(
            ":enter",
            [
              Cn({ transform: "scale(1) translateY({{height}})", opacity: 0 }),
              zi(
                "{{speed}}ms cubic-bezier(.3, 0, .5, .5)",
                Cn({
                  transform: "scale(1) translateY({{centerHeight}})",
                  opacity: 1,
                })
              ),
              zi(
                "{{speed}}ms cubic-bezier(.5, .5, .4, 1)",
                Cn({ transform: "scale(1)", opacity: 0 })
              ),
            ],
            { params: { height: "70px", centerHeight: "35px", speed: 600 } }
          ),
        ]);
      let _P = (() => {
        class e {
          constructor(t, i) {
            (this._data = t),
              (this._offline = i),
              (this.obsClickDelay = new Ze()),
              (this._lastClick = Date.now());
          }
          canClick(t) {
            return !!this.click(t);
          }
          click(t) {
            const i = this.clickDelay(t.name);
            return (
              Date.now() > this._lastClick + i &&
              ((this._lastClick = Date.now()), this.obsClickDelay.next(i), !0)
            );
          }
          clickDelay(t, i = !1) {
            const r = aa.find((l) => l.name === t);
            if (!r) return 1e3 * this._offline.getBonusMulti();
            let o = 0,
              s = 0;
            return (
              this._data.game.upgrades.forEach((l, c) => {
                "clickspeed" === l.type && l.subType === t
                  ? o++
                  : "doubleclicks" === l.type && l.subType === t && s++;
              }),
              (r.speed ?? 1e3) *
                r.bonusSpeed(s, o) *
                this._offline.getBonusMulti()
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(je), O(Yi));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const kte = function (e) {
          return { duration: e };
        },
        Tte = function (e, n) {
          return { value: e, params: n };
        };
      let Ete = (() => {
          class e {
            constructor(t) {
              (this._clickService = t),
                (this._alive = !0),
                (this.nextClick = 1e3),
                (this.animate = "end"),
                this._clickService.obsClickDelay
                  .pipe(X(() => this._alive))
                  .subscribe((i) => {
                    (this.nextClick = i),
                      (this.animate = "start"),
                      setTimeout(() => (this.animate = "end"), 0);
                  });
            }
            ngOnDestroy() {
              this._alive = !1;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(_P));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-clickbar"]],
              decls: 5,
              vars: 9,
              consts: [
                [1, "next-click-prog"],
                [1, "label"],
                [1, "bar"],
              ],
              template: function (i, r) {
                1 & i &&
                  (p(0, "div", 0)(1, "div", 1),
                  h(2),
                  pe(3, "bignumber"),
                  d(),
                  k(4, "div", 2),
                  d()),
                  2 & i &&
                    (b(2),
                    ne("", Me(3, 2, r.nextClick / 1e3), "s"),
                    b(2),
                    x(
                      "@fillHeight",
                      Ar(6, Tte, r.animate, Xn(4, kte, r.nextClick - 10 + "ms"))
                    ));
              },
              dependencies: [Qt],
              styles: [
                "[_nghost-%COMP%]{margin:.5rem}.next-click-prog[_ngcontent-%COMP%]{height:250px;width:40px;border:1px solid #000;position:relative}@media (max-width: 960px){.next-click-prog[_ngcontent-%COMP%]{width:25px;margin:10px 0}}.next-click-prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;z-index:2;line-height:250px;text-align:center}.next-click-prog[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#1b5785;position:absolute;bottom:0;left:0;width:100%;z-index:1}.clickComponent[_ngcontent-%COMP%]   .clicker.ghost[_ngcontent-%COMP%]:not(.isAuto)   .img[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{color:#627cbe;background-color:#2f4272}.clickComponent[_ngcontent-%COMP%]   .clicker.ghost[_ngcontent-%COMP%]:not(.isAuto)   .img[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]:hover{color:#869acd;background-color:#364c84}.clickComponent[_ngcontent-%COMP%]   .clicker.ghost.isAuto[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{color:#627cbe}.clickComponent[_ngcontent-%COMP%]   .clicker.ghost[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#11061d}",
              ],
              data: { animation: [Mte] },
            }));
          }
          return e;
        })(),
        F0 = (() => {
          class e {
            constructor(t) {
              (this._data = t),
                (this._reservedUpgrades = []),
                (this._reservedCost = []),
                (this.obsReservedUpgrades = new Tn({ upgrades: [], cost: [] })),
                this.calcReservedCosts();
            }
            calcReservedCosts() {
              this._reservedUpgrades = [];
              for (const i of this._data.portal.portalUpgrades)
                sa.find((o) => o.id === i.id)?.requireWorld <=
                  this._data.statistic.world.highest &&
                  this._reservedUpgrades.push(i);
              let t = [];
              for (const i of this._reservedUpgrades)
                t.push(this.costFor(i.id, i.level));
              (t = rP.stackItems(t)),
                (this._reservedCost = t),
                this.obsReservedUpgrades.next({
                  upgrades: this._reservedUpgrades,
                  cost: this._reservedCost,
                });
            }
            reserve(t, i) {
              const r = this._reservedUpgrades.find((o) => o.id === t);
              r && (r.level = i), this.calcReservedCosts();
            }
            costFor(t, i) {
              const r = sa.find((s) => s.id === t),
                o = [];
              for (const s of r.cost) {
                const a = new w0(JSON.parse(JSON.stringify(s)));
                (a.value = r.costIncrease(i)), o.push(a);
              }
              return o;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        gg = (() => {
          class e {
            constructor(t, i, r, o) {
              (this._data = t),
                (this._buyService = i),
                (this._event = r),
                (this._portalUpgradeService = o);
            }
            getBonus(t, i) {
              const r = sa.find((s) => s.type === t && s.subType === i),
                o = this._data.portal.portalUpgrades.find(
                  (s) => s.type === t && s.subType === i
                );
              return void 0 !== o ? r.bonusAmount(o.level) : 1;
            }
            getBonusCost(t, i) {
              const r = sa.find((s) => s.type === t && s.subType === i),
                o = this._data.portal.portalUpgrades.find(
                  (s) => s.type === t && s.subType === i
                );
              return void 0 !== o ? r.costIncrease(o.level) : 1;
            }
            getBonusSpeed(t, i) {
              const r = sa.find((s) => s.type === t && s.subType === i),
                o = this._data.portal.portalUpgrades.find(
                  (s) => s.type === t && s.subType === i
                );
              return void 0 !== o ? r.bonusAmountSpeed(o.level) : 1;
            }
            resetGame() {
              var t = this;
              return fr(function* () {
                const i =
                  t._portalUpgradeService.obsReservedUpgrades.getValue();
                (t._data.portal.portalUpgrades = i.upgrades),
                  t._data.resetGame();
              })();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Wn), O(ps), O(F0));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        Ite = (() => {
          class e {
            constructor(t, i, r, o) {
              (this._data = t),
                (this._fluidService = i),
                (this._portalService = r),
                (this._bigNumber = o);
            }
            forClick(t, i) {
              const r = aa.find((a) => a.name === t);
              if (void 0 === r) return;
              const o = this.getClickPower(t, i),
                s = r.rewardAmount * o;
              return (
                this._fluidService.addFluid(r.rewardName, s),
                "+" + this._bigNumber.transform(s) + " " + r.rewardName
              );
            }
            forSpecialClick(t) {
              const i = aa.find((r) => r.name === t);
              if (void 0 !== i)
                return (
                  this._fluidService.addFluid(i.specialName, i.specialAmount),
                  "+" +
                    this._bigNumber.transform(i.specialAmount) +
                    " " +
                    i.specialName
                );
            }
            specialCount(t) {
              let i = 0;
              this._data.game.upgrades.forEach((o, s) => {
                "specialCountDecrease" === o.type && o.subType === t && i++;
              });
              const r = aa.find((o) => o.name === t);
              return void 0 !== r
                ? Math.round(r.specialCount * Math.pow(0.8, i))
                : 100;
            }
            getClickPower(t, i) {
              const r = aa.find((s) => s.name === t);
              if (!r) return 1;
              let o = 0;
              return (
                this._data.game.upgrades.forEach((s, a) => {
                  "doubleclicks" === s.type && s.subType === t && o++;
                }),
                (o += this._portalService.getBonus("clickerRewardAmount", t)),
                r.clickBonus(o, 0)
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(fg), O(gg), O(Qt));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        R0 = (() => {
          class e {
            constructor() {
              this.nextFloat = new Ze();
            }
            float(t) {
              this.nextFloat.next(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      function Ote(e, n) {
        1 & e && k(0, "div", 7), 2 & e && x("innerHtml", I(2).autoReward, zo);
      }
      const Ate = function (e) {
        return { width: e };
      };
      function Pte(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 1),
            F("click", function (r) {
              return oe(t), se(I().click(r));
            })("mousedown", function () {
              return oe(t), se(I().onMouseDown());
            })("mouseup", function () {
              return oe(t), se(I().onMouseWeg());
            })("mouseleave", function () {
              return oe(t), se(I().onMouseWeg());
            })("touchstart", function () {
              return oe(t), se(I().onMouseDown());
            })("touchend", function () {
              return oe(t), se(I().onMouseWeg());
            })("touch", function (r) {
              return oe(t), se(I().click(r));
            })("pressing", function () {
              return oe(t), se(I().keyPressing());
            }),
            p(1, "button", 2)(2, "div"),
            k(3, "i"),
            d(),
            E(4, Ote, 1, 1, "div", 3),
            d(),
            p(5, "div", 4)(6, "div", 5),
            h(7),
            d(),
            k(8, "div", 6),
            d()();
        }
        if (2 & e) {
          const t = I();
          Te("clicker " + t.clicker.name),
            Le("is-auto", t.isAuto)("shrink", t.isShrink),
            b(2),
            Te("icon " + t.clicker.name),
            b(1),
            Te("fas fa-" + t.clicker.name),
            b(1),
            x("ngIf", t.isAuto || t.pressingUnlocked),
            b(3),
            mn(" ", t.clicker.clicksReward, " / ", t.specialCount, " "),
            b(1),
            x(
              "ngStyle",
              Xn(14, Ate, (100 * t.clicker.clicksReward) / t.specialCount + "%")
            );
        }
      }
      let Fte = (() => {
        class e {
          get specialCount() {
            return this._reward.specialCount(this.clicker.name);
          }
          constructor(t, i, r, o, s, a, l) {
            (this._clickService = t),
              (this._offline = i),
              (this._reward = r),
              (this._upgradeService = o),
              (this._floatingTextService = s),
              (this._bigNumber = a),
              (this._settingService = l),
              (this.floatNow = new Ze()),
              (this.isAuto = !1),
              (this._alive = !0),
              (this.pressingUnlocked = !1),
              (this._mousePressing = !1),
              (this.isShrink = !1);
          }
          ngOnInit() {
            this._upgradeService.boughtUpgrades
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                (this.pressingUnlocked = !0),
                  (this.isAuto = !!t.find(
                    (i) =>
                      "autoClicker" === i.type &&
                      i.subType === this.clicker.name
                  )),
                  this.setAutoRewardText(),
                  this.isAuto &&
                    !this._autoTimer &&
                    (this._autoTimer = setTimeout(
                      () => this.startAutoClicker(),
                      1e3
                    ));
              }),
              this._settingService.obsAutoShrink
                .pipe(X(() => this._alive))
                .subscribe((t) => (this.isShrink = t)),
              this._offline.obsToggleBonus
                .pipe(X(() => this._alive))
                .subscribe(() => this.setAutoRewardText());
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          startAutoClicker() {
            clearTimeout(this._autoTimer),
              (this._autoTimer = null),
              this._alive &&
                this.isAuto &&
                (this.onClick(null, !0),
                (this._autoTimer = setTimeout(
                  () => this.startAutoClicker(),
                  this._clickService.clickDelay(this.clicker.name, !0)
                )));
          }
          setAutoRewardText() {
            const t = aa.find((i) => i.name === this.clicker.name);
            this.autoReward =
              this._bigNumber.transform(
                this._reward.getClickPower(
                  this.clicker.name,
                  this.clicker.isAuto
                ) * t.rewardAmount
              ) +
              " " +
              t.rewardName +
              " every " +
              this._bigNumber.transform(
                this._clickService.clickDelay(this.clicker.name, !0) / 1e3
              ) +
              "s (" +
              this._bigNumber.transform(
                (this._reward.getClickPower(
                  this.clicker.name,
                  this.clicker.isAuto
                ) *
                  t.rewardAmount) /
                  (this._clickService.clickDelay(this.clicker.name, !0) / 1e3)
              ) +
              "/s)";
          }
          onClick(t, i = !1) {
            if (
              (this.floatNow.next(),
              i || this._clickService.canClick(this.clicker))
            ) {
              i || this.clicker.clicks++, this.clicker.clicksReward++;
              const r = this._reward.forClick(this.clicker.name, i);
              let o;
              this.clicker.clicksReward >
                this._reward.specialCount(this.clicker.name) &&
                ((this.clicker.clicksReward -= this._reward.specialCount(
                  this.clicker.name
                )),
                (o = this._reward.forSpecialClick(this.clicker.name))),
                t &&
                  (this._floatingTextService.float({
                    x: t.clientX,
                    y: t.clientY,
                    text: r,
                  }),
                  o &&
                    setTimeout(() => {
                      this._floatingTextService.float({
                        x: t.clientX,
                        y: t.clientY,
                        text: o,
                      });
                    }, 500));
            }
          }
          click(t) {
            this.isAuto || this.onClick(t);
          }
          keyPressing() {
            this.pressingUnlocked &&
              !this.isAuto &&
              (console.log("go"), this.onClick());
          }
          onMouseDown() {
            (this._mousePressing = !0),
              this.pressingUnlocked && !this.isAuto && this.startPressing();
          }
          onMouseWeg() {
            this._mousePressing = !1;
          }
          startPressing() {
            this._mousePressing &&
              (this.onClick(),
              setTimeout(() => {
                window.requestAnimationFrame(() => this.startPressing());
              }, 200));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(
              M(_P),
              M(Yi),
              M(Ite),
              M(mr),
              M(R0),
              M(Qt),
              M($l)
            );
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-clicker"]],
            inputs: { clicker: "clicker" },
            decls: 1,
            vars: 1,
            consts: [
              [
                3,
                "class",
                "is-auto",
                "shrink",
                "alchyKey",
                "click",
                "mousedown",
                "mouseup",
                "mouseleave",
                "touchstart",
                "touchend",
                "touch",
                "pressing",
                4,
                "ngIf",
              ],
              [
                3,
                "alchyKey",
                "click",
                "mousedown",
                "mouseup",
                "mouseleave",
                "touchstart",
                "touchend",
                "touch",
                "pressing",
              ],
              [1, "img"],
              ["class", "label", 3, "innerHtml", 4, "ngIf"],
              [1, "prog"],
              [1, "label"],
              [1, "bar", 3, "ngStyle"],
              [1, "label", 3, "innerHtml"],
            ],
            template: function (i, r) {
              1 & i && E(0, Pte, 9, 16, "div", 0),
                2 & i && x("ngIf", r.clicker);
            },
            dependencies: [be, Di, hP],
            styles: [
              "[_nghost-%COMP%]{margin:.5rem}.clicker[_ngcontent-%COMP%]{height:250px;width:250px;border:1px solid #000;display:flex;justify-content:center;align-items:center;flex-direction:column;position:relative}.clicker[_ngcontent-%COMP%]:not(.is-auto)   .img[_ngcontent-%COMP%]{cursor:pointer}.clicker.is-auto[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]{background-color:transparent}.clicker[_ngcontent-%COMP%] > .bar[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;overflow:hidden;height:4px;background-color:#27755480;z-index:-1}.clicker[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]{border:none;border-radius:0;padding:0;margin:0;color:#fff;font-family:Roboto;font-size:.875rem;position:relative;height:180px;width:220px;transition:.4s}.clicker[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]:active, .clicker[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]:focus{outline:none}.clicker[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none;pointer-events:none;width:100%;text-align:center;line-height:180px;font-size:72px;transition:.4s}.clicker[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;pointer-events:none;position:absolute;bottom:6px;left:0;width:100%;text-align:center}.clicker[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;position:relative;height:40px;width:220px;border:1px solid #000;overflow:hidden}.clicker[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;line-height:40px;width:100%;text-align:center;z-index:2}.clicker[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;z-index:1;transition:.5s}.clicker.is-auto.shrink[_ngcontent-%COMP%]{height:120px;width:120px;margin:5px}.clicker.is-auto.shrink[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]{height:90px;width:110px}.clicker.is-auto.shrink[_ngcontent-%COMP%]   .img[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{font-size:42px;line-height:90px}.clicker.is-auto.shrink[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]{height:20px;width:110px}.clicker.is-auto.shrink[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{font-size:12px;line-height:20px}",
            ],
          }));
        }
        return e;
      })();
      function ue(e) {
        const n = Object.prototype.toString.call(e);
        return e instanceof Date ||
          ("object" == typeof e && "[object Date]" === n)
          ? new e.constructor(+e)
          : "number" == typeof e ||
            "[object Number]" === n ||
            "string" == typeof e ||
            "[object String]" === n
          ? new Date(e)
          : new Date(NaN);
      }
      function Lt(e, n) {
        return e instanceof Date ? new e.constructor(n) : new Date(n);
      }
      let yP = {};
      function la() {
        return yP;
      }
      const Nte = {
        lessThanXSeconds: {
          one: "less than a second",
          other: "less than {{count}} seconds",
        },
        xSeconds: { one: "1 second", other: "{{count}} seconds" },
        halfAMinute: "half a minute",
        lessThanXMinutes: {
          one: "less than a minute",
          other: "less than {{count}} minutes",
        },
        xMinutes: { one: "1 minute", other: "{{count}} minutes" },
        aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
        xHours: { one: "1 hour", other: "{{count}} hours" },
        xDays: { one: "1 day", other: "{{count}} days" },
        aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
        xWeeks: { one: "1 week", other: "{{count}} weeks" },
        aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
        xMonths: { one: "1 month", other: "{{count}} months" },
        aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
        xYears: { one: "1 year", other: "{{count}} years" },
        overXYears: { one: "over 1 year", other: "over {{count}} years" },
        almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
      };
      function N0(e) {
        return (n = {}) => {
          const t = n.width ? String(n.width) : e.defaultWidth;
          return e.formats[t] || e.formats[e.defaultWidth];
        };
      }
      const Hte = {
          date: N0({
            formats: {
              full: "EEEE, MMMM do, y",
              long: "MMMM do, y",
              medium: "MMM d, y",
              short: "MM/dd/yyyy",
            },
            defaultWidth: "full",
          }),
          time: N0({
            formats: {
              full: "h:mm:ss a zzzz",
              long: "h:mm:ss a z",
              medium: "h:mm:ss a",
              short: "h:mm a",
            },
            defaultWidth: "full",
          }),
          dateTime: N0({
            formats: {
              full: "{{date}} 'at' {{time}}",
              long: "{{date}} 'at' {{time}}",
              medium: "{{date}}, {{time}}",
              short: "{{date}}, {{time}}",
            },
            defaultWidth: "full",
          }),
        },
        jte = {
          lastWeek: "'last' eeee 'at' p",
          yesterday: "'yesterday at' p",
          today: "'today at' p",
          tomorrow: "'tomorrow at' p",
          nextWeek: "eeee 'at' p",
          other: "P",
        };
      function bd(e) {
        return (n, t) => {
          let r;
          if (
            "formatting" === (t?.context ? String(t.context) : "standalone") &&
            e.formattingValues
          ) {
            const s = e.defaultFormattingWidth || e.defaultWidth,
              a = t?.width ? String(t.width) : s;
            r = e.formattingValues[a] || e.formattingValues[s];
          } else {
            const s = e.defaultWidth,
              a = t?.width ? String(t.width) : e.defaultWidth;
            r = e.values[a] || e.values[s];
          }
          return r[e.argumentCallback ? e.argumentCallback(n) : n];
        };
      }
      const Zte = {
        ordinalNumber: (e, n) => {
          const t = Number(e),
            i = t % 100;
          if (i > 20 || i < 10)
            switch (i % 10) {
              case 1:
                return t + "st";
              case 2:
                return t + "nd";
              case 3:
                return t + "rd";
            }
          return t + "th";
        },
        era: bd({
          values: {
            narrow: ["B", "A"],
            abbreviated: ["BC", "AD"],
            wide: ["Before Christ", "Anno Domini"],
          },
          defaultWidth: "wide",
        }),
        quarter: bd({
          values: {
            narrow: ["1", "2", "3", "4"],
            abbreviated: ["Q1", "Q2", "Q3", "Q4"],
            wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
          },
          defaultWidth: "wide",
          argumentCallback: (e) => e - 1,
        }),
        month: bd({
          values: {
            narrow: [
              "J",
              "F",
              "M",
              "A",
              "M",
              "J",
              "J",
              "A",
              "S",
              "O",
              "N",
              "D",
            ],
            abbreviated: [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
            ],
            wide: [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
            ],
          },
          defaultWidth: "wide",
        }),
        day: bd({
          values: {
            narrow: ["S", "M", "T", "W", "T", "F", "S"],
            short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            wide: [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
            ],
          },
          defaultWidth: "wide",
        }),
        dayPeriod: bd({
          values: {
            narrow: {
              am: "a",
              pm: "p",
              midnight: "mi",
              noon: "n",
              morning: "morning",
              afternoon: "afternoon",
              evening: "evening",
              night: "night",
            },
            abbreviated: {
              am: "AM",
              pm: "PM",
              midnight: "midnight",
              noon: "noon",
              morning: "morning",
              afternoon: "afternoon",
              evening: "evening",
              night: "night",
            },
            wide: {
              am: "a.m.",
              pm: "p.m.",
              midnight: "midnight",
              noon: "noon",
              morning: "morning",
              afternoon: "afternoon",
              evening: "evening",
              night: "night",
            },
          },
          defaultWidth: "wide",
          formattingValues: {
            narrow: {
              am: "a",
              pm: "p",
              midnight: "mi",
              noon: "n",
              morning: "in the morning",
              afternoon: "in the afternoon",
              evening: "in the evening",
              night: "at night",
            },
            abbreviated: {
              am: "AM",
              pm: "PM",
              midnight: "midnight",
              noon: "noon",
              morning: "in the morning",
              afternoon: "in the afternoon",
              evening: "in the evening",
              night: "at night",
            },
            wide: {
              am: "a.m.",
              pm: "p.m.",
              midnight: "midnight",
              noon: "noon",
              morning: "in the morning",
              afternoon: "in the afternoon",
              evening: "in the evening",
              night: "at night",
            },
          },
          defaultFormattingWidth: "wide",
        }),
      };
      function wd(e) {
        return (n, t = {}) => {
          const i = t.width,
            o = n.match(
              (i && e.matchPatterns[i]) || e.matchPatterns[e.defaultMatchWidth]
            );
          if (!o) return null;
          const s = o[0],
            a =
              (i && e.parsePatterns[i]) || e.parsePatterns[e.defaultParseWidth],
            l = Array.isArray(a)
              ? (function Xte(e, n) {
                  for (let t = 0; t < e.length; t++) if (n(e[t])) return t;
                })(a, (f) => f.test(s))
              : (function Qte(e, n) {
                  for (const t in e)
                    if (Object.prototype.hasOwnProperty.call(e, t) && n(e[t]))
                      return t;
                })(a, (f) => f.test(s));
          let c;
          return (
            (c = e.valueCallback ? e.valueCallback(l) : l),
            (c = t.valueCallback ? t.valueCallback(c) : c),
            { value: c, rest: n.slice(s.length) }
          );
        };
      }
      const hne = {
          ordinalNumber: (function Jte(e) {
            return (n, t = {}) => {
              const i = n.match(e.matchPattern);
              if (!i) return null;
              const r = i[0],
                o = n.match(e.parsePattern);
              if (!o) return null;
              let s = e.valueCallback ? e.valueCallback(o[0]) : o[0];
              return (
                (s = t.valueCallback ? t.valueCallback(s) : s),
                { value: s, rest: n.slice(r.length) }
              );
            };
          })({
            matchPattern: /^(\d+)(th|st|nd|rd)?/i,
            parsePattern: /\d+/i,
            valueCallback: (e) => parseInt(e, 10),
          }),
          era: wd({
            matchPatterns: {
              narrow: /^(b|a)/i,
              abbreviated:
                /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
              wide: /^(before christ|before common era|anno domini|common era)/i,
            },
            defaultMatchWidth: "wide",
            parsePatterns: { any: [/^b/i, /^(a|c)/i] },
            defaultParseWidth: "any",
          }),
          quarter: wd({
            matchPatterns: {
              narrow: /^[1234]/i,
              abbreviated: /^q[1234]/i,
              wide: /^[1234](th|st|nd|rd)? quarter/i,
            },
            defaultMatchWidth: "wide",
            parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] },
            defaultParseWidth: "any",
            valueCallback: (e) => e + 1,
          }),
          month: wd({
            matchPatterns: {
              narrow: /^[jfmasond]/i,
              abbreviated:
                /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
              wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
            },
            defaultMatchWidth: "wide",
            parsePatterns: {
              narrow: [
                /^j/i,
                /^f/i,
                /^m/i,
                /^a/i,
                /^m/i,
                /^j/i,
                /^j/i,
                /^a/i,
                /^s/i,
                /^o/i,
                /^n/i,
                /^d/i,
              ],
              any: [
                /^ja/i,
                /^f/i,
                /^mar/i,
                /^ap/i,
                /^may/i,
                /^jun/i,
                /^jul/i,
                /^au/i,
                /^s/i,
                /^o/i,
                /^n/i,
                /^d/i,
              ],
            },
            defaultParseWidth: "any",
          }),
          day: wd({
            matchPatterns: {
              narrow: /^[smtwf]/i,
              short: /^(su|mo|tu|we|th|fr|sa)/i,
              abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
              wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
            },
            defaultMatchWidth: "wide",
            parsePatterns: {
              narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
              any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
            },
            defaultParseWidth: "any",
          }),
          dayPeriod: wd({
            matchPatterns: {
              narrow:
                /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
              any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
            },
            defaultMatchWidth: "any",
            parsePatterns: {
              any: {
                am: /^a/i,
                pm: /^p/i,
                midnight: /^mi/i,
                noon: /^no/i,
                morning: /morning/i,
                afternoon: /afternoon/i,
                evening: /evening/i,
                night: /night/i,
              },
            },
            defaultParseWidth: "any",
          }),
        },
        vP = {
          code: "en-US",
          formatDistance: (e, n, t) => {
            let i;
            const r = Nte[e];
            return (
              (i =
                "string" == typeof r
                  ? r
                  : 1 === n
                  ? r.one
                  : r.other.replace("{{count}}", n.toString())),
              t?.addSuffix
                ? t.comparison && t.comparison > 0
                  ? "in " + i
                  : i + " ago"
                : i
            );
          },
          formatLong: Hte,
          formatRelative: (e, n, t, i) => jte[e],
          localize: Zte,
          match: hne,
          options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
        },
        bP = (e, n) => {
          switch (e) {
            case "P":
              return n.date({ width: "short" });
            case "PP":
              return n.date({ width: "medium" });
            case "PPP":
              return n.date({ width: "long" });
            default:
              return n.date({ width: "full" });
          }
        },
        wP = (e, n) => {
          switch (e) {
            case "p":
              return n.time({ width: "short" });
            case "pp":
              return n.time({ width: "medium" });
            case "ppp":
              return n.time({ width: "long" });
            default:
              return n.time({ width: "full" });
          }
        },
        L0 = {
          p: wP,
          P: (e, n) => {
            const t = e.match(/(P+)(p+)?/) || [],
              i = t[1],
              r = t[2];
            if (!r) return bP(e, n);
            let o;
            switch (i) {
              case "P":
                o = n.dateTime({ width: "short" });
                break;
              case "PP":
                o = n.dateTime({ width: "medium" });
                break;
              case "PPP":
                o = n.dateTime({ width: "long" });
                break;
              default:
                o = n.dateTime({ width: "full" });
            }
            return o
              .replace("{{date}}", bP(i, n))
              .replace("{{time}}", wP(r, n));
          },
        },
        fne = /^D+$/,
        pne = /^Y+$/,
        gne = ["D", "DD", "YY", "YYYY"];
      function CP(e) {
        return fne.test(e);
      }
      function xP(e) {
        return pne.test(e);
      }
      function B0(e, n, t) {
        const i = (function mne(e, n, t) {
          const i = "Y" === e[0] ? "years" : "days of the month";
          return `Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${n}\`) for formatting ${i} to the input \`${t}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
        })(e, n, t);
        if ((console.warn(i), gne.includes(e))) throw new RangeError(i);
      }
      class MP {
        subPriority = 0;
        validate(n, t) {
          return !0;
        }
      }
      class vne extends MP {
        constructor(n, t, i, r, o) {
          super(),
            (this.value = n),
            (this.validateValue = t),
            (this.setValue = i),
            (this.priority = r),
            o && (this.subPriority = o);
        }
        validate(n, t) {
          return this.validateValue(n, this.value, t);
        }
        set(n, t, i) {
          return this.setValue(n, t, this.value, i);
        }
      }
      class bne extends MP {
        priority = 10;
        subPriority = -1;
        set(n, t) {
          return t.timestampIsSet
            ? n
            : Lt(
                n,
                (function _ne(e, n) {
                  const t = n instanceof Date ? Lt(n, 0) : new n(0);
                  return (
                    t.setFullYear(e.getFullYear(), e.getMonth(), e.getDate()),
                    t.setHours(
                      e.getHours(),
                      e.getMinutes(),
                      e.getSeconds(),
                      e.getMilliseconds()
                    ),
                    t
                  );
                })(n, Date)
              );
        }
      }
      class st {
        run(n, t, i, r) {
          const o = this.parse(n, t, i, r);
          return o
            ? {
                setter: new vne(
                  o.value,
                  this.validate,
                  this.set,
                  this.priority,
                  this.subPriority
                ),
                rest: o.rest,
              }
            : null;
        }
        validate(n, t, i) {
          return !0;
        }
      }
      Math.pow(10, 8);
      const DP = 6048e5,
        xne = 864e5,
        Cd = 6e4,
        xd = 36e5,
        rn_month = /^(1[0-2]|0?\d)/,
        rn_date = /^(3[0-1]|[0-2]?\d)/,
        rn_dayOfYear = /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
        rn_week = /^(5[0-3]|[0-4]?\d)/,
        rn_hour23h = /^(2[0-3]|[0-1]?\d)/,
        rn_hour24h = /^(2[0-4]|[0-1]?\d)/,
        rn_hour11h = /^(1[0-1]|0?\d)/,
        rn_hour12h = /^(1[0-2]|0?\d)/,
        rn_minute = /^[0-5]?\d/,
        rn_second = /^[0-5]?\d/,
        rn_singleDigit = /^\d/,
        rn_twoDigits = /^\d{1,2}/,
        rn_threeDigits = /^\d{1,3}/,
        rn_fourDigits = /^\d{1,4}/,
        rn_anyDigitsSigned = /^-?\d+/,
        rn_singleDigitSigned = /^-?\d/,
        rn_twoDigitsSigned = /^-?\d{1,2}/,
        rn_threeDigitsSigned = /^-?\d{1,3}/,
        rn_fourDigitsSigned = /^-?\d{1,4}/,
        $r_basicOptionalMinutes = /^([+-])(\d{2})(\d{2})?|Z/,
        $r_basic = /^([+-])(\d{2})(\d{2})|Z/,
        $r_basicOptionalSeconds = /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
        $r_extended = /^([+-])(\d{2}):(\d{2})|Z/,
        $r_extendedOptionalSeconds = /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/;
      function on(e, n) {
        return e && { value: n(e.value), rest: e.rest };
      }
      function $t(e, n) {
        const t = n.match(e);
        return t
          ? { value: parseInt(t[0], 10), rest: n.slice(t[0].length) }
          : null;
      }
      function qr(e, n) {
        const t = n.match(e);
        if (!t) return null;
        if ("Z" === t[0]) return { value: 0, rest: n.slice(1) };
        const i = "+" === t[1] ? 1 : -1,
          r = t[2] ? parseInt(t[2], 10) : 0,
          o = t[3] ? parseInt(t[3], 10) : 0,
          s = t[5] ? parseInt(t[5], 10) : 0;
        return {
          value: i * (r * xd + o * Cd + 1e3 * s),
          rest: n.slice(t[0].length),
        };
      }
      function kP(e) {
        return $t(rn_anyDigitsSigned, e);
      }
      function Xt(e, n) {
        switch (e) {
          case 1:
            return $t(rn_singleDigit, n);
          case 2:
            return $t(rn_twoDigits, n);
          case 3:
            return $t(rn_threeDigits, n);
          case 4:
            return $t(rn_fourDigits, n);
          default:
            return $t(new RegExp("^\\d{1," + e + "}"), n);
        }
      }
      function mg(e, n) {
        switch (e) {
          case 1:
            return $t(rn_singleDigitSigned, n);
          case 2:
            return $t(rn_twoDigitsSigned, n);
          case 3:
            return $t(rn_threeDigitsSigned, n);
          case 4:
            return $t(rn_fourDigitsSigned, n);
          default:
            return $t(new RegExp("^-?\\d{1," + e + "}"), n);
        }
      }
      function V0(e) {
        switch (e) {
          case "morning":
            return 4;
          case "evening":
            return 17;
          case "pm":
          case "noon":
          case "afternoon":
            return 12;
          default:
            return 0;
        }
      }
      function TP(e, n) {
        const t = n > 0,
          i = t ? n : 1 - n;
        let r;
        if (i <= 50) r = e || 100;
        else {
          const o = i + 50;
          r = e + 100 * Math.trunc(o / 100) - (e >= o % 100 ? 100 : 0);
        }
        return t ? r : 1 - r;
      }
      function EP(e) {
        return e % 400 == 0 || (e % 4 == 0 && e % 100 != 0);
      }
      function Gr(e, n) {
        const t = la(),
          i =
            n?.weekStartsOn ??
            n?.locale?.options?.weekStartsOn ??
            t.weekStartsOn ??
            t.locale?.options?.weekStartsOn ??
            0,
          r = ue(e),
          o = r.getDay(),
          s = (o < i ? 7 : 0) + o - i;
        return r.setDate(r.getDate() - s), r.setHours(0, 0, 0, 0), r;
      }
      function z0(e, n) {
        const t = ue(e),
          i = t.getFullYear(),
          r = la(),
          o =
            n?.firstWeekContainsDate ??
            n?.locale?.options?.firstWeekContainsDate ??
            r.firstWeekContainsDate ??
            r.locale?.options?.firstWeekContainsDate ??
            1,
          s = Lt(e, 0);
        s.setFullYear(i + 1, 0, o), s.setHours(0, 0, 0, 0);
        const a = Gr(s, n),
          l = Lt(e, 0);
        l.setFullYear(i, 0, o), l.setHours(0, 0, 0, 0);
        const c = Gr(l, n);
        return t.getTime() >= a.getTime()
          ? i + 1
          : t.getTime() >= c.getTime()
          ? i
          : i - 1;
      }
      function Gl(e) {
        return Gr(e, { weekStartsOn: 1 });
      }
      function IP(e, n) {
        const t = ue(e),
          i =
            +Gr(t, n) -
            +(function Fne(e, n) {
              const t = la(),
                i =
                  n?.firstWeekContainsDate ??
                  n?.locale?.options?.firstWeekContainsDate ??
                  t.firstWeekContainsDate ??
                  t.locale?.options?.firstWeekContainsDate ??
                  1,
                r = z0(e, n),
                o = Lt(e, 0);
              return o.setFullYear(r, 0, i), o.setHours(0, 0, 0, 0), Gr(o, n);
            })(t, n);
        return Math.round(i / DP) + 1;
      }
      function OP(e) {
        const n = ue(e),
          t = n.getFullYear(),
          i = Lt(e, 0);
        i.setFullYear(t + 1, 0, 4), i.setHours(0, 0, 0, 0);
        const r = Gl(i),
          o = Lt(e, 0);
        o.setFullYear(t, 0, 4), o.setHours(0, 0, 0, 0);
        const s = Gl(o);
        return n.getTime() >= r.getTime()
          ? t + 1
          : n.getTime() >= s.getTime()
          ? t
          : t - 1;
      }
      function AP(e) {
        const n = ue(e),
          t =
            +Gl(n) -
            +(function Lne(e) {
              const n = OP(e),
                t = Lt(e, 0);
              return t.setFullYear(n, 0, 4), t.setHours(0, 0, 0, 0), Gl(t);
            })(n);
        return Math.round(t / DP) + 1;
      }
      const zne = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
        Hne = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      function _g(e, n) {
        const t = ue(e);
        return isNaN(n) ? Lt(e, NaN) : (n && t.setDate(t.getDate() + n), t);
      }
      function H0(e, n, t) {
        const i = la(),
          r =
            t?.weekStartsOn ??
            t?.locale?.options?.weekStartsOn ??
            i.weekStartsOn ??
            i.locale?.options?.weekStartsOn ??
            0,
          o = ue(e),
          s = o.getDay(),
          c = 7 - r;
        return _g(
          o,
          n < 0 || n > 6
            ? n - ((s + c) % 7)
            : (((((n % 7) + 7) % 7) + c) % 7) - ((s + c) % 7)
        );
      }
      function yg(e) {
        const n = ue(e),
          t = new Date(
            Date.UTC(
              n.getFullYear(),
              n.getMonth(),
              n.getDate(),
              n.getHours(),
              n.getMinutes(),
              n.getSeconds(),
              n.getMilliseconds()
            )
          );
        return t.setUTCFullYear(n.getFullYear()), +e - +t;
      }
      const uie = {
          G: new (class wne extends st {
            priority = 140;
            parse(n, t, i) {
              switch (t) {
                case "G":
                case "GG":
                case "GGG":
                  return (
                    i.era(n, { width: "abbreviated" }) ||
                    i.era(n, { width: "narrow" })
                  );
                case "GGGGG":
                  return i.era(n, { width: "narrow" });
                default:
                  return (
                    i.era(n, { width: "wide" }) ||
                    i.era(n, { width: "abbreviated" }) ||
                    i.era(n, { width: "narrow" })
                  );
              }
            }
            set(n, t, i) {
              return (
                (t.era = i), n.setFullYear(i, 0, 1), n.setHours(0, 0, 0, 0), n
              );
            }
            incompatibleTokens = ["R", "u", "t", "T"];
          })(),
          y: new (class Sne extends st {
            priority = 130;
            incompatibleTokens = [
              "Y",
              "R",
              "u",
              "w",
              "I",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
            parse(n, t, i) {
              const r = (o) => ({ year: o, isTwoDigitYear: "yy" === t });
              switch (t) {
                case "y":
                  return on(Xt(4, n), r);
                case "yo":
                  return on(i.ordinalNumber(n, { unit: "year" }), r);
                default:
                  return on(Xt(t.length, n), r);
              }
            }
            validate(n, t) {
              return t.isTwoDigitYear || t.year > 0;
            }
            set(n, t, i) {
              const r = n.getFullYear();
              if (i.isTwoDigitYear) {
                const s = TP(i.year, r);
                return n.setFullYear(s, 0, 1), n.setHours(0, 0, 0, 0), n;
              }
              return (
                n.setFullYear(
                  "era" in t && 1 !== t.era ? 1 - i.year : i.year,
                  0,
                  1
                ),
                n.setHours(0, 0, 0, 0),
                n
              );
            }
          })(),
          Y: new (class kne extends st {
            priority = 130;
            parse(n, t, i) {
              const r = (o) => ({ year: o, isTwoDigitYear: "YY" === t });
              switch (t) {
                case "Y":
                  return on(Xt(4, n), r);
                case "Yo":
                  return on(i.ordinalNumber(n, { unit: "year" }), r);
                default:
                  return on(Xt(t.length, n), r);
              }
            }
            validate(n, t) {
              return t.isTwoDigitYear || t.year > 0;
            }
            set(n, t, i, r) {
              const o = z0(n, r);
              if (i.isTwoDigitYear) {
                const a = TP(i.year, o);
                return (
                  n.setFullYear(a, 0, r.firstWeekContainsDate),
                  n.setHours(0, 0, 0, 0),
                  Gr(n, r)
                );
              }
              return (
                n.setFullYear(
                  "era" in t && 1 !== t.era ? 1 - i.year : i.year,
                  0,
                  r.firstWeekContainsDate
                ),
                n.setHours(0, 0, 0, 0),
                Gr(n, r)
              );
            }
            incompatibleTokens = [
              "y",
              "R",
              "u",
              "Q",
              "q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "i",
              "t",
              "T",
            ];
          })(),
          R: new (class Tne extends st {
            priority = 130;
            parse(n, t) {
              return mg("R" === t ? 4 : t.length, n);
            }
            set(n, t, i) {
              const r = Lt(n, 0);
              return r.setFullYear(i, 0, 4), r.setHours(0, 0, 0, 0), Gl(r);
            }
            incompatibleTokens = [
              "G",
              "y",
              "Y",
              "u",
              "Q",
              "q",
              "M",
              "L",
              "w",
              "d",
              "D",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          u: new (class Ene extends st {
            priority = 130;
            parse(n, t) {
              return mg("u" === t ? 4 : t.length, n);
            }
            set(n, t, i) {
              return n.setFullYear(i, 0, 1), n.setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "G",
              "y",
              "Y",
              "R",
              "w",
              "I",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          Q: new (class Ine extends st {
            priority = 120;
            parse(n, t, i) {
              switch (t) {
                case "Q":
                case "QQ":
                  return Xt(t.length, n);
                case "Qo":
                  return i.ordinalNumber(n, { unit: "quarter" });
                case "QQQ":
                  return (
                    i.quarter(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.quarter(n, { width: "narrow", context: "formatting" })
                  );
                case "QQQQQ":
                  return i.quarter(n, {
                    width: "narrow",
                    context: "formatting",
                  });
                default:
                  return (
                    i.quarter(n, { width: "wide", context: "formatting" }) ||
                    i.quarter(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.quarter(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 4;
            }
            set(n, t, i) {
              return n.setMonth(3 * (i - 1), 1), n.setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "Y",
              "R",
              "q",
              "M",
              "L",
              "w",
              "I",
              "d",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          q: new (class One extends st {
            priority = 120;
            parse(n, t, i) {
              switch (t) {
                case "q":
                case "qq":
                  return Xt(t.length, n);
                case "qo":
                  return i.ordinalNumber(n, { unit: "quarter" });
                case "qqq":
                  return (
                    i.quarter(n, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    i.quarter(n, { width: "narrow", context: "standalone" })
                  );
                case "qqqqq":
                  return i.quarter(n, {
                    width: "narrow",
                    context: "standalone",
                  });
                default:
                  return (
                    i.quarter(n, { width: "wide", context: "standalone" }) ||
                    i.quarter(n, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    i.quarter(n, { width: "narrow", context: "standalone" })
                  );
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 4;
            }
            set(n, t, i) {
              return n.setMonth(3 * (i - 1), 1), n.setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "Y",
              "R",
              "Q",
              "M",
              "L",
              "w",
              "I",
              "d",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          M: new (class Ane extends st {
            incompatibleTokens = [
              "Y",
              "R",
              "q",
              "Q",
              "L",
              "w",
              "I",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
            priority = 110;
            parse(n, t, i) {
              const r = (o) => o - 1;
              switch (t) {
                case "M":
                  return on($t(rn_month, n), r);
                case "MM":
                  return on(Xt(2, n), r);
                case "Mo":
                  return on(i.ordinalNumber(n, { unit: "month" }), r);
                case "MMM":
                  return (
                    i.month(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) || i.month(n, { width: "narrow", context: "formatting" })
                  );
                case "MMMMM":
                  return i.month(n, { width: "narrow", context: "formatting" });
                default:
                  return (
                    i.month(n, { width: "wide", context: "formatting" }) ||
                    i.month(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.month(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 11;
            }
            set(n, t, i) {
              return n.setMonth(i, 1), n.setHours(0, 0, 0, 0), n;
            }
          })(),
          L: new (class Pne extends st {
            priority = 110;
            parse(n, t, i) {
              const r = (o) => o - 1;
              switch (t) {
                case "L":
                  return on($t(rn_month, n), r);
                case "LL":
                  return on(Xt(2, n), r);
                case "Lo":
                  return on(i.ordinalNumber(n, { unit: "month" }), r);
                case "LLL":
                  return (
                    i.month(n, {
                      width: "abbreviated",
                      context: "standalone",
                    }) || i.month(n, { width: "narrow", context: "standalone" })
                  );
                case "LLLLL":
                  return i.month(n, { width: "narrow", context: "standalone" });
                default:
                  return (
                    i.month(n, { width: "wide", context: "standalone" }) ||
                    i.month(n, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    i.month(n, { width: "narrow", context: "standalone" })
                  );
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 11;
            }
            set(n, t, i) {
              return n.setMonth(i, 1), n.setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "Y",
              "R",
              "q",
              "Q",
              "M",
              "w",
              "I",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          w: new (class Nne extends st {
            priority = 100;
            parse(n, t, i) {
              switch (t) {
                case "w":
                  return $t(rn_week, n);
                case "wo":
                  return i.ordinalNumber(n, { unit: "week" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 53;
            }
            set(n, t, i, r) {
              return Gr(
                (function Rne(e, n, t) {
                  const i = ue(e),
                    r = IP(i, t) - n;
                  return i.setDate(i.getDate() - 7 * r), i;
                })(n, i, r),
                r
              );
            }
            incompatibleTokens = [
              "y",
              "R",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "i",
              "t",
              "T",
            ];
          })(),
          I: new (class Vne extends st {
            priority = 100;
            parse(n, t, i) {
              switch (t) {
                case "I":
                  return $t(rn_week, n);
                case "Io":
                  return i.ordinalNumber(n, { unit: "week" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 53;
            }
            set(n, t, i) {
              return Gl(
                (function Bne(e, n) {
                  const t = ue(e),
                    i = AP(t) - n;
                  return t.setDate(t.getDate() - 7 * i), t;
                })(n, i)
              );
            }
            incompatibleTokens = [
              "y",
              "Y",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "w",
              "d",
              "D",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          d: new (class jne extends st {
            priority = 90;
            subPriority = 1;
            parse(n, t, i) {
              switch (t) {
                case "d":
                  return $t(rn_date, n);
                case "do":
                  return i.ordinalNumber(n, { unit: "date" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              const r = EP(n.getFullYear()),
                o = n.getMonth();
              return r ? t >= 1 && t <= Hne[o] : t >= 1 && t <= zne[o];
            }
            set(n, t, i) {
              return n.setDate(i), n.setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "Y",
              "R",
              "q",
              "Q",
              "w",
              "I",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          D: new (class Une extends st {
            priority = 90;
            subpriority = 1;
            parse(n, t, i) {
              switch (t) {
                case "D":
                case "DD":
                  return $t(rn_dayOfYear, n);
                case "Do":
                  return i.ordinalNumber(n, { unit: "date" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return EP(n.getFullYear())
                ? t >= 1 && t <= 366
                : t >= 1 && t <= 365;
            }
            set(n, t, i) {
              return n.setMonth(0, i), n.setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "Y",
              "R",
              "q",
              "Q",
              "M",
              "L",
              "w",
              "I",
              "d",
              "E",
              "i",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          E: new (class Wne extends st {
            priority = 90;
            parse(n, t, i) {
              switch (t) {
                case "E":
                case "EE":
                case "EEE":
                  return (
                    i.day(n, { width: "abbreviated", context: "formatting" }) ||
                    i.day(n, { width: "short", context: "formatting" }) ||
                    i.day(n, { width: "narrow", context: "formatting" })
                  );
                case "EEEEE":
                  return i.day(n, { width: "narrow", context: "formatting" });
                case "EEEEEE":
                  return (
                    i.day(n, { width: "short", context: "formatting" }) ||
                    i.day(n, { width: "narrow", context: "formatting" })
                  );
                default:
                  return (
                    i.day(n, { width: "wide", context: "formatting" }) ||
                    i.day(n, { width: "abbreviated", context: "formatting" }) ||
                    i.day(n, { width: "short", context: "formatting" }) ||
                    i.day(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 6;
            }
            set(n, t, i, r) {
              return (n = H0(n, i, r)).setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = ["D", "i", "e", "c", "t", "T"];
          })(),
          e: new (class $ne extends st {
            priority = 90;
            parse(n, t, i, r) {
              const o = (s) => {
                const a = 7 * Math.floor((s - 1) / 7);
                return ((s + r.weekStartsOn + 6) % 7) + a;
              };
              switch (t) {
                case "e":
                case "ee":
                  return on(Xt(t.length, n), o);
                case "eo":
                  return on(i.ordinalNumber(n, { unit: "day" }), o);
                case "eee":
                  return (
                    i.day(n, { width: "abbreviated", context: "formatting" }) ||
                    i.day(n, { width: "short", context: "formatting" }) ||
                    i.day(n, { width: "narrow", context: "formatting" })
                  );
                case "eeeee":
                  return i.day(n, { width: "narrow", context: "formatting" });
                case "eeeeee":
                  return (
                    i.day(n, { width: "short", context: "formatting" }) ||
                    i.day(n, { width: "narrow", context: "formatting" })
                  );
                default:
                  return (
                    i.day(n, { width: "wide", context: "formatting" }) ||
                    i.day(n, { width: "abbreviated", context: "formatting" }) ||
                    i.day(n, { width: "short", context: "formatting" }) ||
                    i.day(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 6;
            }
            set(n, t, i, r) {
              return (n = H0(n, i, r)).setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "y",
              "R",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "E",
              "i",
              "c",
              "t",
              "T",
            ];
          })(),
          c: new (class qne extends st {
            priority = 90;
            parse(n, t, i, r) {
              const o = (s) => {
                const a = 7 * Math.floor((s - 1) / 7);
                return ((s + r.weekStartsOn + 6) % 7) + a;
              };
              switch (t) {
                case "c":
                case "cc":
                  return on(Xt(t.length, n), o);
                case "co":
                  return on(i.ordinalNumber(n, { unit: "day" }), o);
                case "ccc":
                  return (
                    i.day(n, { width: "abbreviated", context: "standalone" }) ||
                    i.day(n, { width: "short", context: "standalone" }) ||
                    i.day(n, { width: "narrow", context: "standalone" })
                  );
                case "ccccc":
                  return i.day(n, { width: "narrow", context: "standalone" });
                case "cccccc":
                  return (
                    i.day(n, { width: "short", context: "standalone" }) ||
                    i.day(n, { width: "narrow", context: "standalone" })
                  );
                default:
                  return (
                    i.day(n, { width: "wide", context: "standalone" }) ||
                    i.day(n, { width: "abbreviated", context: "standalone" }) ||
                    i.day(n, { width: "short", context: "standalone" }) ||
                    i.day(n, { width: "narrow", context: "standalone" })
                  );
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 6;
            }
            set(n, t, i, r) {
              return (n = H0(n, i, r)).setHours(0, 0, 0, 0), n;
            }
            incompatibleTokens = [
              "y",
              "R",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "E",
              "i",
              "e",
              "t",
              "T",
            ];
          })(),
          i: new (class Kne extends st {
            priority = 90;
            parse(n, t, i) {
              const r = (o) => (0 === o ? 7 : o);
              switch (t) {
                case "i":
                case "ii":
                  return Xt(t.length, n);
                case "io":
                  return i.ordinalNumber(n, { unit: "day" });
                case "iii":
                  return on(
                    i.day(n, { width: "abbreviated", context: "formatting" }) ||
                      i.day(n, { width: "short", context: "formatting" }) ||
                      i.day(n, { width: "narrow", context: "formatting" }),
                    r
                  );
                case "iiiii":
                  return on(
                    i.day(n, { width: "narrow", context: "formatting" }),
                    r
                  );
                case "iiiiii":
                  return on(
                    i.day(n, { width: "short", context: "formatting" }) ||
                      i.day(n, { width: "narrow", context: "formatting" }),
                    r
                  );
                default:
                  return on(
                    i.day(n, { width: "wide", context: "formatting" }) ||
                      i.day(n, {
                        width: "abbreviated",
                        context: "formatting",
                      }) ||
                      i.day(n, { width: "short", context: "formatting" }) ||
                      i.day(n, { width: "narrow", context: "formatting" }),
                    r
                  );
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 7;
            }
            set(n, t, i) {
              return (
                (n = (function Yne(e, n) {
                  const t = ue(e),
                    i = (function Gne(e) {
                      let t = ue(e).getDay();
                      return 0 === t && (t = 7), t;
                    })(t);
                  return _g(t, n - i);
                })(n, i)).setHours(0, 0, 0, 0),
                n
              );
            }
            incompatibleTokens = [
              "y",
              "Y",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "w",
              "d",
              "D",
              "E",
              "e",
              "c",
              "t",
              "T",
            ];
          })(),
          a: new (class Zne extends st {
            priority = 80;
            parse(n, t, i) {
              switch (t) {
                case "a":
                case "aa":
                case "aaa":
                  return (
                    i.dayPeriod(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.dayPeriod(n, { width: "narrow", context: "formatting" })
                  );
                case "aaaaa":
                  return i.dayPeriod(n, {
                    width: "narrow",
                    context: "formatting",
                  });
                default:
                  return (
                    i.dayPeriod(n, { width: "wide", context: "formatting" }) ||
                    i.dayPeriod(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.dayPeriod(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            set(n, t, i) {
              return n.setHours(V0(i), 0, 0, 0), n;
            }
            incompatibleTokens = ["b", "B", "H", "k", "t", "T"];
          })(),
          b: new (class Qne extends st {
            priority = 80;
            parse(n, t, i) {
              switch (t) {
                case "b":
                case "bb":
                case "bbb":
                  return (
                    i.dayPeriod(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.dayPeriod(n, { width: "narrow", context: "formatting" })
                  );
                case "bbbbb":
                  return i.dayPeriod(n, {
                    width: "narrow",
                    context: "formatting",
                  });
                default:
                  return (
                    i.dayPeriod(n, { width: "wide", context: "formatting" }) ||
                    i.dayPeriod(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.dayPeriod(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            set(n, t, i) {
              return n.setHours(V0(i), 0, 0, 0), n;
            }
            incompatibleTokens = ["a", "B", "H", "k", "t", "T"];
          })(),
          B: new (class Xne extends st {
            priority = 80;
            parse(n, t, i) {
              switch (t) {
                case "B":
                case "BB":
                case "BBB":
                  return (
                    i.dayPeriod(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.dayPeriod(n, { width: "narrow", context: "formatting" })
                  );
                case "BBBBB":
                  return i.dayPeriod(n, {
                    width: "narrow",
                    context: "formatting",
                  });
                default:
                  return (
                    i.dayPeriod(n, { width: "wide", context: "formatting" }) ||
                    i.dayPeriod(n, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    i.dayPeriod(n, { width: "narrow", context: "formatting" })
                  );
              }
            }
            set(n, t, i) {
              return n.setHours(V0(i), 0, 0, 0), n;
            }
            incompatibleTokens = ["a", "b", "t", "T"];
          })(),
          h: new (class Jne extends st {
            priority = 70;
            parse(n, t, i) {
              switch (t) {
                case "h":
                  return $t(rn_hour12h, n);
                case "ho":
                  return i.ordinalNumber(n, { unit: "hour" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 12;
            }
            set(n, t, i) {
              const r = n.getHours() >= 12;
              return (
                n.setHours(
                  r && i < 12 ? i + 12 : r || 12 !== i ? i : 0,
                  0,
                  0,
                  0
                ),
                n
              );
            }
            incompatibleTokens = ["H", "K", "k", "t", "T"];
          })(),
          H: new (class eie extends st {
            priority = 70;
            parse(n, t, i) {
              switch (t) {
                case "H":
                  return $t(rn_hour23h, n);
                case "Ho":
                  return i.ordinalNumber(n, { unit: "hour" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 23;
            }
            set(n, t, i) {
              return n.setHours(i, 0, 0, 0), n;
            }
            incompatibleTokens = ["a", "b", "h", "K", "k", "t", "T"];
          })(),
          K: new (class tie extends st {
            priority = 70;
            parse(n, t, i) {
              switch (t) {
                case "K":
                  return $t(rn_hour11h, n);
                case "Ko":
                  return i.ordinalNumber(n, { unit: "hour" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 11;
            }
            set(n, t, i) {
              return (
                n.getHours() >= 12 && i < 12
                  ? n.setHours(i + 12, 0, 0, 0)
                  : n.setHours(i, 0, 0, 0),
                n
              );
            }
            incompatibleTokens = ["h", "H", "k", "t", "T"];
          })(),
          k: new (class nie extends st {
            priority = 70;
            parse(n, t, i) {
              switch (t) {
                case "k":
                  return $t(rn_hour24h, n);
                case "ko":
                  return i.ordinalNumber(n, { unit: "hour" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 1 && t <= 24;
            }
            set(n, t, i) {
              return n.setHours(i <= 24 ? i % 24 : i, 0, 0, 0), n;
            }
            incompatibleTokens = ["a", "b", "h", "H", "K", "t", "T"];
          })(),
          m: new (class iie extends st {
            priority = 60;
            parse(n, t, i) {
              switch (t) {
                case "m":
                  return $t(rn_minute, n);
                case "mo":
                  return i.ordinalNumber(n, { unit: "minute" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 59;
            }
            set(n, t, i) {
              return n.setMinutes(i, 0, 0), n;
            }
            incompatibleTokens = ["t", "T"];
          })(),
          s: new (class rie extends st {
            priority = 50;
            parse(n, t, i) {
              switch (t) {
                case "s":
                  return $t(rn_second, n);
                case "so":
                  return i.ordinalNumber(n, { unit: "second" });
                default:
                  return Xt(t.length, n);
              }
            }
            validate(n, t) {
              return t >= 0 && t <= 59;
            }
            set(n, t, i) {
              return n.setSeconds(i, 0), n;
            }
            incompatibleTokens = ["t", "T"];
          })(),
          S: new (class oie extends st {
            priority = 30;
            parse(n, t) {
              return on(Xt(t.length, n), (r) =>
                Math.trunc(r * Math.pow(10, 3 - t.length))
              );
            }
            set(n, t, i) {
              return n.setMilliseconds(i), n;
            }
            incompatibleTokens = ["t", "T"];
          })(),
          X: new (class sie extends st {
            priority = 10;
            parse(n, t) {
              switch (t) {
                case "X":
                  return qr($r_basicOptionalMinutes, n);
                case "XX":
                  return qr($r_basic, n);
                case "XXXX":
                  return qr($r_basicOptionalSeconds, n);
                case "XXXXX":
                  return qr($r_extendedOptionalSeconds, n);
                default:
                  return qr($r_extended, n);
              }
            }
            set(n, t, i) {
              return t.timestampIsSet ? n : Lt(n, n.getTime() - yg(n) - i);
            }
            incompatibleTokens = ["t", "T", "x"];
          })(),
          x: new (class aie extends st {
            priority = 10;
            parse(n, t) {
              switch (t) {
                case "x":
                  return qr($r_basicOptionalMinutes, n);
                case "xx":
                  return qr($r_basic, n);
                case "xxxx":
                  return qr($r_basicOptionalSeconds, n);
                case "xxxxx":
                  return qr($r_extendedOptionalSeconds, n);
                default:
                  return qr($r_extended, n);
              }
            }
            set(n, t, i) {
              return t.timestampIsSet ? n : Lt(n, n.getTime() - yg(n) - i);
            }
            incompatibleTokens = ["t", "T", "X"];
          })(),
          t: new (class lie extends st {
            priority = 40;
            parse(n) {
              return kP(n);
            }
            set(n, t, i) {
              return [Lt(n, 1e3 * i), { timestampIsSet: !0 }];
            }
            incompatibleTokens = "*";
          })(),
          T: new (class cie extends st {
            priority = 20;
            parse(n) {
              return kP(n);
            }
            set(n, t, i) {
              return [Lt(n, i), { timestampIsSet: !0 }];
            }
            incompatibleTokens = "*";
          })(),
        },
        die = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
        hie = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
        fie = /^'([^]*?)'?$/,
        pie = /''/g,
        gie = /\S/,
        mie = /[a-zA-Z]/;
      function yie(e) {
        return e.match(fie)[1].replace(pie, "'");
      }
      const vg = {
          dateTimeDelimiter: /[T ]/,
          timeZoneDelimiter: /[Z ]/i,
          timezone: /([Z+-].*)$/,
        },
        bie = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,
        wie =
          /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,
        Cie = /^([+-])(\d{2})(?::?(\d{2}))?$/;
      function Md(e) {
        return e ? parseInt(e) : 1;
      }
      function j0(e) {
        return (e && parseFloat(e.replace(",", "."))) || 0;
      }
      const Eie = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      function PP(e) {
        return e % 400 == 0 || (e % 4 == 0 && e % 100 != 0);
      }
      function FP(e) {
        if (
          !(function Rie(e) {
            return (
              e instanceof Date ||
              ("object" == typeof e &&
                "[object Date]" === Object.prototype.toString.call(e))
            );
          })(e) &&
          "number" != typeof e
        )
          return !1;
        const n = ue(e);
        return !isNaN(Number(n));
      }
      function U0(e) {
        const n = ue(e);
        return n.setHours(0, 0, 0, 0), n;
      }
      function RP(e, n) {
        const t = U0(e),
          i = U0(n),
          r = +t - yg(t),
          o = +i - yg(i);
        return Math.round((r - o) / xne);
      }
      function NP(e) {
        const n = ue(e),
          t = Lt(e, 0);
        return t.setFullYear(n.getFullYear(), 0, 1), t.setHours(0, 0, 0, 0), t;
      }
      function mt(e, n) {
        return (e < 0 ? "-" : "") + Math.abs(e).toString().padStart(n, "0");
      }
      const gs = {
          y(e, n) {
            const t = e.getFullYear(),
              i = t > 0 ? t : 1 - t;
            return mt("yy" === n ? i % 100 : i, n.length);
          },
          M(e, n) {
            const t = e.getMonth();
            return "M" === n ? String(t + 1) : mt(t + 1, 2);
          },
          d: (e, n) => mt(e.getDate(), n.length),
          a(e, n) {
            const t = e.getHours() / 12 >= 1 ? "pm" : "am";
            switch (n) {
              case "a":
              case "aa":
                return t.toUpperCase();
              case "aaa":
                return t;
              case "aaaaa":
                return t[0];
              default:
                return "am" === t ? "a.m." : "p.m.";
            }
          },
          h: (e, n) => mt(e.getHours() % 12 || 12, n.length),
          H: (e, n) => mt(e.getHours(), n.length),
          m: (e, n) => mt(e.getMinutes(), n.length),
          s: (e, n) => mt(e.getSeconds(), n.length),
          S(e, n) {
            const t = n.length,
              i = e.getMilliseconds();
            return mt(Math.trunc(i * Math.pow(10, t - 3)), n.length);
          },
        },
        LP = {
          G: function (e, n, t) {
            const i = e.getFullYear() > 0 ? 1 : 0;
            switch (n) {
              case "G":
              case "GG":
              case "GGG":
                return t.era(i, { width: "abbreviated" });
              case "GGGGG":
                return t.era(i, { width: "narrow" });
              default:
                return t.era(i, { width: "wide" });
            }
          },
          y: function (e, n, t) {
            if ("yo" === n) {
              const i = e.getFullYear();
              return t.ordinalNumber(i > 0 ? i : 1 - i, { unit: "year" });
            }
            return gs.y(e, n);
          },
          Y: function (e, n, t, i) {
            const r = z0(e, i),
              o = r > 0 ? r : 1 - r;
            return "YY" === n
              ? mt(o % 100, 2)
              : "Yo" === n
              ? t.ordinalNumber(o, { unit: "year" })
              : mt(o, n.length);
          },
          R: function (e, n) {
            return mt(OP(e), n.length);
          },
          u: function (e, n) {
            return mt(e.getFullYear(), n.length);
          },
          Q: function (e, n, t) {
            const i = Math.ceil((e.getMonth() + 1) / 3);
            switch (n) {
              case "Q":
                return String(i);
              case "QQ":
                return mt(i, 2);
              case "Qo":
                return t.ordinalNumber(i, { unit: "quarter" });
              case "QQQ":
                return t.quarter(i, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "QQQQQ":
                return t.quarter(i, { width: "narrow", context: "formatting" });
              default:
                return t.quarter(i, { width: "wide", context: "formatting" });
            }
          },
          q: function (e, n, t) {
            const i = Math.ceil((e.getMonth() + 1) / 3);
            switch (n) {
              case "q":
                return String(i);
              case "qq":
                return mt(i, 2);
              case "qo":
                return t.ordinalNumber(i, { unit: "quarter" });
              case "qqq":
                return t.quarter(i, {
                  width: "abbreviated",
                  context: "standalone",
                });
              case "qqqqq":
                return t.quarter(i, { width: "narrow", context: "standalone" });
              default:
                return t.quarter(i, { width: "wide", context: "standalone" });
            }
          },
          M: function (e, n, t) {
            const i = e.getMonth();
            switch (n) {
              case "M":
              case "MM":
                return gs.M(e, n);
              case "Mo":
                return t.ordinalNumber(i + 1, { unit: "month" });
              case "MMM":
                return t.month(i, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "MMMMM":
                return t.month(i, { width: "narrow", context: "formatting" });
              default:
                return t.month(i, { width: "wide", context: "formatting" });
            }
          },
          L: function (e, n, t) {
            const i = e.getMonth();
            switch (n) {
              case "L":
                return String(i + 1);
              case "LL":
                return mt(i + 1, 2);
              case "Lo":
                return t.ordinalNumber(i + 1, { unit: "month" });
              case "LLL":
                return t.month(i, {
                  width: "abbreviated",
                  context: "standalone",
                });
              case "LLLLL":
                return t.month(i, { width: "narrow", context: "standalone" });
              default:
                return t.month(i, { width: "wide", context: "standalone" });
            }
          },
          w: function (e, n, t, i) {
            const r = IP(e, i);
            return "wo" === n
              ? t.ordinalNumber(r, { unit: "week" })
              : mt(r, n.length);
          },
          I: function (e, n, t) {
            const i = AP(e);
            return "Io" === n
              ? t.ordinalNumber(i, { unit: "week" })
              : mt(i, n.length);
          },
          d: function (e, n, t) {
            return "do" === n
              ? t.ordinalNumber(e.getDate(), { unit: "date" })
              : gs.d(e, n);
          },
          D: function (e, n, t) {
            const i = (function Nie(e) {
              const n = ue(e);
              return RP(n, NP(n)) + 1;
            })(e);
            return "Do" === n
              ? t.ordinalNumber(i, { unit: "dayOfYear" })
              : mt(i, n.length);
          },
          E: function (e, n, t) {
            const i = e.getDay();
            switch (n) {
              case "E":
              case "EE":
              case "EEE":
                return t.day(i, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "EEEEE":
                return t.day(i, { width: "narrow", context: "formatting" });
              case "EEEEEE":
                return t.day(i, { width: "short", context: "formatting" });
              default:
                return t.day(i, { width: "wide", context: "formatting" });
            }
          },
          e: function (e, n, t, i) {
            const r = e.getDay(),
              o = (r - i.weekStartsOn + 8) % 7 || 7;
            switch (n) {
              case "e":
                return String(o);
              case "ee":
                return mt(o, 2);
              case "eo":
                return t.ordinalNumber(o, { unit: "day" });
              case "eee":
                return t.day(r, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "eeeee":
                return t.day(r, { width: "narrow", context: "formatting" });
              case "eeeeee":
                return t.day(r, { width: "short", context: "formatting" });
              default:
                return t.day(r, { width: "wide", context: "formatting" });
            }
          },
          c: function (e, n, t, i) {
            const r = e.getDay(),
              o = (r - i.weekStartsOn + 8) % 7 || 7;
            switch (n) {
              case "c":
                return String(o);
              case "cc":
                return mt(o, n.length);
              case "co":
                return t.ordinalNumber(o, { unit: "day" });
              case "ccc":
                return t.day(r, {
                  width: "abbreviated",
                  context: "standalone",
                });
              case "ccccc":
                return t.day(r, { width: "narrow", context: "standalone" });
              case "cccccc":
                return t.day(r, { width: "short", context: "standalone" });
              default:
                return t.day(r, { width: "wide", context: "standalone" });
            }
          },
          i: function (e, n, t) {
            const i = e.getDay(),
              r = 0 === i ? 7 : i;
            switch (n) {
              case "i":
                return String(r);
              case "ii":
                return mt(r, n.length);
              case "io":
                return t.ordinalNumber(r, { unit: "day" });
              case "iii":
                return t.day(i, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "iiiii":
                return t.day(i, { width: "narrow", context: "formatting" });
              case "iiiiii":
                return t.day(i, { width: "short", context: "formatting" });
              default:
                return t.day(i, { width: "wide", context: "formatting" });
            }
          },
          a: function (e, n, t) {
            const r = e.getHours() / 12 >= 1 ? "pm" : "am";
            switch (n) {
              case "a":
              case "aa":
                return t.dayPeriod(r, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "aaa":
                return t
                  .dayPeriod(r, { width: "abbreviated", context: "formatting" })
                  .toLowerCase();
              case "aaaaa":
                return t.dayPeriod(r, {
                  width: "narrow",
                  context: "formatting",
                });
              default:
                return t.dayPeriod(r, { width: "wide", context: "formatting" });
            }
          },
          b: function (e, n, t) {
            const i = e.getHours();
            let r;
            switch (
              ((r =
                12 === i
                  ? "noon"
                  : 0 === i
                  ? "midnight"
                  : i / 12 >= 1
                  ? "pm"
                  : "am"),
              n)
            ) {
              case "b":
              case "bb":
                return t.dayPeriod(r, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "bbb":
                return t
                  .dayPeriod(r, { width: "abbreviated", context: "formatting" })
                  .toLowerCase();
              case "bbbbb":
                return t.dayPeriod(r, {
                  width: "narrow",
                  context: "formatting",
                });
              default:
                return t.dayPeriod(r, { width: "wide", context: "formatting" });
            }
          },
          B: function (e, n, t) {
            const i = e.getHours();
            let r;
            switch (
              ((r =
                i >= 17
                  ? "evening"
                  : i >= 12
                  ? "afternoon"
                  : i >= 4
                  ? "morning"
                  : "night"),
              n)
            ) {
              case "B":
              case "BB":
              case "BBB":
                return t.dayPeriod(r, {
                  width: "abbreviated",
                  context: "formatting",
                });
              case "BBBBB":
                return t.dayPeriod(r, {
                  width: "narrow",
                  context: "formatting",
                });
              default:
                return t.dayPeriod(r, { width: "wide", context: "formatting" });
            }
          },
          h: function (e, n, t) {
            if ("ho" === n) {
              let i = e.getHours() % 12;
              return 0 === i && (i = 12), t.ordinalNumber(i, { unit: "hour" });
            }
            return gs.h(e, n);
          },
          H: function (e, n, t) {
            return "Ho" === n
              ? t.ordinalNumber(e.getHours(), { unit: "hour" })
              : gs.H(e, n);
          },
          K: function (e, n, t) {
            const i = e.getHours() % 12;
            return "Ko" === n
              ? t.ordinalNumber(i, { unit: "hour" })
              : mt(i, n.length);
          },
          k: function (e, n, t) {
            let i = e.getHours();
            return (
              0 === i && (i = 24),
              "ko" === n
                ? t.ordinalNumber(i, { unit: "hour" })
                : mt(i, n.length)
            );
          },
          m: function (e, n, t) {
            return "mo" === n
              ? t.ordinalNumber(e.getMinutes(), { unit: "minute" })
              : gs.m(e, n);
          },
          s: function (e, n, t) {
            return "so" === n
              ? t.ordinalNumber(e.getSeconds(), { unit: "second" })
              : gs.s(e, n);
          },
          S: function (e, n) {
            return gs.S(e, n);
          },
          X: function (e, n, t) {
            const i = e.getTimezoneOffset();
            if (0 === i) return "Z";
            switch (n) {
              case "X":
                return VP(i);
              case "XXXX":
              case "XX":
                return ca(i);
              default:
                return ca(i, ":");
            }
          },
          x: function (e, n, t) {
            const i = e.getTimezoneOffset();
            switch (n) {
              case "x":
                return VP(i);
              case "xxxx":
              case "xx":
                return ca(i);
              default:
                return ca(i, ":");
            }
          },
          O: function (e, n, t) {
            const i = e.getTimezoneOffset();
            switch (n) {
              case "O":
              case "OO":
              case "OOO":
                return "GMT" + BP(i, ":");
              default:
                return "GMT" + ca(i, ":");
            }
          },
          z: function (e, n, t) {
            const i = e.getTimezoneOffset();
            switch (n) {
              case "z":
              case "zz":
              case "zzz":
                return "GMT" + BP(i, ":");
              default:
                return "GMT" + ca(i, ":");
            }
          },
          t: function (e, n, t) {
            return mt(Math.trunc(e.getTime() / 1e3), n.length);
          },
          T: function (e, n, t) {
            return mt(e.getTime(), n.length);
          },
        };
      function BP(e, n = "") {
        const t = e > 0 ? "-" : "+",
          i = Math.abs(e),
          r = Math.trunc(i / 60),
          o = i % 60;
        return 0 === o ? t + String(r) : t + String(r) + n + mt(o, 2);
      }
      function VP(e, n) {
        return e % 60 == 0
          ? (e > 0 ? "-" : "+") + mt(Math.abs(e) / 60, 2)
          : ca(e, n);
      }
      function ca(e, n = "") {
        const t = e > 0 ? "-" : "+",
          i = Math.abs(e);
        return t + mt(Math.trunc(i / 60), 2) + n + mt(i % 60, 2);
      }
      const Lie = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
        Bie = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
        Vie = /^'([^]*?)'?$/,
        zie = /''/g,
        Hie = /[a-zA-Z]/;
      function Uie(e) {
        const n = e.match(Vie);
        return n ? n[1].replace(zie, "'") : e;
      }
      function bg(e, n) {
        return Lt(e, +ue(e) + n);
      }
      function W0(e, n) {
        const t = ue(e);
        if (isNaN(n)) return Lt(e, NaN);
        if (!n) return t;
        const i = t.getDate(),
          r = Lt(e, t.getTime());
        return (
          r.setMonth(t.getMonth() + n + 1, 0),
          i >= r.getDate()
            ? r
            : (t.setFullYear(r.getFullYear(), r.getMonth(), i), t)
        );
      }
      function wg(e, n) {
        return +ue(e) - +ue(n);
      }
      function Dd(e) {
        return (n) => {
          const i = (e ? Math[e] : Math.trunc)(n);
          return 0 === i ? 0 : i;
        };
      }
      function zP(e, n) {
        const t = ue(e),
          i = ue(n),
          r = HP(t, i),
          o = Math.abs(RP(t, i));
        t.setDate(t.getDate() - r * o);
        const a = r * (o - +(HP(t, i) === -r));
        return 0 === a ? 0 : a;
      }
      function HP(e, n) {
        const t =
          e.getFullYear() - n.getFullYear() ||
          e.getMonth() - n.getMonth() ||
          e.getDate() - n.getDate() ||
          e.getHours() - n.getHours() ||
          e.getMinutes() - n.getMinutes() ||
          e.getSeconds() - n.getSeconds() ||
          e.getMilliseconds() - n.getMilliseconds();
        return t < 0 ? -1 : t > 0 ? 1 : t;
      }
      function Sd(e, n) {
        const t = ue(e),
          i = ue(n),
          r = t.getTime() - i.getTime();
        return r < 0 ? -1 : r > 0 ? 1 : r;
      }
      function jP(e) {
        const n = ue(e);
        return n.setHours(23, 59, 59, 999), n;
      }
      function UP(e) {
        const n = ue(e),
          t = n.getMonth();
        return (
          n.setFullYear(n.getFullYear(), t + 1, 0),
          n.setHours(23, 59, 59, 999),
          n
        );
      }
      function WP(e, n) {
        const t = ue(e),
          i = ue(n),
          r = Sd(t, i),
          o = Math.abs(
            (function ere(e, n) {
              const t = ue(e),
                i = ue(n);
              return (
                12 * (t.getFullYear() - i.getFullYear()) +
                (t.getMonth() - i.getMonth())
              );
            })(t, i)
          );
        let s;
        if (o < 1) s = 0;
        else {
          1 === t.getMonth() && t.getDate() > 27 && t.setDate(30),
            t.setMonth(t.getMonth() - r * o);
          let a = Sd(t, i) === -r;
          (function tre(e) {
            const n = ue(e);
            return +jP(n) == +UP(n);
          })(ue(e)) &&
            1 === o &&
            1 === Sd(e, i) &&
            (a = !1),
            (s = r * (o - Number(a)));
        }
        return 0 === s ? 0 : s;
      }
      const mre = {
        datetime: "MMM d, yyyy, h:mm:ss aaaa",
        millisecond: "h:mm:ss.SSS aaaa",
        second: "h:mm:ss aaaa",
        minute: "h:mm aaaa",
        hour: "ha",
        day: "MMM d",
        week: "PP",
        month: "MMM yyyy",
        quarter: "qqq - yyyy",
        year: "yyyy",
      };
      _O._date.override({
        _id: "date-fns",
        formats: function () {
          return mre;
        },
        parse: function (e, n) {
          if (null === e || typeof e > "u") return null;
          const t = typeof e;
          return (
            "number" === t || e instanceof Date
              ? (e = ue(e))
              : "string" === t &&
                (e =
                  "string" == typeof n
                    ? (function _ie(e, n, t, i) {
                        const r = (function Rte() {
                            return Object.assign({}, la());
                          })(),
                          o = i?.locale ?? r.locale ?? vP,
                          s =
                            i?.firstWeekContainsDate ??
                            i?.locale?.options?.firstWeekContainsDate ??
                            r.firstWeekContainsDate ??
                            r.locale?.options?.firstWeekContainsDate ??
                            1,
                          a =
                            i?.weekStartsOn ??
                            i?.locale?.options?.weekStartsOn ??
                            r.weekStartsOn ??
                            r.locale?.options?.weekStartsOn ??
                            0;
                        if ("" === n) return "" === e ? ue(t) : Lt(t, NaN);
                        const l = {
                            firstWeekContainsDate: s,
                            weekStartsOn: a,
                            locale: o,
                          },
                          c = [new bne()],
                          u = n
                            .match(hie)
                            .map((y) => {
                              const v = y[0];
                              return v in L0 ? (0, L0[v])(y, o.formatLong) : y;
                            })
                            .join("")
                            .match(die),
                          f = [];
                        for (let y of u) {
                          !i?.useAdditionalWeekYearTokens &&
                            xP(y) &&
                            B0(y, n, e),
                            !i?.useAdditionalDayOfYearTokens &&
                              CP(y) &&
                              B0(y, n, e);
                          const v = y[0],
                            w = uie[v];
                          if (w) {
                            const { incompatibleTokens: C } = w;
                            if (Array.isArray(C)) {
                              const S = f.find(
                                (T) => C.includes(T.token) || T.token === v
                              );
                              if (S)
                                throw new RangeError(
                                  `The format string mustn't contain \`${S.fullToken}\` and \`${y}\` at the same time`
                                );
                            } else if (
                              "*" === w.incompatibleTokens &&
                              f.length > 0
                            )
                              throw new RangeError(
                                `The format string mustn't contain \`${y}\` and any other token at the same time`
                              );
                            f.push({ token: v, fullToken: y });
                            const D = w.run(e, y, o.match, l);
                            if (!D) return Lt(t, NaN);
                            c.push(D.setter), (e = D.rest);
                          } else {
                            if (v.match(mie))
                              throw new RangeError(
                                "Format string contains an unescaped latin alphabet character `" +
                                  v +
                                  "`"
                              );
                            if (
                              ("''" === y
                                ? (y = "'")
                                : "'" === v && (y = yie(y)),
                              0 !== e.indexOf(y))
                            )
                              return Lt(t, NaN);
                            e = e.slice(y.length);
                          }
                        }
                        if (e.length > 0 && gie.test(e)) return Lt(t, NaN);
                        const g = c
                          .map((y) => y.priority)
                          .sort((y, v) => v - y)
                          .filter((y, v, w) => w.indexOf(y) === v)
                          .map((y) =>
                            c
                              .filter((v) => v.priority === y)
                              .sort((v, w) => w.subPriority - v.subPriority)
                          )
                          .map((y) => y[0]);
                        let m = ue(t);
                        if (isNaN(m.getTime())) return Lt(t, NaN);
                        const _ = {};
                        for (const y of g) {
                          if (!y.validate(m, l)) return Lt(t, NaN);
                          const v = y.set(m, _, l);
                          Array.isArray(v)
                            ? ((m = v[0]), Object.assign(_, v[1]))
                            : (m = v);
                        }
                        return Lt(t, m);
                      })(e, n, new Date(), this.options)
                    : (function vie(e, n) {
                        const t = n?.additionalDigits ?? 2,
                          i = (function xie(e) {
                            const n = {},
                              t = e.split(vg.dateTimeDelimiter);
                            let i;
                            if (t.length > 2) return n;
                            if (
                              (/:/.test(t[0])
                                ? (i = t[0])
                                : ((n.date = t[0]),
                                  (i = t[1]),
                                  vg.timeZoneDelimiter.test(n.date) &&
                                    ((n.date = e.split(
                                      vg.timeZoneDelimiter
                                    )[0]),
                                    (i = e.substr(n.date.length, e.length)))),
                              i)
                            ) {
                              const r = vg.timezone.exec(i);
                              r
                                ? ((n.time = i.replace(r[1], "")),
                                  (n.timezone = r[1]))
                                : (n.time = i);
                            }
                            return n;
                          })(e);
                        let r;
                        if (i.date) {
                          const l = (function Mie(e, n) {
                            const t = new RegExp(
                                "^(?:(\\d{4}|[+-]\\d{" +
                                  (4 + n) +
                                  "})|(\\d{2}|[+-]\\d{" +
                                  (2 + n) +
                                  "})$)"
                              ),
                              i = e.match(t);
                            if (!i) return { year: NaN, restDateString: "" };
                            const r = i[1] ? parseInt(i[1]) : null,
                              o = i[2] ? parseInt(i[2]) : null;
                            return {
                              year: null === o ? r : 100 * o,
                              restDateString: e.slice((i[1] || i[2]).length),
                            };
                          })(i.date, t);
                          r = (function Die(e, n) {
                            if (null === n) return new Date(NaN);
                            const t = e.match(bie);
                            if (!t) return new Date(NaN);
                            const i = !!t[4],
                              r = Md(t[1]),
                              o = Md(t[2]) - 1,
                              s = Md(t[3]),
                              a = Md(t[4]),
                              l = Md(t[5]) - 1;
                            if (i)
                              return (function Aie(e, n, t) {
                                return n >= 1 && n <= 53 && t >= 0 && t <= 6;
                              })(0, a, l)
                                ? (function Tie(e, n, t) {
                                    const i = new Date(0);
                                    i.setUTCFullYear(e, 0, 4);
                                    const o =
                                      7 * (n - 1) +
                                      t +
                                      1 -
                                      (i.getUTCDay() || 7);
                                    return i.setUTCDate(i.getUTCDate() + o), i;
                                  })(n, a, l)
                                : new Date(NaN);
                            {
                              const c = new Date(0);
                              return (function Iie(e, n, t) {
                                return (
                                  n >= 0 &&
                                  n <= 11 &&
                                  t >= 1 &&
                                  t <= (Eie[n] || (PP(e) ? 29 : 28))
                                );
                              })(n, o, s) &&
                                (function Oie(e, n) {
                                  return n >= 1 && n <= (PP(e) ? 366 : 365);
                                })(n, r)
                                ? (c.setUTCFullYear(n, o, Math.max(r, s)), c)
                                : new Date(NaN);
                            }
                          })(l.restDateString, l.year);
                        }
                        if (!r || isNaN(r.getTime())) return new Date(NaN);
                        const o = r.getTime();
                        let a,
                          s = 0;
                        if (
                          i.time &&
                          ((s = (function Sie(e) {
                            const n = e.match(wie);
                            if (!n) return NaN;
                            const t = j0(n[1]),
                              i = j0(n[2]),
                              r = j0(n[3]);
                            return (function Pie(e, n, t) {
                              return 24 === e
                                ? 0 === n && 0 === t
                                : t >= 0 &&
                                    t < 60 &&
                                    n >= 0 &&
                                    n < 60 &&
                                    e >= 0 &&
                                    e < 25;
                            })(t, i, r)
                              ? t * xd + i * Cd + 1e3 * r
                              : NaN;
                          })(i.time)),
                          isNaN(s))
                        )
                          return new Date(NaN);
                        if (!i.timezone) {
                          const l = new Date(o + s),
                            c = new Date(0);
                          return (
                            c.setFullYear(
                              l.getUTCFullYear(),
                              l.getUTCMonth(),
                              l.getUTCDate()
                            ),
                            c.setHours(
                              l.getUTCHours(),
                              l.getUTCMinutes(),
                              l.getUTCSeconds(),
                              l.getUTCMilliseconds()
                            ),
                            c
                          );
                        }
                        return (
                          (a = (function kie(e) {
                            if ("Z" === e) return 0;
                            const n = e.match(Cie);
                            if (!n) return 0;
                            const t = "+" === n[1] ? -1 : 1,
                              i = parseInt(n[2]),
                              r = (n[3] && parseInt(n[3])) || 0;
                            return (function Fie(e, n) {
                              return n >= 0 && n <= 59;
                            })(0, r)
                              ? t * (i * xd + r * Cd)
                              : NaN;
                          })(i.timezone)),
                          isNaN(a) ? new Date(NaN) : new Date(o + s + a)
                        );
                      })(e, this.options)),
            FP(e) ? e.getTime() : null
          );
        },
        format: function (e, n) {
          return (function jie(e, n, t) {
            const i = la(),
              r = t?.locale ?? i.locale ?? vP,
              o =
                t?.firstWeekContainsDate ??
                t?.locale?.options?.firstWeekContainsDate ??
                i.firstWeekContainsDate ??
                i.locale?.options?.firstWeekContainsDate ??
                1,
              s =
                t?.weekStartsOn ??
                t?.locale?.options?.weekStartsOn ??
                i.weekStartsOn ??
                i.locale?.options?.weekStartsOn ??
                0,
              a = ue(e);
            if (!FP(a)) throw new RangeError("Invalid time value");
            let l = n
              .match(Bie)
              .map((u) => {
                const f = u[0];
                return "p" === f || "P" === f ? (0, L0[f])(u, r.formatLong) : u;
              })
              .join("")
              .match(Lie)
              .map((u) => {
                if ("''" === u) return { isToken: !1, value: "'" };
                const f = u[0];
                if ("'" === f) return { isToken: !1, value: Uie(u) };
                if (LP[f]) return { isToken: !0, value: u };
                if (f.match(Hie))
                  throw new RangeError(
                    "Format string contains an unescaped latin alphabet character `" +
                      f +
                      "`"
                  );
                return { isToken: !1, value: u };
              });
            r.localize.preprocessor && (l = r.localize.preprocessor(a, l));
            const c = { firstWeekContainsDate: o, weekStartsOn: s, locale: r };
            return l
              .map((u) => {
                if (!u.isToken) return u.value;
                const f = u.value;
                return (
                  ((!t?.useAdditionalWeekYearTokens && xP(f)) ||
                    (!t?.useAdditionalDayOfYearTokens && CP(f))) &&
                    B0(f, n, String(e)),
                  (0, LP[f[0]])(a, f, r.localize, c)
                );
              })
              .join("");
          })(e, n, this.options);
        },
        add: function (e, n, t) {
          switch (t) {
            case "millisecond":
              return bg(e, n);
            case "second":
              return (function Wie(e, n) {
                return bg(e, 1e3 * n);
              })(e, n);
            case "minute":
              return (function $ie(e, n) {
                return bg(e, n * Cd);
              })(e, n);
            case "hour":
              return (function qie(e, n) {
                return bg(e, n * xd);
              })(e, n);
            case "day":
              return _g(e, n);
            case "week":
              return (function Gie(e, n) {
                return _g(e, 7 * n);
              })(e, n);
            case "month":
              return W0(e, n);
            case "quarter":
              return (function Yie(e, n) {
                return W0(e, 3 * n);
              })(e, n);
            case "year":
              return (function Kie(e, n) {
                return W0(e, 12 * n);
              })(e, n);
            default:
              return e;
          }
        },
        diff: function (e, n, t) {
          switch (t) {
            case "millisecond":
              return wg(e, n);
            case "second":
              return (function Zie(e, n, t) {
                const i = wg(e, n) / 1e3;
                return Dd(t?.roundingMethod)(i);
              })(e, n);
            case "minute":
              return (function Qie(e, n, t) {
                const i = wg(e, n) / Cd;
                return Dd(t?.roundingMethod)(i);
              })(e, n);
            case "hour":
              return (function Xie(e, n, t) {
                const i = wg(e, n) / xd;
                return Dd(t?.roundingMethod)(i);
              })(e, n);
            case "day":
              return zP(e, n);
            case "week":
              return (function Jie(e, n, t) {
                const i = zP(e, n) / 7;
                return Dd(t?.roundingMethod)(i);
              })(e, n);
            case "month":
              return WP(e, n);
            case "quarter":
              return (function nre(e, n, t) {
                const i = WP(e, n) / 3;
                return Dd(t?.roundingMethod)(i);
              })(e, n);
            case "year":
              return (function rre(e, n) {
                const t = ue(e),
                  i = ue(n),
                  r = Sd(t, i),
                  o = Math.abs(
                    (function ire(e, n) {
                      const t = ue(e),
                        i = ue(n);
                      return t.getFullYear() - i.getFullYear();
                    })(t, i)
                  );
                t.setFullYear(1584), i.setFullYear(1584);
                const a = r * (o - +(Sd(t, i) === -r));
                return 0 === a ? 0 : a;
              })(e, n);
            default:
              return 0;
          }
        },
        startOf: function (e, n, t) {
          switch (n) {
            case "second":
              return (function ore(e) {
                const n = ue(e);
                return n.setMilliseconds(0), n;
              })(e);
            case "minute":
              return (function sre(e) {
                const n = ue(e);
                return n.setSeconds(0, 0), n;
              })(e);
            case "hour":
              return (function are(e) {
                const n = ue(e);
                return n.setMinutes(0, 0, 0), n;
              })(e);
            case "day":
              return U0(e);
            case "week":
              return Gr(e);
            case "isoWeek":
              return Gr(e, { weekStartsOn: +t });
            case "month":
              return (function lre(e) {
                const n = ue(e);
                return n.setDate(1), n.setHours(0, 0, 0, 0), n;
              })(e);
            case "quarter":
              return (function cre(e) {
                const n = ue(e),
                  t = n.getMonth();
                return n.setMonth(t - (t % 3), 1), n.setHours(0, 0, 0, 0), n;
              })(e);
            case "year":
              return NP(e);
            default:
              return e;
          }
        },
        endOf: function (e, n) {
          switch (n) {
            case "second":
              return (function ure(e) {
                const n = ue(e);
                return n.setMilliseconds(999), n;
              })(e);
            case "minute":
              return (function dre(e) {
                const n = ue(e);
                return n.setSeconds(59, 999), n;
              })(e);
            case "hour":
              return (function hre(e) {
                const n = ue(e);
                return n.setMinutes(59, 59, 999), n;
              })(e);
            case "day":
              return jP(e);
            case "week":
              return (function fre(e, n) {
                const t = la(),
                  i =
                    n?.weekStartsOn ??
                    n?.locale?.options?.weekStartsOn ??
                    t.weekStartsOn ??
                    t.locale?.options?.weekStartsOn ??
                    0,
                  r = ue(e),
                  o = r.getDay(),
                  s = 6 + (o < i ? -7 : 0) - (o - i);
                return (
                  r.setDate(r.getDate() + s), r.setHours(23, 59, 59, 999), r
                );
              })(e);
            case "month":
              return UP(e);
            case "quarter":
              return (function pre(e) {
                const n = ue(e),
                  t = n.getMonth();
                return (
                  n.setMonth(t - (t % 3) + 3, 0), n.setHours(23, 59, 59, 999), n
                );
              })(e);
            case "year":
              return (function gre(e) {
                const n = ue(e),
                  t = n.getFullYear();
                return (
                  n.setFullYear(t + 1, 0, 0), n.setHours(23, 59, 59, 999), n
                );
              })(e);
            default:
              return e;
          }
        },
      });
      let $P = (() => {
          class e {
            constructor(t) {
              (this._data = t),
                (this.statisticDelay = this._data.settings.statisticDelay),
                (this.statisticMaxPoints =
                  this._data.settings.statisticMaxPoints);
            }
            changeStatisticDelay(t) {
              (this._data.settings.statisticDelay = t),
                (this.statisticDelay = t);
            }
            changeStatisticMaxPoints(t) {
              (this._data.settings.statisticMaxPoints = t),
                (this.statisticMaxPoints = t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        _re = (() => {
          class e {
            constructor(t, i, r) {
              (this._data = t),
                (this._chartService = i),
                (this._offline = r),
                (this.lineChartData = []),
                (this.lineChartLabels = []),
                (this.lineChartOptions = {
                  animation: { duration: 3e3, easing: "linear" },
                  animations: { y: { duration: 0 } },
                  responsive: !0,
                  aspectRatio: 3,
                  scales: {
                    x: {
                      ticks: {
                        autoSkip: !0,
                        maxTicksLimit: 5,
                        maxRotation: 0,
                        minRotation: 0,
                      },
                      type: "time",
                      time: { minUnit: "minute" },
                      adapters: { date: {} },
                    },
                    y: {},
                  },
                }),
                (this.lineChartColors = [
                  {
                    backgroundColor: "#27755420",
                    borderColor: "#277554",
                    pointBackgroundColor: "#27755420",
                    pointBorderColor: "#277554",
                    pointHoverBackgroundColor: "##27755480",
                    pointHoverBorderColor: "#27755480",
                  },
                  {
                    backgroundColor: "#AB393920",
                    borderColor: "#AB3939",
                    pointBackgroundColor: "#AB393920",
                    pointBorderColor: "#AB3939",
                    pointHoverBackgroundColor: "#AB393920",
                    pointHoverBorderColor: "#AB393920",
                  },
                  {
                    backgroundColor: "#2F427220",
                    borderColor: "#2F4272",
                    pointBackgroundColor: "#2F427220",
                    pointBorderColor: "#2F4272",
                    pointHoverBackgroundColor: "#2F427220",
                    pointHoverBorderColor: "#2F427220",
                  },
                  {
                    backgroundColor: "#718EA420",
                    borderColor: "#718EA4",
                    pointBackgroundColor: "#718EA420",
                    pointBorderColor: "#718EA4",
                    pointHoverBackgroundColor: "#718EA420",
                    pointHoverBorderColor: "#718EA420",
                  },
                  {
                    backgroundColor: "#11061D20",
                    borderColor: "#11061D",
                    pointBackgroundColor: "#11061D20",
                    pointBorderColor: "#11061D",
                    pointHoverBackgroundColor: "#11061D20",
                    pointHoverBorderColor: "#11061D20",
                  },
                  {
                    backgroundColor: "#AA773920",
                    borderColor: "#AA7739",
                    pointBackgroundColor: "#AA773920",
                    pointBorderColor: "#AA7739",
                    pointHoverBackgroundColor: "#AA773920",
                    pointHoverBorderColor: "#AA773920",
                  },
                ]),
                (this.lineChartLegend = !0),
                (this.lineChartType = "line"),
                (this.hide = !1),
                (this._alive = !0);
            }
            ngOnInit() {
              this.tick();
            }
            tick() {
              const t = this._data.game,
                i = new Date();
              for (const o of t.fluid) {
                const s = this.lineChartData.findIndex(
                  (a) => a.label === o.name
                );
                -1 !== s
                  ? this.lineChartData[s].data.push({ y: o.value, x: i })
                  : this.lineChartData.push({
                      fill: !0,
                      label: o.name,
                      data: [{ y: o.value, x: i }],
                      ...this.getColor(o.name),
                    });
              }
              for (const o of t.flask) {
                const s = this.lineChartData.findIndex(
                  (a) => a.label === o.name + "flask"
                );
                -1 !== s
                  ? this.lineChartData[s].data.push({ y: o.value, x: i })
                  : this.lineChartData.push({
                      fill: !0,
                      label: o.name + "flask",
                      data: [{ y: o.value, x: i }],
                      ...this.getColor(o.name + "flask"),
                    });
              }
              this.lineChartLabels.push(i),
                this.checkTooMuchPoints(),
                this.checkTooMuchPoints();
              let r =
                1e3 *
                this._chartService.statisticDelay *
                this._offline.getBonusMulti();
              r > 5e3
                ? ((r = 5e3),
                  (this.lineChartOptions.animation = {
                    duration: r - 100,
                    easing: "easeInOutQuad",
                  }))
                : (this.lineChartOptions.animation = {
                    duration: r - 100,
                    easing: "linear",
                  }),
                this.chart.update(),
                (this.lineChartOptions.animation.duration = r - 500),
                setTimeout(() => {
                  this.tick();
                }, 1e3 * this._chartService.statisticDelay * this._offline.getBonusMulti());
            }
            checkTooMuchPoints() {
              this.lineChartData.length > 0 &&
                this.lineChartData[0].data.length >
                  this._chartService.statisticMaxPoints &&
                (this.lineChartData.forEach((t) => {
                  t.data.shift();
                }),
                this.lineChartLabels.shift());
            }
            getColor(t) {
              switch (t) {
                case "slime":
                case "slimeflask":
                  return this.getColorObj("#277554");
                case "blood":
                case "bloodflask":
                  return this.getColorObj("#AB3939");
                case "soul":
                case "soulflask":
                  return this.getColorObj("#EEEEEE");
                case "water":
                case "waterflask":
                  return this.getColorObj("#2F4272");
                case "oxygen":
                case "oxygenflask":
                  return this.getColorObj("#718EA4");
                case "ink":
                case "inkflask":
                  return this.getColorObj("#11061D");
              }
              return this.getColorObj("#000");
            }
            getColorObj(t) {
              return {
                backgroundColor: t + "20",
                borderColor: t,
                pointBackgroundColor: t + "20",
                pointBorderColor: t,
                pointHoverBackgroundColor: t + "80",
                pointHoverBorderColor: t + "80",
              };
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(je), M($P), M(Yi));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-chart"]],
              viewQuery: function (i, r) {
                if ((1 & i && wn(Y2, 7), 2 & i)) {
                  let o;
                  an((o = ln())) && (r.chart = o.first);
                }
              },
              decls: 2,
              vars: 5,
              consts: [
                [
                  "baseChart",
                  "",
                  3,
                  "datasets",
                  "labels",
                  "options",
                  "legend",
                  "type",
                ],
              ],
              template: function (i, r) {
                1 & i && (p(0, "div"), k(1, "canvas", 0), d()),
                  2 & i &&
                    (b(1),
                    x("datasets", r.lineChartData)("labels", r.lineChartLabels)(
                      "options",
                      r.lineChartOptions
                    )("legend", r.lineChartLegend)("type", r.lineChartType));
              },
              dependencies: [Y2],
              styles: [
                "[_nghost-%COMP%]{position:relative;max-height:400px;width:100%;margin-top:auto}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{margin:20px 20px 0;max-height:400px}[_nghost-%COMP%]   canvas[_ngcontent-%COMP%]{width:100%!important}",
              ],
            }));
          }
          return e;
        })();
      class qP {
        static createReactor(n) {
          const t = JSON.parse(JSON.stringify(n));
          return new E0({
            curType: t.name,
            inputFlow: t.inputFlow,
            inputFlowPerc: t.inputFlowPerc,
            outputFlow: t.outputFlow,
            power: t.power,
            isRunning: !1,
            reagentRatio: t.reagentRatio,
            visibleRatio: t.visibleRatio,
            upgrades: this.createReactorUpgrades(t.upgrades),
          });
        }
        static createReactorUpgrades(n) {
          return n.map((t) => ({
            id: t.id,
            type: t.type,
            subType: t.subType,
            text: t.text,
            cost: t.cost,
            level: 0,
            infinite: t.infinite,
          }));
        }
        static createMagicReactor(n) {
          const t = JSON.parse(JSON.stringify(n));
          return new T0({ curType: t.name });
        }
      }
      let $0 = (() => {
          class e {
            constructor(t, i) {
              (this._buyService = t), (this._event = i);
            }
            buyUpgrade(t, i) {
              const r = this.getUpgradeCosts(i, t.curType);
              !i ||
                !r ||
                (this._buyService.buyable(r) &&
                  (this._buyService.buy(r),
                  this._event.occure(i.type, i.subType, i.level),
                  t.buyUpgrade(i.id)));
            }
            buyable(t, i) {
              const r = this.getUpgradeCosts(t, i);
              return !(!t || !r) && this._buyService.buyable(r);
            }
            getUpgradeCosts(t, i) {
              const r = gr.find((s) => s.name === i),
                o = r.upgrades.find((s) => s.id === t.id);
              if (r && o) {
                const s = r.upgrades.find((a) => a.id === t.id)?.costIncrease;
                if (s)
                  return o.cost.map((a, l) => ({
                    name: a.name,
                    type: a.type,
                    value: Math.ceil(s[l](t.level)),
                  }));
              }
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(Wn), O(ps));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        q0 = (() => {
          class e {
            constructor(t, i, r, o, s) {
              (this._data = t),
                (this._offline = i),
                (this._fluidService = r),
                (this._fluidCapacityService = o),
                (this._reactorUpgrade = s),
                (this.obsReactors = new ct()),
                (this.obsSelectedReactor = new ct()),
                (this._reactorSpeed = 1e3),
                this.initReactors(),
                this.runReactors(),
                this._data.obsResetGame.subscribe(() => this.initReactors());
            }
            initReactors() {
              this.obsReactors.next(this._data.game.reactor),
                null != this._lastSelected &&
                  this.obsSelectedReactor.next({
                    i: this._lastSelected,
                    reactor: this._data.game.reactor[this._lastSelected],
                  });
            }
            select(t) {
              (this._lastSelected = t),
                this.obsSelectedReactor.next({
                  i: t,
                  reactor: this._data.game.reactor[t],
                });
            }
            changeReactorType(t, i) {
              const r = gr.find((o) => o.name === i);
              r &&
                this._data.game.reactor[t] &&
                ((this._data.game.reactor[t] = qP.createReactor(r)),
                this.initReactors());
            }
            toggleMinimize(t) {
              this._data.game.reactor[t] &&
                this._data.game.reactor[t].toggleShrink();
            }
            resetType(t) {
              this._data.game.reactor[t] &&
                (this._data.game.reactor[t].curType = null);
            }
            runReactors() {
              for (const t of this._data.game.reactor) {
                if (!t.curType) continue;
                const i = t.getFluidFlow();
                if (!i) continue;
                t.run(),
                  i.inputNames.forEach((o, s) => {
                    if (!this._fluidService.get(o)) return;
                    let a = this._fluidService.get(o)?.value * i.inputFlowPerc;
                    a > i.inputFlow[s] && (a = i.inputFlow[s]),
                      a + t.inputValue[s] > t.capacity() * t.reagentRatio[s] &&
                        (a =
                          t.capacity() * t.reagentRatio[s] - t.inputValue[s]),
                      t.stopInput[s] && (a = 0),
                      t.addValues(a, s),
                      0 !== a && this._fluidService.addFluid(o, -a);
                  });
                let r =
                  i.outputFlow *
                  (1 + (t.outputValue / t.capacity("output")) * 1);
                r > t.outputValue && (r = t.outputValue),
                  r >
                    this._fluidCapacityService.fluidCapacity(i.output.name) -
                      this._fluidService.get(i.output.name)?.value &&
                    (r =
                      this._fluidCapacityService.fluidCapacity(i.output.name) -
                      this._fluidService.get(i.output.name)?.value),
                  t.addOutputValue(-r),
                  this._fluidService.addFluid(i.output.name, r);
              }
              setTimeout(
                () => this.runReactors(),
                this._reactorSpeed * this._offline.getBonusMulti()
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Yi), O(fg), O(hg), O($0));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        G0 = (() => {
          class e {
            constructor(t, i, r) {
              (this._data = t),
                (this._offline = i),
                (this._buyService = r),
                (this.obsReactors = new ct()),
                (this.obsSelectedReactor = new ct()),
                (this._reactorSpeed = 3e4),
                this.initReactors(),
                this.runReactors(),
                this._data.obsResetGame.subscribe(() => this.initReactors());
            }
            initReactors() {
              this.obsReactors.next(this._data.game.magicReactor),
                null != this._lastSelected &&
                  this.obsSelectedReactor.next({
                    i: this._lastSelected,
                    magicReactor:
                      this._data.game.magicReactor[this._lastSelected],
                  });
            }
            select(t) {
              (this._lastSelected = t),
                this.obsSelectedReactor.next({
                  i: t,
                  magicReactor: this._data.game.magicReactor[t],
                });
            }
            changeReactorType(t, i) {
              console.log("changeReactorType", t, i);
              const r = Wl.find((o) => o.name === i);
              r &&
                this._data.game.magicReactor[t] &&
                (console.log("newType", r),
                (this._data.game.magicReactor[t] = qP.createMagicReactor(r)),
                console.log(
                  "this._data.game.magicReactor[i]",
                  this._data.game.magicReactor[t]
                ),
                this.initReactors());
            }
            toggleMinimize(t) {
              this._data.game.reactor[t] &&
                this._data.game.magicReactor[t].toggleShrink();
            }
            resetType(t) {
              this._data.game.reactor[t] &&
                (this._data.game.magicReactor[t].curType = null);
            }
            runReactors() {
              for (const t of this._data.game.magicReactor) {
                const i = t.getType();
                !t.curType ||
                  !i ||
                  (t.run(),
                  this._buyService.buyable(i.input) &&
                    (this._buyService.buy(i.input), t.ticks++),
                  t.ticks >= i.ticksToComplete &&
                    ((t.ticks -= i.ticksToComplete),
                    this._buyService.add([i.output])));
              }
              setTimeout(
                () => this.runReactors(),
                this._reactorSpeed * this._offline.getBonusMulti()
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Yi), O(Wn));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      const yre = function (e) {
        return { height: e };
      };
      function vre(e, n) {
        if (
          (1 & e &&
            (p(0, "div")(1, "div", 4),
            h(2),
            pe(3, "bignumber"),
            d(),
            k(4, "div", 5),
            d()),
          2 & e)
        ) {
          const t = n.$implicit,
            i = n.index,
            r = I(2);
          Te(
            "w-" +
              100 * r.reactor.visibleRatio[i] +
              " input-container " +
              t.name
          ),
            Le("stop-input", r.reactor.stopInput[i]),
            b(2),
            bn(Me(3, 6, r.reactor.inputValue[i])),
            b(2),
            x(
              "ngStyle",
              Xn(
                8,
                yre,
                (100 * r.reactor.inputValue[i]) /
                  (r.reactor.capacity() * r.reactor.reagentRatio[i]) +
                  "%"
              )
            );
        }
      }
      const bre = function (e) {
        return { width: e };
      };
      function wre(e, n) {
        if (
          (1 & e &&
            (p(0, "div")(1, "div", 2),
            E(2, vre, 5, 10, "div", 3),
            d(),
            p(3, "div")(4, "div", 4),
            h(5),
            pe(6, "bignumber"),
            d(),
            k(7, "div", 5),
            d(),
            p(8, "div", 6),
            h(9),
            pe(10, "bignumber"),
            d()()),
          2 & e)
        ) {
          const t = I();
          Te("reactor " + t.reactor.curType),
            Le("selected", t.selected)("shrink", t.reactor.shrink)(
              "running",
              t.reactor.isRunning
            ),
            b(2),
            x("ngForOf", t.inputs),
            b(1),
            Te(
              "output-container " +
                (null == t.output ? null : t.output.name.replace(" ", "-"))
            ),
            b(2),
            bn(Me(6, 14, t.reactor.outputValue)),
            b(2),
            x(
              "ngStyle",
              Xn(
                18,
                bre,
                (100 * t.reactor.outputValue) / t.reactor.capacity("output") +
                  "%"
              )
            ),
            b(2),
            ne(" ", Me(10, 16, t.reactor.lastOutput), " ");
        }
      }
      function Cre(e, n) {
        1 & e && k(0, "div", 7), 2 & e && Le("selected", I().selected);
      }
      let xre = (() => {
        class e {
          get inputs() {
            const t = gr.find((i) => i.name === this.reactor.curType);
            return t ? t.input : [];
          }
          get output() {
            const t = gr.find((i) => i.name === this.reactor.curType);
            if (t) return t.output;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-reactor"]],
            inputs: { reactor: "reactor", selected: "selected" },
            decls: 2,
            vars: 2,
            consts: [
              [3, "class", "selected", "shrink", "running", 4, "ngIf"],
              ["class", "reactor undefined", 3, "selected", 4, "ngIf"],
              [1, "row"],
              [3, "class", "stop-input", 4, "ngFor", "ngForOf"],
              [1, "label"],
              [1, "bar", 3, "ngStyle"],
              [1, "output"],
              [1, "reactor", "undefined"],
            ],
            template: function (i, r) {
              1 & i && (E(0, wre, 11, 20, "div", 0), E(1, Cre, 1, 2, "div", 1)),
                2 & i &&
                  (x("ngIf", r.reactor.curType),
                  b(1),
                  x("ngIf", !r.reactor.curType));
            },
            dependencies: [Qe, be, Di, Qt],
            styles: [
              '.reactor[_ngcontent-%COMP%]{height:250px;margin:10px;width:250px;border:1px solid #000;display:flex;justify-content:flex-start;align-items:flex-start;flex-direction:column;position:relative;z-index:1;transition:.3s}.reactor.undefined[_ngcontent-%COMP%]:after{content:"点这里";font-size:32px;text-align:center;line-height:250px;position:absolute;top:0;left:0;width:100%;height:100%;z-index:2;background-color:#0006;transition:.3s}.reactor.undefined[_ngcontent-%COMP%]:hover:after{background-color:#fff3}.reactor.running[_ngcontent-%COMP%]{background-color:#27755433}.reactor.selected[_ngcontent-%COMP%]{border:1px solid #ff0;box-shadow:0 2px 2px #00000024,0 3px 1px -2px #0000001f,0 1px 5px #0003}.reactor[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin:15px;width:220px;gap:10px;transition:.3s}.reactor[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]{height:160px;width:120px;border:1px solid #000;position:relative;transition:.3s}.reactor[_ngcontent-%COMP%]   .input-container.w-100[_ngcontent-%COMP%]{width:220px}.reactor[_ngcontent-%COMP%]   .input-container.w-80[_ngcontent-%COMP%]{width:170px}.reactor[_ngcontent-%COMP%]   .input-container.w-75[_ngcontent-%COMP%]{width:165px}.reactor[_ngcontent-%COMP%]   .input-container.w-66[_ngcontent-%COMP%]{width:145px}.reactor[_ngcontent-%COMP%]   .input-container.w-5[_ngcontent-%COMP%]{width:110px}.reactor[_ngcontent-%COMP%]   .input-container.w-33[_ngcontent-%COMP%]{width:72px}.reactor[_ngcontent-%COMP%]   .input-container.w-25[_ngcontent-%COMP%]{width:55px}.reactor[_ngcontent-%COMP%]   .input-container.w-20[_ngcontent-%COMP%]{width:40px}.reactor[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]:after{position:absolute;content:"";top:100%;left:50%;height:16px;width:4px;background-color:#000}.reactor[_ngcontent-%COMP%]   .output-container[_ngcontent-%COMP%]{margin:0 15px;height:40px;width:220px;border:1px solid #000;position:relative;transition:.3s}.reactor[_ngcontent-%COMP%]   .output-container[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;z-index:1;transition:.3s}.reactor[_ngcontent-%COMP%]   .output-container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{z-index:2;position:relative;width:100%;line-height:40px;text-align:center;transition:.3s}.reactor[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]{position:relative}.reactor[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;z-index:1;transition:1s}.reactor[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{z-index:2;position:relative;width:100%;line-height:160px;text-align:center;transition:.3s}.reactor.shrink[_ngcontent-%COMP%]{height:120px;width:120px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:4px;width:110px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]{height:80px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{line-height:80px;font-size:14px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]:after{height:5px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.w-100[_ngcontent-%COMP%]{width:110px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.w-80[_ngcontent-%COMP%]{width:85px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.w-20[_ngcontent-%COMP%]{width:20px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.stop-input[_ngcontent-%COMP%]:after{height:40px;font-size:12px}.reactor.shrink[_ngcontent-%COMP%]   .output-container[_ngcontent-%COMP%]{margin:0 4px;height:20px;width:110px}.reactor.shrink[_ngcontent-%COMP%]   .output-container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{line-height:20px;font-size:14px}.reactor.shrink[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{bottom:0;right:5px;font-size:8px;line-height:10px}.reactor[_ngcontent-%COMP%]   .input-container.stop-reagent[_ngcontent-%COMP%]:after, .reactor[_ngcontent-%COMP%]   .input-container.stop-input[_ngcontent-%COMP%]:after, .reactor[_ngcontent-%COMP%]   .output-container.stop-reagent[_ngcontent-%COMP%]:after, .reactor[_ngcontent-%COMP%]   .output-container.stop-input[_ngcontent-%COMP%]:after{content:"已停止";color:#fff;position:absolute;background-color:transparent;top:0;left:0;width:100%;height:50%;z-index:10;pointer-events:none;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;font-size:24px;transform:rotate(-30deg);-webkit-transform:rotate(-30deg);-moz-transform:rotate(-30deg);-o-transform:rotate(-30deg);-ms-transform:rotate(-30deg);justify-content:center;align-items:center}.reactor[_ngcontent-%COMP%]   .input-container.slime[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.slime[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#277554}.reactor[_ngcontent-%COMP%]   .input-container.blood[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.blood[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#ab3939}.reactor[_ngcontent-%COMP%]   .input-container.water[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.water[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#2f4272}.reactor[_ngcontent-%COMP%]   .input-container.oxygen[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.oxygen[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#718ea4}.reactor[_ngcontent-%COMP%]   .input-container.ink[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.ink[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#11061d}.reactor[_ngcontent-%COMP%]   .input-container.soul[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.soul[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#a9a9a9}.reactor[_ngcontent-%COMP%]   .input-container.clear-soul[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.clear-soul[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#eee}.reactor[_ngcontent-%COMP%]   .input-container.clear-soul[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .input-container.soul[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.clear-soul[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.soul[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{color:#fff;text-shadow:1px 1px 4px #000,-1px -1px 4px #000,1px -1px 4px #000,-1px 1px 4px #000}.reactor[_ngcontent-%COMP%]   .input-container.alkali[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%], .reactor[_ngcontent-%COMP%]   .output-container.alkali[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background-color:#aa7739}.output[_ngcontent-%COMP%]{position:absolute;left:0;bottom:0;width:100%;pointer-events:none;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;text-align:center;font-size:14px;z-index:10;transition:1s}',
            ],
          }));
        }
        return e;
      })();
      function Mre(e, n) {
        1 & e && k(0, "alchy-item", 6), 2 & e && x("item", n.$implicit);
      }
      const Dre = function (e) {
        return { width: e };
      };
      function Sre(e, n) {
        if (
          (1 & e &&
            (p(0, "div")(1, "div", 2)(2, "div", 3),
            E(3, Mre, 1, 1, "alchy-item", 4),
            d(),
            p(4, "div", 5),
            k(5, "alchy-item", 6),
            d(),
            p(6, "div", 7)(7, "div", 8),
            h(8),
            pe(9, "bignumber"),
            d(),
            k(10, "div", 9),
            d()()()),
          2 & e)
        ) {
          const t = I();
          Te("reactor " + t.reactor.curType),
            Le("selected", t.selected)("shrink", t.reactor.shrink)(
              "running",
              t.reactor.isRunning
            ),
            b(3),
            x("ngForOf", t.inputs),
            b(2),
            x("item", t.output),
            b(3),
            bn(Me(9, 14, t.reactor.ticks)),
            b(2),
            Te("bar " + t.reactor.curType),
            x("ngStyle", Xn(16, Dre, 100 * t.prog + "%"));
        }
      }
      function kre(e, n) {
        1 & e && k(0, "div", 10), 2 & e && Le("selected", I().selected);
      }
      let Tre = (() => {
        class e {
          get prog() {
            return (
              this.reactor.ticks /
              (this.reactor.getType()?.ticksToComplete ?? 1)
            );
          }
          get inputs() {
            const t = Wl.find((i) => i.name === this.reactor.curType);
            return t ? t.input : [];
          }
          get output() {
            const t = Wl.find((i) => i.name === this.reactor.curType);
            if (t) return t.output;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-magic-reactor"]],
            inputs: { reactor: "reactor", selected: "selected" },
            decls: 2,
            vars: 2,
            consts: [
              [3, "class", "selected", "shrink", "running", 4, "ngIf"],
              ["class", "reactor undefined", 3, "selected", 4, "ngIf"],
              [1, "row"],
              [1, "inputs"],
              [3, "item", 4, "ngFor", "ngForOf"],
              [1, "output"],
              [3, "item"],
              [1, "prog"],
              [1, "label"],
              [3, "ngStyle"],
              [1, "reactor", "undefined"],
            ],
            template: function (i, r) {
              1 & i && (E(0, Sre, 11, 18, "div", 0), E(1, kre, 1, 2, "div", 1)),
                2 & i &&
                  (x("ngIf", r.reactor.curType),
                  b(1),
                  x("ngIf", !r.reactor.curType));
            },
            dependencies: [Qe, be, Di, Gi, Qt],
            styles: [
              '.reactor[_ngcontent-%COMP%]{height:250px;margin:10px;width:250px;border:1px solid #000;display:flex;justify-content:flex-start;align-items:flex-start;flex-direction:column;position:relative;z-index:1;transition:.3s}.reactor.undefined[_ngcontent-%COMP%]:after{content:"点这里";font-size:32px;text-align:center;line-height:250px;position:absolute;top:0;left:0;width:100%;height:100%;z-index:2;background-color:#0006;transition:.3s}.reactor.undefined[_ngcontent-%COMP%]:hover:after{background-color:#fff3}.reactor.running[_ngcontent-%COMP%]{background-color:#27755433}.reactor.selected[_ngcontent-%COMP%]{border:1px solid #ff0;box-shadow:0 2px 2px #00000024,0 3px 1px -2px #0000001f,0 1px 5px #0003}.reactor[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-direction:column;margin:15px;height:100%;width:220px;transition:.3s}.reactor[_ngcontent-%COMP%]   .inputs[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;margin:1rem 0}.reactor[_ngcontent-%COMP%]   .output[_ngcontent-%COMP%]{margin:1rem 0}.reactor[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]{height:40px;width:220px;border:1px solid #000;position:relative;margin:auto 1rem 1rem;transition:.3s}.reactor[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;z-index:1;transition:.3s}.reactor[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{z-index:2;position:relative;width:100%;line-height:40px;text-align:center;transition:.3s}.reactor.shrink[_ngcontent-%COMP%]{height:120px;width:120px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:4px;width:110px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]{height:80px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{line-height:80px;font-size:14px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]:after{height:5px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.w-100[_ngcontent-%COMP%]{width:110px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.w-80[_ngcontent-%COMP%]{width:85px}.reactor.shrink[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .input-container.w-20[_ngcontent-%COMP%]{width:20px}.reactor.shrink[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]{margin:0 4px;height:20px;width:110px}.reactor.shrink[_ngcontent-%COMP%]   .prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{line-height:20px;font-size:14px}',
            ],
          }));
        }
        return e;
      })();
      function Ere(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "alchy-reactor", 2),
            F("click", function (r) {
              const s = oe(t).index;
              return se(I().select(r, s));
            }),
            d();
        }
        if (2 & e) {
          const t = n.$implicit,
            i = n.index,
            r = I();
          x("reactor", t)(
            "selected",
            i === r.selectedId && "reactor" === r.selectedType
          );
        }
      }
      function Ire(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "alchy-magic-reactor", 2),
            F("click", function (r) {
              const s = oe(t).index;
              return se(I().selectMagicReactor(r, s));
            }),
            d();
        }
        if (2 & e) {
          const t = n.$implicit,
            i = n.index,
            r = I();
          x("reactor", t)(
            "selected",
            i === r.selectedId && "magicreactor" === r.selectedType
          );
        }
      }
      let Ore = (() => {
        class e {
          constructor(t, i, r) {
            (this._reactorsService = t),
              (this._magicReactorsService = i),
              (this._elem = r),
              (this._alive = !0),
              (this.reactors = []),
              (this.magicReactors = []),
              (this.selectedType = "reactor");
          }
          clickAnywhere(t) {
            this.select(null, null);
          }
          ngOnInit() {
            this._reactorsService.obsReactors
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.reactors = t)),
              this._reactorsService.obsSelectedReactor
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.selectedType = "reactor"), (this.selectedId = t.i);
                }),
              this._magicReactorsService.obsReactors
                .pipe(X(() => this._alive))
                .subscribe((t) => (this.magicReactors = t)),
              this._magicReactorsService.obsSelectedReactor
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.selectedType = "magicreactor"), (this.selectedId = t.i);
                });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          select(t, i) {
            t?.stopPropagation(),
              this._magicReactorsService.select(null),
              this._reactorsService.select(i);
          }
          selectMagicReactor(t, i) {
            t?.stopPropagation(),
              this._reactorsService.select(null),
              this._magicReactorsService.select(i);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(q0), M(G0), M(pn));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-reactors"]],
            hostBindings: function (i, r) {
              1 & i &&
                F("click", function (s) {
                  return r.clickAnywhere(s);
                });
            },
            decls: 3,
            vars: 2,
            consts: [
              [1, "reactors"],
              [3, "reactor", "selected", "click", 4, "ngFor", "ngForOf"],
              [3, "reactor", "selected", "click"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                E(1, Ere, 1, 2, "alchy-reactor", 1),
                E(2, Ire, 1, 2, "alchy-magic-reactor", 1),
                d()),
                2 & i &&
                  (b(1),
                  x("ngForOf", r.reactors),
                  b(1),
                  x("ngForOf", r.magicReactors));
            },
            dependencies: [Qe, xre, Tre],
            styles: [
              ".reactors[_ngcontent-%COMP%]{margin:20px;display:flex;justify-content:flex-start;align-items:flex-start;flex-wrap:wrap}",
            ],
          }));
        }
        return e;
      })();
      function Are(e, n) {
        1 & e && k(0, "alchy-clicker", 4), 2 & e && x("clicker", n.$implicit);
      }
      function Pre(e, n) {
        1 & e && k(0, "alchy-chart");
      }
      let Fre = (() => {
        class e {
          constructor(t, i, r) {
            (this._gameSettingService = t),
              (this._upgradeService = i),
              (this._data = r),
              (this._alive = !0),
              (this.hideChart = !1);
          }
          ngOnInit() {
            (this.clicker = this._data.game.clicker),
              this._upgradeService.boughtUpgrades
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  const i = t
                    .filter((r) => "clicker" === r.type)
                    .map((r) => r.subType);
                  for (const r of i)
                    if (!this._data.game.clicker.find((o) => o.name === r)) {
                      const o = aa.find((s) => s.name === r);
                      this._data.game.clicker.push(wte.createClicker(o));
                    }
                }),
              this._data.obsResetGame
                .pipe(X(() => this._alive))
                .subscribe(() => {
                  console.log("RESET CLICKER", this._data.game.clicker),
                    (this.clicker = this._data.game.clicker);
                }),
              this._gameSettingService.obsHideChart
                .pipe(X(() => this._alive))
                .subscribe((t) => (this.hideChart = t));
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M($l), M(mr), M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-center"]],
            decls: 6,
            vars: 2,
            consts: [
              [1, "center"],
              [1, "click-things"],
              ["class", "clicker", 3, "clicker", 4, "ngFor", "ngForOf"],
              [4, "ngIf"],
              [1, "clicker", 3, "clicker"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                k(2, "alchy-clickbar"),
                E(3, Are, 1, 1, "alchy-clicker", 2),
                d(),
                k(4, "alchy-reactors"),
                d(),
                E(5, Pre, 1, 0, "alchy-chart", 3)),
                2 & i &&
                  (b(3),
                  x("ngForOf", r.clicker),
                  b(2),
                  x("ngIf", !r.hideChart));
            },
            dependencies: [Qe, be, Ete, Fte, _re, Ore],
            styles: [
              "[_nghost-%COMP%]{display:flex;flex-direction:column;justify-content:flex-start;align-items:center}.center[_ngcontent-%COMP%]{width:100%}.center[_ngcontent-%COMP%]   .click-things[_ngcontent-%COMP%]{display:flex;margin:.25rem}@media (min-width: 960px){.center[_ngcontent-%COMP%]   .click-things[_ngcontent-%COMP%]{margin:.5rem}}",
            ],
          }));
        }
        return e;
      })();
      function Rre(e, n) {
        1 & e && k(0, "alchy-item", 5), 2 & e && x("item", n.$implicit);
      }
      let Nre = (() => {
        class e {
          get buyable() {
            return this._buyService.buyable(this.upgrade.cost);
          }
          get buyableHalf() {
            return this._upgradeService.buyableHalf(this.upgrade);
          }
          constructor(t, i) {
            (this._upgradeService = t), (this._buyService = i);
          }
          buy(t) {
            this._upgradeService.buy(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(mr), M(Wn));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-upgrade"]],
            inputs: { upgrade: "upgrade" },
            decls: 6,
            vars: 5,
            consts: [
              [1, "upgrade", 3, "click"],
              [1, "text", 3, "innerHTML"],
              [1, "costs"],
              [3, "item", 4, "ngFor", "ngForOf"],
              [1, "id"],
              [3, "item"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                F("click", function () {
                  return r.buy(r.upgrade);
                }),
                k(1, "div", 1),
                p(2, "div", 2),
                E(3, Rre, 1, 1, "alchy-item", 3),
                d(),
                p(4, "div", 4),
                h(5),
                d()()),
                2 & i &&
                  (Le("buyable", r.buyable),
                  b(1),
                  x("innerHTML", r.upgrade.text, zo),
                  b(2),
                  x("ngForOf", r.upgrade.cost),
                  b(2),
                  bn(r.upgrade.id));
            },
            dependencies: [Qe, Gi],
            styles: [
              ".upgrade[_ngcontent-%COMP%]{margin:10px 0;position:relative;padding:10px;border:1px solid #000;transition:.3s;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.upgrade[_ngcontent-%COMP%]:hover{background-color:#444}.upgrade[_ngcontent-%COMP%]   .costs[_ngcontent-%COMP%]{text-align:right;display:flex;justify-content:flex-end;align-items:center}.upgrade[_ngcontent-%COMP%]   .costs[_ngcontent-%COMP%]   alchy-item[_ngcontent-%COMP%]{margin-right:.25rem}.upgrade.buyable[_ngcontent-%COMP%]{background-color:#363}.upgrade.buyable[_ngcontent-%COMP%]:hover{background-color:#484}.upgrade[_ngcontent-%COMP%]   .id[_ngcontent-%COMP%]{position:absolute;top:0;right:0;color:#444}",
            ],
          }));
        }
        return e;
      })();
      class GP {
        static deep(n) {
          return JSON.parse(JSON.stringify(n));
        }
      }
      let Y0 = (() => {
        class e {
          constructor(t, i, r, o, s, a, l) {
            (this._data = t),
              (this._buy = i),
              (this._offline = r),
              (this._flaskService = o),
              (this._upgradeService = s),
              (this._portalService = a),
              (this._fluidService = l),
              (this.brewingQueue = new ct()),
              (this.autoBrewing = new ct()),
              this.checkBrewing(),
              this._offline.obsToggleBonus.subscribe(() => {
                this.checkBrewing();
              }),
              this.autoBrewing.next(this._data.settings.autoBrewing),
              this._data.obsResetGame.subscribe(() => {
                console.log("reset?");
              });
          }
          checkBrewing() {
            if (
              (clearTimeout(this._timerWaitForFluid),
              (this._timerWaitForFluid = null),
              0 === this._data.game.brewingQueue.length)
            )
              this.brewingQueue.next({ queue: [], remainingTime: 0 }),
                this.startAutoBrewing();
            else {
              const t = this._data.game.brewingQueue[0],
                i = t.duration * this._offline.getBonusMulti();
              if (0 === t.startDate)
                (t.startDate = Date.now()),
                  this.brewingQueue.next({
                    queue: this._data.game.brewingQueue,
                    remainingTime: i,
                  }),
                  (this._timer = setTimeout(() => this.checkBrewing(), i));
              else if (Date.now() - t.startDate + 100 > i)
                this._flaskService.addFlask(t.item.name, t.item.value),
                  this._data.game.brewingQueue.shift(),
                  this.brewingQueue.next({
                    queue: this._data.game.brewingQueue,
                    remainingTime: i,
                  }),
                  this.checkBrewing();
              else {
                const r = i - (Date.now() - t.startDate);
                (this._timer = setTimeout(() => this.checkBrewing(), r)),
                  this.brewingQueue.next({
                    queue: this._data.game.brewingQueue,
                    remainingTime: r,
                  });
              }
            }
          }
          changeAutoBrewing(t) {
            pg.find((r) => r.name === t)
              ? ((this._data.settings.autoBrewing = t),
                this.autoBrewing.next(t),
                this.checkBrewing())
              : (this.autoBrewing.next(null),
                (this._data.settings.autoBrewing = null));
          }
          buyable(t, i, r) {
            const o = GP.deep(t.require).map((s) => ((s.value *= r), s));
            return this._buy.buyable(o, i);
          }
          brew(t) {
            const i = this._portalService.getBonus("brewingmulti", t.name),
              r = this._portalService.getBonusCost("brewingmulti", t.name);
            if (this.buyable(t, 1, r)) {
              const o = GP.deep(t.require).map((a) => ((a.value *= r), a));
              this._buy.buy(o, 1);
              let s = this._upgradeService.getBrewingTimeBonus(t.name);
              return (
                (s *= this._portalService.getBonusSpeed(
                  "brewingmulti",
                  t.name
                )),
                this.addToQueue(t.name, s, i),
                !0
              );
            }
            return !1;
          }
          tryToBrewLess(t, i, r) {
            let o = i;
            for (; o-- > 1; )
              if (this.buyable(t, o, r)) {
                this._buy.buy(t.require, o);
                const s = this._upgradeService.getBrewingTimeBonus(t.name);
                return this.addToQueue(t.name, s, o), !0;
              }
            return !1;
          }
          addToQueue(t, i, r) {
            this._data.game.brewingQueue.push(
              new Vee({
                item: { name: t, type: "flask", value: Math.floor(1 * r) },
                duration: i,
              })
            ),
              this.checkBrewing();
          }
          startAutoBrewing() {
            const t = pg.find(
              (i) => i.name === this._data.settings.autoBrewing
            );
            if (t) {
              const i = this._portalService.getBonus("brewingmulti", t.name);
              (!this._buy.buyableOnePercent(t.require, i) || !this.brew(t)) &&
                null === this._timerWaitForFluid &&
                (this._timerWaitForFluid = setTimeout(
                  () => this.checkBrewing(),
                  3e3
                ));
            }
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(
              O(je),
              O(Wn),
              O(Yi),
              O(P0),
              O(mr),
              O(gg),
              O(fg)
            );
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const Lre = function (e, n) {
          return { startWidth: e, duration: n };
        },
        Bre = function (e, n) {
          return { value: e, params: n };
        };
      function Vre(e, n) {
        if ((1 & e && k(0, "div", 5), 2 & e)) {
          const t = I(2);
          Te(t.brewingQueue[0].item.name.replace(" ", "-")),
            x(
              "@fillWidth",
              Ar(
                6,
                Bre,
                t.animate,
                Ar(
                  3,
                  Lre,
                  100 *
                    (1 -
                      t.nextFinished /
                        (t.brewingQueue[0].duration * t.bonusSecondsMulti)),
                  t.nextFinished + "ms"
                )
              )
            );
        }
      }
      function zre(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 0),
            F("click", function () {
              return oe(t), se(I().onOpenTab("brewing"));
            }),
            p(1, "div", 3),
            h(2, "Brewing"),
            d(),
            E(3, Vre, 1, 9, "div", 4),
            d();
        }
        if (2 & e) {
          const t = I();
          Le("empty", t.notBrewing)("active", "brewing" === t.tab),
            b(3),
            x("ngIf", t.brewingQueue[0]);
        }
      }
      function Hre(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 0),
            F("click", function () {
              return oe(t), se(I().onOpenTab("combatsettings"));
            }),
            h(1, "Combat"),
            d();
        }
        2 & e && Le("active", "combatsettings" === I().tab);
      }
      function jre(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 0),
            F("click", function () {
              return oe(t), se(I().onOpenTab("support"));
            }),
            h(1, "Support"),
            d();
        }
        2 & e && Le("active", "support" === I().tab);
      }
      let Ure = (() => {
        class e {
          constructor(t, i, r) {
            (this._upgradeService = t),
              (this._brewingService = i),
              (this._offline = r),
              (this.openTab = new le()),
              (this.tab = "upgrades"),
              (this.brewingUnlocked = !1),
              (this.combatUnlocked = !1),
              (this.supportUnlocked = !1),
              (this.notBrewing = !1),
              (this.animate = "end"),
              (this.nextFinished = 3e4),
              (this.bonusSecondsMulti = 1),
              (this._isAutoBrewing = !1),
              (this._alive = !0);
          }
          ngOnInit() {
            this._upgradeService.boughtUpgrades
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                (this.brewingUnlocked = !!t.find(
                  (i) => "unlockBrewing" === i.type
                )),
                  (this.combatUnlocked = !!t.find(
                    (i) => "unlockCombat" === i.type
                  )),
                  (this.supportUnlocked = !!t.find(
                    (i) => "unlockSupport" === i.type
                  ));
              }),
              this._brewingService.autoBrewing
                .pipe(X(() => this._alive))
                .subscribe((t) => (this._isAutoBrewing = !!t)),
              this._brewingService.brewingQueue
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.notBrewing =
                    0 === t.queue.length && !this._isAutoBrewing),
                    (this.brewingQueue = t.queue),
                    (this.nextFinished = t.remainingTime),
                    (this.animate = "start"),
                    setTimeout(() => (this.animate = "end"), 10);
                }),
              this._offline.obsToggleBonus
                .pipe(X(() => this._alive))
                .subscribe(
                  () => (this.bonusSecondsMulti = this._offline.getBonusMulti())
                );
          }
          onOpenTab(t) {
            (this.tab = t), this.openTab.emit(t);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(mr), M(Y0), M(Yi));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-menubar"]],
            outputs: { openTab: "openTab" },
            decls: 9,
            vars: 9,
            consts: [
              [1, "item", 3, "click"],
              ["class", "item", 3, "empty", "active", "click", 4, "ngIf"],
              ["class", "item", 3, "active", "click", 4, "ngIf"],
              [1, "label"],
              ["class", "bar", 3, "class", 4, "ngIf"],
              [1, "bar"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                F("click", function () {
                  return r.onOpenTab("upgrades");
                }),
                h(1, "Upgrades"),
                d(),
                E(2, zre, 4, 5, "div", 1),
                E(3, Hre, 2, 2, "div", 2),
                p(4, "div", 0),
                F("click", function () {
                  return r.onOpenTab("offline");
                }),
                h(5, "Offline"),
                d(),
                p(6, "div", 0),
                F("click", function () {
                  return r.onOpenTab("settings");
                }),
                h(7, "Settings"),
                d(),
                E(8, jre, 2, 2, "div", 2)),
                2 & i &&
                  (Le("active", "upgrades" === r.tab),
                  b(2),
                  x("ngIf", r.brewingUnlocked),
                  b(1),
                  x("ngIf", r.combatUnlocked),
                  b(1),
                  Le("active", "offline" === r.tab),
                  b(2),
                  Le("active", "settings" === r.tab),
                  b(2),
                  x("ngIf", r.supportUnlocked));
            },
            dependencies: [be],
            styles: [
              "[_nghost-%COMP%]{display:flex;justify-content:flex-start;align-items:center;flex-wrap:wrap;position:relative;gap:.625rem;width:100%;margin:1rem 0}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]{position:relative;padding:6px 12px;border:1px solid #000;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;cursor:pointer;transition:.3s}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]:hover{background-color:#444}[_nghost-%COMP%]   .item.active[_ngcontent-%COMP%]{background-color:#222232}[_nghost-%COMP%]   .item.active[_ngcontent-%COMP%]:hover{background-color:#444}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]:first-of-type{margin-left:0}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]:last-of-type{margin-right:0}[_nghost-%COMP%]   .item.empty[_ngcontent-%COMP%]{background-color:#822}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{height:100%;position:absolute;left:0;top:0;z-index:1}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{z-index:2;position:relative}",
            ],
            data: { animation: [mP] },
          }));
        }
        return e;
      })();
      class Wre {
        constructor(n = "", t = "", i = "", r = "", o = 400) {
          (this.text = n),
            (this.title = t),
            (this.bottomLeftText = i),
            (this.bottomRightText = r),
            (this.delay = o);
        }
      }
      let YP = (() => {
          class e {
            constructor() {
              (this.tooltipState = new ct(1)),
                (this.lastTooltipState = {
                  visible: !1,
                  position: new Wr(0, 0),
                  tooltip: new Wre(),
                }),
                this.tooltipState.next(this.lastTooltipState);
            }
            setTooltip(t) {
              (this.lastTooltipState = t), this.tooltipState.next(t);
            }
            moveTooltip(t) {
              this.tooltipState.next({
                visible: this.lastTooltipState.visible,
                position: t,
                tooltip: this.lastTooltipState.tooltip,
                tooltipTemplate: this.lastTooltipState.tooltipTemplate,
              });
            }
            hideTooltip() {
              this.tooltipState.next({
                visible: !1,
                position: this.lastTooltipState.position,
                tooltip: this.lastTooltipState.tooltip,
              });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        kd = (() => {
          class e {
            static #e = (this.DELAY_TIME = 0);
            constructor(t) {
              (this.tooltipService = t),
                (this.isOpen = !1),
                (this.isAlive = !0),
                this.tooltipService.tooltipState
                  .pipe(X(() => this.isAlive))
                  .subscribe((i) => {
                    i.visible || (this.isOpen = !1);
                  });
            }
            ngOnDestroy() {
              this.isAlive = !1;
            }
            onMouseMove(t) {
              if (this.isOpen)
                return void this.tooltipService.moveTooltip(
                  new Wr(t.clientX, t.clientY)
                );
              const i = this.tooltip?.delay ?? e.DELAY_TIME;
              this.clearSleepHandler(),
                (this.sleepHandler = setTimeout(() => {
                  this.isSleeping(t);
                }, i));
            }
            onMouseLeave() {
              this.clearSleepHandler(),
                this.tooltipService.hideTooltip(),
                (this.isOpen = !1);
            }
            isSleeping(t) {
              this.sleepHandler &&
                (this.clearSleepHandler(),
                (this.isOpen = !0),
                this.tooltipService.setTooltip({
                  visible: !0,
                  position: new Wr(t.clientX, t.clientY),
                  tooltip: this.tooltip,
                  tooltipTemplate: this.tooltipTemplate,
                }));
            }
            clearSleepHandler() {
              clearInterval(this.sleepHandler), (this.sleepHandler = void 0);
            }
            static #t = (this.ɵfac = function (i) {
              return new (i || e)(M(YP));
            });
            static #n = (this.ɵdir = re({
              type: e,
              selectors: [["", "tooltip", ""]],
              hostBindings: function (i, r) {
                1 & i &&
                  F("mousemove", function (s) {
                    return r.onMouseMove(s);
                  })("mouseleave", function () {
                    return r.onMouseLeave();
                  });
              },
              inputs: {
                tooltip: "tooltip",
                tooltipTemplate: "tooltipTemplate",
              },
            }));
          }
          return e;
        })();
      function $re(e, n) {
        if ((1 & e && (Ct(0), h(1), xt()), 2 & e)) {
          const t = I();
          b(1), bn(t.value);
        }
      }
      function qre(e, n) {
        if ((1 & e && k(0, "alchy-item", 4), 2 & e)) {
          const t = n.$implicit,
            i = I(2);
          x("item", t)("value", i.ceil(t.value * i.multi));
        }
      }
      function Gre(e, n) {
        if ((1 & e && (Ct(0), E(1, qre, 1, 2, "alchy-item", 3), xt()), 2 & e)) {
          const t = I();
          b(1), x("ngForOf", t.itemCost);
        }
      }
      let K0 = (() => {
          class e {
            constructor() {
              (this.min = 0),
                (this.max = 10),
                (this.labelPrefix = ""),
                (this.thumbWidth = 60),
                (this.multi = 1),
                (this.value = 0),
                (this.isDisabled = !1),
                (this.thumbposition = { right: 0 }),
                (this._alive = !0),
                (this.valueChanged = new le()),
                (this.valueInputChanged = new le());
            }
            ngOnInit() {
              this.obsMulti &&
                this.obsMulti.pipe(X(() => this._alive)).subscribe((t) => {
                  this.multi = t;
                });
            }
            change(t) {
              (this.value = t),
                this.valueChanged.emit(this.value),
                this.onChange && this.onChange(this.value);
            }
            onInput(t) {
              (this.value = t),
                this.setThumpPosition(),
                this.valueInputChanged.emit(this.value),
                this.onChange && this.onChange(this.value);
            }
            setThumpPosition() {
              if (+this.value == +this.min)
                this.thumbposition = { left: "2px" };
              else if (+this.value == +this.max)
                this.thumbposition = { right: "-2px" };
              else {
                const i =
                  (100 / (this.max - this.min + 1 - 1)) *
                  (this.value - this.min);
                this.thumbposition = {
                  left: i + "%",
                  transform: "translate(-" + i + "%, 0)",
                };
              }
            }
            writeValue(t) {
              (this.value = t), this.setThumpPosition();
            }
            registerOnChange(t) {
              this.onChange = t;
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            setDisabledState(t) {
              this.isDisabled = t;
            }
            ngOnDestroy() {
              this._alive = !1;
            }
            ceil(t) {
              return Math.ceil(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-range-input"]],
              inputs: {
                min: "min",
                max: "max",
                labelPrefix: "labelPrefix",
                itemCost: "itemCost",
                obsMulti: "obsMulti",
                thumbWidth: "thumbWidth",
              },
              outputs: {
                valueChanged: "valueChanged",
                valueInputChanged: "valueInputChanged",
              },
              features: [
                it([{ provide: Pn, useExisting: yt(() => e), multi: !0 }]),
              ],
              decls: 6,
              vars: 9,
              consts: [
                ["type", "range", 3, "min", "max", "value", "input", "change"],
                [1, "value", 3, "ngStyle"],
                [4, "ngIf"],
                [3, "item", "value", 4, "ngFor", "ngForOf"],
                [3, "item", "value"],
              ],
              template: function (i, r) {
                1 & i &&
                  (p(0, "div")(1, "input", 0),
                  F("input", function (s) {
                    return r.onInput(s.target.value);
                  })("change", function (s) {
                    return r.change(s.target.value);
                  }),
                  d(),
                  p(2, "div", 1),
                  E(3, $re, 2, 1, "ng-container", 2),
                  h(4),
                  E(5, Gre, 2, 1, "ng-container", 2),
                  d()()),
                  2 & i &&
                    (Te("thumb-width-" + r.thumbWidth),
                    b(1),
                    x("min", r.min)("max", r.max)("value", r.value),
                    b(1),
                    x("ngStyle", r.thumbposition),
                    b(1),
                    x("ngIf", !r.itemCost),
                    b(1),
                    ne("", r.labelPrefix, " "),
                    b(1),
                    x("ngIf", r.itemCost));
              },
              dependencies: [Qe, be, Di, Gi],
              styles: [
                "[_nghost-%COMP%]{position:relative;display:block}input[type=range][_ngcontent-%COMP%]{width:100%;height:28px;-webkit-appearance:none;background:#111;outline:none;border-radius:28px;overflow:hidden;box-shadow:inset 0 0 5px #000}input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{-webkit-appearance:none;width:60px;height:28px;border-radius:28px;cursor:pointer;border:4px solid #333;box-shadow:-400px 0 0 350px #277554}.value[_ngcontent-%COMP%]{position:absolute;top:0;font-weight:700;height:100%;display:flex;justify-content:center;align-items:center;width:60px;pointer-events:none;color:#666}.thumb-width-80[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{width:80px}.thumb-width-80[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{width:80px}.thumb-width-120[_ngcontent-%COMP%]   input[type=range][_ngcontent-%COMP%]::-webkit-slider-thumb{width:120px}.thumb-width-120[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{width:120px}",
              ],
            }));
          }
          return e;
        })(),
        Z0 = (() => {
          class e {
            transform(t, ...i) {
              return (
                0 !== t &&
                  !i.includes("seconds") &&
                  (t = Math.floor(t / 100) / 10),
                t < 1
                  ? Math.round(10 * t) / 10 + "s"
                  : t < 60
                  ? t + "s"
                  : t < 3600
                  ? ((t = Math.round(t)),
                    this.fillZero(Math.floor(t / 60)) +
                      ":" +
                      this.fillZero(t % 60) +
                      " minutes")
                  : t < 86400
                  ? ((t = Math.round(t)),
                    this.fillZero(Math.floor(t / 3600)) +
                      ":" +
                      this.fillZero(Math.floor((t % 3600) / 60)) +
                      ":" +
                      this.fillZero(Math.floor(t) % 60) +
                      " hours")
                  : ((t = Math.round(t)),
                    Math.floor(t / 86400) +
                      " days " +
                      this.fillZero(Math.floor((t % 86400) / 3600)) +
                      ":" +
                      this.fillZero(Math.floor((t % 3600) / 60)) +
                      ":" +
                      this.fillZero(Math.floor(t) % 60))
              );
            }
            fillZero(t, i = 2) {
              let r = "";
              for (let o = 0; o < i; o++) r += "0";
              return (r + t).slice(-i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵpipe = Rn({
              name: "duration",
              type: e,
              pure: !0,
            }));
          }
          return e;
        })();
      function Yre(e, n) {
        if ((1 & e && (p(0, "div"), h(1), pe(2, "duration"), d()), 2 & e)) {
          const t = I();
          b(1),
            ne(
              " You running out of Bonus seconds in: ",
              Me(
                2,
                1,
                (1e3 * t.data.settings.bonusSeconds) / (t.startSpeed - 1)
              ),
              "\n"
            );
        }
      }
      function Kre(e, n) {
        1 & e &&
          (p(0, "div", 5)(1, "div", 6),
          h(2, "Bonus Seconds"),
          d(),
          h(
            3,
            " While you were offline you get 1 bonus second per real second. You can collect up to 21 Days Offline Time. You can change the Speed of the Game. Running the game twice as fast will require 1 extra seconds per second. Running the game 5x faster will require 4 extra seconds per second. "
          ),
          p(4, "div", 7)(5, "i"),
          h(
            6,
            " No matter if you take a break from the game or not. you won't loose gametime. "
          ),
          d()(),
          h(
            7,
            " Additionally, You can change the consumption of your bonus seconds from 1-4 (accordingly to game speed from 2x - 5x). "
          ),
          d());
      }
      let Zre = (() => {
        class e {
          constructor(t, i) {
            (this.offlineService = t),
              (this.data = i),
              (this.startSpeed = 1),
              (this.maxSpeed =
                this.data.settings.bonusSeconds > 86400
                  ? this.data.settings.bonusSeconds > 259200
                    ? 30
                    : 20
                  : 5),
              (this.startSpeed = 1 / this.offlineService.getBonusMulti());
          }
          changeBonusSpeed(t) {
            this.offlineService.changeSpeed(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Yi), M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-offline"]],
            decls: 10,
            vars: 8,
            consts: [
              [1, "info-tooltip", 3, "tooltip", "tooltipTemplate"],
              [1, "fas", "fa-info-circle"],
              [
                "labelPrefix",
                "x",
                3,
                "min",
                "max",
                "ngModel",
                "ngModelChange",
                "valueChanged",
              ],
              [4, "ngIf"],
              ["tooltipInfo", ""],
              [1, "tooltip"],
              [1, "title"],
              [1, "info"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                k(1, "i", 1),
                d(),
                p(2, "div"),
                h(3),
                pe(4, "duration"),
                d(),
                h(5, " Game Speed: "),
                p(6, "alchy-range-input", 2),
                F("ngModelChange", function (s) {
                  return (r.startSpeed = s);
                })("valueChanged", function (s) {
                  return r.changeBonusSpeed(s);
                }),
                d(),
                E(7, Yre, 3, 3, "div", 3),
                E(8, Kre, 8, 0, "ng-template", null, 4, hl)),
                2 & i &&
                  (x("tooltipTemplate", ll(9)),
                  b(3),
                  ne(
                    " Bonus Seconds: ",
                    Me(4, 6, 1e3 * r.data.settings.bonusSeconds),
                    "\n"
                  ),
                  b(3),
                  x("min", 1)("max", r.maxSpeed)("ngModel", r.startSpeed),
                  b(1),
                  x("ngIf", r.startSpeed > 1));
            },
            dependencies: [be, _l, vl, kd, K0, Z0],
            styles: [
              "alchy-range-input[_ngcontent-%COMP%]{margin:1rem 0}.btn[_ngcontent-%COMP%]{margin:1rem 0}.btn.active[_ngcontent-%COMP%]{background-color:#277554}.tooltip[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]{margin:1rem 0}",
            ],
          }));
        }
        return e;
      })();
      class Qre extends qt {
        constructor(n, t) {
          super();
        }
        schedule(n, t = 0) {
          return this;
        }
      }
      const Cg = {
        setInterval(e, n, ...t) {
          const { delegate: i } = Cg;
          return i?.setInterval
            ? i.setInterval(e, n, ...t)
            : setInterval(e, n, ...t);
        },
        clearInterval(e) {
          const { delegate: n } = Cg;
          return (n?.clearInterval || clearInterval)(e);
        },
        delegate: void 0,
      };
      class Td {
        constructor(n, t = Td.now) {
          (this.schedulerActionCtor = n), (this.now = t);
        }
        schedule(n, t = 0, i) {
          return new this.schedulerActionCtor(this, n).schedule(i, t);
        }
      }
      Td.now = m0.now;
      const KP = new (class Jre extends Td {
          constructor(n, t = Td.now) {
            super(n, t), (this.actions = []), (this._active = !1);
          }
          flush(n) {
            const { actions: t } = this;
            if (this._active) return void t.push(n);
            let i;
            this._active = !0;
            do {
              if ((i = n.execute(n.state, n.delay))) break;
            } while ((n = t.shift()));
            if (((this._active = !1), i)) {
              for (; (n = t.shift()); ) n.unsubscribe();
              throw i;
            }
          }
        })(
          class Xre extends Qre {
            constructor(n, t) {
              super(n, t),
                (this.scheduler = n),
                (this.work = t),
                (this.pending = !1);
            }
            schedule(n, t = 0) {
              var i;
              if (this.closed) return this;
              this.state = n;
              const r = this.id,
                o = this.scheduler;
              return (
                null != r && (this.id = this.recycleAsyncId(o, r, t)),
                (this.pending = !0),
                (this.delay = t),
                (this.id =
                  null !== (i = this.id) && void 0 !== i
                    ? i
                    : this.requestAsyncId(o, this.id, t)),
                this
              );
            }
            requestAsyncId(n, t, i = 0) {
              return Cg.setInterval(n.flush.bind(n, this), i);
            }
            recycleAsyncId(n, t, i = 0) {
              if (null != i && this.delay === i && !1 === this.pending)
                return t;
              null != t && Cg.clearInterval(t);
            }
            execute(n, t) {
              if (this.closed) return new Error("executing a cancelled action");
              this.pending = !1;
              const i = this._execute(n, t);
              if (i) return i;
              !1 === this.pending &&
                null != this.id &&
                (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
            }
            _execute(n, t) {
              let r,
                i = !1;
              try {
                this.work(n);
              } catch (o) {
                (i = !0),
                  (r = o || new Error("Scheduled action threw falsy error"));
              }
              if (i) return this.unsubscribe(), r;
            }
            unsubscribe() {
              if (!this.closed) {
                const { id: n, scheduler: t } = this,
                  { actions: i } = t;
                (this.work = this.state = this.scheduler = null),
                  (this.pending = !1),
                  Qr(i, this),
                  null != n && (this.id = this.recycleAsyncId(t, n, null)),
                  (this.delay = null),
                  super.unsubscribe();
              }
            }
          }
        ),
        eoe = KP;
      let ioe = (() => {
        class e {
          constructor() {
            (this.obsCounterSource = new Ze()),
              (this.value = new le()),
              (this.subscription = this.obsCounterSource
                .pipe(
                  Oi((t) =>
                    (function noe(e = 0, n, t = eoe) {
                      let i = -1;
                      return (
                        null != n && (Mw(n) ? (t = n) : (i = n)),
                        new wt((r) => {
                          let o = (function toe(e) {
                            return e instanceof Date && !isNaN(e);
                          })(e)
                            ? +e - t.now()
                            : e;
                          o < 0 && (o = 0);
                          let s = 0;
                          return t.schedule(function () {
                            r.closed ||
                              (r.next(s++),
                              0 <= i ? this.schedule(void 0, i) : r.complete());
                          }, o);
                        })
                      );
                    })(1e3, 1e3).pipe(
                      ls(Math.floor(t / 1e3)),
                      Fn(() => this.value.emit((t -= 1e3)))
                    )
                  )
                )
                .subscribe());
          }
          ngOnChanges() {
            this.obsCounterSource.next(this.alchyCounter);
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵdir = re({
            type: e,
            selectors: [["", "alchyCounter", ""]],
            inputs: { alchyCounter: "alchyCounter" },
            outputs: { value: "value" },
            features: [si],
          }));
        }
        return e;
      })();
      function roe(e, n) {
        if ((1 & e && (p(0, "span"), k(1, "alchy-item", 6), d()), 2 & e)) {
          const t = n.$implicit,
            i = I();
          b(1), x("item", t)("value", t.value * i.brewingCostBonus);
        }
      }
      const ooe = function (e, n) {
        return { name: e, type: "flask", value: n };
      };
      let soe = (() => {
        class e {
          get buyable() {
            return this._brewingService.buyable(
              this.brewing,
              1,
              this.brewingCostBonus
            );
          }
          constructor(t, i, r) {
            (this._brewingService = t),
              (this._upgradeService = i),
              (this._portalService = r),
              (this.bonusSecondsMulti = 1),
              (this.brewingBonus = 1),
              (this.brewingAmountBonus = 1),
              (this.brewingCostBonus = 1),
              (this._alive = !0);
          }
          ngOnInit() {
            this._upgradeService.boughtUpgrades
              .pipe(X(() => this._alive))
              .subscribe(() => {
                (this.brewingBonus = this._upgradeService.getBrewingTimeBonus(
                  this.brewing.name
                )),
                  (this.brewingAmountBonus = this._portalService.getBonus(
                    "brewingmulti",
                    this.brewing.name
                  )),
                  (this.brewingCostBonus = this._portalService.getBonusCost(
                    "brewingmulti",
                    this.brewing.name
                  ));
              });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          buy() {
            this._brewingService.brew(this.brewing);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Y0), M(mr), M(gg));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-brew-flask"]],
            inputs: {
              brewing: "brewing",
              bonusSecondsMulti: "bonusSecondsMulti",
            },
            decls: 9,
            vars: 11,
            consts: [
              [1, "item", 3, "click"],
              [3, "item"],
              [1, "row"],
              [1, "dur"],
              [1, "costs"],
              [4, "ngFor", "ngForOf"],
              [3, "item", "value"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                F("click", function () {
                  return r.buy();
                }),
                k(1, "alchy-item", 1),
                h(2),
                p(3, "div", 2)(4, "div", 3),
                h(5),
                pe(6, "duration"),
                d(),
                p(7, "div", 4),
                E(8, roe, 2, 2, "span", 5),
                d()()()),
                2 & i &&
                  (Le("buyable", r.buyable),
                  b(1),
                  x("item", Ar(8, ooe, r.brewing.name, r.brewingAmountBonus)),
                  b(1),
                  ne(" ", r.brewing.name, " "),
                  b(3),
                  ne(" ", Me(6, 6, r.brewingBonus * r.bonusSecondsMulti), " "),
                  b(3),
                  x("ngForOf", r.brewing.require));
            },
            dependencies: [Qe, Gi, Z0],
            styles: [
              ".item[_ngcontent-%COMP%]{margin:10px 0;padding:10px;border:1px solid #000;transition:.3s;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.item[_ngcontent-%COMP%]:hover{background-color:#444}.item[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.item[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .dur[_ngcontent-%COMP%]{color:#aaa}.item.buyable[_ngcontent-%COMP%]{background-color:#363}.item.buyable[_ngcontent-%COMP%]:hover{background-color:#484}",
            ],
          }));
        }
        return e;
      })();
      const aoe = function (e, n) {
          return { startWidth: e, duration: n };
        },
        loe = function (e, n) {
          return { value: e, params: n };
        };
      function coe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 8)(1, "div", 9),
            k(2, "alchy-item", 10),
            Ct(3, 11),
            F("value", function (r) {
              return oe(t), se((I().counter = r));
            }),
            h(4),
            pe(5, "number"),
            xt(),
            h(6),
            pe(7, "number"),
            d(),
            k(8, "div", 12),
            d();
        }
        if (2 & e) {
          const t = I();
          b(2),
            x("item", t.brewingQueue[0].item),
            b(1),
            x("alchyCounter", t.nextFinished),
            b(1),
            ne(" ", lf(5, 5, t.counter / 1e3, "1.0-0"), " / "),
            b(2),
            ne(
              " ",
              lf(
                7,
                8,
                (t.brewingQueue[0].duration * t.bonusSecondsMulti) / 1e3,
                "1.0-0"
              ),
              " "
            ),
            b(2),
            x(
              "@fillWidth",
              Ar(
                14,
                loe,
                t.animate,
                Ar(
                  11,
                  aoe,
                  100 *
                    (1 -
                      t.nextFinished /
                        (t.brewingQueue[0].duration * t.bonusSecondsMulti)),
                  t.nextFinished + "ms"
                )
              )
            );
        }
      }
      function uoe(e, n) {
        if ((1 & e && (p(0, "div", 14), h(1), d()), 2 & e)) {
          const t = I().$implicit;
          b(1), ne(" ", t.item.value, " ");
        }
      }
      function doe(e, n) {
        if (
          (1 & e && (p(0, "div"), E(1, uoe, 2, 1, "div", 13), k(2, "i"), d()),
          2 & e)
        ) {
          const t = n.$implicit;
          Te("item flask " + t.item.name.replace(" ", "-")),
            b(1),
            x("ngIf", t.item.value > 1),
            b(1),
            Te("fas fa-flask");
        }
      }
      function hoe(e, n) {
        if ((1 & e && k(0, "alchy-brew-flask", 15), 2 & e)) {
          const t = n.$implicit;
          x("bonusSecondsMulti", I().bonusSecondsMulti)("brewing", t);
        }
      }
      function foe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div")(1, "label")(2, "input", 17),
            F("change", function (r) {
              const s = oe(t).$implicit;
              return se(I(2).changeAutoBrewing(r.target.checked, s));
            }),
            d(),
            h(3),
            d()();
        }
        if (2 & e) {
          const t = n.$implicit,
            i = I(2);
          b(2),
            x("checked", t === i.curAutoBrewing),
            b(1),
            ne(" ", t, " flask ");
        }
      }
      function poe(e, n) {
        if (
          (1 & e &&
            (p(0, "div"),
            h(1, " auto brewing: "),
            E(2, foe, 4, 2, "div", 16),
            d()),
          2 & e)
        ) {
          const t = I();
          b(2), x("ngForOf", t.autoBrewing);
        }
      }
      let goe = (() => {
        class e {
          constructor(t, i, r) {
            (this._upgradeService = t),
              (this._brewingService = i),
              (this._offline = r),
              (this._alive = !0),
              (this.animate = "end"),
              (this.bonusSecondsMulti = 1),
              (this.counter = 0),
              (this.nextFinished = 3e4),
              (this.autoBrewing = []);
          }
          ngOnInit() {
            this._upgradeService.availableBrewings
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.brewings = t)),
              this._brewingService.autoBrewing
                .pipe(X(() => this._alive))
                .subscribe((t) => (this.curAutoBrewing = t)),
              this._upgradeService.boughtUpgrades
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  this.autoBrewing = t
                    .filter((i) => "autoBrewing" === i.type)
                    .map((i) => i.subType);
                }),
              this._brewingService.brewingQueue
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.nextFinished = t.remainingTime),
                    (this.brewingQueue = t.queue),
                    (this.animate = "start"),
                    setTimeout(() => (this.animate = "end"), 10);
                }),
              this._offline.obsToggleBonus
                .pipe(X(() => this._alive))
                .subscribe(
                  () => (this.bonusSecondsMulti = this._offline.getBonusMulti())
                ),
              this._brewingService.checkBrewing();
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          changeAutoBrewing(t, i) {
            t || (i = ""), this._brewingService.changeAutoBrewing(i);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(mr), M(Y0), M(Yi));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-brewing"]],
            decls: 8,
            vars: 4,
            consts: [
              [1, "brewing"],
              [1, "brew-queue"],
              ["class", "queue-prog", 4, "ngIf"],
              [1, "brew-queue-flasks"],
              [3, "class", 4, "ngFor", "ngForOf"],
              [1, "brew-flasks"],
              [3, "bonusSecondsMulti", "brewing", 4, "ngFor", "ngForOf"],
              [4, "ngIf"],
              [1, "queue-prog"],
              [1, "label"],
              [3, "item"],
              [3, "alchyCounter", "value"],
              [1, "bar"],
              ["class", "amount", 4, "ngIf"],
              [1, "amount"],
              [3, "bonusSecondsMulti", "brewing"],
              [4, "ngFor", "ngForOf"],
              ["type", "checkbox", 3, "checked", "change"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                E(2, coe, 9, 17, "div", 2),
                p(3, "div", 3),
                E(4, doe, 3, 5, "div", 4),
                d()(),
                p(5, "div", 5),
                E(6, hoe, 1, 2, "alchy-brew-flask", 6),
                d(),
                E(7, poe, 3, 1, "div", 7),
                d()),
                2 & i &&
                  (b(2),
                  x(
                    "ngIf",
                    (null == r.brewingQueue ? null : r.brewingQueue.length) >
                      0 && r.brewingQueue[0]
                  ),
                  b(2),
                  x("ngForOf", r.brewingQueue.slice(1, 88)),
                  b(2),
                  x("ngForOf", r.brewings),
                  b(1),
                  x("ngIf", r.autoBrewing.length > 0));
            },
            dependencies: [Qe, be, ioe, soe, Gi, Vk],
            styles: [
              ".brewing[_ngcontent-%COMP%]{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex-wrap:wrap;min-height:110px}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .brew-queue-flasks[_ngcontent-%COMP%]{min-height:60px;display:flex;justify-content:center;align-items:center}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .flask[_ngcontent-%COMP%]{margin:6px 3px;position:relative}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .queue-prog[_ngcontent-%COMP%]{width:100%;border:1px solid #000;background-color:#222;position:relative;height:40px;line-height:40px;min-height:42px}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .queue-prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;text-align:center;height:100%;width:100%;z-index:2;margin:0}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .queue-prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   alchy-item[_ngcontent-%COMP%]{margin-right:1rem}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .queue-prog[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;background-color:#112;z-index:1}.brewing[_ngcontent-%COMP%]   .brew-queue[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%]{position:absolute;bottom:-4px;z-index:2;right:-2px;font-size:14px}",
            ],
            data: { animation: [mP] },
          }));
        }
        return e;
      })();
      var moe = Zr(167),
        ZP = Zr.n(moe);
      let xg = (() => {
          class e {
            constructor() {
              (this.recentNotificationId = 0), (this.notifications = new Ze());
            }
            show(t, i = "info", r = 5e3, o) {
              this.notifications.next({
                id: this.recentNotificationId++,
                message: t,
                icon: o,
                type: i,
                duration: r,
              });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        _oe = (() => {
          class e {
            constructor(t, i) {
              (this._data = t), (this._not = i);
            }
            export() {
              const t = {
                game: this._data.game,
                portal: this._data.portal,
                settings: this._data.settings,
                statistic: this._data.statistic,
              };
              return ZP().compressToBase64(JSON.stringify(t));
            }
            import(t) {
              var i = this;
              return fr(function* () {
                const r = JSON.parse(ZP().decompressFromBase64(t));
                try {
                  r?.game && r.settings && r.statistic && r.portal
                    ? (yield i._data.tryToImport(
                        r.game,
                        r.settings,
                        r.statistic,
                        r.portal
                      ),
                      i._not.show("Import Success"))
                    : i._not.show("Import Error Not complete");
                } catch (o) {
                  i._not.show("Import Error, see logs"),
                    console.log("IMPORT ERROR", o);
                }
              })();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(xg));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      function yoe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 16),
            h(1, " Do you really want to lose your current Game? "),
            p(2, "div", 12)(3, "div", 13),
            F("click", function () {
              return oe(t), se(I().toggleImport());
            }),
            h(4, "no"),
            d(),
            p(5, "div", 13),
            F("click", function () {
              return oe(t), se(I().import());
            }),
            h(6, "yes"),
            d()()();
        }
      }
      function voe(e, n) {
        1 & e &&
          (p(0, "div", 17)(1, "div", 3),
          h(2, "World"),
          d(),
          h(
            3,
            " If you lower the amount of points for the chart, it will slowly update the graph and decrease the points. "
          ),
          d());
      }
      let boe = (() => {
          class e {
            constructor(t, i, r, o) {
              (this.chart = t),
                (this._data = i),
                (this._exchange = r),
                (this._settingService = o),
                (this.showImport = !1),
                (this._alive = !0),
                (this.isAutoShrink = !1),
                (this.isHideChart = !1),
                (this.isHideAlmostBuyableFluid = !1);
            }
            ngOnInit() {
              this._settingService.obsAutoShrink
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  this.isAutoShrink = t;
                }),
                this._settingService.obsHideChart
                  .pipe(X(() => this._alive))
                  .subscribe((t) => {
                    this.isHideChart = t;
                  }),
                this._settingService.obsHideAlmostBuyableFluid
                  .pipe(X(() => this._alive))
                  .subscribe((t) => {
                    this.isHideAlmostBuyableFluid = t;
                  });
            }
            save() {
              this._data.save();
            }
            export() {
              this.exportText = this._exchange.export();
            }
            toggleImport() {
              this.showImport = !this.showImport;
            }
            import() {
              this._exchange.import(this.exportText);
            }
            shrinkAuto(t) {
              this._settingService.toggleAutoShrink(t);
            }
            hideChart(t) {
              this._settingService.toggleHideChart(t);
            }
            hideAlmostBuyableFluid(t) {
              this._settingService.toggleHideAlmostBuyableFluid(t);
            }
            ngOnDestroy() {
              this._alive = !1;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M($P), M(je), M(_oe), M($l));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-settings"]],
              decls: 41,
              vars: 8,
              consts: [
                [1, "form-group"],
                [1, "btn", 3, "click"],
                ["type", "checkbox", 3, "checked", "input"],
                [1, "title"],
                ["for", "delay"],
                ["id", "delay", "type", "number", 3, "ngModel", "change"],
                ["for", "points"],
                ["id", "points", "type", "number", 3, "ngModel", "change"],
                [1, "info-tooltip", 3, "tooltip", "tooltipTemplate"],
                [1, "fas", "fa-info-circle"],
                [1, "exchange"],
                [3, "ngModel", "ngModelChange"],
                [1, "btn-row"],
                [1, "btn", "btn-half", 3, "click"],
                ["class", "ask-import", 4, "ngIf"],
                ["tooltipInfo", ""],
                [1, "ask-import"],
                [1, "tooltip"],
              ],
              template: function (i, r) {
                if (
                  (1 & i &&
                    (p(0, "div", 0)(1, "div", 1),
                    F("click", function () {
                      return r.save();
                    }),
                    h(2, "save now"),
                    d(),
                    h(3, " (auto save every 5 min)\n"),
                    d(),
                    p(4, "div", 0)(5, "label")(6, "input", 2),
                    F("input", function (s) {
                      return r.shrinkAuto(s.target.checked);
                    }),
                    d(),
                    h(7, " Shrink Auto Clicker "),
                    d()(),
                    p(8, "div", 0)(9, "label")(10, "input", 2),
                    F("input", function (s) {
                      return r.hideAlmostBuyableFluid(s.target.checked);
                    }),
                    d(),
                    h(11, " Hide Almost buyable fluidupgrade "),
                    d()(),
                    p(12, "div")(13, "div", 3),
                    h(14, "Chart"),
                    d(),
                    p(15, "div", 0)(16, "label")(17, "input", 2),
                    F("input", function (s) {
                      return r.hideChart(s.target.checked);
                    }),
                    d(),
                    h(18, " Hide Chart "),
                    d()(),
                    p(19, "div", 0)(20, "label", 4),
                    h(21, " Delay "),
                    d(),
                    p(22, "input", 5),
                    F("change", function (s) {
                      return r.chart.changeStatisticDelay(s.target.value);
                    }),
                    d()(),
                    p(23, "div", 0)(24, "label", 6),
                    h(25, "Points"),
                    d(),
                    p(26, "input", 7),
                    F("change", function (s) {
                      return r.chart.changeStatisticMaxPoints(s.target.value);
                    }),
                    d()(),
                    p(27, "div", 8),
                    k(28, "i", 9),
                    d()(),
                    p(29, "div", 10)(30, "div", 3),
                    h(31, " Export / Import "),
                    d(),
                    p(32, "textarea", 11),
                    F("ngModelChange", function (s) {
                      return (r.exportText = s);
                    }),
                    d(),
                    p(33, "div", 12)(34, "div", 13),
                    F("click", function () {
                      return r.export();
                    }),
                    h(35, "export"),
                    d(),
                    p(36, "div", 13),
                    F("click", function () {
                      return r.toggleImport();
                    }),
                    h(37, "import"),
                    d()(),
                    E(38, yoe, 7, 0, "div", 14),
                    d(),
                    E(39, voe, 4, 0, "ng-template", null, 15, hl)),
                  2 & i)
                ) {
                  const o = ll(40);
                  b(6),
                    x("checked", r.isAutoShrink),
                    b(4),
                    x("checked", r.isHideAlmostBuyableFluid),
                    b(7),
                    x("checked", r.isHideChart),
                    b(5),
                    x("ngModel", r.chart.statisticDelay),
                    b(4),
                    x("ngModel", r.chart.statisticMaxPoints),
                    b(1),
                    x("tooltipTemplate", o),
                    b(5),
                    x("ngModel", r.exportText),
                    b(6),
                    x("ngIf", r.showImport);
                }
              },
              dependencies: [be, Ff, pv, _l, vl, kd],
              styles: [
                ".form-group[_ngcontent-%COMP%]{display:flex;align-items:center;margin:1rem 0}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{min-width:100px;display:block}.title[_ngcontent-%COMP%]{font-size:1.5rem}.exchange[_ngcontent-%COMP%]{margin:2rem 0}textarea[_ngcontent-%COMP%]{width:100%;margin:1rem 0}",
              ],
            }));
          }
          return e;
        })(),
        Q0 = (() => {
          class e {
            constructor(t, i, r, o) {
              (this._data = t),
                (this._buy = i),
                (this._combatUpgradeService = r),
                (this._fightHandler = o),
                (this.c = this._data.game.combat);
            }
            heal() {
              const t = [new w0({ type: "flask", name: "blood", value: 1 })];
              return (
                !!this._buy.buyable(t) &&
                (this._buy.buy(t),
                (this.c.health += ut.healFlaskAmount(
                  this._combatUpgradeService.getAmount(
                    "flaskRewardBonus",
                    "blood"
                  )
                )),
                this.c.health > ut.maxHP(this.c.level) &&
                  (this.c.health = ut.maxHP(this.c.level)),
                this._fightHandler.postFightData(),
                this._fightHandler.checkThrottleOrContinue(),
                !0)
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Wn), O(ql), O(vd));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      function woe(e, n) {
        if ((1 & e && (p(0, "span"), k(1, "alchy-item", 4), d()), 2 & e)) {
          const t = n.$implicit;
          b(1), x("item", t);
        }
      }
      let Coe = (() => {
        class e {
          get buyable() {
            return this._buyService.buyable(this.upgrade.cost);
          }
          constructor(t, i) {
            (this._combatUpgradeService = t), (this._buyService = i);
          }
          buy(t) {
            this._combatUpgradeService.buy(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(ql), M(Wn));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-combat-upgrade"]],
            inputs: { upgrade: "upgrade" },
            decls: 4,
            vars: 4,
            consts: [
              [1, "upgrade", 3, "click"],
              [1, "text", 3, "innerHTML"],
              [1, "costs"],
              [4, "ngFor", "ngForOf"],
              [3, "item"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                F("click", function () {
                  return r.buy(r.upgrade);
                }),
                k(1, "div", 1),
                p(2, "div", 2),
                E(3, woe, 2, 1, "span", 3),
                d()()),
                2 & i &&
                  (Le("buyable", r.buyable),
                  b(1),
                  x("innerHTML", r.upgrade.text, zo),
                  b(2),
                  x("ngForOf", r.upgrade.cost));
            },
            dependencies: [Qe, Gi],
            styles: [
              ".upgrade[_ngcontent-%COMP%]{margin:10px 0;padding:10px;border:1px solid #000;transition:.3s;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.upgrade[_ngcontent-%COMP%]:hover{background-color:#444}.upgrade[_ngcontent-%COMP%]   .costs[_ngcontent-%COMP%]{text-align:right}.upgrade.buyable[_ngcontent-%COMP%]{background-color:#363}.upgrade.buyable[_ngcontent-%COMP%]:hover{background-color:#484}",
            ],
          }));
        }
        return e;
      })();
      function xoe(e, n) {
        1 & e && k(0, "alchy-combat-upgrade", 5),
          2 & e && x("upgrade", n.$implicit);
      }
      function Moe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 6),
            F("click", function () {
              return oe(t), se(I().heal());
            }),
            h(1, " heal for 1"),
            k(2, "i", 7),
            d();
        }
      }
      function Doe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "label")(1, "input", 8),
            F("change", function (r) {
              return oe(t), se(I().changeAutoHeal(r.target.checked));
            }),
            d(),
            h(2, " autoHeal\n"),
            d();
        }
        if (2 & e) {
          const t = I();
          b(1), x("checked", t.autoHeal);
        }
      }
      function Soe(e, n) {
        if ((1 & e && (p(0, "span"), h(1), pe(2, "bignumber"), d()), 2 & e)) {
          const t = I(2);
          b(1), ne(" labyBonus ", Me(2, 1, t.fight.labyBonus), " ");
        }
      }
      function koe(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 9)(1, "div"),
            h(2),
            pe(3, "bignumber"),
            pe(4, "bignumber"),
            E(5, Soe, 3, 3, "span", 3),
            d()()),
          2 & e)
        ) {
          const t = I();
          b(2),
            mn(
              " Dmg: ",
              Me(3, 3, t.fight.minDmg),
              " - ",
              Me(4, 5, t.fight.maxDmg),
              " "
            ),
            b(3),
            x("ngIf", t.fight.labyBonus);
        }
      }
      let Toe = (() => {
        class e {
          constructor(t, i, r, o, s, a, l) {
            (this._settingService = t),
              (this._combatUpgradeService = i),
              (this._combatPotionService = r),
              (this._fightHandlerService = o),
              (this._combatService = s),
              (this._not = a),
              (this._data = l),
              (this.upgrades = []),
              (this.autoHeal = !1),
              (this.autoHealUnlocked = !1),
              (this.initialCombatWorldUnlock = !1),
              (this.healFlaskAmount = 0),
              (this._highestWorldMap = 0),
              (this._alive = !0);
          }
          ngOnInit() {
            this._fightHandlerService.fightData
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.fight = t)),
              this._settingService.obsAutoHeal
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  this.autoHeal = t;
                }),
              (this.healFlaskAmount =
                this._data.game.flask.find((t) => "blood" === t.name)?.value ??
                0),
              this._data.obsResetGame
                .pipe(X(() => this._alive))
                .subscribe(() => {
                  this.healFlaskAmount =
                    this._data.game.flask.find((t) => "blood" === t.name)
                      ?.value ?? 0;
                }),
              this._combatService.combat
                .pipe(X(() => this._alive))
                .subscribe(
                  (t) => (this._highestWorldMap = t.curWorldMap.mapLevel)
                ),
              this._combatUpgradeService.unboughtUpgrades
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  const i = t.map((r) => r.type);
                  this.upgrades = t
                    .filter(
                      (r) =>
                        0 === r.id ||
                        (!r.require.every((o) => i.includes(o)) &&
                          this._highestWorldMap >= r.requireWorldZone)
                    )
                    .slice(0, 3);
                }),
              this._combatUpgradeService.boughtUpgrades
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.initialCombatWorldUnlock = !!t.find(
                    (i) => "initialCombatWorldUnlock" === i.type
                  )),
                    (this.autoHealUnlocked = !!t.find(
                      (i) => "auto" === i.type && "healing" === i.subType
                    ));
                });
          }
          heal() {
            console.log("heal"),
              this._combatPotionService.heal() ||
                this._not.show("You need a heal potion");
          }
          changeAutoHeal(t) {
            this._settingService.changeAutoHeal(t);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(
              M($l),
              M(ql),
              M(Q0),
              M(vd),
              M(Ki),
              M(xg),
              M(je)
            );
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-combat-settings"]],
            decls: 5,
            vars: 4,
            consts: [
              ["class", "upgrade", 3, "upgrade", 4, "ngFor", "ngForOf"],
              [1, "btn-row"],
              ["class", "btn btn-half", 3, "click", 4, "ngIf"],
              [4, "ngIf"],
              ["class", "stats", 4, "ngIf"],
              [1, "upgrade", 3, "upgrade"],
              [1, "btn", "btn-half", 3, "click"],
              [1, "fa", "fa-flask", "blood"],
              ["type", "checkbox", 3, "checked", "change"],
              [1, "stats"],
            ],
            template: function (i, r) {
              1 & i &&
                (E(0, xoe, 1, 1, "alchy-combat-upgrade", 0),
                p(1, "div", 1),
                E(2, Moe, 3, 0, "div", 2),
                d(),
                E(3, Doe, 3, 1, "label", 3),
                E(4, koe, 6, 7, "div", 4)),
                2 & i &&
                  (x("ngForOf", r.upgrades),
                  b(2),
                  x(
                    "ngIf",
                    r.healFlaskAmount &&
                      !r.autoHealUnlocked &&
                      r.initialCombatWorldUnlock
                  ),
                  b(1),
                  x("ngIf", r.autoHealUnlocked && r.initialCombatWorldUnlock),
                  b(1),
                  x("ngIf", r.fight));
            },
            dependencies: [Qe, be, Coe, Qt],
          }));
        }
        return e;
      })();
      function Eoe(e, n) {
        1 & e &&
          (p(0, "div")(1, "p"),
          h(2, " pressing the Button will give you 1000 "),
          k(3, "i", 4),
          h(4, " + 1000 "),
          k(5, "i", 5)(6, "br"),
          h(
            7,
            " (you can immediately close the tab and you dont have to pay for receiving this bonus) "
          ),
          d(),
          p(8, "p"),
          h(
            9,
            " The game is completely free, but I would appreciate any support. "
          ),
          d()());
      }
      function Ioe(e, n) {
        1 & e &&
          (p(0, "div")(1, "p"),
          h(2, " Thanks for clicking the Button! You already received 1000 "),
          k(3, "i", 4),
          h(4, " + 1000 "),
          k(5, "i", 5),
          h(6, " . "),
          d(),
          p(7, "p"),
          h(8, " I hope you like the game! "),
          d()());
      }
      let Ooe = (() => {
        class e {
          constructor(t, i) {
            (this.dataService = t), (this.flaskService = i);
          }
          click() {
            this.dataService.game.alreadySupported ||
              ((this.dataService.game.alreadySupported = !0),
              this.flaskService.addFlask("slime", 1e3),
              this.flaskService.addFlask("blood", 1e3));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(je), M(P0));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-support"]],
            decls: 10,
            vars: 2,
            consts: [
              [
                "target",
                "_blank",
                "href",
                "https://buy.stripe.com/aEU15ncFY0Ubb0Q9AA",
                1,
                "support-button-wrapper",
                3,
                "click",
              ],
              ["src", "assets/img/me.png"],
              [1, "support-button"],
              [4, "ngIf"],
              [1, "fas", "fa-flask", "slime"],
              [1, "fas", "fa-flask", "blood"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "p"),
                h(
                  1,
                  " Hey everyone, I'm a software developer from germany and I love developing video games in my spare time. My dog is 2 years old, and besides my main job, there's hardly any time to design my own projects. Nonetheless, I really enjoy developing games and hope you like my game.\n"
                ),
                d(),
                p(2, "p"),
                h(3, " The game is 100% free, but If you want you can:\n"),
                d(),
                p(4, "a", 0),
                F("click", function () {
                  return r.click();
                }),
                k(5, "img", 1),
                p(6, "button", 2),
                h(7, " Buy me a Dog treat! "),
                d()(),
                E(8, Eoe, 10, 0, "div", 3),
                E(9, Ioe, 9, 0, "div", 3)),
                2 & i &&
                  (b(8),
                  x("ngIf", !r.dataService.game.alreadySupported),
                  b(1),
                  x("ngIf", r.dataService.game.alreadySupported));
            },
            dependencies: [be],
            styles: [
              ".support-button-wrapper[_ngcontent-%COMP%]{display:inline-flex;justify-content:center;align-items:center;gap:1rem;text-decoration:none;border:none;cursor:pointer;margin:0 auto}.support-button-wrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:80px;width:80px;border-radius:8px;transition:.5s}.support-button-wrapper[_ngcontent-%COMP%]:hover   img[_ngcontent-%COMP%]{filter:brightness(.6)}.support-button-wrapper[_ngcontent-%COMP%]:hover   .support-button[_ngcontent-%COMP%]{background-color:#0079a8}.support-button[_ngcontent-%COMP%]{text-decoration:none;padding:0 1.5rem;height:80px;display:flex;justify-content:center;align-items:center;border-radius:8px;color:#fff;background-color:#16bcfd;border:none;transition:.5s;cursor:pointer;font-family:FontAwesome}",
            ],
          }));
        }
        return e;
      })();
      function Aoe(e, n) {
        1 & e && k(0, "alchy-upgrade", 5), 2 & e && x("upgrade", n.$implicit);
      }
      function Poe(e, n) {
        if (
          (1 & e && (Ct(0), E(1, Aoe, 1, 1, "alchy-upgrade", 4), xt()), 2 & e)
        ) {
          const t = I();
          b(1), x("ngForOf", t.upgrades);
        }
      }
      function Foe(e, n) {
        1 & e && (Ct(0), k(1, "alchy-offline"), xt());
      }
      function Roe(e, n) {
        1 & e && (Ct(0), k(1, "alchy-combat-settings"), xt());
      }
      function Noe(e, n) {
        1 & e && (Ct(0), k(1, "alchy-settings"), xt());
      }
      function Loe(e, n) {
        1 & e && (Ct(0), k(1, "alchy-support"), xt());
      }
      let Boe = (() => {
        class e {
          constructor(t, i, r) {
            (this._updateService = t),
              (this._combatService = i),
              (this._data = r),
              (this.tab = "upgrades"),
              (this.upgrades = []),
              (this._alive = !0),
              (this._highestWorldMap = 0);
          }
          ngOnInit() {
            (this.tab = this._data.settings.lastMenuTab),
              Ju([
                this._combatService.combat,
                this._updateService.unboughtUpgrades,
              ])
                .pipe(X(() => this._alive))
                .subscribe(([t, i]) => {
                  if (!t) return void (this.upgrades = []);
                  const r = i
                    .filter((o) => "clicker" === o.type)
                    .map((o) => o.subType);
                  this.upgrades = i
                    .filter(
                      (o) =>
                        !o.require.every((s) => r.includes(s)) &&
                        t.curWorldMap.mapLevel >= o.requireWorldZone
                    )
                    .slice(0, 3);
                });
          }
          openTab(t) {
            (this.tab = t), (this._data.settings.lastMenuTab = t);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(mr), M(Ki), M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-menu"]],
            decls: 9,
            vars: 6,
            consts: [
              [1, "menu"],
              [3, "openTab"],
              [4, "ngIf"],
              [3, "hidden"],
              ["class", "upgrade", 3, "upgrade", 4, "ngFor", "ngForOf"],
              [1, "upgrade", 3, "upgrade"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "alchy-menubar", 1),
                F("openTab", function (s) {
                  return r.openTab(s);
                }),
                d(),
                E(2, Poe, 2, 1, "ng-container", 2),
                E(3, Foe, 2, 0, "ng-container", 2),
                Ct(4),
                k(5, "alchy-brewing", 3),
                xt(),
                E(6, Roe, 2, 0, "ng-container", 2),
                E(7, Noe, 2, 0, "ng-container", 2),
                E(8, Loe, 2, 0, "ng-container", 2),
                d()),
                2 & i &&
                  (b(2),
                  x("ngIf", "upgrades" === r.tab),
                  b(1),
                  x("ngIf", "offline" === r.tab),
                  b(2),
                  x("hidden", "brewing" !== r.tab),
                  b(1),
                  x("ngIf", "combatsettings" === r.tab),
                  b(1),
                  x("ngIf", "settings" === r.tab),
                  b(1),
                  x("ngIf", "support" === r.tab));
            },
            dependencies: [Qe, be, Nre, Ure, Zre, goe, boe, Toe, Ooe],
            styles: [".menu[_ngcontent-%COMP%]{margin:10px 20px}"],
          }));
        }
        return e;
      })();
      function Voe(e, n) {
        if ((1 & e && (p(0, "span"), k(1, "alchy-item", 4), d()), 2 & e)) {
          const t = n.$implicit;
          b(1), x("item", t);
        }
      }
      let zoe = (() => {
        class e {
          get upgradeCosts() {
            return this._upgradeReactorService.getUpgradeCosts(
              this.upgrade,
              this.reactorType
            );
          }
          get buyable() {
            return this._upgradeReactorService.buyable(
              this.upgrade,
              this.reactorType
            );
          }
          constructor(t, i) {
            (this._buyService = t),
              (this._upgradeReactorService = i),
              (this.buy = new le());
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Wn), M($0));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-reactor-upgrade"]],
            inputs: { upgrade: "upgrade", reactorType: "reactorType" },
            outputs: { buy: "buy" },
            decls: 4,
            vars: 4,
            consts: [
              [1, "upgrade", 3, "click"],
              [1, "text", 3, "innerHtml"],
              [1, "costs"],
              [4, "ngFor", "ngForOf"],
              [3, "item"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                F("click", function () {
                  return r.buy.emit();
                }),
                k(1, "div", 1),
                p(2, "div", 2),
                E(3, Voe, 2, 1, "span", 3),
                d()()),
                2 & i &&
                  (Le("buyable", r.buyable),
                  b(1),
                  x("innerHtml", r.upgrade.text, zo),
                  b(2),
                  x("ngForOf", r.upgradeCosts));
            },
            dependencies: [Qe, Gi],
            styles: [
              ".upgrade[_ngcontent-%COMP%]{margin:10px 0;padding:10px;border:1px solid #000;transition:.3s;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.upgrade[_ngcontent-%COMP%]:hover{background-color:#444}.upgrade[_ngcontent-%COMP%]   .costs[_ngcontent-%COMP%]{text-align:right}.upgrade.buyable[_ngcontent-%COMP%]{background-color:#363}.upgrade.buyable[_ngcontent-%COMP%]:hover{background-color:#484}",
            ],
          }));
        }
        return e;
      })();
      function Hoe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 5),
            F("click", function (r) {
              const s = oe(t).$implicit;
              return se(I(3).changeReactorType(r, s));
            }),
            p(1, "div", 6),
            h(2),
            d(),
            p(3, "div"),
            h(4),
            d()();
        }
        if (2 & e) {
          const t = n.$implicit;
          b(2),
            bn(t.name),
            b(1),
            Te("prod" + t.output.name),
            b(1),
            ne("Produce: ", t.output.name, "");
        }
      }
      function joe(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 2)(1, "div", 3),
            h(2, "Reactor - Choose a Production"),
            d(),
            E(3, Hoe, 5, 4, "div", 4),
            d()),
          2 & e)
        ) {
          const t = I(2);
          b(3), x("ngForOf", t.availableReactorTypes);
        }
      }
      function Uoe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 5),
            F("click", function () {
              const o = oe(t).index;
              return se(I(3).toggleStopInput(o));
            }),
            h(1),
            d();
        }
        if (2 & e) {
          const t = n.$implicit,
            i = n.index;
          b(1), mn(" ", t ? "start" : "stop", " input ", i + 1, " ");
        }
      }
      function Woe(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 3),
            h(1, "Reactor"),
            d(),
            p(2, "div"),
            h(
              3,
              "The reactor is running once per second. It has a green background if there is enough fluid for processing."
            ),
            d(),
            p(4, "div", 3),
            h(5, "Input"),
            d(),
            h(6),
            p(7, "div", 3),
            h(8, "Output"),
            d(),
            h(
              9,
              ' There is a maximum output Value that depends on "how full" the outputcontainer in your reactor is. '
            )),
          2 & e)
        ) {
          const t = I(3);
          b(6),
            ne(
              " Input is limited by ",
              100 * t.reactor.inputFlowPerc,
              "% of storage or your maximum Input Value. "
            );
        }
      }
      function $oe(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 22),
            h(1),
            pe(2, "bignumber"),
            pe(3, "bignumber"),
            k(4, "i"),
            d()),
          2 & e)
        ) {
          const t = n.$implicit,
            i = n.index,
            r = I(3);
          b(1),
            mn(
              " ",
              Me(2, 4, r.reactor.lastInput[i]),
              " / ",
              Me(3, 6, r.reactor.inputFlow[i]),
              " "
            ),
            b(3),
            Te("fas fa-tint " + t.replace(" ", "-"));
        }
      }
      function qoe(e, n) {
        if (
          (1 & e && (Ct(0), h(1), pe(2, "bignumber"), k(3, "i"), xt()), 2 & e)
        ) {
          const t = n.$implicit,
            i = n.index,
            r = I(3);
          b(1),
            mn(
              " ",
              0 !== i ? " + " : "",
              " ",
              Me(
                2,
                4,
                r.reactor.power * (null == r.input[i] ? null : r.input[i].value)
              ),
              " "
            ),
            b(2),
            Te("fas fa-tint " + t.replace(" ", "-"));
        }
      }
      function Goe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "alchy-reactor-upgrade", 26),
            F("buy", function () {
              const o = oe(t).$implicit,
                s = I(3);
              return se(s.buyUpgrade(s.reactor, o));
            }),
            d();
        }
        if (2 & e) {
          const t = n.$implicit;
          x("reactorType", I(3).reactor.curType)("upgrade", t);
        }
      }
      function Yoe(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 2)(1, "div", 7)(2, "div", 8),
            F("click", function () {
              return oe(t), se(I(2).deselect());
            }),
            k(3, "i", 9),
            d(),
            p(4, "div", 10),
            F("click", function () {
              return oe(t), se(I(2).minimize());
            }),
            k(5, "i", 11),
            d(),
            p(6, "div", 12),
            F("click", function () {
              return oe(t), se(I(2).resetType());
            }),
            k(7, "i", 13),
            d(),
            p(8, "div", 3),
            h(9),
            d()(),
            p(10, "div", 7),
            E(11, Uoe, 2, 2, "div", 4),
            d(),
            p(12, "div", 14)(13, "div", 15),
            h(14, "throttle reactor 0 - 100%"),
            d(),
            k(15, "input", 16),
            d(),
            p(16, "div", 17)(17, "div", 3),
            h(18, " Input "),
            p(19, "div", 18),
            k(20, "i", 19),
            d(),
            E(21, Woe, 10, 1, "ng-template", null, 20, hl),
            d(),
            E(23, $oe, 5, 8, "div", 21),
            p(24, "div", 3),
            h(25, "Produce"),
            d(),
            p(26, "div", 22),
            E(27, qoe, 4, 6, "ng-container", 23),
            h(28),
            pe(29, "bignumber"),
            k(30, "i"),
            d(),
            p(31, "div", 3),
            h(32, "Output"),
            d(),
            p(33, "div", 22),
            h(34),
            pe(35, "bignumber"),
            k(36, "i"),
            h(37),
            pe(38, "bignumber"),
            d(),
            p(39, "div", 24),
            E(40, Goe, 1, 2, "alchy-reactor-upgrade", 25),
            d()()();
        }
        if (2 & e) {
          const t = ll(22),
            i = I(2);
          b(9),
            ne("", i.reactor.curType, " reactor"),
            b(2),
            x("ngForOf", i.reactor.stopInput),
            b(8),
            x("tooltipTemplate", t),
            b(4),
            x("ngForOf", i.reactor.getFluidFlow().inputNames),
            b(4),
            x("ngForOf", i.reactor.getFluidFlow().inputNames),
            b(1),
            ne(
              " -> ",
              Me(
                29,
                13,
                i.reactor.power * (null == i.output ? null : i.output.value)
              ),
              " "
            ),
            b(2),
            Te(
              "fas fa-tint " +
                i.reactor.getFluidFlow().output.name.replace(" ", "-")
            ),
            b(4),
            ne(" ", Me(35, 15, i.reactor.lastOutput), "/s "),
            b(2),
            Te(
              "fas fa-tint " +
                i.reactor.getFluidFlow().output.name.replace(" ", "-")
            ),
            b(1),
            ne(" (max ", Me(38, 17, 2 * i.reactor.outputFlow), "/s) "),
            b(3),
            x("ngForOf", i.reactor.upgrades);
        }
      }
      function Koe(e, n) {
        if (
          (1 & e &&
            (p(0, "div"),
            E(1, joe, 4, 1, "div", 1),
            E(2, Yoe, 41, 19, "div", 1),
            d()),
          2 & e)
        ) {
          const t = I();
          b(1),
            x("ngIf", !t.reactor.curType),
            b(1),
            x("ngIf", t.reactor.curType);
        }
      }
      let Zoe = (() => {
          class e {
            constructor(t, i, r) {
              (this._reactorsService = t),
                (this._upgradeReactorService = i),
                (this._upgradeService = r),
                (this._alive = !0);
            }
            ngOnInit() {
              this._reactorsService.obsSelectedReactor
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  if (
                    ((this.reactor = t.reactor),
                    (this._reactorId = t.i),
                    this.reactor && this.reactor.curType)
                  ) {
                    const i = gr.find((r) => r.name === this.reactor.curType);
                    (this.input = i.input), (this.output = i.output);
                  }
                }),
                this._upgradeService.boughtUpgrades
                  .pipe(X(() => this._alive))
                  .subscribe((t) => this.findAvailableReactorTypes(t));
            }
            changeReactorType(t, i) {
              t.stopPropagation(),
                this._reactorsService.changeReactorType(
                  this._reactorId,
                  i.name
                );
            }
            deselect() {
              this._reactorsService.select(null);
            }
            minimize() {
              this._reactorsService.toggleMinimize(this._reactorId);
            }
            resetType() {
              this._reactorsService.resetType(this._reactorId);
            }
            buyUpgrade(t, i) {
              this._upgradeReactorService.buyUpgrade(t, i);
            }
            findAvailableReactorTypes(t) {
              (this.availableReactorTypes = []),
                this.availableReactorTypes.push(gr[0]);
              for (const i of t)
                if ("unlockReactor" === i.type) {
                  const r = gr.find((o) => o.name === i.subType);
                  r && this.availableReactorTypes.push(r);
                }
            }
            ngOnDestroy() {
              this._alive = !1;
            }
            toggleStopInput(t) {
              this.reactor.toggleInput(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(q0), M($0), M(mr));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-reactor-details"]],
              decls: 1,
              vars: 1,
              consts: [
                [4, "ngIf"],
                ["class", "selection", 4, "ngIf"],
                [1, "selection"],
                [1, "title"],
                ["class", "btn", 3, "click", 4, "ngFor", "ngForOf"],
                [1, "btn", 3, "click"],
                [1, "name"],
                [1, "btn-row"],
                [1, "close-btn", 3, "click"],
                [1, "fas", "fa-times"],
                [1, "close-btn", "minimize", 3, "click"],
                [1, "fas", "fa-compress"],
                [1, "close-btn", "trash", 3, "click"],
                [1, "fas", "fa-trash"],
                [1, "slider"],
                [1, "text"],
                [
                  "type",
                  "range",
                  "defaultValue",
                  "1",
                  "min",
                  "0",
                  "max",
                  "1",
                  "step",
                  "0.01",
                ],
                [1, "details"],
                [1, "info-tooltip", 3, "tooltip", "tooltipTemplate"],
                [1, "fas", "fa-info-circle"],
                ["tooltipInfo", ""],
                ["class", "detail", 4, "ngFor", "ngForOf"],
                [1, "detail"],
                [4, "ngFor", "ngForOf"],
                [1, "reactor-upgrades"],
                [3, "reactorType", "upgrade", "buy", 4, "ngFor", "ngForOf"],
                [3, "reactorType", "upgrade", "buy"],
              ],
              template: function (i, r) {
                1 & i && E(0, Koe, 3, 2, "div", 0),
                  2 & i && x("ngIf", r.reactor);
              },
              dependencies: [Qe, be, kd, zoe, Qt],
              styles: [
                ".selection[_ngcontent-%COMP%]{margin:10px}.selection[_ngcontent-%COMP%]   .slider[_ngcontent-%COMP%]{display:none}.selection[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-size:20px;text-align:left}.selection[_ngcontent-%COMP%]   .btn-row[_ngcontent-%COMP%]{margin:10px 0;display:flex;justify-content:flex-start;align-items:center}.selection[_ngcontent-%COMP%]   .btn-row[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{text-align:center;width:50%}.selection[_ngcontent-%COMP%]   .details[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{margin:15px 0 4px;position:relative}.selection[_ngcontent-%COMP%]   .details[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   .info-tooltip[_ngcontent-%COMP%]{position:absolute;top:0;right:0}.selection[_ngcontent-%COMP%]   .details[_ngcontent-%COMP%]   .small[_ngcontent-%COMP%]{display:block;margin:0;font-size:12px}.selection[_ngcontent-%COMP%]   .close-btn[_ngcontent-%COMP%]{background-color:#222;width:40px;height:40px;line-height:40px;text-align:center;border:1px solid #000;cursor:pointer;transition:.3s}.selection[_ngcontent-%COMP%]   .close-btn[_ngcontent-%COMP%]:hover{background-color:#444}.selection[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{margin:10px 0;padding:10px;border:1px solid #000;cursor:pointer;transition:.3s}.selection[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{font-size:20px;font-weight:700}.selection[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover{background-color:#444}.selection[_ngcontent-%COMP%]   .reactor-upgrades[_ngcontent-%COMP%]{margin:20px 0;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}",
              ],
            }));
          }
          return e;
        })(),
        Qoe = (() => {
          class e {
            constructor(t, i, r, o, s) {
              (this._data = t),
                (this._settings = i),
                (this._combatUpgradeService = r),
                (this._combatPotionService = o),
                (this._offline = s),
                (this._autoHealUnlocked = !1),
                (this._autoHeal = !1),
                (this.c = this._data.game.combat),
                this._combatUpgradeService.boughtUpgrades.subscribe((a) => {
                  a.find((l) => "auto" === l.type && "healing" === l.subType) &&
                    ((this._autoHealUnlocked = !0), this.startChecking());
                }),
                this._settings.obsAutoHeal.subscribe(
                  (a) => (this._autoHeal = a)
                );
            }
            startChecking() {
              this._timer || this.checkEveryThing();
            }
            checkEveryThing() {
              let t = !1;
              if (
                (clearTimeout(this._timer),
                (this._timer = null),
                this._autoHeal &&
                  this._autoHealUnlocked &&
                  this._data.settings.autoHeal)
              ) {
                const r = ut.healFlaskAmount(
                  this._combatUpgradeService.getAmount(
                    "flaskRewardBonus",
                    "blood"
                  )
                );
                ut.maxHP(this.c.level) - this.c.health >= r &&
                  (t = this._combatPotionService.heal());
              }
              const i = (t ? 1e3 : 5e3) * this._offline.getBonusMulti();
              this._timer = setTimeout(() => this.checkEveryThing(), i);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O($l), O(ql), O(Q0), O(Yi));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })();
      class Mg {}
      class Dg {}
      class Yr {
        constructor(n) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            n
              ? "string" == typeof n
                ? (this.lazyInit = () => {
                    (this.headers = new Map()),
                      n.split("\n").forEach((t) => {
                        const i = t.indexOf(":");
                        if (i > 0) {
                          const r = t.slice(0, i),
                            o = r.toLowerCase(),
                            s = t.slice(i + 1).trim();
                          this.maybeSetNormalizedName(r, o),
                            this.headers.has(o)
                              ? this.headers.get(o).push(s)
                              : this.headers.set(o, [s]);
                        }
                      });
                  })
                : typeof Headers < "u" && n instanceof Headers
                ? ((this.headers = new Map()),
                  n.forEach((t, i) => {
                    this.setHeaderEntries(i, t);
                  }))
                : (this.lazyInit = () => {
                    (this.headers = new Map()),
                      Object.entries(n).forEach(([t, i]) => {
                        this.setHeaderEntries(t, i);
                      });
                  })
              : (this.headers = new Map());
        }
        has(n) {
          return this.init(), this.headers.has(n.toLowerCase());
        }
        get(n) {
          this.init();
          const t = this.headers.get(n.toLowerCase());
          return t && t.length > 0 ? t[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(n) {
          return this.init(), this.headers.get(n.toLowerCase()) || null;
        }
        append(n, t) {
          return this.clone({ name: n, value: t, op: "a" });
        }
        set(n, t) {
          return this.clone({ name: n, value: t, op: "s" });
        }
        delete(n, t) {
          return this.clone({ name: n, value: t, op: "d" });
        }
        maybeSetNormalizedName(n, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, n);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof Yr
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((n) => this.applyUpdate(n)),
              (this.lazyUpdate = null)));
        }
        copyFrom(n) {
          n.init(),
            Array.from(n.headers.keys()).forEach((t) => {
              this.headers.set(t, n.headers.get(t)),
                this.normalizedNames.set(t, n.normalizedNames.get(t));
            });
        }
        clone(n) {
          const t = new Yr();
          return (
            (t.lazyInit =
              this.lazyInit && this.lazyInit instanceof Yr
                ? this.lazyInit
                : this),
            (t.lazyUpdate = (this.lazyUpdate || []).concat([n])),
            t
          );
        }
        applyUpdate(n) {
          const t = n.name.toLowerCase();
          switch (n.op) {
            case "a":
            case "s":
              let i = n.value;
              if (("string" == typeof i && (i = [i]), 0 === i.length)) return;
              this.maybeSetNormalizedName(n.name, t);
              const r = ("a" === n.op ? this.headers.get(t) : void 0) || [];
              r.push(...i), this.headers.set(t, r);
              break;
            case "d":
              const o = n.value;
              if (o) {
                let s = this.headers.get(t);
                if (!s) return;
                (s = s.filter((a) => -1 === o.indexOf(a))),
                  0 === s.length
                    ? (this.headers.delete(t), this.normalizedNames.delete(t))
                    : this.headers.set(t, s);
              } else this.headers.delete(t), this.normalizedNames.delete(t);
          }
        }
        setHeaderEntries(n, t) {
          const i = (Array.isArray(t) ? t : [t]).map((o) => o.toString()),
            r = n.toLowerCase();
          this.headers.set(r, i), this.maybeSetNormalizedName(n, r);
        }
        forEach(n) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((t) =>
              n(this.normalizedNames.get(t), this.headers.get(t))
            );
        }
      }
      class ese {
        encodeKey(n) {
          return QP(n);
        }
        encodeValue(n) {
          return QP(n);
        }
        decodeKey(n) {
          return decodeURIComponent(n);
        }
        decodeValue(n) {
          return decodeURIComponent(n);
        }
      }
      const nse = /%(\d[a-f0-9])/gi,
        ise = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function QP(e) {
        return encodeURIComponent(e).replace(nse, (n, t) => ise[t] ?? n);
      }
      function Sg(e) {
        return `${e}`;
      }
      class ms {
        constructor(n = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = n.encoder || new ese()),
            n.fromString)
          ) {
            if (n.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function tse(e, n) {
              const t = new Map();
              return (
                e.length > 0 &&
                  e
                    .replace(/^\?/, "")
                    .split("&")
                    .forEach((r) => {
                      const o = r.indexOf("="),
                        [s, a] =
                          -1 == o
                            ? [n.decodeKey(r), ""]
                            : [
                                n.decodeKey(r.slice(0, o)),
                                n.decodeValue(r.slice(o + 1)),
                              ],
                        l = t.get(s) || [];
                      l.push(a), t.set(s, l);
                    }),
                t
              );
            })(n.fromString, this.encoder);
          } else
            n.fromObject
              ? ((this.map = new Map()),
                Object.keys(n.fromObject).forEach((t) => {
                  const i = n.fromObject[t],
                    r = Array.isArray(i) ? i.map(Sg) : [Sg(i)];
                  this.map.set(t, r);
                }))
              : (this.map = null);
        }
        has(n) {
          return this.init(), this.map.has(n);
        }
        get(n) {
          this.init();
          const t = this.map.get(n);
          return t ? t[0] : null;
        }
        getAll(n) {
          return this.init(), this.map.get(n) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(n, t) {
          return this.clone({ param: n, value: t, op: "a" });
        }
        appendAll(n) {
          const t = [];
          return (
            Object.keys(n).forEach((i) => {
              const r = n[i];
              Array.isArray(r)
                ? r.forEach((o) => {
                    t.push({ param: i, value: o, op: "a" });
                  })
                : t.push({ param: i, value: r, op: "a" });
            }),
            this.clone(t)
          );
        }
        set(n, t) {
          return this.clone({ param: n, value: t, op: "s" });
        }
        delete(n, t) {
          return this.clone({ param: n, value: t, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((n) => {
                const t = this.encoder.encodeKey(n);
                return this.map
                  .get(n)
                  .map((i) => t + "=" + this.encoder.encodeValue(i))
                  .join("&");
              })
              .filter((n) => "" !== n)
              .join("&")
          );
        }
        clone(n) {
          const t = new ms({ encoder: this.encoder });
          return (
            (t.cloneFrom = this.cloneFrom || this),
            (t.updates = (this.updates || []).concat(n)),
            t
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((n) => this.map.set(n, this.cloneFrom.map.get(n))),
              this.updates.forEach((n) => {
                switch (n.op) {
                  case "a":
                  case "s":
                    const t =
                      ("a" === n.op ? this.map.get(n.param) : void 0) || [];
                    t.push(Sg(n.value)), this.map.set(n.param, t);
                    break;
                  case "d":
                    if (void 0 === n.value) {
                      this.map.delete(n.param);
                      break;
                    }
                    {
                      let i = this.map.get(n.param) || [];
                      const r = i.indexOf(Sg(n.value));
                      -1 !== r && i.splice(r, 1),
                        i.length > 0
                          ? this.map.set(n.param, i)
                          : this.map.delete(n.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class rse {
        constructor() {
          this.map = new Map();
        }
        set(n, t) {
          return this.map.set(n, t), this;
        }
        get(n) {
          return (
            this.map.has(n) || this.map.set(n, n.defaultValue()),
            this.map.get(n)
          );
        }
        delete(n) {
          return this.map.delete(n), this;
        }
        has(n) {
          return this.map.has(n);
        }
        keys() {
          return this.map.keys();
        }
      }
      function XP(e) {
        return typeof ArrayBuffer < "u" && e instanceof ArrayBuffer;
      }
      function JP(e) {
        return typeof Blob < "u" && e instanceof Blob;
      }
      function eF(e) {
        return typeof FormData < "u" && e instanceof FormData;
      }
      class Ed {
        constructor(n, t, i, r) {
          let o;
          if (
            ((this.url = t),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = n.toUpperCase()),
            (function ose(e) {
              switch (e) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || r
              ? ((this.body = void 0 !== i ? i : null), (o = r))
              : (o = i),
            o &&
              ((this.reportProgress = !!o.reportProgress),
              (this.withCredentials = !!o.withCredentials),
              o.responseType && (this.responseType = o.responseType),
              o.headers && (this.headers = o.headers),
              o.context && (this.context = o.context),
              o.params && (this.params = o.params)),
            this.headers || (this.headers = new Yr()),
            this.context || (this.context = new rse()),
            this.params)
          ) {
            const s = this.params.toString();
            if (0 === s.length) this.urlWithParams = t;
            else {
              const a = t.indexOf("?");
              this.urlWithParams =
                t + (-1 === a ? "?" : a < t.length - 1 ? "&" : "") + s;
            }
          } else (this.params = new ms()), (this.urlWithParams = t);
        }
        serializeBody() {
          return null === this.body
            ? null
            : XP(this.body) ||
              JP(this.body) ||
              eF(this.body) ||
              (function sse(e) {
                return (
                  typeof URLSearchParams < "u" && e instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof ms
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || eF(this.body)
            ? null
            : JP(this.body)
            ? this.body.type || null
            : XP(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof ms
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(n = {}) {
          const t = n.method || this.method,
            i = n.url || this.url,
            r = n.responseType || this.responseType,
            o = void 0 !== n.body ? n.body : this.body,
            s =
              void 0 !== n.withCredentials
                ? n.withCredentials
                : this.withCredentials,
            a =
              void 0 !== n.reportProgress
                ? n.reportProgress
                : this.reportProgress;
          let l = n.headers || this.headers,
            c = n.params || this.params;
          const u = n.context ?? this.context;
          return (
            void 0 !== n.setHeaders &&
              (l = Object.keys(n.setHeaders).reduce(
                (f, g) => f.set(g, n.setHeaders[g]),
                l
              )),
            n.setParams &&
              (c = Object.keys(n.setParams).reduce(
                (f, g) => f.set(g, n.setParams[g]),
                c
              )),
            new Ed(t, i, o, {
              params: c,
              headers: l,
              context: u,
              reportProgress: a,
              responseType: r,
              withCredentials: s,
            })
          );
        }
      }
      var Kl = (function (e) {
        return (
          (e[(e.Sent = 0)] = "Sent"),
          (e[(e.UploadProgress = 1)] = "UploadProgress"),
          (e[(e.ResponseHeader = 2)] = "ResponseHeader"),
          (e[(e.DownloadProgress = 3)] = "DownloadProgress"),
          (e[(e.Response = 4)] = "Response"),
          (e[(e.User = 5)] = "User"),
          e
        );
      })(Kl || {});
      class X0 {
        constructor(n, t = 200, i = "OK") {
          (this.headers = n.headers || new Yr()),
            (this.status = void 0 !== n.status ? n.status : t),
            (this.statusText = n.statusText || i),
            (this.url = n.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class J0 extends X0 {
        constructor(n = {}) {
          super(n), (this.type = Kl.ResponseHeader);
        }
        clone(n = {}) {
          return new J0({
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class Zl extends X0 {
        constructor(n = {}) {
          super(n),
            (this.type = Kl.Response),
            (this.body = void 0 !== n.body ? n.body : null);
        }
        clone(n = {}) {
          return new Zl({
            body: void 0 !== n.body ? n.body : this.body,
            headers: n.headers || this.headers,
            status: void 0 !== n.status ? n.status : this.status,
            statusText: n.statusText || this.statusText,
            url: n.url || this.url || void 0,
          });
        }
      }
      class tF extends X0 {
        constructor(n) {
          super(n, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${n.url || "(unknown url)"}`
                : `Http failure response for ${n.url || "(unknown url)"}: ${
                    n.status
                  } ${n.statusText}`),
            (this.error = n.error || null);
        }
      }
      function ew(e, n) {
        return {
          body: n,
          headers: e.headers,
          context: e.context,
          observe: e.observe,
          params: e.params,
          reportProgress: e.reportProgress,
          responseType: e.responseType,
          withCredentials: e.withCredentials,
        };
      }
      let tw = (() => {
        class e {
          constructor(t) {
            this.handler = t;
          }
          request(t, i, r = {}) {
            let o;
            if (t instanceof Ed) o = t;
            else {
              let l, c;
              (l = r.headers instanceof Yr ? r.headers : new Yr(r.headers)),
                r.params &&
                  (c =
                    r.params instanceof ms
                      ? r.params
                      : new ms({ fromObject: r.params })),
                (o = new Ed(t, i, void 0 !== r.body ? r.body : null, {
                  headers: l,
                  context: r.context,
                  params: c,
                  reportProgress: r.reportProgress,
                  responseType: r.responseType || "json",
                  withCredentials: r.withCredentials,
                }));
            }
            const s = me(o).pipe(Pl((l) => this.handler.handle(l)));
            if (t instanceof Ed || "events" === r.observe) return s;
            const a = s.pipe(zr((l) => l instanceof Zl));
            switch (r.observe || "body") {
              case "body":
                switch (o.responseType) {
                  case "arraybuffer":
                    return a.pipe(
                      Ae((l) => {
                        if (null !== l.body && !(l.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return l.body;
                      })
                    );
                  case "blob":
                    return a.pipe(
                      Ae((l) => {
                        if (null !== l.body && !(l.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return l.body;
                      })
                    );
                  case "text":
                    return a.pipe(
                      Ae((l) => {
                        if (null !== l.body && "string" != typeof l.body)
                          throw new Error("Response is not a string.");
                        return l.body;
                      })
                    );
                  default:
                    return a.pipe(Ae((l) => l.body));
                }
              case "response":
                return a;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${r.observe}}`
                );
            }
          }
          delete(t, i = {}) {
            return this.request("DELETE", t, i);
          }
          get(t, i = {}) {
            return this.request("GET", t, i);
          }
          head(t, i = {}) {
            return this.request("HEAD", t, i);
          }
          jsonp(t, i) {
            return this.request("JSONP", t, {
              params: new ms().append(i, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(t, i = {}) {
            return this.request("OPTIONS", t, i);
          }
          patch(t, i, r = {}) {
            return this.request("PATCH", t, ew(r, i));
          }
          post(t, i, r = {}) {
            return this.request("POST", t, ew(r, i));
          }
          put(t, i, r = {}) {
            return this.request("PUT", t, ew(r, i));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Mg));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      function rF(e, n) {
        return n(e);
      }
      function lse(e, n) {
        return (t, i) => n.intercept(t, { handle: (r) => e(r, i) });
      }
      const use = new Q(""),
        Id = new Q(""),
        oF = new Q("");
      function dse() {
        let e = null;
        return (n, t) => {
          null === e &&
            (e = (K(use, { optional: !0 }) ?? []).reduceRight(lse, rF));
          const i = K(ff),
            r = i.add();
          return e(n, t).pipe(nd(() => i.remove(r)));
        };
      }
      let sF = (() => {
        class e extends Mg {
          constructor(t, i) {
            super(),
              (this.backend = t),
              (this.injector = i),
              (this.chain = null),
              (this.pendingTasks = K(ff));
          }
          handle(t) {
            if (null === this.chain) {
              const r = Array.from(
                new Set([
                  ...this.injector.get(Id),
                  ...this.injector.get(oF, []),
                ])
              );
              this.chain = r.reduceRight(
                (o, s) =>
                  (function cse(e, n, t) {
                    return (i, r) => t.runInContext(() => n(i, (o) => e(o, r)));
                  })(o, s, this.injector),
                rF
              );
            }
            const i = this.pendingTasks.add();
            return this.chain(t, (r) => this.backend.handle(r)).pipe(
              nd(() => this.pendingTasks.remove(i))
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Dg), O(Ci));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      const gse = /^\)\]\}',?\n/;
      let lF = (() => {
        class e {
          constructor(t) {
            this.xhrFactory = t;
          }
          handle(t) {
            if ("JSONP" === t.method) throw new P(-2800, !1);
            const i = this.xhrFactory;
            return (i.ɵloadImpl ? dn(i.ɵloadImpl()) : me(null)).pipe(
              Oi(
                () =>
                  new wt((o) => {
                    const s = i.build();
                    if (
                      (s.open(t.method, t.urlWithParams),
                      t.withCredentials && (s.withCredentials = !0),
                      t.headers.forEach((y, v) =>
                        s.setRequestHeader(y, v.join(","))
                      ),
                      t.headers.has("Accept") ||
                        s.setRequestHeader(
                          "Accept",
                          "application/json, text/plain, */*"
                        ),
                      !t.headers.has("Content-Type"))
                    ) {
                      const y = t.detectContentTypeHeader();
                      null !== y && s.setRequestHeader("Content-Type", y);
                    }
                    if (t.responseType) {
                      const y = t.responseType.toLowerCase();
                      s.responseType = "json" !== y ? y : "text";
                    }
                    const a = t.serializeBody();
                    let l = null;
                    const c = () => {
                        if (null !== l) return l;
                        const y = s.statusText || "OK",
                          v = new Yr(s.getAllResponseHeaders()),
                          w =
                            (function mse(e) {
                              return "responseURL" in e && e.responseURL
                                ? e.responseURL
                                : /^X-Request-URL:/m.test(
                                    e.getAllResponseHeaders()
                                  )
                                ? e.getResponseHeader("X-Request-URL")
                                : null;
                            })(s) || t.url;
                        return (
                          (l = new J0({
                            headers: v,
                            status: s.status,
                            statusText: y,
                            url: w,
                          })),
                          l
                        );
                      },
                      u = () => {
                        let {
                            headers: y,
                            status: v,
                            statusText: w,
                            url: C,
                          } = c(),
                          D = null;
                        204 !== v &&
                          (D =
                            typeof s.response > "u"
                              ? s.responseText
                              : s.response),
                          0 === v && (v = D ? 200 : 0);
                        let S = v >= 200 && v < 300;
                        if ("json" === t.responseType && "string" == typeof D) {
                          const T = D;
                          D = D.replace(gse, "");
                          try {
                            D = "" !== D ? JSON.parse(D) : null;
                          } catch (L) {
                            (D = T),
                              S && ((S = !1), (D = { error: L, text: D }));
                          }
                        }
                        S
                          ? (o.next(
                              new Zl({
                                body: D,
                                headers: y,
                                status: v,
                                statusText: w,
                                url: C || void 0,
                              })
                            ),
                            o.complete())
                          : o.error(
                              new tF({
                                error: D,
                                headers: y,
                                status: v,
                                statusText: w,
                                url: C || void 0,
                              })
                            );
                      },
                      f = (y) => {
                        const { url: v } = c(),
                          w = new tF({
                            error: y,
                            status: s.status || 0,
                            statusText: s.statusText || "Unknown Error",
                            url: v || void 0,
                          });
                        o.error(w);
                      };
                    let g = !1;
                    const m = (y) => {
                        g || (o.next(c()), (g = !0));
                        let v = { type: Kl.DownloadProgress, loaded: y.loaded };
                        y.lengthComputable && (v.total = y.total),
                          "text" === t.responseType &&
                            s.responseText &&
                            (v.partialText = s.responseText),
                          o.next(v);
                      },
                      _ = (y) => {
                        let v = { type: Kl.UploadProgress, loaded: y.loaded };
                        y.lengthComputable && (v.total = y.total), o.next(v);
                      };
                    return (
                      s.addEventListener("load", u),
                      s.addEventListener("error", f),
                      s.addEventListener("timeout", f),
                      s.addEventListener("abort", f),
                      t.reportProgress &&
                        (s.addEventListener("progress", m),
                        null !== a &&
                          s.upload &&
                          s.upload.addEventListener("progress", _)),
                      s.send(a),
                      o.next({ type: Kl.Sent }),
                      () => {
                        s.removeEventListener("error", f),
                          s.removeEventListener("abort", f),
                          s.removeEventListener("load", u),
                          s.removeEventListener("timeout", f),
                          t.reportProgress &&
                            (s.removeEventListener("progress", m),
                            null !== a &&
                              s.upload &&
                              s.upload.removeEventListener("progress", _)),
                          s.readyState !== s.DONE && s.abort();
                      }
                    );
                  })
              )
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(jk));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      const nw = new Q("XSRF_ENABLED"),
        cF = new Q("XSRF_COOKIE_NAME", {
          providedIn: "root",
          factory: () => "XSRF-TOKEN",
        }),
        uF = new Q("XSRF_HEADER_NAME", {
          providedIn: "root",
          factory: () => "X-XSRF-TOKEN",
        });
      class dF {}
      let vse = (() => {
        class e {
          constructor(t, i, r) {
            (this.doc = t),
              (this.platform = i),
              (this.cookieName = r),
              (this.lastCookieString = ""),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ("server" === this.platform) return null;
            const t = this.doc.cookie || "";
            return (
              t !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = Ik(t, this.cookieName)),
                (this.lastCookieString = t)),
              this.lastToken
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(Ht), O(As), O(cF));
          });
          static #t = (this.ɵprov = V({ token: e, factory: e.ɵfac }));
        }
        return e;
      })();
      function bse(e, n) {
        const t = e.url.toLowerCase();
        if (
          !K(nw) ||
          "GET" === e.method ||
          "HEAD" === e.method ||
          t.startsWith("http://") ||
          t.startsWith("https://")
        )
          return n(e);
        const i = K(dF).getToken(),
          r = K(uF);
        return (
          null != i &&
            !e.headers.has(r) &&
            (e = e.clone({ headers: e.headers.set(r, i) })),
          n(e)
        );
      }
      var _s = (function (e) {
        return (
          (e[(e.Interceptors = 0)] = "Interceptors"),
          (e[(e.LegacyInterceptors = 1)] = "LegacyInterceptors"),
          (e[(e.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
          (e[(e.NoXsrfProtection = 3)] = "NoXsrfProtection"),
          (e[(e.JsonpSupport = 4)] = "JsonpSupport"),
          (e[(e.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
          (e[(e.Fetch = 6)] = "Fetch"),
          e
        );
      })(_s || {});
      function wse(...e) {
        const n = [
          tw,
          lF,
          sF,
          { provide: Mg, useExisting: sF },
          { provide: Dg, useExisting: lF },
          { provide: Id, useValue: bse, multi: !0 },
          { provide: nw, useValue: !0 },
          { provide: dF, useClass: vse },
        ];
        for (const t of e) n.push(...t.ɵproviders);
        return (function $m(e) {
          return { ɵproviders: e };
        })(n);
      }
      const hF = new Q("LEGACY_INTERCEPTOR_FN");
      function Cse() {
        return (function ua(e, n) {
          return { ɵkind: e, ɵproviders: n };
        })(_s.LegacyInterceptors, [
          { provide: hF, useFactory: dse },
          { provide: Id, useExisting: hF, multi: !0 },
        ]);
      }
      let xse = (() => {
        class e {
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵmod = Vt({ type: e }));
          static #n = (this.ɵinj = Rt({ providers: [wse(Cse())] }));
        }
        return e;
      })();
      var Ese = Zr(518);
      const da = ["*"],
        iw = ["container"],
        oae = ["selectOption"];
      function sae(e, n) {
        if ((1 & e && (p(0, "span"), h(1), d()), 2 & e)) {
          const t = I();
          b(1), bn(t.label);
        }
      }
      function aae(e, n) {
        1 & e && ir(0, 0, ["*ngIf", "!label"]);
      }
      const lae = ["select"];
      function cae(e, n) {
        if ((1 & e && (Ct(0), h(1), xt()), 2 & e)) {
          const t = I();
          b(1), ne(" ", t.placeholder, " ");
        }
      }
      function uae(e, n) {
        1 & e && (p(0, "div", 7)(1, "div", 8), ir(2), d()());
      }
      const dae = [[["ff-select-option"]]],
        hae = ["ff-select-option"];
      function xae(e, n) {
        if ((1 & e && k(0, "div", 2), 2 & e)) {
          const t = n.$implicit,
            i = I();
          rr("top", t.y * i.cellSize, "px")("left", t.x * i.cellSize, "px")(
            "height",
            i.cellSize,
            "px"
          )("width", i.cellSize, "px"),
            Le("active", t.on);
        }
      }
      function Nae(e, n) {
        1 & e &&
          (p(0, "div")(1, "h1"),
          h(2, "Data Privacy"),
          d(),
          p(3, "h2"),
          h(4, "Introduction"),
          d(),
          p(5, "p"),
          h(
            6,
            'With the following privacy policy, we would like to inform you about the types of your personal data (hereinafter also referred to as "data" for short), that we process for what purposes and to what extent in the context of providing our application.'
          ),
          d(),
          p(7, "p"),
          h(8, "The terms used are not gender-specific."),
          d(),
          p(9, "p"),
          h(10, "Date: February 10, 2023"),
          d(),
          p(11, "h2"),
          h(12, "Table of Contents"),
          d(),
          p(13, "ul", 4)(14, "li")(15, "a", 5),
          h(16, "Introduction"),
          d()(),
          p(17, "li")(18, "a", 6),
          h(19, "Person in charge"),
          d()(),
          p(20, "li")(21, "a", 7),
          h(22, "Overview of the processing activities"),
          d()(),
          p(23, "li")(24, "a", 8),
          h(25, "Relevant legal bases"),
          d()(),
          p(26, "li")(27, "a", 9),
          h(28, "Security measures"),
          d()(),
          p(29, "li")(30, "a", 10),
          h(31, "Transmission of personal data"),
          d()(),
          p(32, "li")(33, "a", 11),
          h(34, "Data processing in third countries"),
          d()(),
          p(35, "li")(36, "a", 12),
          h(37, "Deletion of data"),
          d()(),
          p(38, "li")(39, "a", 13),
          h(40, "Use of Cookies"),
          d()(),
          p(41, "li")(42, "a", 14),
          h(43, "Provision of the online offer and web hosting"),
          d()(),
          p(44, "li")(45, "a", 15),
          h(46, "Registration, login, and user account"),
          d()(),
          p(47, "li")(48, "a", 16),
          h(49, "Single sign-on login"),
          d()(),
          p(50, "li")(51, "a", 17),
          h(52, "Contact and inquiry management"),
          d()(),
          p(53, "li")(54, "a", 18),
          h(55, "Communication via messenger"),
          d()(),
          p(56, "li")(57, "a", 19),
          h(58, "Surveys and inquiries"),
          d()(),
          p(59, "li")(60, "a", 20),
          h(61, "Web analysis, monitoring, and optimization"),
          d()(),
          p(62, "li")(63, "a", 21),
          h(64, "Customer reviews and rating procedures"),
          d()(),
          p(65, "li")(66, "a", 22),
          h(67, "Presences on social networks (social media)"),
          d()(),
          p(68, "li")(69, "a", 23),
          h(70, "Changes and updates to the privacy policy"),
          d()(),
          p(71, "li")(72, "a", 24),
          h(73, "Rights of the data subjects"),
          d()()(),
          p(74, "h2", 25),
          h(75, "Person in charge"),
          d(),
          p(76, "p"),
          h(77, "Matthias Renner"),
          k(78, "br"),
          h(79, "Weizenstra\xdfe 23"),
          k(80, "br"),
          h(81, "86199 Augsburg"),
          d(),
          h(82, " email-address: "),
          p(83, "p")(84, "a", 26),
          h(85, "bagsofcode@gmail.com"),
          d()(),
          p(86, "h2", 27),
          h(87, "Overview of data processing"),
          d(),
          p(88, "p"),
          h(
            89,
            "The following overview summarizes the types of data processed, the purposes of their processing, and refers to the affected individuals."
          ),
          d(),
          p(90, "h3"),
          h(91, "Types of processed data"),
          d(),
          p(92, "ul")(93, "li"),
          h(94, "Inventory data."),
          d(),
          p(95, "li"),
          h(96, "Contact data."),
          d(),
          p(97, "li"),
          h(98, "Content data."),
          d(),
          p(99, "li"),
          h(100, "Contract data."),
          d(),
          p(101, "li"),
          h(102, "Usage data."),
          d(),
          p(103, "li"),
          h(104, "Meta, communication, and procedural data."),
          d(),
          p(105, "li"),
          h(106, "Event data (Facebook)."),
          d()(),
          p(107, "h3"),
          h(108, "Categories of affected individuals"),
          d(),
          p(109, "ul")(110, "li"),
          h(111, "Customer."),
          d(),
          p(112, "li"),
          h(113, "Communication partners."),
          d(),
          p(114, "li"),
          h(115, "User."),
          d(),
          p(116, "li"),
          h(117, "Participants."),
          d()(),
          p(118, "h3"),
          h(119, "Purposes of processing"),
          d(),
          p(120, "ul")(121, "li"),
          h(122, "Provision of contractual services and customer service."),
          d(),
          p(123, "li"),
          h(124, "Contact inquiries and communication.."),
          d(),
          p(125, "li"),
          h(126, "Security measures."),
          d(),
          p(127, "li"),
          h(128, "Direct marketing."),
          d(),
          p(129, "li"),
          h(130, "Reach measurement."),
          d(),
          p(131, "li"),
          h(132, "Tracking."),
          d(),
          p(133, "li"),
          h(134, "Management and response to inquiries."),
          d(),
          p(135, "li"),
          h(136, "Feedback."),
          d(),
          p(137, "li"),
          h(138, "Marketing."),
          d(),
          p(139, "li"),
          h(140, "Profiles with user-related information."),
          d(),
          p(141, "li"),
          h(142, "Registration procedures."),
          d(),
          p(143, "li"),
          h(144, "Provision of our online offering and user-friendliness."),
          d(),
          p(145, "li"),
          h(146, "Information technology infrastructure."),
          d()(),
          p(147, "h3", 28),
          h(148, "Applicable legal bases"),
          d(),
          p(149, "p"),
          h(
            150,
            "Below you will find an overview of the legal bases of the GDPR on which we process personal data. Please note that in addition to the provisions of the GDPR, national data protection regulations may apply in your or our country of residence or domicile. If more specific legal bases are applicable in individual cases, we will inform you of these in the privacy policy."
          ),
          d(),
          p(151, "ul")(152, "li")(153, "strong"),
          h(154, "Consent (Art. 6 Abs. 1 S. 1 lit. a) DSGVO)"),
          d(),
          h(
            155,
            " - The data subject has given consent to the processing of personal data relating to him or her for a specific purpose or purposes. "
          ),
          d(),
          p(156, "li")(157, "strong"),
          h(
            158,
            "Performance of a contract and pre-contractual inquiries (Art. 6 para. 1 sentence 1 lit. b) GDPR)"
          ),
          d(),
          h(
            159,
            " - Processing is necessary for the performance of a contract to which the data subject is party or in order to take steps at the request of the data subject prior to entering into a contract."
          ),
          d(),
          p(160, "li")(161, "strong"),
          h(
            162,
            "Legitimate interests (Art. 6 para. 1 sentence 1 lit. f) GDPR)"
          ),
          d(),
          h(
            163,
            " - Processing is necessary for the purposes of the legitimate interests pursued by the controller or by a third party, except where such interests are overridden by the interests or fundamental rights and freedoms of the data subject which require protection of personal data."
          ),
          d()(),
          p(164, "p"),
          h(
            165,
            "In addition to the data protection regulations of the GDPR, national data protection regulations apply in Germany. This includes in particular the Federal Data Protection Act (BDSG). The BDSG contains special regulations on the right to information, the right to deletion, the right to object, the processing of special categories of personal data, the processing for other purposes and the transmission as well as automated decision-making in individual cases, including profiling. It also regulates the processing of data for the purposes of employment relationships (\xa7 26 BDSG), in particular with regard to the establishment, performance or termination of employment relationships as well as the consent of employees. In addition, data protection laws of the individual federal states may apply."
          ),
          d(),
          p(166, "ul")(167, "li")(168, "strong"),
          h(169, "legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)"),
          d(),
          h(
            170,
            " - The processing is necessary for the purposes of the legitimate interests pursued by the controller or by a third party, except where such interests are overridden by the interests or fundamental rights and freedoms of the data subject which require protection of personal data."
          ),
          d()(),
          p(171, "p"),
          h(
            172,
            "In addition to the data protection regulations of the GDPR, national data protection regulations apply in Germany. This includes in particular the Federal Data Protection Act (BDSG) for the protection against misuse of personal data in data processing. The BDSG contains special regulations on the right to information, the right to deletion, the right to object, the processing of special categories of personal data, processing for other purposes and transmission as well as automated decision-making in individual cases, including profiling. It also regulates data processing for the purposes of employment (\xa7 26 BDSG), especially with regard to the establishment, implementation or termination of employment relationships and the consent of employees. In addition, state data protection laws of the individual federal states may also be applicable."
          ),
          d(),
          p(173, "h2", 29),
          h(174, "Security measures"),
          d(),
          p(175, "p"),
          h(
            176,
            "According to legal requirements and taking into account the state of the art, implementation costs, the nature, scope, circumstances and purposes of processing as well as the varying likelihood and severity of the risk to the rights and freedoms of natural persons, we implement appropriate technical and organizational measures to ensure a level of security appropriate to the risk."
          ),
          d(),
          p(177, "p"),
          h(
            178,
            "The measures include in particular the safeguarding of the confidentiality, integrity and availability of data through control of physical and electronic access to the data as well as access, input, transmission, ensuring availability and separation of the data concerned. Furthermore, we have established procedures that ensure the exercise of data subject rights, the deletion of data and responses to data breaches. We also take into account the protection of personal data in the development or selection of hardware, software and procedures in accordance with the principle of data protection, through technology design and through data protection-friendly default settings."
          ),
          d(),
          p(179, "p"),
          h(
            180,
            "TLS encryption (https): In order to protect the data you transmit to us via our online services, we use TLS encryption. You can recognize such encrypted connections by the prefix https:// in the address bar of your browser."
          ),
          d(),
          p(181, "h2", 30),
          h(182, "Transmission of personal data"),
          d(),
          p(183, "p"),
          h(
            184,
            "As part of our processing of personal data, it may happen that the data is transferred to other entities, companies, legally independent organizational units or persons, or disclosed to them. The recipients of this data may include, for example, IT service providers or providers of services and content that are integrated into a website. In such cases, we comply with legal requirements and conclude appropriate contracts or agreements with the recipients of your data, which serve to protect your data."
          ),
          d(),
          p(185, "h2", 31),
          h(186, "Data processing in third countries"),
          d(),
          p(187, "p"),
          h(
            188,
            "If we process data in a third country (i.e., outside the European Union (EU) or the European Economic Area (EEA)) or if processing takes place in the context of using third-party services or disclosing/transferring data to other individuals, entities or companies, this is only done in accordance with legal requirements."
          ),
          d(),
          p(189, "p"),
          h(
            190,
            "Subject to express consent or contractually or legally required transfer, we process or have the data processed only in third countries with a recognized level of data protection, contractual obligations through so-called standard data protection clauses of the European Commission, in the presence of certifications or binding internal data protection regulations (Art. 44 to 49 GDPR, information page of the European Commission: "
          ),
          p(191, "a", 32),
          h(
            192,
            "https://ec.europa.eu/info/law/law-topic/data-protection/international-dimension-data-protection_en"
          ),
          d(),
          h(193, ")."),
          d(),
          p(194, "p"),
          h(195, "\xa0"),
          d(),
          p(196, "h2", 33),
          h(197, "Deletion of data"),
          d(),
          p(198, "p"),
          h(
            199,
            "The data processed by us will be deleted in accordance with legal requirements as soon as their processing consents allowed are revoked or other permissions are revoked (e.g. if the purpose of processing such data has lapsed or they are no longer necessary for the purpose). If the data is not deleted because it is necessary for other legally permissible purposes, their processing will be limited to these purposes. This means that the data will be blocked and not processed for other purposes. This applies, for example, to data that must be retained for commercial or tax reasons or whose storage is necessary for the assertion, exercise, or defense of legal claims or for the protection of the rights of another natural or legal person."
          ),
          d(),
          p(200, "p"),
          h(
            201,
            "Our privacy policy may also contain further information regarding the storage and deletion of data that applies primarily to the respective processing activities."
          ),
          d(),
          p(202, "h2", 34),
          h(203, "Use of Cookies"),
          d(),
          p(204, "p"),
          h(
            205,
            "Cookies are small text files or other storage markers that store information on end devices and read information from end devices. For example, to store login status in a user account, shopping cart contents in an online shop, or the content accessed or functions used in an online offer. Cookies can also be used for various purposes, such as ensuring the functionality, security, and convenience of online offers, as well as creating analyses of visitor traffic."
          ),
          d(),
          p(206, "p")(207, "strong"),
          h(208, "Instructions for Consent: "),
          d(),
          h(
            209,
            "We use cookies in accordance with legal regulations. Therefore, we obtain prior consent from users, unless it is not legally required. In particular, consent is not necessary if the storage and retrieval of information, including cookies, is absolutely necessary to provide users with a telemedia service (i.e., our online offering) that they have expressly requested. The revocable consent is communicated clearly to users and contains information about the respective use of cookies."
          ),
          d(),
          p(210, "p")(211, "strong"),
          h(212, "Instructions on data protection legal bases: "),
          d(),
          h(
            213,
            "The data protection legal basis on which we process user's personal data using cookies depends on whether we ask users for consent. If users give their consent, the legal basis for processing their data is the declared consent. Otherwise, the data processed using cookies is based on our legitimate interests (e.g., in operating our online offering as a business and improving its usability) or, if this is done in the context of fulfilling our contractual obligations, if the use of cookies is necessary to fulfill our contractual obligations. We will explain the purposes for which we process cookies in this privacy policy or as part of our consent and processing processes"
          ),
          d(),
          p(214, "p")(215, "strong"),
          h(216, "Speicherdauer:\xa0"),
          d(),
          h(
            217,
            "Regarding the storage period, the following types of cookies are distinguished:"
          ),
          d(),
          p(218, "ul")(219, "li")(220, "strong"),
          h(
            221,
            "Temporary cookies (also known as session or session cookies):"
          ),
          d(),
          h(
            222,
            " Temporary cookies are deleted at the latest after a user leaves an online offer and closes their device (e.g. browser or mobile application)."
          ),
          d(),
          p(223, "li")(224, "strong"),
          h(225, "Permanent cookies:"),
          d(),
          h(
            226,
            " Permanent cookies remain stored even after the device has been closed. For example, login status can be stored or preferred content can be displayed directly when the user visits a website again. Likewise, the data collected from users with the help of cookies can be used for reach measurement. If we do not provide users with explicit information about the type and storage period of cookies (e.g. in the context of obtaining consent), users should assume that cookies are permanent and can be stored for up to two years."
          ),
          d()(),
          p(227, "p")(228, "strong"),
          h(229, "General information on revocation and objection (opt-out):"),
          d(),
          h(
            230,
            " Users can revoke their consent at any time and also object to the processing in accordance with the legal requirements in Art. 21 GDPR. Users can also declare their objection via the settings of their browser, for example by deactivating the use of cookies (which may also restrict the functionality of our online services). Objection to the use of cookies for online marketing purposes can also be declared via the websites "
          ),
          p(231, "a", 35),
          h(232, "https://optout.aboutads.info"),
          d(),
          h(233, " and "),
          p(234, "a", 36),
          h(235, "https://www.youronlinechoices.com/"),
          d(),
          h(236, "."),
          d(),
          p(237, "p")(238, "strong"),
          h(
            239,
            "Additional information on processing procedures, methods and services:"
          ),
          d()(),
          p(240, "ul", 37)(241, "li")(242, "strong"),
          h(243, "Processing of cookie data based on consent:"),
          d(),
          h(
            244,
            " We use a cookie consent management procedure in which users' consents to the use of cookies or to the processing and providers mentioned in the context of the cookie consent management procedure can be obtained, managed and revoked by users. The consent declaration is stored to avoid having to repeat the request for consent and to be able to prove consent in accordance with legal obligations. The storage can be done server-side and/or in a cookie (so-called opt-in cookie or comparable technologies) to be able to assign the consent to a user or his/her device. Subject to individual information on cookie management service providers, the following information applies: the duration of the consent storage can be up to two years. For this purpose, a pseudonymous user identifier is created and the time of consent, information on the scope of consent (e.g. which categories of cookies and/or service providers), and the browser, system and device used are stored."
          ),
          d()(),
          p(245, "h2", 38),
          h(246, "Provision of the online offer and web hosting"),
          d(),
          p(247, "p"),
          h(
            248,
            "We process user data to provide them with our online services. For this purpose, we process the user's IP address, which is necessary to transmit the contents and functions of our online services to the user's browser or device."
          ),
          d(),
          p(249, "ul", 37)(250, "li")(251, "strong"),
          h(252, "Processed data types:"),
          d(),
          h(
            253,
            " Processed data types include usage data (e.g. visited web pages, interest in content, access times), meta, communication, and procedure data (e.g. IP addresses, time stamps, identification numbers, consent status).\n"
          ),
          d(),
          p(254, "li")(255, "strong"),
          h(256, "Affected individuals:"),
          d(),
          h(257, " Users (e.g. website visitors, users of online services)."),
          d(),
          p(258, "li")(259, "strong"),
          h(260, "Purposes of processing:"),
          d(),
          h(
            261,
            " Provision of our online services and user-friendliness; information technology infrastructure (operation and provision of information systems and technical devices (computers, servers, etc.)); security measures."
          ),
          d(),
          p(262, "li")(263, "strong"),
          h(264, "Legal bases:"),
          d(),
          h(265, " legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(266, "p")(267, "strong"),
          h(
            268,
            "Further information on processing procedures, methods, and services.:"
          ),
          d()(),
          p(269, "ul", 37)(270, "li")(271, "strong"),
          h(272, "Collection of access data and log files: "),
          d(),
          h(
            273,
            ' The access to our online services is logged in the form of so-called "server log files". The server log files may include the address and name of the accessed web pages and files, date and time of access, transmitted data volumes, message about successful access, browser type and version, operating system of the user, referrer URL (the previously visited page) and in most cases IP addresses and the requesting provider. DThe server log files can be used for security purposes, such as avoiding server overload (especially in the case of abusive attacks, such as DDoS attacks), and ensuring server utilization and stability;\n'
          ),
          p(274, "strong"),
          h(275, "Legal base:"),
          d(),
          h(276, " legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO);\n"),
          p(277, "strong"),
          h(278, "Deletion of data:"),
          d(),
          h(
            279,
            " Logfile-Informationen are stored for a maximum of 30 days and then deleted or anonymized. Data that needs to be further stored for evidentiary purposes is excluded from deletion until the final clarification of the respective incident."
          ),
          d(),
          p(280, "li")(281, "strong"),
          h(282, "Hetzner: "),
          d(),
          h(
            283,
            "Services in the field of providing information technology infrastructure and related services (such as storage space and/or computing capacity). "
          ),
          p(284, "strong"),
          h(285, "Service provider:"),
          d(),
          h(
            286,
            " Hetzner Online GmbH, Industriestr. 25, 91710 Gunzenhausen, Deutschland; "
          ),
          p(287, "strong"),
          h(288, "Legal bases:"),
          d(),
          h(289, " legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "),
          p(290, "strong"),
          h(291, "Website:"),
          d(),
          p(292, "a", 39),
          h(293, "https://www.hetzner.com"),
          d(),
          h(294, "; "),
          p(295, "strong"),
          h(296, "Data Privacy:"),
          d(),
          p(297, "a", 40),
          h(298, "https://www.hetzner.com/de/rechtliches/datenschutz"),
          d(),
          h(299, "; "),
          p(300, "strong"),
          h(301, "Data Processing Agreement:"),
          d(),
          p(302, "a", 41),
          h(
            303,
            "https://docs.hetzner.com/de/general/general-terms-and-conditions/data-privacy-faq/"
          ),
          d(),
          h(304, "."),
          d()(),
          p(305, "h2", 42),
          h(306, "Registration, login, and user account"),
          d(),
          p(307, "p"),
          h(
            308,
            "Users can create a user account. As part of the registration process, users are provided with the necessary mandatory information and processed for the purpose of providing the user account based on contractual performance. The processed data includes, in particular, the login information (username, password, and email address)."
          ),
          d(),
          p(309, "p"),
          h(
            310,
            "As part of using our registration and login functions as well as using the user account, we store the IP address and the time of the respective user action. The storage is based on our legitimate interests as well as those of the users in protection against abuse and other unauthorized use. This data will not be disclosed to third parties unless it is necessary to pursue our claims or there is a legal obligation to do so."
          ),
          d(),
          p(311, "p"),
          h(
            312,
            "Users can be informed via email about events that are relevant to their user account, such as technical changes."
          ),
          d(),
          p(313, "p"),
          h(314, "\xa0"),
          d(),
          p(315, "ul", 37)(316, "li")(317, "strong"),
          h(318, "Processed types of data:"),
          d(),
          h(
            319,
            " Inventory data (e.g. names, addresses); contact data (e.g. email, telephone numbers); content data (e.g. inputs in online forms); meta, communication and procedural data (e.g. IP addresses, timestamps, identification numbers, consent status)."
          ),
          d(),
          p(320, "li")(321, "strong"),
          h(322, "Data subjects:"),
          d(),
          h(323, "Users (e.g. website visitors, users of online services)."),
          d(),
          p(324, "li")(325, "strong"),
          h(326, "Purposes of processing:"),
          d(),
          h(
            327,
            " Providing contractual services and customer support; Security measures; Managing and responding to inquiries; Providing our online services and user-friendliness."
          ),
          d(),
          p(328, "li")(329, "strong"),
          h(330, "Legal bases:"),
          d(),
          h(
            331,
            " Contractual performance and pre-contractual inquiries (Art. 6 Abs. 1 S. 1 lit. b) DSGVO); legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."
          ),
          d()(),
          p(332, "p")(333, "strong"),
          h(
            334,
            "Further information on processing procedures, methods, and services.:"
          ),
          d()(),
          p(335, "ul", 37)(336, "li")(337, "strong"),
          h(338, "Registration with pseudonyms: "),
          d(),
          h(
            339,
            "Users are allowed to use pseudonyms as usernames instead of their real names.; "
          ),
          p(340, "strong"),
          h(341, "Legal bases:"),
          d(),
          h(
            342,
            " Contract fulfillment and pre-contractual inquiries. (Art. 6 Abs. 1 S. 1 lit. b) DSGVO)."
          ),
          d(),
          p(343, "li")(344, "strong"),
          h(345, "User profiles are public: "),
          d(),
          h(
            346,
            "The profiles of the users are publicly visible and accessible.; "
          ),
          p(347, "strong"),
          h(348, "Legal bases:"),
          d(),
          h(
            349,
            " Contractual performance and pre-contractual inquiries (Art. 6 Abs. 1 S. 1 lit. b) DSGVO)."
          ),
          d()(),
          p(350, "h2", 43),
          h(351, "Single sign-on login"),
          d(),
          p(352, "p"),
          h(
            353,
            '"Single-Sign-On" or "Single-Sign-On-Authentication" refers to procedures that allow users to log in to our online service using a user account with a Single-Sign-On provider (e.g. a social network). The prerequisite for Single-Sign-On authentication is that users are registered with the respective Single-Sign-On provider and enter the necessary access data in the designated online form or are already logged in with the Single-Sign-On provider and confirm the Single-Sign-On authentication via a button.'
          ),
          d(),
          p(354, "p"),
          h(
            355,
            'The authentication is done directly with the respective Single-Sign-On provider. As part of such authentication, we receive a user ID with information that the user is logged in with this user ID at the respective Single-Sign-On provider and an ID (so-called "user handle") that cannot be used by us for other purposes. Whether we receive additional data depends solely on the Single-Sign-On procedure used, the chosen data sharing in the context of authentication, and also on which data users have released in the privacy or other settings of the user account at the Single-Sign-On provider. Depending on the Single-Sign-On provider and the user\'s choice, various data may be shared, usually including the email address and username. The password entered during the Single-Sign-On process with the Single-Sign-On provider is neither visible nor stored by us.'
          ),
          d(),
          p(356, "p"),
          h(
            357,
            "Users are advised to note that their information stored with us can be automatically compared to their user account with the Single-Sign-On provider, but this is not always possible or actually done. For example, if a user's email address changes, they must manually update it in their user account with us."
          ),
          d(),
          p(358, "p"),
          h(
            359,
            "We may use the Single-Sign-On authentication, if agreed with the users, as part of or prior to contract fulfillment, provided that users have requested it, or process it based on our legitimate interests and the interests of users in an effective and secure login system."
          ),
          d(),
          p(360, "p"),
          h(
            361,
            "If users decide not to use the linking of their user account with the Single-Sign-On provider for the Single-Sign-On procedure, they must revoke this connection within their user account at the Single-Sign-On provider. If users want to delete their data from our system, they must terminate their registration with us."
          ),
          d(),
          p(362, "ul", 37)(363, "li")(364, "strong"),
          h(365, "Processed types of data:"),
          d(),
          h(
            366,
            ' inventory data (e.g. names, addresses), contact data (e.g. email, phone numbers), usage data (e.g. visited websites, interest in content, access times), meta, communication and procedure data (e.g. IP addresses, time information, identification numbers, consent status), event data (Facebook) ("Event data" is data that can be transmitted to Facebook by us via the Facebook pixel (via apps or in other ways) and relates to persons or their actions; The data includes, for example, information about visits to websites, interactions with content, features, installations of apps, purchases of products, etc.; The event data is processed for the purpose of creating target groups for content and advertising information (custom audiences); Event data does not include the actual content (such as comments written), login information, or contact information (so no names, email addresses, and phone numbers). Event data is deleted by Facebook after a maximum of two years, and the target groups created from them are deleted with the deletion of our Facebook account).'
          ),
          d(),
          p(367, "li")(368, "strong"),
          h(369, "Affected persons:"),
          d(),
          h(370, " users (e.g. website visitors, users of online services)."),
          d(),
          p(371, "li")(372, "strong"),
          h(373, "Purposes of processing:"),
          d(),
          h(
            374,
            " provision of contractual services and customer service; security measures; registration process."
          ),
          d(),
          p(375, "li")(376, "strong"),
          h(377, "Legal basis:"),
          d(),
          h(378, " legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(379, "p")(380, "strong"),
          h(
            381,
            "Further information on processing processes, procedures, and services:"
          ),
          d()(),
          p(382, "ul", 37)(383, "li")(384, "strong"),
          h(385, "Facebook Single-Sign-On: "),
          d(),
          h(386, "authentication service of the Facebook platform; "),
          p(387, "strong"),
          h(388, "service provide:"),
          d(),
          h(
            389,
            " Meta Platforms Irland Limited, 4 Grand Canal Square, Grand Canal Harbour, Dublin 2, Irland; "
          ),
          p(390, "strong"),
          h(391, "legal basis:"),
          d(),
          h(392, " legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "),
          p(393, "strong"),
          h(394, "Website:"),
          d(),
          p(395, "a", 44),
          h(396, "https://www.facebook.com"),
          d(),
          h(397, "; "),
          p(398, "strong"),
          h(399, "Data privacy:"),
          d(),
          p(400, "a", 45),
          h(401, "https://www.facebook.com/about/privacy"),
          d(),
          h(402, "; "),
          p(403, "strong"),
          h(404, "data processing agreement:"),
          d(),
          p(405, "a", 46),
          h(406, "https://www.facebook.com/legal/terms/dataprocessing"),
          d(),
          h(407, "; "),
          p(408, "strong"),
          h(
            409,
            "standard contract clauses (ensuring the level of data protection when processing in third countries):"
          ),
          d(),
          p(410, "a", 47),
          h(411, "https://www.facebook.com/legal/EU_data_transfer_addendum"),
          d(),
          h(412, "."),
          d(),
          p(413, "li")(414, "strong"),
          h(415, "Google Single-Sign-On: "),
          d(),
          h(416, "authentication service; "),
          p(417, "strong"),
          h(418, "service provider:"),
          d(),
          h(
            419,
            " Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland; "
          ),
          p(420, "strong"),
          h(421, "legal basis:"),
          d(),
          h(422, " legitimate interests (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "),
          p(423, "strong"),
          h(424, "Website:"),
          d(),
          p(425, "a", 48),
          h(426, "https://www.google.de"),
          d(),
          h(427, "; "),
          p(428, "strong"),
          h(429, "Privacy Policy:"),
          d(),
          p(430, "a", 49),
          h(431, "https://policies.google.com/privacy"),
          d(),
          h(432, "; "),
          p(433, "strong"),
          h(434, "opt-out possibility (Opt-Out):"),
          d(),
          h(435, " Einstellungen zur Anzeige von Werbung: "),
          p(436, "a", 50),
          h(437, "https://adssettings.google.com/authenticated"),
          d(),
          h(438, "."),
          d(),
          p(439, "li")(440, "strong"),
          h(441, "Twitter Single-Sign-On:"),
          d(),
          h(442, " authentication service; "),
          p(443, "strong"),
          h(444, "Service provider:"),
          d(),
          h(
            445,
            " Twitter International Company, One Cumberland Place, Fenian Street, Dublin 2 D02 AX07, Ireland, Parent company: Twitter Inc., 1355 Market Street, Suite 900, San Francisco, CA 94103, USA; "
          ),
          p(446, "strong"),
          h(447, "Legal basis:"),
          d(),
          h(
            448,
            " Legitimate interests (Art. 6 para. 1 sentence 1 lit. f) GDPR); "
          ),
          p(449, "strong"),
          h(450, "Website:"),
          d(),
          p(451, "a", 51),
          h(452, "https://twitter.com"),
          d(),
          h(453, "; "),
          p(454, "strong"),
          h(455, "Data protection declaration:"),
          d(),
          p(456, "a", 52),
          h(457, "https://twitter.com/privacy"),
          d(),
          h(458, ", (Settings: "),
          p(459, "a", 53),
          h(460, "https://twitter.com/personalization"),
          d(),
          h(461, ")."),
          d()(),
          p(462, "h2", 54),
          h(463, "Contact and inquiry management"),
          d(),
          p(464, "p"),
          h(
            465,
            "When contacting us (e.g. by post, contact form, e-mail, telephone or via social media) as well as in the context of existing user and business relationships, the information of the requesting persons will be processed to the extent necessary to answer the contact requests and any requested measures."
          ),
          d(),
          p(466, "ul", 37)(467, "li")(468, "strong"),
          h(469, "Processed types of data:"),
          d(),
          h(
            470,
            " Contact data (e.g. email, phone numbers); Content data (e.g. entries in online forms); Usage data (e.g. visited web pages, interest in content, access times); Meta, communication and process data (e.g. IP addresses, timestamps, identification numbers, consent status)."
          ),
          d(),
          p(471, "li")(472, "strong"),
          h(473, "Persons concerned:"),
          d(),
          h(474, " Communication partners."),
          d(),
          p(475, "li")(476, "strong"),
          h(477, "Purposes of processing:"),
          d(),
          h(
            478,
            " Contact inquiries and communication; Management and response to inquiries; Feedback (e.g. collecting feedback via online form); Provision of our online offering and user-friendliness."
          ),
          d(),
          p(479, "li")(480, "strong"),
          h(481, "Legal basis:"),
          d(),
          h(
            482,
            " Legitimate interests (Art. 6 para. 1 sentence 1 lit. f) GDPR); Performance of a contract and pre-contractual inquiries (Art. 6 para. 1 sentence 1 lit. b) GDPR)."
          ),
          d()(),
          p(483, "p")(484, "strong"),
          h(485, "Further information on processing, procedures and services:"),
          d()(),
          p(486, "ul", 37)(487, "li")(488, "strong"),
          h(489, "Contact form:"),
          d(),
          h(
            490,
            " If users contact us via our contact form, email or other means of communication, we process the data provided to us in this context for the purpose of processing the request; "
          ),
          p(491, "strong"),
          h(492, "Legal basis:"),
          d(),
          h(
            493,
            " Performance of a contract and pre-contractual inquiries (Art. 6 para. 1 sentence 1 lit. b) GDPR), legitimate interests (Art. 6 para. 1 sentence 1 lit. f) GDPR)."
          ),
          d()(),
          p(494, "h2", 55),
          h(495, "Communication via messenger"),
          d(),
          p(496, "p"),
          h(
            497,
            "For the purpose of communication, we use messengers and therefore ask you to take note of the following information regarding the functionality of the messengers, encryption, the use of metadata in communication, and your options to object."
          ),
          d(),
          p(498, "p"),
          h(
            499,
            "You can also contact us through alternative channels, such as by phone or email. Please use the contact information provided to you or the contact information indicated within our online offer."
          ),
          d(),
          p(500, "p"),
          h(
            501,
            "In case of end-to-end encryption of content (i.e., the content of your message and attachments), we would like to point out that communication content (i.e., the content of the message and attached images) is encrypted from end to end. This means that the content of messages is not visible, not even by the messenger providers themselves. You should always use an up-to-date version of the messenger with encryption enabled to ensure the encryption of message content."
          ),
          d(),
          p(502, "p"),
          h(
            503,
            "However, we would like to inform our communication partners that although the providers of the messengers cannot view the content, they can learn that and when communication partners communicate with us, as well as technical information about the communication partner's device and, depending on the settings of their device, location information (so-called metadata) is processed."
          ),
          d(),
          p(504, "p")(505, "strong"),
          h(506, "Notes on legal bases: "),
          d(),
          h(
            507,
            " If we ask our communication partners for permission before communicating with them via messenger, the legal basis for processing their data is their consent. Otherwise, if we do not request consent and they contact us on their own initiative, we use messenger as a contractual measure with our contractual partners as well as in the context of contract initiation, and with other interested parties and communication partners based on our legitimate interests in quick and efficient communication and meeting the needs of our communication partners for communication via messenger. Furthermore, we would like to point out that we will not initially transmit the contact details provided to us to the messenger without your consent."
          ),
          d(),
          p(508, "h2", 56),
          h(509, "Surveys and inquiries"),
          d(),
          p(510, "p"),
          h(
            511,
            'We conduct surveys and questionnaires to collect information for the communicated survey or questionnaire purpose. The surveys and questionnaires (hereinafter referred to as "surveys") conducted by us are evaluated anonymously. Processing of personal data only takes place to the extent necessary for the provision and technical implementation of the surveys (e.g. processing of the IP address to display the survey in the user\'s browser or to enable the resumption of the survey using a cookie).'
          ),
          d(),
          p(512, "ul", 37)(513, "li")(514, "strong"),
          h(515, "Processed data types:"),
          d(),
          h(
            516,
            " Contact data (e.g. email, phone numbers); Content data (e.g. input in online forms); Usage data (e.g. visited web pages, interest in content, access times); Meta, communication, and procedure data (e.g. IP addresses, timestamps, identification numbers, consent status)."
          ),
          d(),
          p(517, "li")(518, "strong"),
          h(519, "Affected persons:"),
          d(),
          h(520, " Communication partners; Participants."),
          d(),
          p(521, "li")(522, "strong"),
          h(523, "Purposes of processing:"),
          d(),
          h(524, " Feedback (e.g. collecting feedback via online form)."),
          d(),
          p(525, "li")(526, "strong"),
          h(527, "Legal basis:"),
          d(),
          h(
            528,
            " Legitimate interests (Art. 6 para. 1 sentence 1 lit. f) GDPR)."
          ),
          d()(),
          p(529, "p")(530, "strong"),
          h(
            531,
            "Further information on processing procedures, procedures and services:"
          ),
          d()(),
          p(532, "ul", 37)(533, "li")(534, "strong"),
          h(535, "Google form:"),
          d(),
          h(
            536,
            " Creation and evaluation of online forms, surveys, feedback forms, etc.; "
          ),
          p(537, "strong"),
          h(538, "Service provider:"),
          d(),
          h(
            539,
            " Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Ireland; "
          ),
          p(540, "strong"),
          h(541, "Legal basis:"),
          d(),
          h(
            542,
            " Legitimate interests (Art. 6 para. 1 sentence 1 lit. f) GDPR); "
          ),
          p(543, "strong"),
          h(544, "Website:"),
          d(),
          p(545, "a", 57),
          h(546, "https://www.google.de/intl/de/forms"),
          d(),
          h(547, "; "),
          p(548, "strong"),
          h(549, "Privacy policy:"),
          d(),
          p(550, "a", 49),
          h(551, "https://policies.google.com/privacy"),
          d(),
          h(552, "; "),
          p(553, "strong"),
          h(554, "Data processing agreement:"),
          d(),
          p(555, "a", 58),
          h(556, "https://cloud.google.com/terms/data-processing-addendum"),
          d(),
          h(557, "; "),
          p(558, "strong"),
          h(
            559,
            "Standard contractual clauses (ensuring level of data protection when processing in third countries):"
          ),
          d(),
          p(560, "a", 59),
          h(561, "https://cloud.google.com/terms/eu-model-contract-clause"),
          d(),
          h(562, "."),
          d()(),
          p(563, "h2", 60),
          h(564, "Web analysis, monitoring, and optimization"),
          d(),
          p(565, "p"),
          h(
            566,
            'The web analysis (also known as "reach measurement") serves to evaluate the visitor traffic of our online offering and can include pseudonymous values \u200b\u200bsuch as behavior, interests or demographic information about visitors, such as age or gender. With the help of the reach analysis, we can, for example, recognize at what time our online offering or its functions or content are most frequently used or invite for reuse. We can also track which areas need optimization.'
          ),
          d(),
          p(567, "p"),
          h(
            568,
            "In addition to web analysis, we can also use testing procedures to test and optimize different versions of our online offering or its components, for example."
          ),
          d(),
          p(569, "p"),
          h(
            570,
            "Unless otherwise specified below, profiles, i.e. data summarized for a usage process, can be created and information can be stored and read from a browser or end device for these purposes. The information collected includes in particular visited websites and elements used there as well as technical information such as the browser used, the computer system used and information on usage times. If users have consented to the collection of their location data to us or to the providers of the services we use, location data may also be processed."
          ),
          d(),
          p(571, "p"),
          h(
            572,
            "Es werden ebenfalls die IP-Adressen der Nutzer gespeichert. Jedoch nutzen wir ein IP-Masking-Verfahren (d.h., Pseudonymisierung durch K\xfcrzung der IP-Adresse) zum Schutz der Nutzer. Generell werden die im Rahmen von Webanalyse, A/B-Testings und Optimierung keine Klardaten der Nutzer (wie z.B. E-Mail-Adressen oder Namen) gespeichert, sondern Pseudonyme. D.h., wir als auch die Anbieter der eingesetzten Software kennen nicht die tats\xe4chliche Identit\xe4t der Nutzer, sondern nur den f\xfcr Zwecke der jeweiligen Verfahren in deren Profilen gespeicherten Angaben."
          ),
          d(),
          p(573, "ul", 37)(574, "li")(575, "strong"),
          h(576, "Verarbeitete Datenarten:"),
          d(),
          h(
            577,
            " Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(578, "li")(579, "strong"),
          h(580, "Betroffene Personen:"),
          d(),
          h(
            581,
            " Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(582, "li")(583, "strong"),
          h(584, "Zwecke der Verarbeitung:"),
          d(),
          h(
            585,
            " Reichweitenmessung (z.B. Zugriffsstatistiken, Erkennung wiederkehrender Besucher); Profile mit nutzerbezogenen Informationen (Erstellen von Nutzerprofilen); Tracking (z.B. interessens-/verhaltensbezogenes Profiling, Nutzung von Cookies); Bereitstellung unseres Onlineangebotes und Nutzerfreundlichkeit."
          ),
          d(),
          p(586, "li")(587, "strong"),
          h(588, "Sicherheitsma\xdfnahmen:"),
          d(),
          h(589, " IP-Masking (Pseudonymisierung der IP-Adresse)."),
          d(),
          p(590, "li")(591, "strong"),
          h(592, "Rechtsgrundlagen:"),
          d(),
          h(593, " Einwilligung (Art. 6 Abs. 1 S. 1 lit. a) DSGVO)."),
          d()(),
          p(594, "p")(595, "strong"),
          h(
            596,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(597, "ul", 37)(598, "li")(599, "strong"),
          h(600, "Google Analytics: "),
          d(),
          h(
            601,
            "Webanalyse, Reichweitenmessung sowie Messung von Nutzerstr\xf6men; "
          ),
          p(602, "strong"),
          h(603, "Dienstanbieter:"),
          d(),
          h(
            604,
            " Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland; "
          ),
          p(605, "strong"),
          h(606, "Rechtsgrundlagen:"),
          d(),
          h(607, " Einwilligung (Art. 6 Abs. 1 S. 1 lit. a) DSGVO); "),
          p(608, "strong"),
          h(609, "Website:"),
          d(),
          p(610, "a", 61),
          h(
            611,
            "https://marketingplatform.google.com/intl/de/about/analytics/"
          ),
          d(),
          h(612, "; "),
          p(613, "strong"),
          h(614, "Datenschutzerkl\xe4rung:"),
          d(),
          p(615, "a", 49),
          h(616, "https://policies.google.com/privacy"),
          d(),
          h(617, "; "),
          p(618, "strong"),
          h(619, "Auftragsverarbeitungsvertrag:"),
          d(),
          p(620, "a", 62),
          h(621, "https://business.safety.google/adsprocessorterms"),
          d(),
          h(622, "; "),
          p(623, "strong"),
          h(
            624,
            "Standardvertragsklauseln (Gew\xe4hrleistung Datenschutzniveau bei Verarbeitung in Drittl\xe4ndern):"
          ),
          d(),
          p(625, "a", 62),
          h(626, "https://business.safety.google/adsprocessorterms"),
          d(),
          h(627, "; "),
          p(628, "strong"),
          h(629, "Widerspruchsm\xf6glichkeit (Opt-Out):"),
          d(),
          h(630, " Opt-Out-Plugin: "),
          p(631, "a", 63),
          h(632, "https://tools.google.com/dlpage/gaoptout?hl=de"),
          d(),
          h(
            633,
            ", Einstellungen f\xfcr die Darstellung von Werbeeinblendungen: "
          ),
          p(634, "a", 50),
          h(635, "https://adssettings.google.com/authenticated"),
          d(),
          h(636, "; "),
          p(637, "strong"),
          h(638, "Weitere Informationen:"),
          d(),
          p(639, "a", 64),
          h(640, "https://privacy.google.com/businesses/adsservices"),
          d(),
          h(641, " (Arten der Verarbeitung sowie der verarbeiteten Daten)."),
          d()(),
          p(642, "h2", 65),
          h(643, "Customer reviews and rating procedures"),
          d(),
          p(644, "p"),
          h(
            645,
            "Wir nehmen an Rezensions- und Bewertungsverfahren teil, um unsere Leistungen zu evaluieren, zu optimieren und zu bewerben. Wenn Nutzer uns \xfcber die beteiligten Bewertungsplattformen oder -verfahren bewerten oder anderweitig Feedback geben, gelten zus\xe4tzlich die Allgemeinen Gesch\xe4fts- oder Nutzungsbedingungen und die Datenschutzhinweise der Anbieter. Im Regelfall setzt die Bewertung zudem eine Registrierung bei den jeweiligen Anbietern voraus. "
          ),
          d(),
          p(646, "p"),
          h(
            647,
            "Um sicherzustellen, dass die bewertenden Personen tats\xe4chlich unsere Leistungen in Anspruch genommen haben, \xfcbermitteln wir mit Einwilligung der Kunden die hierzu erforderlichen Daten im Hinblick auf den Kunden und die in Anspruch genommene Leistung an die jeweilige Bewertungsplattform (einschlie\xdflich Name, E-Mail-Adresse und Bestellnummer bzw. Artikelnummer). Diese Daten werden alleine zur Verifizierung der Authentizit\xe4t des Nutzers verwendet."
          ),
          d(),
          p(648, "ul", 37)(649, "li")(650, "strong"),
          h(651, "Verarbeitete Datenarten:"),
          d(),
          h(
            652,
            " Vertragsdaten (z.B. Vertragsgegenstand, Laufzeit, Kundenkategorie); Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(653, "li")(654, "strong"),
          h(655, "Betroffene Personen:"),
          d(),
          h(
            656,
            " Kunden; Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(657, "li")(658, "strong"),
          h(659, "Zwecke der Verarbeitung:"),
          d(),
          h(
            660,
            " Feedback (z.B. Sammeln von Feedback via Online-Formular); Marketing."
          ),
          d(),
          p(661, "li")(662, "strong"),
          h(663, "Rechtsgrundlagen:"),
          d(),
          h(664, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(665, "p")(666, "strong"),
          h(
            667,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(668, "ul", 37)(669, "li")(670, "strong"),
          h(671, "Bewertungs-Widget: "),
          d(),
          h(
            672,
            'Wir binden in unser Onlineangebot sogenannte "Bewertungs-Widgets\u201c ein. Ein Widget ist ein in unser Onlineangebot eingebundenes Funktions- und Inhaltselement, das ver\xe4nderliche Informationen anzeigt. Es kann z.B. in Form eines Siegels oder vergleichbaren Elements, zum Teil auch "Badge" genannt, dargestellt werden. Dabei wird der entsprechende Inhalt des Widgets zwar innerhalb unseres Onlineangebotes dargestellt, er wird aber in diesem Moment von den Servern des jeweiligen Widgets-Anbieters abgerufen. Nur so kann immer der aktuelle Inhalt gezeigt werden, vor allem die jeweils aktuelle Bewertung. Daf\xfcr muss eine Datenverbindung von der innerhalb unseres Onlineangebotes aufgerufenen Webseite zu dem Server des Widgets-Anbieters aufgebaut werden und der Widgets-Anbieter erh\xe4lt gewisse technische Daten (Zugriffsdaten, inklusive IP-Adresse), die n\xf6tig sind, damit der Inhalt des Widgets an den Browser des Nutzers ausgeliefert werden kann. Furthermore, the widget provider receives information that users have visited our online offering. This information can be stored in a cookie and used by the widget provider to identify which online offerings participating in the rating process have been visited by the user. The information can be stored in a user profile and used for advertising or market research purposes. '
          ),
          p(673, "strong"),
          h(674, "legal bases:"),
          d(),
          h(675, " Legitimate Interests (Art. 6(1) Sentence 1 lit. f) GDPR)."),
          d()(),
          p(676, "h2", 66),
          h(677, "Presences on social networks (social media)"),
          d(),
          p(678, "p"),
          h(
            679,
            "We maintain online presences within social networks and process user data in this context to communicate with users active on these platforms or to provide information about us."
          ),
          d(),
          p(680, "p"),
          h(
            681,
            "We would like to point out that user data may be processed outside the European Union in this process. This may pose risks for users, as it could, for example, make it more challenging to enforce user rights."
          ),
          d(),
          p(682, "p"),
          h(
            683,
            "Furthermore, user data within social networks is typically processed for market research and advertising purposes. For example, user profiles can be created based on user behavior and resulting interests. These user profiles can, in turn, be used to display advertisements within and outside the networks that are likely to match the users' interests. For these purposes, cookies are usually stored on users' computers, where user behavior and interests are stored. Additionally, data can be stored in user profiles independently of the devices users use, especially if users are members of the respective platforms and logged into them."
          ),
          d(),
          p(684, "p"),
          h(
            685,
            "For a detailed explanation of the respective processing methods and options for objection (opt-out), please refer to the data protection policies and information provided by the operators of the respective networks."
          ),
          d(),
          p(686, "p"),
          h(
            687,
            "We would also like to point out that in the case of requests for information and the assertion of data subject rights, they can be most effectively asserted with the providers. Only the providers have access to user data and can take direct measures and provide information. If you still need assistance, you can contact us."
          ),
          d(),
          p(688, "ul", 37)(689, "li")(690, "strong"),
          h(691, "Processed Data Types:"),
          d(),
          h(
            692,
            " Contact data (e.g., email, phone numbers); Content data (e.g., input in online forms); Usage data (e.g., visited websites, interest in content, access times); Meta, communication, and procedural data (e.g., IP addresses, timestamps, identification numbers, consent status)."
          ),
          d(),
          p(693, "li")(694, "strong"),
          h(695, "Affected Individuals:"),
          d(),
          h(696, " Users (e.g., website visitors, users of online services). "),
          d(),
          p(697, "li")(698, "strong"),
          h(699, "Purposes of Processing:"),
          d(),
          h(
            700,
            " Contact inquiries and communication; Feedback (e.g., collecting feedback via online forms); Marketing."
          ),
          d(),
          p(701, "li")(702, "strong"),
          h(703, "Legal Bases:"),
          d(),
          h(704, " Legitimate Interests (Art. 6(1) S. 1 lit. f) GDPR"),
          d()(),
          p(705, "h2", 67),
          h(706, "Changes and updates to the privacy policy"),
          d(),
          p(707, "p"),
          h(
            708,
            "We kindly ask you to regularly check the content of our privacy policy. We update the privacy policy whenever changes in our data processing activities require it. We will inform you as soon as the changes necessitate an action on your part (e.g., consent) or any other individual notification."
          ),
          d(),
          p(709, "p"),
          h(
            710,
            "If we provide addresses and contact information of companies and organizations in this privacy policy, please be aware that addresses may change over time, and we kindly ask you to verify the information before making contact."
          ),
          d(),
          p(711, "h2", 68),
          h(712, "Rights of the data subjects"),
          d(),
          p(713, "p"),
          h(
            714,
            "You, as data subjects, have various rights under the GDPR, particularly arising from Articles 15 to 21 of the GDPR:"
          ),
          d(),
          p(715, "ul")(716, "li")(717, "strong"),
          h(
            718,
            "Right to Object: You have the right to object at any time, on grounds relating to your particular situation, to the processing of your personal data concerning you, which is carried out on the basis of Article 6(1)(e) or (f) of the GDPR, including profiling based on those provisions. If your personal data concerning you is processed for direct marketing purposes, you have the right to object at any time to the processing of personal data concerning you for the purpose of such advertising, including profiling to the extent that it is related to such direct marketing."
          ),
          d()(),
          p(719, "li")(720, "strong"),
          h(721, "Right to Withdraw Consent:"),
          d(),
          h(722, " You have the right to withdraw consent at any time."),
          d(),
          p(723, "li")(724, "strong"),
          h(725, "The right to information:"),
          d(),
          h(
            726,
            " You have the right to request confirmation as to whether the data in question is being processed and to obtain information about this data, along with further details and a copy of the data in accordance with legal requirements."
          ),
          d(),
          p(727, "li")(728, "strong"),
          h(729, "Right to Rectification:"),
          d(),
          h(
            730,
            " In accordance with legal requirements, you have the right to request the completion of data concerning you or the correction of inaccurate data concerning you."
          ),
          d(),
          p(731, "li")(732, "strong"),
          h(733, "Right to Erasure and Restriction of Processing:"),
          d(),
          h(
            734,
            " According to legal provisions, you have the right to request the immediate deletion of data concerning you, or alternatively, to request a restriction of data processing in accordance with legal requirements."
          ),
          d(),
          p(735, "li")(736, "strong"),
          h(737, "Right to Data Portability:"),
          d(),
          h(
            738,
            " You have the right to receive data concerning yourself, which you have provided to us, in a structured, commonly used, and machine-readable format, in accordance with legal requirements, or to request their transmission to another data controller."
          ),
          d(),
          p(739, "li")(740, "strong"),
          h(741, "Complaint to the Supervisory Authority:"),
          d(),
          h(
            742,
            " Without prejudice to any other administrative or judicial remedy, you have the right to lodge a complaint with a supervisory authority, in particular in the Member State of your habitual residence, place of work, or the place of the alleged infringement, if you believe that the processing of your personal data violates the provisions of the GDPR."
          ),
          d()()());
      }
      function Lae(e, n) {
        1 & e &&
          (p(0, "div")(1, "h1"),
          h(2, "Datenschutzerkl\xe4rung"),
          d(),
          p(3, "h2", 69),
          h(4, "Einleitung"),
          d(),
          p(5, "p"),
          h(
            6,
            'Mit der folgenden Datenschutzerkl\xe4rung m\xf6chten wir Sie dar\xfcber aufkl\xe4ren, welche Arten Ihrer personenbezogenen Daten (nachfolgend auch kurz als "Daten\u201c bezeichnet) wir zu welchen Zwecken und in welchem Umfang im Rahmen der Bereitstellung unserer Applikation verarbeiten.'
          ),
          d(),
          p(7, "p"),
          h(8, "Die verwendeten Begriffe sind nicht geschlechtsspezifisch."),
          d(),
          p(9, "p"),
          h(10, "Stand: 10. Februar 2023"),
          d(),
          p(11, "h2"),
          h(12, "Inhalts\xfcbersicht"),
          d(),
          p(13, "ul", 4)(14, "li")(15, "a", 5),
          h(16, "Einleitung"),
          d()(),
          p(17, "li")(18, "a", 6),
          h(19, "Verantwortlicher"),
          d()(),
          p(20, "li")(21, "a", 7),
          h(22, "\xdcbersicht der Verarbeitungen"),
          d()(),
          p(23, "li")(24, "a", 8),
          h(25, "Ma\xdfgebliche Rechtsgrundlagen"),
          d()(),
          p(26, "li")(27, "a", 9),
          h(28, "Sicherheitsma\xdfnahmen"),
          d()(),
          p(29, "li")(30, "a", 10),
          h(31, "\xdcbermittlung von personenbezogenen Daten"),
          d()(),
          p(32, "li")(33, "a", 11),
          h(34, "Datenverarbeitung in Drittl\xe4ndern"),
          d()(),
          p(35, "li")(36, "a", 12),
          h(37, "L\xf6schung von Daten"),
          d()(),
          p(38, "li")(39, "a", 13),
          h(40, "Einsatz von Cookies"),
          d()(),
          p(41, "li")(42, "a", 14),
          h(43, "Bereitstellung des Onlineangebotes und Webhosting"),
          d()(),
          p(44, "li")(45, "a", 15),
          h(46, "Registrierung, Anmeldung und Nutzerkonto"),
          d()(),
          p(47, "li")(48, "a", 16),
          h(49, "Single-Sign-On-Anmeldung"),
          d()(),
          p(50, "li")(51, "a", 17),
          h(52, "Kontakt- und Anfragenverwaltung"),
          d()(),
          p(53, "li")(54, "a", 18),
          h(55, "Kommunikation via Messenger"),
          d()(),
          p(56, "li")(57, "a", 19),
          h(58, "Umfragen und Befragungen"),
          d()(),
          p(59, "li")(60, "a", 20),
          h(61, "Webanalyse, Monitoring und Optimierung"),
          d()(),
          p(62, "li")(63, "a", 21),
          h(64, "Kundenrezensionen und Bewertungsverfahren"),
          d()(),
          p(65, "li")(66, "a", 22),
          h(67, "Pr\xe4senzen in sozialen Netzwerken (Social Media)"),
          d()(),
          p(68, "li")(69, "a", 23),
          h(70, "\xc4nderung und Aktualisierung der Datenschutzerkl\xe4rung"),
          d()(),
          p(71, "li")(72, "a", 24),
          h(73, "Rechte der betroffenen Personen"),
          d()()(),
          p(74, "h2", 25),
          h(75, "Verantwortlicher"),
          d(),
          p(76, "p"),
          h(77, "Matthias Renner"),
          k(78, "br"),
          h(79, "Weizenstra\xdfe 23"),
          k(80, "br"),
          h(81, "86199 Augsburg"),
          d(),
          h(82, "\nE-Mail-Adresse: "),
          p(83, "p")(84, "a", 26),
          h(85, "bagsofcode@gmail.com"),
          d()(),
          p(86, "h2", 27),
          h(87, "\xdcbersicht der Verarbeitungen"),
          d(),
          p(88, "p"),
          h(
            89,
            "Die nachfolgende \xdcbersicht fasst die Arten der verarbeiteten Daten und die Zwecke ihrer Verarbeitung zusammen und verweist auf die betroffenen Personen."
          ),
          d(),
          p(90, "h3"),
          h(91, "Arten der verarbeiteten Daten"),
          d(),
          p(92, "ul")(93, "li"),
          h(94, "Bestandsdaten."),
          d(),
          p(95, "li"),
          h(96, "Kontaktdaten."),
          d(),
          p(97, "li"),
          h(98, "Inhaltsdaten."),
          d(),
          p(99, "li"),
          h(100, "Vertragsdaten."),
          d(),
          p(101, "li"),
          h(102, "Nutzungsdaten."),
          d(),
          p(103, "li"),
          h(104, "Meta-, Kommunikations- und Verfahrensdaten."),
          d(),
          p(105, "li"),
          h(106, "Event-Daten (Facebook)."),
          d()(),
          p(107, "h3"),
          h(108, "Kategorien betroffener Personen"),
          d(),
          p(109, "ul")(110, "li"),
          h(111, "Kunden."),
          d(),
          p(112, "li"),
          h(113, "Kommunikationspartner."),
          d(),
          p(114, "li"),
          h(115, "Nutzer."),
          d(),
          p(116, "li"),
          h(117, "Teilnehmer."),
          d()(),
          p(118, "h3"),
          h(119, "Zwecke der Verarbeitung"),
          d(),
          p(120, "ul")(121, "li"),
          h(122, "Erbringung vertraglicher Leistungen und Kundenservice."),
          d(),
          p(123, "li"),
          h(124, "Kontaktanfragen und Kommunikation."),
          d(),
          p(125, "li"),
          h(126, "Sicherheitsma\xdfnahmen."),
          d(),
          p(127, "li"),
          h(128, "Direktmarketing."),
          d(),
          p(129, "li"),
          h(130, "Reichweitenmessung."),
          d(),
          p(131, "li"),
          h(132, "Tracking."),
          d(),
          p(133, "li"),
          h(134, "Verwaltung und Beantwortung von Anfragen."),
          d(),
          p(135, "li"),
          h(136, "Feedback."),
          d(),
          p(137, "li"),
          h(138, "Marketing."),
          d(),
          p(139, "li"),
          h(140, "Profile mit nutzerbezogenen Informationen."),
          d(),
          p(141, "li"),
          h(142, "Anmeldeverfahren."),
          d(),
          p(143, "li"),
          h(
            144,
            "Bereitstellung unseres Onlineangebotes und Nutzerfreundlichkeit."
          ),
          d(),
          p(145, "li"),
          h(146, "Informationstechnische Infrastruktur."),
          d()(),
          p(147, "h3", 28),
          h(148, "Ma\xdfgebliche Rechtsgrundlagen"),
          d(),
          p(149, "p"),
          h(
            150,
            "Im Folgenden erhalten Sie eine \xdcbersicht der Rechtsgrundlagen der DSGVO, auf deren Basis wir personenbezogene Daten verarbeiten. Bitte nehmen Sie zur Kenntnis, dass neben den Regelungen der DSGVO nationale Datenschutzvorgaben in Ihrem bzw. unserem Wohn- oder Sitzland gelten k\xf6nnen. Sollten ferner im Einzelfall speziellere Rechtsgrundlagen ma\xdfgeblich sein, teilen wir Ihnen diese in der Datenschutzerkl\xe4rung mit."
          ),
          d(),
          p(151, "ul")(152, "li")(153, "strong"),
          h(154, "Einwilligung (Art. 6 Abs. 1 S. 1 lit. a) DSGVO)"),
          d(),
          h(
            155,
            " - Die betroffene Person hat ihre Einwilligung in die Verarbeitung der sie betreffenden personenbezogenen Daten f\xfcr einen spezifischen Zweck oder mehrere bestimmte Zwecke gegeben."
          ),
          d(),
          p(156, "li")(157, "strong"),
          h(
            158,
            "Vertragserf\xfcllung und vorvertragliche Anfragen (Art. 6 Abs. 1 S. 1 lit. b) DSGVO)"
          ),
          d(),
          h(
            159,
            " - Die Verarbeitung ist f\xfcr die Erf\xfcllung eines Vertrags, dessen Vertragspartei die betroffene Person ist, oder zur Durchf\xfchrung vorvertraglicher Ma\xdfnahmen erforderlich, die auf Anfrage der betroffenen Person erfolgen."
          ),
          d(),
          p(160, "li")(161, "strong"),
          h(162, "Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)"),
          d(),
          h(
            163,
            " - Die Verarbeitung ist zur Wahrung der berechtigten Interessen des Verantwortlichen oder eines Dritten erforderlich, sofern nicht die Interessen oder Grundrechte und Grundfreiheiten der betroffenen Person, die den Schutz personenbezogener Daten erfordern, \xfcberwiegen."
          ),
          d()(),
          p(164, "p"),
          h(
            165,
            "Zus\xe4tzlich zu den Datenschutzregelungen der DSGVO gelten nationale Regelungen zum Datenschutz in Deutschland. Hierzu geh\xf6rt insbesondere das Gesetz zum Schutz vor Missbrauch personenbezogener Daten bei der Datenverarbeitung (Bundesdatenschutzgesetz \u2013 BDSG). Das BDSG enth\xe4lt insbesondere Spezialregelungen zum Recht auf Auskunft, zum Recht auf L\xf6schung, zum Widerspruchsrecht, zur Verarbeitung besonderer Kategorien personenbezogener Daten, zur Verarbeitung f\xfcr andere Zwecke und zur \xdcbermittlung sowie automatisierten Entscheidungsfindung im Einzelfall einschlie\xdflich Profiling. Des Weiteren regelt es die Datenverarbeitung f\xfcr Zwecke des Besch\xe4ftigungsverh\xe4ltnisses (\xa7 26 BDSG), insbesondere im Hinblick auf die Begr\xfcndung, Durchf\xfchrung oder Beendigung von Besch\xe4ftigungsverh\xe4ltnissen sowie die Einwilligung von Besch\xe4ftigten. Ferner k\xf6nnen Landesdatenschutzgesetze der einzelnen Bundesl\xe4nder zur Anwendung gelangen."
          ),
          d(),
          p(166, "h2", 29),
          h(167, "Sicherheitsma\xdfnahmen"),
          d(),
          p(168, "p"),
          h(
            169,
            "Wir treffen nach Ma\xdfgabe der gesetzlichen Vorgaben unter Ber\xfccksichtigung des Stands der Technik, der Implementierungskosten und der Art, des Umfangs, der Umst\xe4nde und der Zwecke der Verarbeitung sowie der unterschiedlichen Eintrittswahrscheinlichkeiten und des Ausma\xdfes der Bedrohung der Rechte und Freiheiten nat\xfcrlicher Personen geeignete technische und organisatorische Ma\xdfnahmen, um ein dem Risiko angemessenes Schutzniveau zu gew\xe4hrleisten."
          ),
          d(),
          p(170, "p"),
          h(
            171,
            "Zu den Ma\xdfnahmen geh\xf6ren insbesondere die Sicherung der Vertraulichkeit, Integrit\xe4t und Verf\xfcgbarkeit von Daten durch Kontrolle des physischen und elektronischen Zugangs zu den Daten als auch des sie betreffenden Zugriffs, der Eingabe, der Weitergabe, der Sicherung der Verf\xfcgbarkeit und ihrer Trennung. Des Weiteren haben wir Verfahren eingerichtet, die eine Wahrnehmung von Betroffenenrechten, die L\xf6schung von Daten und Reaktionen auf die Gef\xe4hrdung der Daten gew\xe4hrleisten. Ferner ber\xfccksichtigen wir den Schutz personenbezogener Daten bereits bei der Entwicklung bzw. Auswahl von Hardware, Software sowie Verfahren entsprechend dem Prinzip des Datenschutzes, durch Technikgestaltung und durch datenschutzfreundliche Voreinstellungen."
          ),
          d(),
          p(172, "p"),
          h(
            173,
            "TLS-Verschl\xfcsselung (https): Um Ihre via unserem Online-Angebot \xfcbermittelten Daten zu sch\xfctzen, nutzen wir eine TLS-Verschl\xfcsselung. Sie erkennen derart verschl\xfcsselte Verbindungen an dem Pr\xe4fix https:// in der Adresszeile Ihres Browsers."
          ),
          d(),
          p(174, "h2", 30),
          h(175, "\xdcbermittlung von personenbezogenen Daten"),
          d(),
          p(176, "p"),
          h(
            177,
            "Im Rahmen unserer Verarbeitung von personenbezogenen Daten kommt es vor, dass die Daten an andere Stellen, Unternehmen, rechtlich selbstst\xe4ndige Organisationseinheiten oder Personen \xfcbermittelt oder sie ihnen gegen\xfcber offengelegt werden. Zu den Empf\xe4ngern dieser Daten k\xf6nnen z.B. mit IT-Aufgaben beauftragte Dienstleister oder Anbieter von Diensten und Inhalten, die in eine Webseite eingebunden werden, geh\xf6ren. In solchen F\xe4llen beachten wir die gesetzlichen Vorgaben und schlie\xdfen insbesondere entsprechende Vertr\xe4ge bzw. Vereinbarungen, die dem Schutz Ihrer Daten dienen, mit den Empf\xe4ngern Ihrer Daten ab."
          ),
          d(),
          p(178, "h2", 31),
          h(179, "Datenverarbeitung in Drittl\xe4ndern"),
          d(),
          p(180, "p"),
          h(
            181,
            "Sofern wir Daten in einem Drittland (d.h., au\xdferhalb der Europ\xe4ischen Union (EU), des Europ\xe4ischen Wirtschaftsraums (EWR)) verarbeiten oder die Verarbeitung im Rahmen der Inanspruchnahme von Diensten Dritter oder der Offenlegung bzw. \xdcbermittlung von Daten an andere Personen, Stellen oder Unternehmen stattfindet, erfolgt dies nur im Einklang mit den gesetzlichen Vorgaben. "
          ),
          d(),
          p(182, "p"),
          h(
            183,
            "Vorbehaltlich ausdr\xfccklicher Einwilligung oder vertraglich oder gesetzlich erforderlicher \xdcbermittlung verarbeiten oder lassen wir die Daten nur in Drittl\xe4ndern mit einem anerkannten Datenschutzniveau, vertraglichen Verpflichtung durch sogenannte Standardschutzklauseln der EU-Kommission, beim Vorliegen von Zertifizierungen oder verbindlicher internen Datenschutzvorschriften verarbeiten (Art. 44 bis 49 DSGVO, Informationsseite der EU-Kommission: "
          ),
          p(184, "a", 70),
          h(
            185,
            "https://ec.europa.eu/info/law/law-topic/data-protection/international-dimension-data-protection_de"
          ),
          d(),
          h(186, ")."),
          d(),
          p(187, "p"),
          h(188, "\xa0"),
          d(),
          p(189, "h2", 33),
          h(190, "L\xf6schung von Daten"),
          d(),
          p(191, "p"),
          h(
            192,
            "Die von uns verarbeiteten Daten werden nach Ma\xdfgabe der gesetzlichen Vorgaben gel\xf6scht, sobald deren zur Verarbeitung erlaubten Einwilligungen widerrufen werden oder sonstige Erlaubnisse entfallen (z.B. wenn der Zweck der Verarbeitung dieser Daten entfallen ist oder sie f\xfcr den Zweck nicht erforderlich sind). Sofern die Daten nicht gel\xf6scht werden, weil sie f\xfcr andere und gesetzlich zul\xe4ssige Zwecke erforderlich sind, wird deren Verarbeitung auf diese Zwecke beschr\xe4nkt. D.h., die Daten werden gesperrt und nicht f\xfcr andere Zwecke verarbeitet. Das gilt z.B. f\xfcr Daten, die aus handels- oder steuerrechtlichen Gr\xfcnden aufbewahrt werden m\xfcssen oder deren Speicherung zur Geltendmachung, Aus\xfcbung oder Verteidigung von Rechtsanspr\xfcchen oder zum Schutz der Rechte einer anderen nat\xfcrlichen oder juristischen Person erforderlich ist. "
          ),
          d(),
          p(193, "p"),
          h(
            194,
            "Unsere Datenschutzhinweise k\xf6nnen ferner weitere Angaben zu der Aufbewahrung und L\xf6schung von Daten beinhalten, die f\xfcr die jeweiligen Verarbeitungen vorrangig gelten."
          ),
          d(),
          p(195, "h2", 34),
          h(196, "Einsatz von Cookies"),
          d(),
          p(197, "p"),
          h(
            198,
            "Cookies sind kleine Textdateien, bzw. sonstige Speichervermerke, die Informationen auf Endger\xe4ten speichern und Informationen aus den Endger\xe4ten auslesen. Z.B. um den Login-Status in einem Nutzerkonto, einen Warenkorbinhalt in einem E-Shop, die aufgerufenen Inhalte oder verwendete Funktionen eines Onlineangebotes speichern. Cookies k\xf6nnen ferner zu unterschiedlichen Zwecken eingesetzt werden, z.B. zu Zwecken der Funktionsf\xe4higkeit, Sicherheit und Komfort von Onlineangeboten sowie der Erstellung von Analysen der Besucherstr\xf6me. "
          ),
          d(),
          p(199, "p")(200, "strong"),
          h(201, "Hinweise zur Einwilligung: "),
          d(),
          h(
            202,
            "Wir setzen Cookies im Einklang mit den gesetzlichen Vorschriften ein. Daher holen wir von den Nutzern eine vorhergehende Einwilligung ein, au\xdfer wenn diese gesetzlich nicht gefordert ist. Eine Einwilligung ist insbesondere nicht notwendig, wenn das Speichern und das Auslesen der Informationen, also auch von Cookies, unbedingt erforderlich sind, um dem den Nutzern einen von ihnen ausdr\xfccklich gew\xfcnschten Telemediendienst (also unser Onlineangebot) zur Verf\xfcgung zu stellen. Die widerrufliche Einwilligung wird gegen\xfcber den Nutzern deutlich kommuniziert und enth\xe4lt die Informationen zu der jeweiligen Cookie-Nutzung."
          ),
          d(),
          p(203, "p")(204, "strong"),
          h(205, "Hinweise zu datenschutzrechtlichen Rechtsgrundlagen: "),
          d(),
          h(
            206,
            "Auf welcher datenschutzrechtlichen Rechtsgrundlage wir die personenbezogenen Daten der Nutzer mit Hilfe von Cookies verarbeiten, h\xe4ngt davon ab, ob wir Nutzer um eine Einwilligung bitten. Falls die Nutzer einwilligen, ist die Rechtsgrundlage der Verarbeitung Ihrer Daten die erkl\xe4rte Einwilligung. Andernfalls werden die mithilfe von Cookies verarbeiteten Daten auf Grundlage unserer berechtigten Interessen (z.B. an einem betriebswirtschaftlichen Betrieb unseres Onlineangebotes und Verbesserung seiner Nutzbarkeit) verarbeitet oder, wenn dies im Rahmen der Erf\xfcllung unserer vertraglichen Pflichten erfolgt, wenn der Einsatz von Cookies erforderlich ist, um unsere vertraglichen Verpflichtungen zu erf\xfcllen. Zu welchen Zwecken die Cookies von uns verarbeitet werden, dar\xfcber kl\xe4ren wir im Laufe dieser Datenschutzerkl\xe4rung oder im Rahmen von unseren Einwilligungs- und Verarbeitungsprozessen auf."
          ),
          d(),
          p(207, "p")(208, "strong"),
          h(209, "Speicherdauer:\xa0"),
          d(),
          h(
            210,
            "Im Hinblick auf die Speicherdauer werden die folgenden Arten von Cookies unterschieden:"
          ),
          d(),
          p(211, "ul")(212, "li")(213, "strong"),
          h(
            214,
            "Tempor\xe4re Cookies (auch: Session- oder Sitzungs-Cookies):"
          ),
          d(),
          h(
            215,
            "\xa0Tempor\xe4re Cookies werden sp\xe4testens gel\xf6scht, nachdem ein Nutzer ein Online-Angebot verlassen und sein Endger\xe4t (z.B. Browser oder mobile Applikation) geschlossen hat."
          ),
          d(),
          p(216, "li")(217, "strong"),
          h(218, "Permanente Cookies:"),
          d(),
          h(
            219,
            " Permanente Cookies bleiben auch nach dem Schlie\xdfen des Endger\xe4tes gespeichert. So k\xf6nnen beispielsweise der Login-Status gespeichert oder bevorzugte Inhalte direkt angezeigt werden, wenn der Nutzer eine Website erneut besucht. Ebenso k\xf6nnen die mit Hilfe von Cookies erhobenen Daten der Nutzer zur Reichweitenmessung verwendet werden. Sofern wir Nutzern\xa0keine expliziten Angaben zur Art und Speicherdauer von Cookies mitteilen (z. B. im Rahmen der Einholung der Einwilligung), sollten Nutzer davon ausgehen, dass Cookies permanent sind und die Speicherdauer bis zu zwei Jahre betragen kann."
          ),
          d()(),
          p(220, "p")(221, "strong"),
          h(
            222,
            "Allgemeine Hinweise zum Widerruf und Widerspruch (Opt-Out): "
          ),
          d(),
          h(
            223,
            "Nutzer k\xf6nnen die von ihnen abgegebenen Einwilligungen jederzeit widerrufen und zudem einen Widerspruch gegen die Verarbeitung entsprechend\xa0den gesetzlichen Vorgaben im Art. 21 DSGVO einlegen.\xa0Nutzer k\xf6nnen ihren Widerspruch auch \xfcber die Einstellungen ihres Browsers erkl\xe4ren, z.B. durch Deaktivierung der Verwendung von Cookies (wobei dadurch auch die Funktionalit\xe4t unserer Online-Dienste eingeschr\xe4nkt sein kann). Ein Widerspruch gegen die Verwendung von Cookies zu Online-Marketing-Zwecken kann auch \xfcber die Websites "
          ),
          p(224, "a", 35),
          h(225, "https://optout.aboutads.info"),
          d(),
          h(226, " und "),
          p(227, "a", 36),
          h(228, "https://www.youronlinechoices.com/"),
          d(),
          h(229, " erkl\xe4rt werden."),
          d(),
          p(230, "p")(231, "strong"),
          h(
            232,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(233, "ul", 37)(234, "li")(235, "strong"),
          h(
            236,
            "Verarbeitung von Cookie-Daten auf Grundlage einer Einwilligung: "
          ),
          d(),
          h(
            237,
            "Wir setzen ein Verfahren zum Cookie-Einwilligungs-Management ein, in dessen Rahmen die Einwilligungen der Nutzer in den Einsatz von Cookies, bzw. der im Rahmen des Cookie-Einwilligungs-Management-Verfahrens genannten Verarbeitungen und Anbieter eingeholt sowie von den Nutzern verwaltet und widerrufen werden k\xf6nnen. Hierbei wird die Einwilligungserkl\xe4rung gespeichert, um deren Abfrage nicht erneut wiederholen zu m\xfcssen und die Einwilligung entsprechend der gesetzlichen Verpflichtung nachweisen zu k\xf6nnen. Die Speicherung kann serverseitig und/oder in einem Cookie (sogenanntes Opt-In-Cookie, bzw. mithilfe vergleichbarer Technologien) erfolgen, um die Einwilligung einem Nutzer, bzw. dessen Ger\xe4t zuordnen zu k\xf6nnen. Vorbehaltlich individueller Angaben zu den Anbietern von Cookie-Management-Diensten, gelten die folgenden Hinweise: Die Dauer der Speicherung der Einwilligung kann bis zu zwei Jahren betragen. Hierbei wird ein pseudonymer Nutzer-Identifikator gebildet und mit dem Zeitpunkt der Einwilligung, Angaben zur Reichweite der Einwilligung (z. B. welche Kategorien von Cookies und/oder Diensteanbieter) sowie dem Browser, System und verwendeten Endger\xe4t gespeichert."
          ),
          d()(),
          p(238, "h2", 38),
          h(239, "Bereitstellung des Onlineangebotes und Webhosting"),
          d(),
          p(240, "p"),
          h(
            241,
            "Wir verarbeiten die Daten der Nutzer, um ihnen unsere Online-Dienste zur Verf\xfcgung stellen zu k\xf6nnen. Zu diesem Zweck verarbeiten wir die IP-Adresse des Nutzers, die notwendig ist, um die Inhalte und Funktionen unserer Online-Dienste an den Browser oder das Endger\xe4t der Nutzer zu \xfcbermitteln."
          ),
          d(),
          p(242, "ul", 37)(243, "li")(244, "strong"),
          h(245, "Verarbeitete Datenarten:"),
          d(),
          h(
            246,
            " Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(247, "li")(248, "strong"),
          h(249, "Betroffene Personen:"),
          d(),
          h(
            250,
            " Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(251, "li")(252, "strong"),
          h(253, "Zwecke der Verarbeitung:"),
          d(),
          h(
            254,
            " Bereitstellung unseres Onlineangebotes und Nutzerfreundlichkeit; Informationstechnische Infrastruktur (Betrieb und Bereitstellung von Informationssystemen und technischen Ger\xe4ten (Computer, Server etc.).); Sicherheitsma\xdfnahmen."
          ),
          d(),
          p(255, "li")(256, "strong"),
          h(257, "Rechtsgrundlagen:"),
          d(),
          h(258, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(259, "p")(260, "strong"),
          h(
            261,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(262, "ul", 37)(263, "li")(264, "strong"),
          h(265, "Erhebung von Zugriffsdaten und Logfiles: "),
          d(),
          h(
            266,
            'Der Zugriff auf unser Onlineangebot wird in Form von so genannten "Server-Logfiles" protokolliert. Zu den Serverlogfiles k\xf6nnen die Adresse und Name der abgerufenen Webseiten und Dateien, Datum und Uhrzeit des Abrufs, \xfcbertragene Datenmengen, Meldung \xfcber erfolgreichen Abruf, Browsertyp nebst Version, das Betriebssystem des Nutzers, Referrer URL (die zuvor besuchte Seite) und im Regelfall IP-Adressen und der anfragende Provider geh\xf6ren. Die Serverlogfiles k\xf6nnen zum einen zu Zwecken der Sicherheit eingesetzt werden, z.B., um eine \xdcberlastung der Server zu vermeiden (insbesondere im Fall von missbr\xe4uchlichen Angriffen, sogenannten DDoS-Attacken) und zum anderen, um die Auslastung der Server und ihre Stabilit\xe4t sicherzustellen; '
          ),
          p(267, "strong"),
          h(268, "Rechtsgrundlagen:"),
          d(),
          h(
            269,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "
          ),
          p(270, "strong"),
          h(271, "L\xf6schung von Daten:"),
          d(),
          h(
            272,
            " Logfile-Informationen werden f\xfcr die Dauer von maximal 30 Tagen gespeichert und danach gel\xf6scht oder anonymisiert. Daten, deren weitere Aufbewahrung zu Beweiszwecken erforderlich ist, sind bis zur endg\xfcltigen Kl\xe4rung des jeweiligen Vorfalls von der L\xf6schung ausgenommen."
          ),
          d(),
          p(273, "li")(274, "strong"),
          h(275, "Hetzner: "),
          d(),
          h(
            276,
            "Leistungen auf dem Gebiet der Bereitstellung von informationstechnischer Infrastruktur und verbundenen Dienstleistungen (z.B. Speicherplatz und/oder Rechenkapazit\xe4ten); "
          ),
          p(277, "strong"),
          h(278, "Dienstanbieter:"),
          d(),
          h(
            279,
            " Hetzner Online GmbH, Industriestr. 25, 91710 Gunzenhausen, Deutschland; "
          ),
          p(280, "strong"),
          h(281, "Rechtsgrundlagen:"),
          d(),
          h(
            282,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "
          ),
          p(283, "strong"),
          h(284, "Website:"),
          d(),
          p(285, "a", 39),
          h(286, "https://www.hetzner.com"),
          d(),
          h(287, "; "),
          p(288, "strong"),
          h(289, "Datenschutzerkl\xe4rung:"),
          d(),
          p(290, "a", 40),
          h(291, "https://www.hetzner.com/de/rechtliches/datenschutz"),
          d(),
          h(292, "; "),
          p(293, "strong"),
          h(294, "Auftragsverarbeitungsvertrag:"),
          d(),
          p(295, "a", 41),
          h(
            296,
            "https://docs.hetzner.com/de/general/general-terms-and-conditions/data-privacy-faq/"
          ),
          d(),
          h(297, "."),
          d()(),
          p(298, "h2", 42),
          h(299, "Registrierung, Anmeldung und Nutzerkonto"),
          d(),
          p(300, "p"),
          h(
            301,
            "Nutzer k\xf6nnen ein Nutzerkonto anlegen. Im Rahmen der Registrierung werden den Nutzern die erforderlichen Pflichtangaben mitgeteilt und zu Zwecken der Bereitstellung des Nutzerkontos auf Grundlage vertraglicher Pflichterf\xfcllung verarbeitet. Zu den verarbeiteten Daten geh\xf6ren insbesondere die Login-Informationen (Nutzername, Passwort sowie eine E-Mail-Adresse)."
          ),
          d(),
          p(302, "p"),
          h(
            303,
            "Im Rahmen der Inanspruchnahme unserer Registrierungs- und Anmeldefunktionen sowie der Nutzung des Nutzerkontos speichern wir die IP-Adresse und den Zeitpunkt der jeweiligen Nutzerhandlung. Die Speicherung erfolgt auf Grundlage unserer berechtigten Interessen als auch jener der Nutzer an einem Schutz vor Missbrauch und sonstiger unbefugter Nutzung. Eine Weitergabe dieser Daten an Dritte erfolgt grunds\xe4tzlich nicht, es sei denn, sie ist zur Verfolgung unserer Anspr\xfcche erforderlich oder es besteht eine gesetzliche Verpflichtung hierzu."
          ),
          d(),
          p(304, "p"),
          h(
            305,
            "Die Nutzer k\xf6nnen \xfcber Vorg\xe4nge, die f\xfcr deren Nutzerkonto relevant sind, wie z.B. technische \xc4nderungen, per E-Mail informiert werden."
          ),
          d(),
          p(306, "p"),
          h(307, "\xa0"),
          d(),
          p(308, "ul", 37)(309, "li")(310, "strong"),
          h(311, "Verarbeitete Datenarten:"),
          d(),
          h(
            312,
            " Bestandsdaten (z.B. Namen, Adressen); Kontaktdaten (z.B. E-Mail, Telefonnummern); Inhaltsdaten (z.B. Eingaben in Onlineformularen); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(313, "li")(314, "strong"),
          h(315, "Betroffene Personen:"),
          d(),
          h(
            316,
            " Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(317, "li")(318, "strong"),
          h(319, "Zwecke der Verarbeitung:"),
          d(),
          h(
            320,
            " Erbringung vertraglicher Leistungen und Kundenservice; Sicherheitsma\xdfnahmen; Verwaltung und Beantwortung von Anfragen; Bereitstellung unseres Onlineangebotes und Nutzerfreundlichkeit."
          ),
          d(),
          p(321, "li")(322, "strong"),
          h(323, "Rechtsgrundlagen:"),
          d(),
          h(
            324,
            " Vertragserf\xfcllung und vorvertragliche Anfragen (Art. 6 Abs. 1 S. 1 lit. b) DSGVO); Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."
          ),
          d()(),
          p(325, "p")(326, "strong"),
          h(
            327,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(328, "ul", 37)(329, "li")(330, "strong"),
          h(331, "Registrierung mit Pseudonymen: "),
          d(),
          h(
            332,
            "Nutzer d\xfcrfen statt Klarnamen Pseudonyme als Nutzernamen verwenden; "
          ),
          p(333, "strong"),
          h(334, "Rechtsgrundlagen:"),
          d(),
          h(
            335,
            " Vertragserf\xfcllung und vorvertragliche Anfragen (Art. 6 Abs. 1 S. 1 lit. b) DSGVO)."
          ),
          d(),
          p(336, "li")(337, "strong"),
          h(338, "Profile der Nutzer sind \xf6ffentlich: "),
          d(),
          h(
            339,
            "Die Profile der Nutzer sind \xf6ffentlich sichtbar und zug\xe4nglich; "
          ),
          p(340, "strong"),
          h(341, "Rechtsgrundlagen:"),
          d(),
          h(
            342,
            " Vertragserf\xfcllung und vorvertragliche Anfragen (Art. 6 Abs. 1 S. 1 lit. b) DSGVO)."
          ),
          d()(),
          p(343, "h2", 43),
          h(344, "Single-Sign-On-Anmeldung"),
          d(),
          p(345, "p"),
          h(
            346,
            'Als "Single-Sign-On\u201c oder "Single-Sign-On-Anmeldung bzw. "-Authentifizierung\u201c werden Verfahren bezeichnet, die es Nutzern erlauben, sich mit Hilfe eines Nutzerkontos bei einem Anbieter von Single-Sign-On-Verfahren (z.B. einem sozialen Netzwerk), auch bei unserem Onlineangebot, anzumelden. Voraussetzung der Single-Sign-On-Authentifizierung ist, dass die Nutzer bei dem jeweiligen Single-Sign-On-Anbieter registriert sind und die erforderlichen Zugangsdaten in dem daf\xfcr vorgesehenen Onlineformular eingeben, bzw. schon bei dem Single-Sign-On-Anbieter angemeldet sind und die Single-Sign-On-Anmeldung via Schaltfl\xe4che best\xe4tigen.'
          ),
          d(),
          p(347, "p"),
          h(
            348,
            'Die Authentifizierung erfolgt direkt bei dem jeweiligen Single-Sign-On-Anbieter. Im Rahmen einer solchen Authentifizierung erhalten wir eine Nutzer-ID mit der Information, dass der Nutzer unter dieser Nutzer-ID beim jeweiligen Single-Sign-On-Anbieter eingeloggt ist und eine f\xfcr uns f\xfcr andere Zwecke nicht weiter nutzbare ID (sog "User Handle\u201c). Ob uns zus\xe4tzliche Daten \xfcbermittelt werden, h\xe4ngt allein von dem genutzten Single-Sign-On-Verfahren ab, von den gew\xe4hlten Datenfreigaben im Rahmen der Authentifizierung und zudem davon, welche Daten Nutzer in den Privatsph\xe4re- oder sonstigen Einstellungen des Nutzerkontos beim Single-Sign-On-Anbieter freigegeben haben. Es k\xf6nnen je nach Single-Sign-On-Anbieter und der Wahl der Nutzer verschiedene Daten sein, in der Regel sind es die E-Mail-Adresse und der Benutzername. Das im Rahmen des Single-Sign-On-Verfahrens eingegebene Passwort bei dem Single-Sign-On-Anbieter ist f\xfcr uns weder einsehbar, noch wird es von uns gespeichert. '
          ),
          d(),
          p(349, "p"),
          h(
            350,
            "Die Nutzer werden gebeten, zu beachten, dass deren bei uns gespeicherte Angaben automatisch mit ihrem Nutzerkonto beim Single-Sign-On-Anbieter abgeglichen werden k\xf6nnen, dies jedoch nicht immer m\xf6glich ist oder tats\xe4chlich erfolgt. \xc4ndern sich z.B. die E-Mail-Adressen der Nutzer, m\xfcssen sie diese manuell in ihrem Nutzerkonto bei uns \xe4ndern."
          ),
          d(),
          p(351, "p"),
          h(
            352,
            "Die Single-Sign-On-Anmeldung k\xf6nnen wir, sofern mit den Nutzern vereinbart, im Rahmen der oder vor der Vertragserf\xfcllung einsetzen, soweit die Nutzer darum gebeten wurden, im Rahmen einer Einwilligung verarbeiten und setzen sie ansonsten auf Grundlage der berechtigten Interessen unsererseits und der Interessen der Nutzer an einem effektiven und sicheren Anmeldesystem ein."
          ),
          d(),
          p(353, "p"),
          h(
            354,
            "Sollten Nutzer sich einmal entscheiden, die Verkn\xfcpfung ihres Nutzerkontos beim Single-Sign-On-Anbieter nicht mehr f\xfcr das Single-Sign-On-Verfahren nutzen zu wollen, m\xfcssen sie diese Verbindung innerhalb ihres Nutzerkontos beim Single-Sign-On-Anbieter aufheben. M\xf6chten Nutzer deren Daten bei uns l\xf6schen, m\xfcssen sie ihre Registrierung bei uns k\xfcndigen."
          ),
          d(),
          p(355, "ul", 37)(356, "li")(357, "strong"),
          h(358, "Verarbeitete Datenarten:"),
          d(),
          h(
            359,
            ' Bestandsdaten (z.B. Namen, Adressen); Kontaktdaten (z.B. E-Mail, Telefonnummern); Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus); Event-Daten (Facebook) ("Event-Daten" sind Daten, die z. B. via Facebook-Pixel (via Apps oder auf anderen Wegen) von uns an Facebook \xfcbermittelt werden k\xf6nnen und sich auf Personen oder deren Handlungen beziehen; Zu den Daten geh\xf6ren z. B. Angaben \xfcber Besuche auf Websites, Interaktionen mit Inhalten, Funktionen, Installationen von Apps, K\xe4ufe von Produkten, etc.; die Event-Daten werden zwecks Bildung von Zielgruppen f\xfcr Inhalte und Werbeinformationen (Custom Audiences) verarbeitet; Event Daten beinhalten nicht die eigentlichen Inhalte (wie z. B. verfasste Kommentare), keine Login-Informationen und keine Kontaktinformationen (also keine Namen, E-Mail-Adressen und Telefonnummern). Event Daten werden durch Facebook nach maximal zwei Jahren gel\xf6scht, die aus ihnen gebildeten Zielgruppen mit der L\xf6schung unseres Facebook-Kontos).'
          ),
          d(),
          p(360, "li")(361, "strong"),
          h(362, "Betroffene Personen:"),
          d(),
          h(
            363,
            " Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(364, "li")(365, "strong"),
          h(366, "Zwecke der Verarbeitung:"),
          d(),
          h(
            367,
            " Erbringung vertraglicher Leistungen und Kundenservice; Sicherheitsma\xdfnahmen; Anmeldeverfahren."
          ),
          d(),
          p(368, "li")(369, "strong"),
          h(370, "Rechtsgrundlagen:"),
          d(),
          h(371, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(372, "p")(373, "strong"),
          h(
            374,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(375, "ul", 37)(376, "li")(377, "strong"),
          h(378, "Facebook Single-Sign-On: "),
          d(),
          h(379, "Authentifizierungsdienst der Plattform Facebook; "),
          p(380, "strong"),
          h(381, "Dienstanbieter:"),
          d(),
          h(
            382,
            " Meta Platforms Irland Limited, 4 Grand Canal Square, Grand Canal Harbour, Dublin 2, Irland; "
          ),
          p(383, "strong"),
          h(384, "Rechtsgrundlagen:"),
          d(),
          h(
            385,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "
          ),
          p(386, "strong"),
          h(387, "Website:"),
          d(),
          p(388, "a", 44),
          h(389, "https://www.facebook.com"),
          d(),
          h(390, "; "),
          p(391, "strong"),
          h(392, "Datenschutzerkl\xe4rung:"),
          d(),
          p(393, "a", 45),
          h(394, "https://www.facebook.com/about/privacy"),
          d(),
          h(395, "; "),
          p(396, "strong"),
          h(397, "Auftragsverarbeitungsvertrag:"),
          d(),
          p(398, "a", 46),
          h(399, "https://www.facebook.com/legal/terms/dataprocessing"),
          d(),
          h(400, "; "),
          p(401, "strong"),
          h(
            402,
            "Standardvertragsklauseln (Gew\xe4hrleistung Datenschutzniveau bei Verarbeitung in Drittl\xe4ndern):"
          ),
          d(),
          p(403, "a", 47),
          h(404, "https://www.facebook.com/legal/EU_data_transfer_addendum"),
          d(),
          h(405, "."),
          d(),
          p(406, "li")(407, "strong"),
          h(408, "Google Single-Sign-On: "),
          d(),
          h(409, "Authentifizierungsdienst; "),
          p(410, "strong"),
          h(411, "Dienstanbieter:"),
          d(),
          h(
            412,
            " Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland; "
          ),
          p(413, "strong"),
          h(414, "Rechtsgrundlagen:"),
          d(),
          h(
            415,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "
          ),
          p(416, "strong"),
          h(417, "Website:"),
          d(),
          p(418, "a", 48),
          h(419, "https://www.google.de"),
          d(),
          h(420, "; "),
          p(421, "strong"),
          h(422, "Datenschutzerkl\xe4rung:"),
          d(),
          p(423, "a", 49),
          h(424, "https://policies.google.com/privacy"),
          d(),
          h(425, "; "),
          p(426, "strong"),
          h(427, "Widerspruchsm\xf6glichkeit (Opt-Out):"),
          d(),
          h(
            428,
            " Einstellungen f\xfcr die Darstellung von Werbeeinblendungen: "
          ),
          p(429, "a", 50),
          h(430, "https://adssettings.google.com/authenticated"),
          d(),
          h(431, "."),
          d(),
          p(432, "li")(433, "strong"),
          h(434, "Twitter Single-Sign-On: "),
          d(),
          h(435, "Authentifizierungsdienst; "),
          p(436, "strong"),
          h(437, "Dienstanbieter:"),
          d(),
          h(
            438,
            " Twitter International Company, One Cumberland Place, Fenian Street, Dublin 2 D02 AX07, Irland, Mutterunternehmen: Twitter Inc., 1355 Market Street, Suite 900, San Francisco, CA 94103, USA; "
          ),
          p(439, "strong"),
          h(440, "Rechtsgrundlagen:"),
          d(),
          h(
            441,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "
          ),
          p(442, "strong"),
          h(443, "Website:"),
          d(),
          p(444, "a", 51),
          h(445, "https://twitter.com"),
          d(),
          h(446, "; "),
          p(447, "strong"),
          h(448, "Datenschutzerkl\xe4rung:"),
          d(),
          p(449, "a", 52),
          h(450, "https://twitter.com/privacy"),
          d(),
          h(451, ", (Settings: "),
          p(452, "a", 53),
          h(453, "https://twitter.com/personalization"),
          d(),
          h(454, ")."),
          d()(),
          p(455, "h2", 54),
          h(456, "Kontakt- und Anfragenverwaltung"),
          d(),
          p(457, "p"),
          h(
            458,
            "Bei der Kontaktaufnahme mit uns (z.B. per Post, Kontaktformular, E-Mail, Telefon oder via soziale Medien) sowie im Rahmen bestehender Nutzer- und Gesch\xe4ftsbeziehungen werden die Angaben der anfragenden Personen verarbeitet soweit dies zur Beantwortung der Kontaktanfragen und etwaiger angefragter Ma\xdfnahmen erforderlich ist."
          ),
          d(),
          p(459, "ul", 37)(460, "li")(461, "strong"),
          h(462, "Verarbeitete Datenarten:"),
          d(),
          h(
            463,
            " Kontaktdaten (z.B. E-Mail, Telefonnummern); Inhaltsdaten (z.B. Eingaben in Onlineformularen); Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(464, "li")(465, "strong"),
          h(466, "Betroffene Personen:"),
          d(),
          h(467, " Kommunikationspartner."),
          d(),
          p(468, "li")(469, "strong"),
          h(470, "Zwecke der Verarbeitung:"),
          d(),
          h(
            471,
            " Kontaktanfragen und Kommunikation; Verwaltung und Beantwortung von Anfragen; Feedback (z.B. Sammeln von Feedback via Online-Formular); Bereitstellung unseres Onlineangebotes und Nutzerfreundlichkeit."
          ),
          d(),
          p(472, "li")(473, "strong"),
          h(474, "Rechtsgrundlagen:"),
          d(),
          h(
            475,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); Vertragserf\xfcllung und vorvertragliche Anfragen (Art. 6 Abs. 1 S. 1 lit. b) DSGVO)."
          ),
          d()(),
          p(476, "p")(477, "strong"),
          h(
            478,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(479, "ul", 37)(480, "li")(481, "strong"),
          h(482, "Kontaktformular: "),
          d(),
          h(
            483,
            "Wenn Nutzer \xfcber unser Kontaktformular, E-Mail oder andere Kommunikationswege mit uns in Kontakt treten, verarbeiten wir die uns in diesem Zusammenhang mitgeteilten Daten zur Bearbeitung des mitgeteilten Anliegens; "
          ),
          p(484, "strong"),
          h(485, "Rechtsgrundlagen:"),
          d(),
          h(
            486,
            " Vertragserf\xfcllung und vorvertragliche Anfragen (Art. 6 Abs. 1 S. 1 lit. b) DSGVO), Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."
          ),
          d()(),
          p(487, "h2", 55),
          h(488, "Kommunikation via Messenger"),
          d(),
          p(489, "p"),
          h(
            490,
            "Wir setzen zu Zwecken der Kommunikation Messenger ein und bitten daher darum, die nachfolgenden Hinweise zur Funktionsf\xe4higkeit der Messenger, zur Verschl\xfcsselung, zur Nutzung der Metadaten der Kommunikation und zu Ihren Widerspruchsm\xf6glichkeiten zu beachten."
          ),
          d(),
          p(491, "p"),
          h(
            492,
            "Sie k\xf6nnen uns auch auf alternativen Wegen, z.B. via Telefon oder E-Mail, kontaktieren. Bitte nutzen Sie die Ihnen mitgeteilten Kontaktm\xf6glichkeiten oder die innerhalb unseres Onlineangebotes angegebenen Kontaktm\xf6glichkeiten."
          ),
          d(),
          p(493, "p"),
          h(
            494,
            "Im Fall einer Ende-zu-Ende-Verschl\xfcsselung von Inhalten (d.h., der Inhalt Ihrer Nachricht und Anh\xe4nge) weisen wir darauf hin, dass die Kommunikationsinhalte (d.h., der Inhalt der Nachricht und angeh\xe4ngte Bilder) von Ende zu Ende verschl\xfcsselt werden. Das bedeutet, dass der Inhalt der Nachrichten nicht einsehbar ist, nicht einmal durch die Messenger-Anbieter selbst. Sie sollten immer eine aktuelle Version der Messenger mit aktivierter Verschl\xfcsselung nutzen, damit die Verschl\xfcsselung der Nachrichteninhalte sichergestellt ist. "
          ),
          d(),
          p(495, "p"),
          h(
            496,
            "Wir weisen unsere Kommunikationspartner jedoch zus\xe4tzlich darauf hin, dass die Anbieter der Messenger zwar nicht den Inhalt einsehen, aber in Erfahrung bringen k\xf6nnen, dass und wann Kommunikationspartner mit uns kommunizieren sowie technische Informationen zum verwendeten Ger\xe4t der Kommunikationspartner und je nach Einstellungen ihres Ger\xe4tes auch Standortinformationen (sogenannte Metadaten) verarbeitet werden."
          ),
          d(),
          p(497, "p")(498, "strong"),
          h(499, "Hinweise zu Rechtsgrundlagen: "),
          d(),
          h(
            500,
            " Sofern wir Kommunikationspartner vor der Kommunikation mit ihnen via Messenger um eine Erlaubnis bitten, ist die Rechtsgrundlage unserer Verarbeitung ihrer Daten deren Einwilligung. Im \xdcbrigen, falls wir nicht um eine Einwilligung bitten und sie z.B. von sich aus Kontakt mit uns aufnehmen, nutzen wir Messenger im Verh\xe4ltnis zu unseren Vertragspartnern sowie im Rahmen der Vertragsanbahnung als eine vertragliche Ma\xdfnahme und im Fall anderer Interessenten und Kommunikationspartner auf Grundlage unserer berechtigten Interessen an einer schnellen und effizienten Kommunikation und Erf\xfcllung der Bed\xfcrfnisse unser Kommunikationspartner an der Kommunikation via Messenger. Ferner weisen wir Sie darauf hin, dass wir die uns mitgeteilten Kontaktdaten ohne Ihre Einwilligung nicht erstmalig an die Messenger \xfcbermitteln."
          ),
          d(),
          p(501, "ul", 37)(502, "li")(503, "strong"),
          h(504, "Verarbeitete Datenarten:"),
          d(),
          h(
            505,
            " Kontaktdaten (z.B. E-Mail, Telefonnummern); Inhaltsdaten (z.B. Eingaben in Onlineformularen); Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(506, "li")(507, "strong"),
          h(508, "Betroffene Personen:"),
          d(),
          h(509, " Kommunikationspartner; Teilnehmer."),
          d(),
          p(510, "li")(511, "strong"),
          h(512, "Zwecke der Verarbeitung:"),
          d(),
          h(513, " Feedback (z.B. Sammeln von Feedback via Online-Formular)."),
          d(),
          p(514, "li")(515, "strong"),
          h(516, "Rechtsgrundlagen:"),
          d(),
          h(517, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(518, "p")(519, "strong"),
          h(
            520,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(521, "ul", 37)(522, "li")(523, "strong"),
          h(524, "Google-Formular: "),
          d(),
          h(
            525,
            "Erstellung und Auswertung von Onineformularen, Umfragen, Feedbackb\xf6gen, etc; "
          ),
          p(526, "strong"),
          h(527, "Dienstanbieter:"),
          d(),
          h(
            528,
            " Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland; "
          ),
          p(529, "strong"),
          h(530, "Rechtsgrundlagen:"),
          d(),
          h(
            531,
            " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO); "
          ),
          p(532, "strong"),
          h(533, "Website:"),
          d(),
          p(534, "a", 57),
          h(535, "https://www.google.de/intl/de/forms"),
          d(),
          h(536, "; "),
          p(537, "strong"),
          h(538, "Datenschutzerkl\xe4rung:"),
          d(),
          p(539, "a", 49),
          h(540, "https://policies.google.com/privacy"),
          d(),
          h(541, "; "),
          p(542, "strong"),
          h(543, "Auftragsverarbeitungsvertrag:"),
          d(),
          p(544, "a", 58),
          h(545, "https://cloud.google.com/terms/data-processing-addendum"),
          d(),
          h(546, "; "),
          p(547, "strong"),
          h(
            548,
            "Standardvertragsklauseln (Gew\xe4hrleistung Datenschutzniveau bei Verarbeitung in Drittl\xe4ndern):"
          ),
          d(),
          p(549, "a", 59),
          h(550, "https://cloud.google.com/terms/eu-model-contract-clause"),
          d(),
          h(551, "."),
          d()(),
          p(552, "h2", 60),
          h(553, "Webanalyse, Monitoring und Optimierung"),
          d(),
          p(554, "p"),
          h(
            555,
            'Die Webanalyse (auch als "Reichweitenmessung" bezeichnet) dient der Auswertung der Besucherstr\xf6me unseres Onlineangebotes und kann Verhalten, Interessen oder demographische Informationen zu den Besuchern, wie z.B. das Alter oder das Geschlecht, als pseudonyme Werte umfassen. Mit Hilfe der Reichweitenanalyse k\xf6nnen wir z.B. erkennen, zu welcher Zeit unser Onlineangebot oder dessen Funktionen oder Inhalte am h\xe4ufigsten genutzt werden oder zur Wiederverwendung einladen. Ebenso k\xf6nnen wir nachvollziehen, welche Bereiche der Optimierung bed\xfcrfen. '
          ),
          d(),
          p(556, "p"),
          h(
            557,
            "Neben der Webanalyse k\xf6nnen wir auch Testverfahren einsetzen, um z.B. unterschiedliche Versionen unseres Onlineangebotes oder seiner Bestandteile zu testen und optimieren."
          ),
          d(),
          p(558, "p"),
          h(
            559,
            "Sofern nachfolgend nicht anders angegeben, k\xf6nnen zu diesen Zwecken Profile, d.h. zu einem Nutzungsvorgang zusammengefasste Daten angelegt und Informationen in einem Browser, bzw. in einem Endger\xe4t gespeichert und aus diesem ausgelesen werden. Zu den erhobenen Angaben geh\xf6ren insbesondere besuchte Webseiten und dort genutzte Elemente sowie technische Angaben, wie der verwendete Browser, das verwendete Computersystem sowie Angaben zu Nutzungszeiten. Sofern Nutzer in die Erhebung ihrer Standortdaten uns gegen\xfcber oder gegen\xfcber den Anbietern der von uns eingesetzten Dienste einverstanden erkl\xe4rt haben, k\xf6nnen auch Standortdaten verarbeitet werden."
          ),
          d(),
          p(560, "p"),
          h(
            561,
            "Es werden ebenfalls die IP-Adressen der Nutzer gespeichert. Jedoch nutzen wir ein IP-Masking-Verfahren (d.h., Pseudonymisierung durch K\xfcrzung der IP-Adresse) zum Schutz der Nutzer. Generell werden die im Rahmen von Webanalyse, A/B-Testings und Optimierung keine Klardaten der Nutzer (wie z.B. E-Mail-Adressen oder Namen) gespeichert, sondern Pseudonyme. D.h., wir als auch die Anbieter der eingesetzten Software kennen nicht die tats\xe4chliche Identit\xe4t der Nutzer, sondern nur den f\xfcr Zwecke der jeweiligen Verfahren in deren Profilen gespeicherten Angaben."
          ),
          d(),
          p(562, "ul", 37)(563, "li")(564, "strong"),
          h(565, "Verarbeitete Datenarten:"),
          d(),
          h(
            566,
            " Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(567, "li")(568, "strong"),
          h(569, "Betroffene Personen:"),
          d(),
          h(
            570,
            " Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(571, "li")(572, "strong"),
          h(573, "Zwecke der Verarbeitung:"),
          d(),
          h(
            574,
            " Reichweitenmessung (z.B. Zugriffsstatistiken, Erkennung wiederkehrender Besucher); Profile mit nutzerbezogenen Informationen (Erstellen von Nutzerprofilen); Tracking (z.B. interessens-/verhaltensbezogenes Profiling, Nutzung von Cookies); Bereitstellung unseres Onlineangebotes und Nutzerfreundlichkeit."
          ),
          d(),
          p(575, "li")(576, "strong"),
          h(577, "Sicherheitsma\xdfnahmen:"),
          d(),
          h(578, " IP-Masking (Pseudonymisierung der IP-Adresse)."),
          d(),
          p(579, "li")(580, "strong"),
          h(581, "Rechtsgrundlagen:"),
          d(),
          h(582, " Einwilligung (Art. 6 Abs. 1 S. 1 lit. a) DSGVO)."),
          d()(),
          p(583, "p")(584, "strong"),
          h(
            585,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(586, "ul", 37)(587, "li")(588, "strong"),
          h(589, "Google Analytics: "),
          d(),
          h(
            590,
            "Webanalyse, Reichweitenmessung sowie Messung von Nutzerstr\xf6men; "
          ),
          p(591, "strong"),
          h(592, "Dienstanbieter:"),
          d(),
          h(
            593,
            " Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland; "
          ),
          p(594, "strong"),
          h(595, "Rechtsgrundlagen:"),
          d(),
          h(596, " Einwilligung (Art. 6 Abs. 1 S. 1 lit. a) DSGVO); "),
          p(597, "strong"),
          h(598, "Website:"),
          d(),
          p(599, "a", 61),
          h(
            600,
            "https://marketingplatform.google.com/intl/de/about/analytics/"
          ),
          d(),
          h(601, "; "),
          p(602, "strong"),
          h(603, "Datenschutzerkl\xe4rung:"),
          d(),
          p(604, "a", 49),
          h(605, "https://policies.google.com/privacy"),
          d(),
          h(606, "; "),
          p(607, "strong"),
          h(608, "Auftragsverarbeitungsvertrag:"),
          d(),
          p(609, "a", 62),
          h(610, "https://business.safety.google/adsprocessorterms"),
          d(),
          h(611, "; "),
          p(612, "strong"),
          h(
            613,
            "Standardvertragsklauseln (Gew\xe4hrleistung Datenschutzniveau bei Verarbeitung in Drittl\xe4ndern):"
          ),
          d(),
          p(614, "a", 62),
          h(615, "https://business.safety.google/adsprocessorterms"),
          d(),
          h(616, "; "),
          p(617, "strong"),
          h(618, "Widerspruchsm\xf6glichkeit (Opt-Out):"),
          d(),
          h(619, " Opt-Out-Plugin: "),
          p(620, "a", 63),
          h(621, "https://tools.google.com/dlpage/gaoptout?hl=de"),
          d(),
          h(
            622,
            ", Einstellungen f\xfcr die Darstellung von Werbeeinblendungen: "
          ),
          p(623, "a", 50),
          h(624, "https://adssettings.google.com/authenticated"),
          d(),
          h(625, "; "),
          p(626, "strong"),
          h(627, "Weitere Informationen:"),
          d(),
          p(628, "a", 64),
          h(629, "https://privacy.google.com/businesses/adsservices"),
          d(),
          h(630, " (Arten der Verarbeitung sowie der verarbeiteten Daten)."),
          d()(),
          p(631, "h2", 65),
          h(632, "Kundenrezensionen und Bewertungsverfahren"),
          d(),
          p(633, "p"),
          h(
            634,
            "Wir nehmen an Rezensions- und Bewertungsverfahren teil, um unsere Leistungen zu evaluieren, zu optimieren und zu bewerben. Wenn Nutzer uns \xfcber die beteiligten Bewertungsplattformen oder -verfahren bewerten oder anderweitig Feedback geben, gelten zus\xe4tzlich die Allgemeinen Gesch\xe4fts- oder Nutzungsbedingungen und die Datenschutzhinweise der Anbieter. Im Regelfall setzt die Bewertung zudem eine Registrierung bei den jeweiligen Anbietern voraus. "
          ),
          d(),
          p(635, "p"),
          h(
            636,
            "Um sicherzustellen, dass die bewertenden Personen tats\xe4chlich unsere Leistungen in Anspruch genommen haben, \xfcbermitteln wir mit Einwilligung der Kunden die hierzu erforderlichen Daten im Hinblick auf den Kunden und die in Anspruch genommene Leistung an die jeweilige Bewertungsplattform (einschlie\xdflich Name, E-Mail-Adresse und Bestellnummer bzw. Artikelnummer). Diese Daten werden alleine zur Verifizierung der Authentizit\xe4t des Nutzers verwendet."
          ),
          d(),
          p(637, "ul", 37)(638, "li")(639, "strong"),
          h(640, "Verarbeitete Datenarten:"),
          d(),
          h(
            641,
            " Vertragsdaten (z.B. Vertragsgegenstand, Laufzeit, Kundenkategorie); Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(642, "li")(643, "strong"),
          h(644, "Betroffene Personen:"),
          d(),
          h(
            645,
            " Kunden; Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(646, "li")(647, "strong"),
          h(648, "Zwecke der Verarbeitung:"),
          d(),
          h(
            649,
            " Feedback (z.B. Sammeln von Feedback via Online-Formular); Marketing."
          ),
          d(),
          p(650, "li")(651, "strong"),
          h(652, "Rechtsgrundlagen:"),
          d(),
          h(653, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(654, "p")(655, "strong"),
          h(
            656,
            "Weitere Hinweise zu Verarbeitungsprozessen, Verfahren und Diensten:"
          ),
          d()(),
          p(657, "ul", 37)(658, "li")(659, "strong"),
          h(660, "Bewertungs-Widget: "),
          d(),
          h(
            661,
            'Wir binden in unser Onlineangebot sogenannte "Bewertungs-Widgets\u201c ein. Ein Widget ist ein in unser Onlineangebot eingebundenes Funktions- und Inhaltselement, das ver\xe4nderliche Informationen anzeigt. Es kann z.B. in Form eines Siegels oder vergleichbaren Elements, zum Teil auch "Badge" genannt, dargestellt werden. Dabei wird der entsprechende Inhalt des Widgets zwar innerhalb unseres Onlineangebotes dargestellt, er wird aber in diesem Moment von den Servern des jeweiligen Widgets-Anbieters abgerufen. Nur so kann immer der aktuelle Inhalt gezeigt werden, vor allem die jeweils aktuelle Bewertung. Daf\xfcr muss eine Datenverbindung von der innerhalb unseres Onlineangebotes aufgerufenen Webseite zu dem Server des Widgets-Anbieters aufgebaut werden und der Widgets-Anbieter erh\xe4lt gewisse technische Daten (Zugriffsdaten, inklusive IP-Adresse), die n\xf6tig sind, damit der Inhalt des Widgets an den Browser des Nutzers ausgeliefert werden kann. Des Weiteren erh\xe4lt der Widgets-Anbieter Informationen dar\xfcber, dass Nutzer unser Onlineangebot besucht haben. Diese Informationen k\xf6nnen in einem Cookie gespeichert und von dem Widgets-Anbieter verwendet werden, um zu erkennen, welche Onlineangebote, die am dem Bewertungsverfahren teilnehmen, von dem Nutzer besucht worden sind. Die Informationen k\xf6nnen in einem Nutzerprofil gespeichert und f\xfcr Werbe- oder Marktforschungszwecke verwendet werden; '
          ),
          p(662, "strong"),
          h(663, "Rechtsgrundlagen:"),
          d(),
          h(664, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(665, "h2", 66),
          h(666, "Pr\xe4senzen in sozialen Netzwerken (Social Media)"),
          d(),
          p(667, "p"),
          h(
            668,
            "Wir unterhalten Onlinepr\xe4senzen innerhalb sozialer Netzwerke und verarbeiten in diesem Rahmen Daten der Nutzer, um mit den dort aktiven Nutzern zu kommunizieren oder um Informationen \xfcber uns anzubieten."
          ),
          d(),
          p(669, "p"),
          h(
            670,
            "Wir weisen darauf hin, dass dabei Daten der Nutzer au\xdferhalb des Raumes der Europ\xe4ischen Union verarbeitet werden k\xf6nnen. Hierdurch k\xf6nnen sich f\xfcr die Nutzer Risiken ergeben, weil so z.B. die Durchsetzung der Rechte der Nutzer erschwert werden k\xf6nnte."
          ),
          d(),
          p(671, "p"),
          h(
            672,
            "Ferner werden die Daten der Nutzer innerhalb sozialer Netzwerke im Regelfall f\xfcr Marktforschungs- und Werbezwecke verarbeitet. So k\xf6nnen z.B. anhand des Nutzungsverhaltens und sich daraus ergebender Interessen der Nutzer Nutzungsprofile erstellt werden. Die Nutzungsprofile k\xf6nnen wiederum verwendet werden, um z.B. Werbeanzeigen innerhalb und au\xdferhalb der Netzwerke zu schalten, die mutma\xdflich den Interessen der Nutzer entsprechen. Zu diesen Zwecken werden im Regelfall Cookies auf den Rechnern der Nutzer gespeichert, in denen das Nutzungsverhalten und die Interessen der Nutzer gespeichert werden. Ferner k\xf6nnen in den Nutzungsprofilen auch Daten unabh\xe4ngig der von den Nutzern verwendeten Ger\xe4te gespeichert werden (insbesondere, wenn die Nutzer Mitglieder der jeweiligen Plattformen sind und bei diesen eingeloggt sind)."
          ),
          d(),
          p(673, "p"),
          h(
            674,
            "F\xfcr eine detaillierte Darstellung der jeweiligen Verarbeitungsformen und der Widerspruchsm\xf6glichkeiten (Opt-Out) verweisen wir auf die Datenschutzerkl\xe4rungen und Angaben der Betreiber der jeweiligen Netzwerke."
          ),
          d(),
          p(675, "p"),
          h(
            676,
            "Auch im Fall von Auskunftsanfragen und der Geltendmachung von Betroffenenrechten weisen wir darauf hin, dass diese am effektivsten bei den Anbietern geltend gemacht werden k\xf6nnen. Nur die Anbieter haben jeweils Zugriff auf die Daten der Nutzer und k\xf6nnen direkt entsprechende Ma\xdfnahmen ergreifen und Ausk\xfcnfte geben. Sollten Sie dennoch Hilfe ben\xf6tigen, dann k\xf6nnen Sie sich an uns wenden."
          ),
          d(),
          p(677, "ul", 37)(678, "li")(679, "strong"),
          h(680, "Verarbeitete Datenarten:"),
          d(),
          h(
            681,
            " Kontaktdaten (z.B. E-Mail, Telefonnummern); Inhaltsdaten (z.B. Eingaben in Onlineformularen); Nutzungsdaten (z.B. besuchte Webseiten, Interesse an Inhalten, Zugriffszeiten); Meta-, Kommunikations- und Verfahrensdaten (z. B. IP-Adressen, Zeitangaben, Identifikationsnummern, Einwilligungsstatus)."
          ),
          d(),
          p(682, "li")(683, "strong"),
          h(684, "Betroffene Personen:"),
          d(),
          h(
            685,
            " Nutzer (z.B. Webseitenbesucher, Nutzer von Onlinediensten)."
          ),
          d(),
          p(686, "li")(687, "strong"),
          h(688, "Zwecke der Verarbeitung:"),
          d(),
          h(
            689,
            " Kontaktanfragen und Kommunikation; Feedback (z.B. Sammeln von Feedback via Online-Formular); Marketing."
          ),
          d(),
          p(690, "li")(691, "strong"),
          h(692, "Rechtsgrundlagen:"),
          d(),
          h(693, " Berechtigte Interessen (Art. 6 Abs. 1 S. 1 lit. f) DSGVO)."),
          d()(),
          p(694, "h2", 67),
          h(695, "\xc4nderung und Aktualisierung der Datenschutzerkl\xe4rung"),
          d(),
          p(696, "p"),
          h(
            697,
            "Wir bitten Sie, sich regelm\xe4\xdfig \xfcber den Inhalt unserer Datenschutzerkl\xe4rung zu informieren. Wir passen die Datenschutzerkl\xe4rung an, sobald die \xc4nderungen der von uns durchgef\xfchrten Datenverarbeitungen dies erforderlich machen. Wir informieren Sie, sobald durch die \xc4nderungen eine Mitwirkungshandlung Ihrerseits (z.B. Einwilligung) oder eine sonstige individuelle Benachrichtigung erforderlich wird."
          ),
          d(),
          p(698, "p"),
          h(
            699,
            "Sofern wir in dieser Datenschutzerkl\xe4rung Adressen und Kontaktinformationen von Unternehmen und Organisationen angeben, bitten wir zu beachten, dass die Adressen sich \xfcber die Zeit \xe4ndern k\xf6nnen und bitten die Angaben vor Kontaktaufnahme zu pr\xfcfen."
          ),
          d(),
          p(700, "h2", 68),
          h(701, "Rechte der betroffenen Personen"),
          d(),
          p(702, "p"),
          h(
            703,
            "Ihnen stehen als Betroffene nach der DSGVO verschiedene Rechte zu, die sich insbesondere aus Art. 15 bis 21 DSGVO ergeben:"
          ),
          d(),
          p(704, "ul")(705, "li")(706, "strong"),
          h(
            707,
            "Widerspruchsrecht: Sie haben das Recht, aus Gr\xfcnden, die sich aus Ihrer besonderen Situation ergeben, jederzeit gegen die Verarbeitung der Sie betreffenden personenbezogenen Daten, die aufgrund von Art. 6 Abs. 1 lit. e oder f DSGVO erfolgt, Widerspruch einzulegen; dies gilt auch f\xfcr ein auf diese Bestimmungen gest\xfctztes Profiling. Werden die Sie betreffenden personenbezogenen Daten verarbeitet, um Direktwerbung zu betreiben, haben Sie das Recht, jederzeit Widerspruch gegen die Verarbeitung der Sie betreffenden personenbezogenen Daten zum Zwecke derartiger Werbung einzulegen; dies gilt auch f\xfcr das Profiling, soweit es mit solcher Direktwerbung in Verbindung steht."
          ),
          d()(),
          p(708, "li")(709, "strong"),
          h(710, "Widerrufsrecht bei Einwilligungen:"),
          d(),
          h(
            711,
            " Sie haben das Recht, erteilte Einwilligungen jederzeit zu widerrufen."
          ),
          d(),
          p(712, "li")(713, "strong"),
          h(714, "Auskunftsrecht:"),
          d(),
          h(
            715,
            " Sie haben das Recht, eine Best\xe4tigung dar\xfcber zu verlangen, ob betreffende Daten verarbeitet werden und auf Auskunft \xfcber diese Daten sowie auf weitere Informationen und Kopie der Daten entsprechend den gesetzlichen Vorgaben."
          ),
          d(),
          p(716, "li")(717, "strong"),
          h(718, "Recht auf Berichtigung:"),
          d(),
          h(
            719,
            " Sie haben entsprechend den gesetzlichen Vorgaben das Recht, die Vervollst\xe4ndigung der Sie betreffenden Daten oder die Berichtigung der Sie betreffenden unrichtigen Daten zu verlangen."
          ),
          d(),
          p(720, "li")(721, "strong"),
          h(
            722,
            "Recht auf L\xf6schung und Einschr\xe4nkung der Verarbeitung:"
          ),
          d(),
          h(
            723,
            " Sie haben nach Ma\xdfgabe der gesetzlichen Vorgaben das Recht, zu verlangen, dass Sie betreffende Daten unverz\xfcglich gel\xf6scht werden, bzw. alternativ nach Ma\xdfgabe der gesetzlichen Vorgaben eine Einschr\xe4nkung der Verarbeitung der Daten zu verlangen."
          ),
          d(),
          p(724, "li")(725, "strong"),
          h(726, "Recht auf Daten\xfcbertragbarkeit:"),
          d(),
          h(
            727,
            " Sie haben das Recht, Sie betreffende Daten, die Sie uns bereitgestellt haben, nach Ma\xdfgabe der gesetzlichen Vorgaben in einem strukturierten, g\xe4ngigen und maschinenlesbaren Format zu erhalten oder deren \xdcbermittlung an einen anderen Verantwortlichen zu fordern."
          ),
          d(),
          p(728, "li")(729, "strong"),
          h(730, "Beschwerde bei Aufsichtsbeh\xf6rde:"),
          d(),
          h(
            731,
            " Sie haben unbeschadet eines anderweitigen verwaltungsrechtlichen oder gerichtlichen Rechtsbehelfs das Recht auf Beschwerde bei einer Aufsichtsbeh\xf6rde, insbesondere in dem Mitgliedstaat ihres gew\xf6hnlichen Aufenthaltsorts, ihres Arbeitsplatzes oder des Orts des mutma\xdflichen Versto\xdfes, wenn Sie der Ansicht sind, dass die Verarbeitung der Sie betreffenden personenbezogenen Daten gegen die Vorgaben der DSGVO verst\xf6\xdft."
          ),
          d()()());
      }
      const Bae = [
        "10k",
        "10mp",
        "11mp",
        "123",
        "12mp",
        "13mp",
        "14mp",
        "15mp",
        "16mp",
        "17mp",
        "18mp",
        "18_up_rating",
        "19mp",
        "1k",
        "1k_plus",
        "1x_mobiledata",
        "20mp",
        "21mp",
        "22mp",
        "23mp",
        "24mp",
        "2k",
        "2k_plus",
        "2mp",
        "30fps",
        "30fps_select",
        "360",
        "3d_rotation",
        "3g_mobiledata",
        "3k",
        "3k_plus",
        "3mp",
        "3p",
        "4g_mobiledata",
        "4g_plus_mobiledata",
        "4k",
        "4k_plus",
        "4mp",
        "5g",
        "5k",
        "5k_plus",
        "5mp",
        "60fps",
        "60fps_select",
        "6k",
        "6k_plus",
        "6mp",
        "6_ft_apart",
        "7k",
        "7k_plus",
        "7mp",
        "8k",
        "8k_plus",
        "8mp",
        "9k",
        "9k_plus",
        "9mp",
        "abc",
        "accessibility",
        "accessibility_new",
        "accessible",
        "accessible_forward",
        "access_alarm",
        "access_alarms",
        "access_time",
        "access_time_filled",
        "account_balance",
        "account_balance_wallet",
        "account_box",
        "account_circle",
        "account_tree",
        "ac_unit",
        "adb",
        "add",
        "addchart",
        "add_alarm",
        "add_alert",
        "add_a_photo",
        "add_box",
        "add_business",
        "add_card",
        "add_chart",
        "add_circle",
        "add_circle_outline",
        "add_comment",
        "add_home",
        "add_home_work",
        "add_ic_call",
        "add_link",
        "add_location",
        "add_location_alt",
        "add_moderator",
        "add_photo_alternate",
        "add_reaction",
        "add_road",
        "add_shopping_cart",
        "add_task",
        "add_to_drive",
        "add_to_home_screen",
        "add_to_photos",
        "add_to_queue",
        "adf_scanner",
        "adjust",
        "admin_panel_settings",
        "ads_click",
        "ad_units",
        "agriculture",
        "air",
        "airlines",
        "airline_seat_flat",
        "airline_seat_flat_angled",
        "airline_seat_individual_suite",
        "airline_seat_legroom_extra",
        "airline_seat_legroom_normal",
        "airline_seat_legroom_reduced",
        "airline_seat_recline_extra",
        "airline_seat_recline_normal",
        "airline_stops",
        "airplanemode_active",
        "airplanemode_inactive",
        "airplane_ticket",
        "airplay",
        "airport_shuttle",
        "alarm",
        "alarm_add",
        "alarm_off",
        "alarm_on",
        "album",
        "align_horizontal_center",
        "align_horizontal_left",
        "align_horizontal_right",
        "align_vertical_bottom",
        "align_vertical_center",
        "align_vertical_top",
        "all_inbox",
        "all_inclusive",
        "all_out",
        "alternate_email",
        "alt_route",
        "analytics",
        "anchor",
        "android",
        "animation",
        "announcement",
        "aod",
        "apartment",
        "api",
        "approval",
        "apps",
        "apps_outage",
        "app_blocking",
        "app_registration",
        "app_settings_alt",
        "app_shortcut",
        "architecture",
        "archive",
        "area_chart",
        "arrow_back",
        "arrow_back_ios",
        "arrow_back_ios_new",
        "arrow_circle_down",
        "arrow_circle_left",
        "arrow_circle_right",
        "arrow_circle_up",
        "arrow_downward",
        "arrow_drop_down",
        "arrow_drop_down_circle",
        "arrow_drop_up",
        "arrow_forward",
        "arrow_forward_ios",
        "arrow_left",
        "arrow_outward",
        "arrow_right",
        "arrow_right_alt",
        "arrow_upward",
        "article",
        "art_track",
        "aspect_ratio",
        "assessment",
        "assignment",
        "assignment_ind",
        "assignment_late",
        "assignment_return",
        "assignment_returned",
        "assignment_turned_in",
        "assistant",
        "assistant_direction",
        "assistant_photo",
        "assist_walker",
        "assured_workload",
        "atm",
        "attachment",
        "attach_email",
        "attach_file",
        "attach_money",
        "attractions",
        "attribution",
        "audiotrack",
        "audio_file",
        "autofps_select",
        "autorenew",
        "auto_awesome",
        "auto_awesome_mosaic",
        "auto_awesome_motion",
        "auto_delete",
        "auto_fix_high",
        "auto_fix_normal",
        "auto_fix_off",
        "auto_graph",
        "auto_mode",
        "auto_stories",
        "av_timer",
        "baby_changing_station",
        "backpack",
        "backspace",
        "backup",
        "backup_table",
        "back_hand",
        "badge",
        "bakery_dining",
        "balance",
        "balcony",
        "ballot",
        "bar_chart",
        "batch_prediction",
        "bathroom",
        "bathtub",
        "battery_0_bar",
        "battery_1_bar",
        "battery_2_bar",
        "battery_3_bar",
        "battery_4_bar",
        "battery_5_bar",
        "battery_6_bar",
        "battery_alert",
        "battery_charging_full",
        "battery_full",
        "battery_saver",
        "battery_std",
        "battery_unknown",
        "beach_access",
        "bed",
        "bedroom_baby",
        "bedroom_child",
        "bedroom_parent",
        "bedtime",
        "bedtime_off",
        "beenhere",
        "bento",
        "bike_scooter",
        "biotech",
        "blender",
        "blind",
        "blinds",
        "blinds_closed",
        "block",
        "bloodtype",
        "bluetooth",
        "bluetooth_audio",
        "bluetooth_connected",
        "bluetooth_disabled",
        "bluetooth_drive",
        "bluetooth_searching",
        "blur_circular",
        "blur_linear",
        "blur_off",
        "blur_on",
        "bolt",
        "book",
        "bookmark",
        "bookmarks",
        "bookmark_add",
        "bookmark_added",
        "bookmark_border",
        "bookmark_remove",
        "book_online",
        "border_all",
        "border_bottom",
        "border_clear",
        "border_color",
        "border_horizontal",
        "border_inner",
        "border_left",
        "border_outer",
        "border_right",
        "border_style",
        "border_top",
        "border_vertical",
        "boy",
        "branding_watermark",
        "breakfast_dining",
        "brightness_1",
        "brightness_2",
        "brightness_3",
        "brightness_4",
        "brightness_5",
        "brightness_6",
        "brightness_7",
        "brightness_auto",
        "brightness_high",
        "brightness_low",
        "brightness_medium",
        "broadcast_on_home",
        "broadcast_on_personal",
        "broken_image",
        "browser_not_supported",
        "browser_updated",
        "browse_gallery",
        "brunch_dining",
        "brush",
        "bubble_chart",
        "bug_report",
        "build",
        "build_circle",
        "bungalow",
        "burst_mode",
        "business",
        "business_center",
        "bus_alert",
        "cabin",
        "cable",
        "cached",
        "cake",
        "calculate",
        "calendar_month",
        "calendar_today",
        "calendar_view_day",
        "calendar_view_month",
        "calendar_view_week",
        "call",
        "call_end",
        "call_made",
        "call_merge",
        "call_missed",
        "call_missed_outgoing",
        "call_received",
        "call_split",
        "call_to_action",
        "camera",
        "cameraswitch",
        "camera_alt",
        "camera_enhance",
        "camera_front",
        "camera_indoor",
        "camera_outdoor",
        "camera_rear",
        "camera_roll",
        "campaign",
        "cancel",
        "cancel_presentation",
        "cancel_schedule_send",
        "candlestick_chart",
        "card_giftcard",
        "card_membership",
        "card_travel",
        "carpenter",
        "car_crash",
        "car_rental",
        "car_repair",
        "cases",
        "casino",
        "cast",
        "castle",
        "cast_connected",
        "cast_for_education",
        "catching_pokemon",
        "category",
        "celebration",
        "cell_tower",
        "cell_wifi",
        "center_focus_strong",
        "center_focus_weak",
        "chair",
        "chair_alt",
        "chalet",
        "change_circle",
        "change_history",
        "charging_station",
        "chat",
        "chat_bubble",
        "chat_bubble_outline",
        "check",
        "checklist",
        "checklist_rtl",
        "checkroom",
        "check_box",
        "check_box_outline_blank",
        "check_circle",
        "check_circle_outline",
        "chevron_left",
        "chevron_right",
        "child_care",
        "child_friendly",
        "chrome_reader_mode",
        "church",
        "circle",
        "circle_notifications",
        "class",
        "cleaning_services",
        "clean_hands",
        "clear",
        "clear_all",
        "close",
        "closed_caption",
        "closed_caption_disabled",
        "closed_caption_off",
        "close_fullscreen",
        "cloud",
        "cloud_circle",
        "cloud_done",
        "cloud_download",
        "cloud_off",
        "cloud_queue",
        "cloud_sync",
        "cloud_upload",
        "co2",
        "code",
        "code_off",
        "coffee",
        "coffee_maker",
        "collections",
        "collections_bookmark",
        "colorize",
        "color_lens",
        "comment",
        "comments_disabled",
        "comment_bank",
        "commit",
        "commute",
        "compare",
        "compare_arrows",
        "compass_calibration",
        "compost",
        "compress",
        "computer",
        "confirmation_number",
        "connected_tv",
        "connecting_airports",
        "connect_without_contact",
        "construction",
        "contactless",
        "contacts",
        "contact_emergency",
        "contact_mail",
        "contact_page",
        "contact_phone",
        "contact_support",
        "content_copy",
        "content_cut",
        "content_paste",
        "content_paste_go",
        "content_paste_off",
        "content_paste_search",
        "contrast",
        "control_camera",
        "control_point",
        "control_point_duplicate",
        "cookie",
        "copyright",
        "copy_all",
        "coronavirus",
        "corporate_fare",
        "cottage",
        "countertops",
        "co_present",
        "create",
        "create_new_folder",
        "credit_card",
        "credit_card_off",
        "credit_score",
        "crib",
        "crisis_alert",
        "crop",
        "crop_16_9",
        "crop_3_2",
        "crop_5_4",
        "crop_7_5",
        "crop_din",
        "crop_free",
        "crop_landscape",
        "crop_original",
        "crop_portrait",
        "crop_rotate",
        "crop_square",
        "cruelty_free",
        "css",
        "currency_bitcoin",
        "currency_exchange",
        "currency_franc",
        "currency_lira",
        "currency_pound",
        "currency_ruble",
        "currency_rupee",
        "currency_yen",
        "currency_yuan",
        "curtains",
        "curtains_closed",
        "cyclone",
        "dangerous",
        "dark_mode",
        "dashboard",
        "dashboard_customize",
        "dataset",
        "dataset_linked",
        "data_array",
        "data_exploration",
        "data_object",
        "data_saver_off",
        "data_saver_on",
        "data_thresholding",
        "data_usage",
        "date_range",
        "deblur",
        "deck",
        "dehaze",
        "delete",
        "delete_forever",
        "delete_outline",
        "delete_sweep",
        "delivery_dining",
        "density_large",
        "density_medium",
        "density_small",
        "departure_board",
        "description",
        "deselect",
        "design_services",
        "desk",
        "desktop_access_disabled",
        "desktop_mac",
        "desktop_windows",
        "details",
        "developer_board",
        "developer_board_off",
        "developer_mode",
        "devices",
        "devices_fold",
        "devices_other",
        "device_hub",
        "device_thermostat",
        "device_unknown",
        "dialer_sip",
        "dialpad",
        "diamond",
        "difference",
        "dining",
        "dinner_dining",
        "directions",
        "directions_bike",
        "directions_boat",
        "directions_boat_filled",
        "directions_bus",
        "directions_bus_filled",
        "directions_car",
        "directions_car_filled",
        "directions_off",
        "directions_railway",
        "directions_railway_filled",
        "directions_run",
        "directions_subway",
        "directions_subway_filled",
        "directions_transit",
        "directions_transit_filled",
        "directions_walk",
        "dirty_lens",
        "disabled_by_default",
        "disabled_visible",
        "discount",
        "disc_full",
        "display_settings",
        "diversity_1",
        "diversity_2",
        "diversity_3",
        "dns",
        "dock",
        "document_scanner",
        "domain",
        "domain_add",
        "domain_disabled",
        "domain_verification",
        "done",
        "done_all",
        "done_outline",
        "donut_large",
        "donut_small",
        "doorbell",
        "door_back",
        "door_front",
        "door_sliding",
        "double_arrow",
        "downhill_skiing",
        "download",
        "downloading",
        "download_done",
        "download_for_offline",
        "do_disturb",
        "do_disturb_alt",
        "do_disturb_off",
        "do_disturb_on",
        "do_not_disturb",
        "do_not_disturb_alt",
        "do_not_disturb_off",
        "do_not_disturb_on",
        "do_not_disturb_on_total_silence",
        "do_not_step",
        "do_not_touch",
        "drafts",
        "drag_handle",
        "drag_indicator",
        "draw",
        "drive_eta",
        "drive_file_move",
        "drive_file_move_rtl",
        "drive_file_rename_outline",
        "drive_folder_upload",
        "dry",
        "dry_cleaning",
        "duo",
        "dvr",
        "dynamic_feed",
        "dynamic_form",
        "earbuds",
        "earbuds_battery",
        "east",
        "edgesensor_high",
        "edgesensor_low",
        "edit",
        "edit_attributes",
        "edit_calendar",
        "edit_location",
        "edit_location_alt",
        "edit_note",
        "edit_notifications",
        "edit_off",
        "edit_road",
        "egg",
        "egg_alt",
        "eject",
        "elderly",
        "elderly_woman",
        "electrical_services",
        "electric_bike",
        "electric_bolt",
        "electric_car",
        "electric_meter",
        "electric_moped",
        "electric_rickshaw",
        "electric_scooter",
        "elevator",
        "email",
        "emergency",
        "emergency_recording",
        "emergency_share",
        "emoji_emotions",
        "emoji_events",
        "emoji_food_beverage",
        "emoji_nature",
        "emoji_objects",
        "emoji_people",
        "emoji_symbols",
        "emoji_transportation",
        "energy_savings_leaf",
        "engineering",
        "enhanced_encryption",
        "equalizer",
        "error",
        "error_outline",
        "escalator",
        "escalator_warning",
        "euro",
        "euro_symbol",
        "event",
        "event_available",
        "event_busy",
        "event_note",
        "event_repeat",
        "event_seat",
        "ev_station",
        "exit_to_app",
        "expand",
        "expand_circle_down",
        "expand_less",
        "expand_more",
        "explicit",
        "explore",
        "explore_off",
        "exposure",
        "exposure_neg_1",
        "exposure_neg_2",
        "exposure_plus_1",
        "exposure_plus_2",
        "exposure_zero",
        "extension",
        "extension_off",
        "e_mobiledata",
        "face",
        "face_2",
        "face_3",
        "face_4",
        "face_5",
        "face_6",
        "face_retouching_natural",
        "face_retouching_off",
        "factory",
        "fact_check",
        "family_restroom",
        "fastfood",
        "fast_forward",
        "fast_rewind",
        "favorite",
        "favorite_border",
        "fax",
        "featured_play_list",
        "featured_video",
        "feed",
        "feedback",
        "female",
        "fence",
        "festival",
        "fiber_dvr",
        "fiber_manual_record",
        "fiber_new",
        "fiber_pin",
        "fiber_smart_record",
        "file_copy",
        "file_download",
        "file_download_done",
        "file_download_off",
        "file_open",
        "file_present",
        "file_upload",
        "filter",
        "filter_1",
        "filter_2",
        "filter_3",
        "filter_4",
        "filter_5",
        "filter_6",
        "filter_7",
        "filter_8",
        "filter_9",
        "filter_9_plus",
        "filter_alt",
        "filter_alt_off",
        "filter_b_and_w",
        "filter_center_focus",
        "filter_drama",
        "filter_frames",
        "filter_hdr",
        "filter_list",
        "filter_list_off",
        "filter_none",
        "filter_tilt_shift",
        "filter_vintage",
        "find_in_page",
        "find_replace",
        "fingerprint",
        "fireplace",
        "fire_extinguisher",
        "fire_hydrant_alt",
        "fire_truck",
        "first_page",
        "fitbit",
        "fitness_center",
        "fit_screen",
        "flag",
        "flag_circle",
        "flaky",
        "flare",
        "flashlight_off",
        "flashlight_on",
        "flash_auto",
        "flash_off",
        "flash_on",
        "flatware",
        "flight",
        "flight_class",
        "flight_land",
        "flight_takeoff",
        "flip",
        "flip_camera_android",
        "flip_camera_ios",
        "flip_to_back",
        "flip_to_front",
        "flood",
        "fluorescent",
        "flutter_dash",
        "fmd_bad",
        "fmd_good",
        "folder",
        "folder_copy",
        "folder_delete",
        "folder_off",
        "folder_open",
        "folder_shared",
        "folder_special",
        "folder_zip",
        "follow_the_signs",
        "font_download",
        "font_download_off",
        "food_bank",
        "forest",
        "fork_left",
        "fork_right",
        "format_align_center",
        "format_align_justify",
        "format_align_left",
        "format_align_right",
        "format_bold",
        "format_clear",
        "format_color_fill",
        "format_color_reset",
        "format_color_text",
        "format_indent_decrease",
        "format_indent_increase",
        "format_italic",
        "format_line_spacing",
        "format_list_bulleted",
        "format_list_numbered",
        "format_list_numbered_rtl",
        "format_overline",
        "format_paint",
        "format_quote",
        "format_shapes",
        "format_size",
        "format_strikethrough",
        "format_textdirection_l_to_r",
        "format_textdirection_r_to_l",
        "format_underlined",
        "fort",
        "forum",
        "forward",
        "forward_10",
        "forward_30",
        "forward_5",
        "forward_to_inbox",
        "foundation",
        "free_breakfast",
        "free_cancellation",
        "front_hand",
        "fullscreen",
        "fullscreen_exit",
        "functions",
        "gamepad",
        "games",
        "garage",
        "gas_meter",
        "gavel",
        "generating_tokens",
        "gesture",
        "get_app",
        "gif",
        "gif_box",
        "girl",
        "gite",
        "golf_course",
        "gpp_bad",
        "gpp_good",
        "gpp_maybe",
        "gps_fixed",
        "gps_not_fixed",
        "gps_off",
        "grade",
        "gradient",
        "grading",
        "grain",
        "graphic_eq",
        "grass",
        "grid_3x3",
        "grid_4x4",
        "grid_goldenratio",
        "grid_off",
        "grid_on",
        "grid_view",
        "group",
        "groups",
        "groups_2",
        "groups_3",
        "group_add",
        "group_off",
        "group_remove",
        "group_work",
        "g_mobiledata",
        "g_translate",
        "hail",
        "handshake",
        "handyman",
        "hardware",
        "hd",
        "hdr_auto",
        "hdr_auto_select",
        "hdr_enhanced_select",
        "hdr_off",
        "hdr_off_select",
        "hdr_on",
        "hdr_on_select",
        "hdr_plus",
        "hdr_strong",
        "hdr_weak",
        "headphones",
        "headphones_battery",
        "headset",
        "headset_mic",
        "headset_off",
        "healing",
        "health_and_safety",
        "hearing",
        "hearing_disabled",
        "heart_broken",
        "heat_pump",
        "height",
        "help",
        "help_center",
        "help_outline",
        "hevc",
        "hexagon",
        "hide_image",
        "hide_source",
        "highlight",
        "highlight_alt",
        "highlight_off",
        "high_quality",
        "hiking",
        "history",
        "history_edu",
        "history_toggle_off",
        "hive",
        "hls",
        "hls_off",
        "holiday_village",
        "home",
        "home_max",
        "home_mini",
        "home_repair_service",
        "home_work",
        "horizontal_distribute",
        "horizontal_rule",
        "horizontal_split",
        "hotel",
        "hotel_class",
        "hot_tub",
        "hourglass_bottom",
        "hourglass_disabled",
        "hourglass_empty",
        "hourglass_full",
        "hourglass_top",
        "house",
        "houseboat",
        "house_siding",
        "how_to_reg",
        "how_to_vote",
        "html",
        "http",
        "https",
        "hub",
        "hvac",
        "h_mobiledata",
        "h_plus_mobiledata",
        "icecream",
        "ice_skating",
        "image",
        "imagesearch_roller",
        "image_aspect_ratio",
        "image_not_supported",
        "image_search",
        "important_devices",
        "import_contacts",
        "import_export",
        "inbox",
        "incomplete_circle",
        "indeterminate_check_box",
        "info",
        "input",
        "insert_chart",
        "insert_chart_outlined",
        "insert_comment",
        "insert_drive_file",
        "insert_emoticon",
        "insert_invitation",
        "insert_link",
        "insert_page_break",
        "insert_photo",
        "insights",
        "install_desktop",
        "install_mobile",
        "integration_instructions",
        "interests",
        "interpreter_mode",
        "inventory",
        "inventory_2",
        "invert_colors",
        "invert_colors_off",
        "ios_share",
        "iron",
        "iso",
        "javascript",
        "join_full",
        "join_inner",
        "join_left",
        "join_right",
        "kayaking",
        "kebab_dining",
        "key",
        "keyboard",
        "keyboard_alt",
        "keyboard_arrow_down",
        "keyboard_arrow_left",
        "keyboard_arrow_right",
        "keyboard_arrow_up",
        "keyboard_backspace",
        "keyboard_capslock",
        "keyboard_command_key",
        "keyboard_control_key",
        "keyboard_double_arrow_down",
        "keyboard_double_arrow_left",
        "keyboard_double_arrow_right",
        "keyboard_double_arrow_up",
        "keyboard_hide",
        "keyboard_option_key",
        "keyboard_return",
        "keyboard_tab",
        "keyboard_voice",
        "key_off",
        "king_bed",
        "kitchen",
        "kitesurfing",
        "label",
        "label_important",
        "label_off",
        "lan",
        "landscape",
        "landslide",
        "language",
        "laptop",
        "laptop_chromebook",
        "laptop_mac",
        "laptop_windows",
        "last_page",
        "launch",
        "layers",
        "layers_clear",
        "leaderboard",
        "leak_add",
        "leak_remove",
        "legend_toggle",
        "lens",
        "lens_blur",
        "library_add",
        "library_add_check",
        "library_books",
        "library_music",
        "light",
        "lightbulb",
        "lightbulb_circle",
        "light_mode",
        "linear_scale",
        "line_axis",
        "line_style",
        "line_weight",
        "link",
        "linked_camera",
        "link_off",
        "liquor",
        "list",
        "list_alt",
        "live_help",
        "live_tv",
        "living",
        "local_activity",
        "local_airport",
        "local_atm",
        "local_bar",
        "local_cafe",
        "local_car_wash",
        "local_convenience_store",
        "local_dining",
        "local_drink",
        "local_fire_department",
        "local_florist",
        "local_gas_station",
        "local_grocery_store",
        "local_hospital",
        "local_hotel",
        "local_laundry_service",
        "local_library",
        "local_mall",
        "local_movies",
        "local_offer",
        "local_parking",
        "local_pharmacy",
        "local_phone",
        "local_pizza",
        "local_play",
        "local_police",
        "local_post_office",
        "local_printshop",
        "local_see",
        "local_shipping",
        "local_taxi",
        "location_city",
        "location_disabled",
        "location_off",
        "location_on",
        "location_searching",
        "lock",
        "lock_clock",
        "lock_open",
        "lock_person",
        "lock_reset",
        "login",
        "logout",
        "logo_dev",
        "looks",
        "looks_3",
        "looks_4",
        "looks_5",
        "looks_6",
        "looks_one",
        "looks_two",
        "loop",
        "loupe",
        "low_priority",
        "loyalty",
        "lte_mobiledata",
        "lte_plus_mobiledata",
        "luggage",
        "lunch_dining",
        "lyrics",
        "macro_off",
        "mail",
        "mail_lock",
        "mail_outline",
        "male",
        "man",
        "manage_accounts",
        "manage_history",
        "manage_search",
        "man_2",
        "man_3",
        "man_4",
        "map",
        "maps_home_work",
        "maps_ugc",
        "margin",
        "markunread",
        "markunread_mailbox",
        "mark_as_unread",
        "mark_chat_read",
        "mark_chat_unread",
        "mark_email_read",
        "mark_email_unread",
        "mark_unread_chat_alt",
        "masks",
        "maximize",
        "mediation",
        "media_bluetooth_off",
        "media_bluetooth_on",
        "medical_information",
        "medical_services",
        "medication",
        "medication_liquid",
        "meeting_room",
        "memory",
        "menu",
        "menu_book",
        "menu_open",
        "merge",
        "merge_type",
        "message",
        "mic",
        "microwave",
        "mic_external_off",
        "mic_external_on",
        "mic_none",
        "mic_off",
        "military_tech",
        "minimize",
        "minor_crash",
        "miscellaneous_services",
        "missed_video_call",
        "mms",
        "mobiledata_off",
        "mobile_friendly",
        "mobile_off",
        "mobile_screen_share",
        "mode",
        "model_training",
        "mode_comment",
        "mode_edit",
        "mode_edit_outline",
        "mode_fan_off",
        "mode_night",
        "mode_of_travel",
        "mode_standby",
        "monetization_on",
        "money",
        "money_off",
        "money_off_csred",
        "monitor",
        "monitor_heart",
        "monitor_weight",
        "monochrome_photos",
        "mood",
        "mood_bad",
        "moped",
        "more",
        "more_horiz",
        "more_time",
        "more_vert",
        "mosque",
        "motion_photos_auto",
        "motion_photos_off",
        "motion_photos_on",
        "motion_photos_pause",
        "motion_photos_paused",
        "mouse",
        "move_down",
        "move_to_inbox",
        "move_up",
        "movie",
        "movie_creation",
        "movie_filter",
        "moving",
        "mp",
        "multiline_chart",
        "multiple_stop",
        "museum",
        "music_note",
        "music_off",
        "music_video",
        "my_location",
        "nat",
        "nature",
        "nature_people",
        "navigate_before",
        "navigate_next",
        "navigation",
        "nearby_error",
        "nearby_off",
        "near_me",
        "near_me_disabled",
        "nest_cam_wired_stand",
        "network_cell",
        "network_check",
        "network_locked",
        "network_ping",
        "network_wifi",
        "network_wifi_1_bar",
        "network_wifi_2_bar",
        "network_wifi_3_bar",
        "newspaper",
        "new_label",
        "new_releases",
        "next_plan",
        "next_week",
        "nfc",
        "nightlife",
        "nightlight",
        "nightlight_round",
        "nights_stay",
        "night_shelter",
        "noise_aware",
        "noise_control_off",
        "nordic_walking",
        "north",
        "north_east",
        "north_west",
        "note",
        "notes",
        "note_add",
        "note_alt",
        "notifications",
        "notifications_active",
        "notifications_none",
        "notifications_off",
        "notifications_paused",
        "notification_add",
        "notification_important",
        "not_accessible",
        "not_interested",
        "not_listed_location",
        "not_started",
        "no_accounts",
        "no_adult_content",
        "no_backpack",
        "no_cell",
        "no_crash",
        "no_drinks",
        "no_encryption",
        "no_encryption_gmailerrorred",
        "no_flash",
        "no_food",
        "no_luggage",
        "no_meals",
        "no_meeting_room",
        "no_photography",
        "no_sim",
        "no_stroller",
        "no_transfer",
        "numbers",
        "offline_bolt",
        "offline_pin",
        "offline_share",
        "oil_barrel",
        "ondemand_video",
        "online_prediction",
        "on_device_training",
        "opacity",
        "open_in_browser",
        "open_in_full",
        "open_in_new",
        "open_in_new_off",
        "open_with",
        "other_houses",
        "outbound",
        "outbox",
        "outdoor_grill",
        "outlet",
        "outlined_flag",
        "output",
        "padding",
        "pages",
        "pageview",
        "paid",
        "palette",
        "panorama",
        "panorama_fish_eye",
        "panorama_horizontal",
        "panorama_horizontal_select",
        "panorama_photosphere",
        "panorama_photosphere_select",
        "panorama_vertical",
        "panorama_vertical_select",
        "panorama_wide_angle",
        "panorama_wide_angle_select",
        "pan_tool",
        "pan_tool_alt",
        "paragliding",
        "park",
        "party_mode",
        "password",
        "pattern",
        "pause",
        "pause_circle",
        "pause_circle_filled",
        "pause_circle_outline",
        "pause_presentation",
        "payment",
        "payments",
        "pedal_bike",
        "pending",
        "pending_actions",
        "pentagon",
        "people",
        "people_alt",
        "people_outline",
        "percent",
        "perm_camera_mic",
        "perm_contact_calendar",
        "perm_data_setting",
        "perm_device_information",
        "perm_identity",
        "perm_media",
        "perm_phone_msg",
        "perm_scan_wifi",
        "person",
        "personal_injury",
        "personal_video",
        "person_2",
        "person_3",
        "person_4",
        "person_add",
        "person_add_alt",
        "person_add_alt_1",
        "person_add_disabled",
        "person_off",
        "person_outline",
        "person_pin",
        "person_pin_circle",
        "person_remove",
        "person_remove_alt_1",
        "person_search",
        "pest_control",
        "pest_control_rodent",
        "pets",
        "phishing",
        "phone",
        "phonelink",
        "phonelink_erase",
        "phonelink_lock",
        "phonelink_off",
        "phonelink_ring",
        "phonelink_setup",
        "phone_android",
        "phone_bluetooth_speaker",
        "phone_callback",
        "phone_disabled",
        "phone_enabled",
        "phone_forwarded",
        "phone_iphone",
        "phone_locked",
        "phone_missed",
        "phone_paused",
        "photo",
        "photo_album",
        "photo_camera",
        "photo_camera_back",
        "photo_camera_front",
        "photo_filter",
        "photo_library",
        "photo_size_select_actual",
        "photo_size_select_large",
        "photo_size_select_small",
        "php",
        "piano",
        "piano_off",
        "picture_as_pdf",
        "picture_in_picture",
        "picture_in_picture_alt",
        "pie_chart",
        "pie_chart_outline",
        "pin",
        "pinch",
        "pin_drop",
        "pin_end",
        "pin_invoke",
        "pivot_table_chart",
        "pix",
        "place",
        "plagiarism",
        "playlist_add",
        "playlist_add_check",
        "playlist_add_check_circle",
        "playlist_add_circle",
        "playlist_play",
        "playlist_remove",
        "play_arrow",
        "play_circle",
        "play_circle_filled",
        "play_circle_outline",
        "play_disabled",
        "play_for_work",
        "play_lesson",
        "plumbing",
        "plus_one",
        "podcasts",
        "point_of_sale",
        "policy",
        "poll",
        "polyline",
        "polymer",
        "pool",
        "portable_wifi_off",
        "portrait",
        "post_add",
        "power",
        "power_input",
        "power_off",
        "power_settings_new",
        "precision_manufacturing",
        "pregnant_woman",
        "present_to_all",
        "preview",
        "price_change",
        "price_check",
        "print",
        "print_disabled",
        "priority_high",
        "privacy_tip",
        "private_connectivity",
        "production_quantity_limits",
        "propane",
        "propane_tank",
        "psychology",
        "psychology_alt",
        "public",
        "public_off",
        "publish",
        "published_with_changes",
        "punch_clock",
        "push_pin",
        "qr_code",
        "qr_code_2",
        "qr_code_scanner",
        "query_builder",
        "query_stats",
        "question_answer",
        "question_mark",
        "queue",
        "queue_music",
        "queue_play_next",
        "quickreply",
        "quiz",
        "radar",
        "radio",
        "radio_button_checked",
        "radio_button_unchecked",
        "railway_alert",
        "ramen_dining",
        "ramp_left",
        "ramp_right",
        "rate_review",
        "raw_off",
        "raw_on",
        "read_more",
        "real_estate_agent",
        "receipt",
        "receipt_long",
        "recent_actors",
        "recommend",
        "record_voice_over",
        "rectangle",
        "recycling",
        "redeem",
        "redo",
        "reduce_capacity",
        "refresh",
        "remember_me",
        "remove",
        "remove_circle",
        "remove_circle_outline",
        "remove_done",
        "remove_from_queue",
        "remove_moderator",
        "remove_red_eye",
        "remove_road",
        "remove_shopping_cart",
        "reorder",
        "repartition",
        "repeat",
        "repeat_on",
        "repeat_one",
        "repeat_one_on",
        "replay",
        "replay_10",
        "replay_30",
        "replay_5",
        "replay_circle_filled",
        "reply",
        "reply_all",
        "report",
        "report_gmailerrorred",
        "report_off",
        "report_problem",
        "request_page",
        "request_quote",
        "reset_tv",
        "restart_alt",
        "restaurant",
        "restaurant_menu",
        "restore",
        "restore_from_trash",
        "restore_page",
        "reviews",
        "rice_bowl",
        "ring_volume",
        "rocket",
        "rocket_launch",
        "roller_shades",
        "roller_shades_closed",
        "roller_skating",
        "roofing",
        "room",
        "room_preferences",
        "room_service",
        "rotate_90_degrees_ccw",
        "rotate_90_degrees_cw",
        "rotate_left",
        "rotate_right",
        "roundabout_left",
        "roundabout_right",
        "rounded_corner",
        "route",
        "router",
        "rowing",
        "rss_feed",
        "rsvp",
        "rtt",
        "rule",
        "rule_folder",
        "running_with_errors",
        "run_circle",
        "rv_hookup",
        "r_mobiledata",
        "safety_check",
        "safety_divider",
        "sailing",
        "sanitizer",
        "satellite",
        "satellite_alt",
        "save",
        "saved_search",
        "save_alt",
        "save_as",
        "savings",
        "scale",
        "scanner",
        "scatter_plot",
        "schedule",
        "schedule_send",
        "schema",
        "school",
        "science",
        "score",
        "scoreboard",
        "screenshot",
        "screenshot_monitor",
        "screen_lock_landscape",
        "screen_lock_portrait",
        "screen_lock_rotation",
        "screen_rotation",
        "screen_rotation_alt",
        "screen_search_desktop",
        "screen_share",
        "scuba_diving",
        "sd",
        "sd_card",
        "sd_card_alert",
        "sd_storage",
        "search",
        "search_off",
        "security",
        "security_update",
        "security_update_good",
        "security_update_warning",
        "segment",
        "select_all",
        "self_improvement",
        "sell",
        "send",
        "send_and_archive",
        "send_time_extension",
        "send_to_mobile",
        "sensors",
        "sensors_off",
        "sensor_door",
        "sensor_occupied",
        "sensor_window",
        "sentiment_dissatisfied",
        "sentiment_neutral",
        "sentiment_satisfied",
        "sentiment_satisfied_alt",
        "sentiment_very_dissatisfied",
        "sentiment_very_satisfied",
        "settings",
        "settings_accessibility",
        "settings_applications",
        "settings_backup_restore",
        "settings_bluetooth",
        "settings_brightness",
        "settings_cell",
        "settings_ethernet",
        "settings_input_antenna",
        "settings_input_component",
        "settings_input_composite",
        "settings_input_hdmi",
        "settings_input_svideo",
        "settings_overscan",
        "settings_phone",
        "settings_power",
        "settings_remote",
        "settings_suggest",
        "settings_system_daydream",
        "settings_voice",
        "set_meal",
        "severe_cold",
        "shape_line",
        "share",
        "share_location",
        "shield",
        "shield_moon",
        "shop",
        "shopping_bag",
        "shopping_basket",
        "shopping_cart",
        "shopping_cart_checkout",
        "shop_2",
        "shop_two",
        "shortcut",
        "short_text",
        "shower",
        "show_chart",
        "shuffle",
        "shuffle_on",
        "shutter_speed",
        "sick",
        "signal_cellular_0_bar",
        "signal_cellular_4_bar",
        "signal_cellular_alt",
        "signal_cellular_alt_1_bar",
        "signal_cellular_alt_2_bar",
        "signal_cellular_connected_no_internet_0_bar",
        "signal_cellular_connected_no_internet_4_bar",
        "signal_cellular_nodata",
        "signal_cellular_no_sim",
        "signal_cellular_null",
        "signal_cellular_off",
        "signal_wifi_0_bar",
        "signal_wifi_4_bar",
        "signal_wifi_4_bar_lock",
        "signal_wifi_bad",
        "signal_wifi_connected_no_internet_4",
        "signal_wifi_off",
        "signal_wifi_statusbar_4_bar",
        "signal_wifi_statusbar_connected_no_internet_4",
        "signal_wifi_statusbar_null",
        "signpost",
        "sign_language",
        "sim_card",
        "sim_card_alert",
        "sim_card_download",
        "single_bed",
        "sip",
        "skateboarding",
        "skip_next",
        "skip_previous",
        "sledding",
        "slideshow",
        "slow_motion_video",
        "smartphone",
        "smart_button",
        "smart_display",
        "smart_screen",
        "smart_toy",
        "smoke_free",
        "smoking_rooms",
        "sms",
        "sms_failed",
        "snippet_folder",
        "snooze",
        "snowboarding",
        "snowmobile",
        "snowshoeing",
        "soap",
        "social_distance",
        "solar_power",
        "sort",
        "sort_by_alpha",
        "sos",
        "soup_kitchen",
        "source",
        "south",
        "south_america",
        "south_east",
        "south_west",
        "spa",
        "space_bar",
        "space_dashboard",
        "spatial_audio",
        "spatial_audio_off",
        "spatial_tracking",
        "speaker",
        "speaker_group",
        "speaker_notes",
        "speaker_notes_off",
        "speaker_phone",
        "speed",
        "spellcheck",
        "splitscreen",
        "spoke",
        "sports",
        "sports_bar",
        "sports_baseball",
        "sports_basketball",
        "sports_cricket",
        "sports_esports",
        "sports_football",
        "sports_golf",
        "sports_gymnastics",
        "sports_handball",
        "sports_hockey",
        "sports_kabaddi",
        "sports_martial_arts",
        "sports_mma",
        "sports_motorsports",
        "sports_rugby",
        "sports_score",
        "sports_soccer",
        "sports_tennis",
        "sports_volleyball",
        "square",
        "square_foot",
        "ssid_chart",
        "stacked_bar_chart",
        "stacked_line_chart",
        "stadium",
        "stairs",
        "star",
        "stars",
        "start",
        "star_border",
        "star_border_purple500",
        "star_half",
        "star_outline",
        "star_purple500",
        "star_rate",
        "stay_current_landscape",
        "stay_current_portrait",
        "stay_primary_landscape",
        "stay_primary_portrait",
        "sticky_note_2",
        "stop",
        "stop_circle",
        "stop_screen_share",
        "storage",
        "store",
        "storefront",
        "store_mall_directory",
        "storm",
        "straight",
        "straighten",
        "stream",
        "streetview",
        "strikethrough_s",
        "stroller",
        "style",
        "subdirectory_arrow_left",
        "subdirectory_arrow_right",
        "subject",
        "subscript",
        "subscriptions",
        "subtitles",
        "subtitles_off",
        "subway",
        "summarize",
        "superscript",
        "supervised_user_circle",
        "supervisor_account",
        "support",
        "support_agent",
        "surfing",
        "surround_sound",
        "swap_calls",
        "swap_horiz",
        "swap_horizontal_circle",
        "swap_vert",
        "swap_vertical_circle",
        "swipe",
        "swipe_down",
        "swipe_down_alt",
        "swipe_left",
        "swipe_left_alt",
        "swipe_right",
        "swipe_right_alt",
        "swipe_up",
        "swipe_up_alt",
        "swipe_vertical",
        "switch_access_shortcut",
        "switch_access_shortcut_add",
        "switch_account",
        "switch_camera",
        "switch_left",
        "switch_right",
        "switch_video",
        "synagogue",
        "sync",
        "sync_alt",
        "sync_disabled",
        "sync_lock",
        "sync_problem",
        "system_security_update",
        "system_security_update_good",
        "system_security_update_warning",
        "system_update",
        "system_update_alt",
        "tab",
        "tablet",
        "tablet_android",
        "tablet_mac",
        "table_bar",
        "table_chart",
        "table_restaurant",
        "table_rows",
        "table_view",
        "tab_unselected",
        "tag",
        "tag_faces",
        "takeout_dining",
        "tapas",
        "tap_and_play",
        "task",
        "task_alt",
        "taxi_alert",
        "temple_buddhist",
        "temple_hindu",
        "terminal",
        "terrain",
        "textsms",
        "texture",
        "text_decrease",
        "text_fields",
        "text_format",
        "text_increase",
        "text_rotate_up",
        "text_rotate_vertical",
        "text_rotation_angledown",
        "text_rotation_angleup",
        "text_rotation_down",
        "text_rotation_none",
        "text_snippet",
        "theaters",
        "theater_comedy",
        "thermostat",
        "thermostat_auto",
        "thumbs_up_down",
        "thumb_down",
        "thumb_down_alt",
        "thumb_down_off_alt",
        "thumb_up",
        "thumb_up_alt",
        "thumb_up_off_alt",
        "thunderstorm",
        "timelapse",
        "timeline",
        "timer",
        "timer_10",
        "timer_10_select",
        "timer_3",
        "timer_3_select",
        "timer_off",
        "time_to_leave",
        "tips_and_updates",
        "tire_repair",
        "title",
        "toc",
        "today",
        "toggle_off",
        "toggle_on",
        "token",
        "toll",
        "tonality",
        "topic",
        "tornado",
        "touch_app",
        "tour",
        "toys",
        "track_changes",
        "traffic",
        "train",
        "tram",
        "transcribe",
        "transfer_within_a_station",
        "transform",
        "transgender",
        "transit_enterexit",
        "translate",
        "travel_explore",
        "trending_down",
        "trending_flat",
        "trending_up",
        "trip_origin",
        "troubleshoot",
        "try",
        "tsunami",
        "tty",
        "tune",
        "tungsten",
        "turned_in",
        "turned_in_not",
        "turn_left",
        "turn_right",
        "turn_sharp_left",
        "turn_sharp_right",
        "turn_slight_left",
        "turn_slight_right",
        "tv",
        "tv_off",
        "two_wheeler",
        "type_specimen",
        "umbrella",
        "unarchive",
        "undo",
        "unfold_less",
        "unfold_less_double",
        "unfold_more",
        "unfold_more_double",
        "unpublished",
        "unsubscribe",
        "upcoming",
        "update",
        "update_disabled",
        "upgrade",
        "upload",
        "upload_file",
        "usb",
        "usb_off",
        "u_turn_left",
        "u_turn_right",
        "vaccines",
        "vape_free",
        "vaping_rooms",
        "verified",
        "verified_user",
        "vertical_align_bottom",
        "vertical_align_center",
        "vertical_align_top",
        "vertical_distribute",
        "vertical_shades",
        "vertical_shades_closed",
        "vertical_split",
        "vibration",
        "videocam",
        "videocam_off",
        "videogame_asset",
        "videogame_asset_off",
        "video_call",
        "video_camera_back",
        "video_camera_front",
        "video_chat",
        "video_file",
        "video_label",
        "video_library",
        "video_settings",
        "video_stable",
        "view_agenda",
        "view_array",
        "view_carousel",
        "view_column",
        "view_comfy",
        "view_comfy_alt",
        "view_compact",
        "view_compact_alt",
        "view_cozy",
        "view_day",
        "view_headline",
        "view_in_ar",
        "view_kanban",
        "view_list",
        "view_module",
        "view_quilt",
        "view_sidebar",
        "view_stream",
        "view_timeline",
        "view_week",
        "vignette",
        "villa",
        "visibility",
        "visibility_off",
        "voicemail",
        "voice_chat",
        "voice_over_off",
        "volcano",
        "volume_down",
        "volume_mute",
        "volume_off",
        "volume_up",
        "volunteer_activism",
        "vpn_key",
        "vpn_key_off",
        "vpn_lock",
        "vrpano",
        "wallet",
        "wallpaper",
        "warehouse",
        "warning",
        "warning_amber",
        "wash",
        "watch",
        "watch_later",
        "watch_off",
        "water",
        "waterfall_chart",
        "water_damage",
        "water_drop",
        "waves",
        "waving_hand",
        "wb_auto",
        "wb_cloudy",
        "wb_incandescent",
        "wb_iridescent",
        "wb_shade",
        "wb_sunny",
        "wb_twilight",
        "wc",
        "web",
        "webhook",
        "web_asset",
        "web_asset_off",
        "web_stories",
        "weekend",
        "west",
        "whatshot",
        "wheelchair_pickup",
        "where_to_vote",
        "widgets",
        "width_full",
        "width_normal",
        "width_wide",
        "wifi",
        "wifi_1_bar",
        "wifi_2_bar",
        "wifi_calling",
        "wifi_calling_3",
        "wifi_channel",
        "wifi_find",
        "wifi_lock",
        "wifi_off",
        "wifi_password",
        "wifi_protected_setup",
        "wifi_tethering",
        "wifi_tethering_error",
        "wifi_tethering_off",
        "window",
        "wind_power",
        "wine_bar",
        "woman",
        "woman_2",
        "work",
        "workspaces",
        "workspace_premium",
        "work_history",
        "work_off",
        "work_outline",
        "wrap_text",
        "wrong_location",
        "wysiwyg",
        "yard",
        "youtube_searched_for",
        "zoom_in",
        "zoom_in_map",
        "zoom_out",
        "zoom_out_map",
      ];
      let Vae = (() => {
        class e {
          constructor(t, i) {
            (this._http = t),
              (this.sanitizer = i),
              (this._loadedIcons = new Map()),
              (this.isLoading = !1),
              (this.timer = (r) => new Promise((o) => setTimeout(o, r)));
          }
          loadIconSvg(t, i = rw.Round) {
            var r = this;
            return fr(function* () {
              let o = 0;
              for (; r.isLoading && o < 30; ) yield r.timer(100), o++;
              r.isLoading = !0;
              let s = r._loadedIcons.get(t);
              if (!s) {
                let a = r.sanitizer.bypassSecurityTrustHtml(
                  yield (function Xoe(e, n) {
                    const t = "object" == typeof n;
                    return new Promise((i, r) => {
                      let s,
                        o = !1;
                      e.subscribe({
                        next: (a) => {
                          (s = a), (o = !0);
                        },
                        error: r,
                        complete: () => {
                          o ? i(s) : t ? i(n.defaultValue) : r(new ed());
                        },
                      });
                    });
                  })(r._http.get(`./${i}/${t}.svg`, { responseType: "text" }))
                );
                return r._loadedIcons.set(t, a), (r.isLoading = !1), a;
              }
              return (r.isLoading = !1), s;
            })();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(tw), O(tv));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      var fF = (function (e) {
          return (
            (e.sm = "sm"),
            (e.md = "md"),
            (e.lg = "lg"),
            (e.xl = "xl"),
            (e.xxl = "xxl"),
            e
          );
        })(fF || {}),
        rw = (function (e) {
          return (e.Round = "round"), e;
        })(rw || {});
      let Ql = (() => {
          class e {
            set name(t) {
              (this._name = t),
                this._iconService.loadIconSvg(t).then((i) => (this.svg = i));
            }
            get name() {
              return this._name;
            }
            constructor(t, i, r, o) {
              (this._http = t),
                (this.sanitizer = i),
                (this._iconService = r),
                (this._document = o),
                (this.iconList = Bae),
                (this._loadedIcons = []),
                (this._name = ""),
                (this.size = fF.md),
                (this.theme = rw.Round),
                (this.color = ""),
                (this.svg = "");
            }
            get iconClass() {
              return `ff-icon ${this._name} ff-icon-size-${this.size}`;
            }
            ngOnInit() {
              var t = this;
              return fr(function* () {
                t.svg = yield t._iconService.loadIconSvg(t._name);
              })();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(tw), M(tv), M(Vae), M(Ht));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["ff-icon"]],
              hostVars: 2,
              hostBindings: function (i, r) {
                2 & i && Te(r.iconClass);
              },
              inputs: {
                name: "name",
                size: "size",
                theme: "theme",
                color: "color",
                ariaLabel: "ariaLabel",
              },
              decls: 1,
              vars: 3,
              consts: [[3, "innerHTML"]],
              template: function (i, r) {
                1 & i && k(0, "div", 0),
                  2 & i && (Te("color-" + r.color), x("innerHTML", r.svg, zo));
              },
            }));
          }
          return e;
        })(),
        Uae = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr, xse] }));
          }
          return e;
        })();
      var ha = (function (e) {
          return (
            (e.Small = "small-size"),
            (e.Regular = "regular-size"),
            (e.Large = "large-size"),
            e
          );
        })(ha || {}),
        Xl = (function (e) {
          return (e.Portrait = "portrait"), (e.Landscape = "landscape"), e;
        })(Xl || {}),
        ys = (function (e) {
          return (
            (e.Desktop = "desktop"),
            (e.Console = "console"),
            (e.Mobile = "mobile"),
            (e.Tablet = "tablet"),
            (e.SmartTV = "smarttv"),
            (e.Wearable = "wearable"),
            (e.Embedded = "embedded"),
            e
          );
        })(ys || {});
      class Wae {
        constructor(n, t) {
          (this.width = n), (this.height = t);
        }
      }
      let sw = (() => {
        class e {
          static #e = (this.CLASS_PREFIX = "device-");
          get deviceType() {
            return this._deviceTypeEmitter.pipe(uc());
          }
          get deviceOrientation() {
            return this._deviceOrientationEmitter.pipe(uc());
          }
          get size() {
            return this._sizeEmitter.pipe(uc());
          }
          get isDesktop() {
            return this.deviceType.pipe(Ae((t) => t === ys.Desktop));
          }
          get isMobile() {
            return this.deviceType.pipe(Ae((t) => t === ys.Mobile));
          }
          get isTablet() {
            return this.deviceType.pipe(Ae((t) => t === ys.Tablet));
          }
          get isSmartTV() {
            return this.deviceType.pipe(Ae((t) => t === ys.SmartTV));
          }
          get isWearable() {
            return this.deviceType.pipe(Ae((t) => t === ys.Wearable));
          }
          get hasPortraitOrientation() {
            return this.deviceOrientation.pipe(Ae((t) => t === Xl.Portrait));
          }
          get hasLandscapeOrientation() {
            return this.deviceOrientation.pipe(Ae((t) => t === Xl.Landscape));
          }
          constructor(t, i) {
            (this._document = i),
              (this._refreshTrigger = new Ze()),
              (this._deviceTypeEmitter = new ct(1)),
              (this._deviceOrientationEmitter = new ct(1)),
              (this._sizeEmitter = new ct(1)),
              (this._renderer = t.createRenderer(null, null));
          }
          initialize() {
            var t = this;
            return fr(function* () {
              t._refreshTrigger
                .pipe(
                  (function Joe(e, n = KP) {
                    return kt((t, i) => {
                      let r = null,
                        o = null,
                        s = null;
                      const a = () => {
                        if (r) {
                          r.unsubscribe(), (r = null);
                          const c = o;
                          (o = null), i.next(c);
                        }
                      };
                      function l() {
                        const c = s + e,
                          u = n.now();
                        if (u < c)
                          return (
                            (r = this.schedule(void 0, c - u)), void i.add(r)
                          );
                        a();
                      }
                      t.subscribe(
                        Tt(
                          i,
                          (c) => {
                            (o = c),
                              (s = n.now()),
                              r || ((r = n.schedule(l, e)), i.add(r));
                          },
                          () => {
                            a(), i.complete();
                          },
                          void 0,
                          () => {
                            o = r = null;
                          }
                        )
                      );
                    });
                  })(100)
                )
                .subscribe(() => t.refresh()),
                window.addEventListener("resize", () =>
                  t._refreshTrigger.next()
                ),
                window.addEventListener("load", () => t.refresh());
            })();
          }
          refresh() {
            (this._deviceInfo = new Ese.UAParser().getDevice()),
              (this._deviceType = this.getDeviceType()),
              (this._deviceOrientation = this.getDeviceOrientation()),
              (this._size = this.getDeviceSize()),
              this.replaceMarkerClass(ys, this._deviceType),
              this.replaceMarkerClass(Xl, this._deviceOrientation),
              this.replaceMarkerClass(ha, this._size),
              this._deviceTypeEmitter.next(this._deviceType),
              this._deviceOrientationEmitter.next(this._deviceOrientation),
              this._sizeEmitter.next(this._size);
          }
          getDeviceType() {
            return this._deviceInfo.type || ys.Desktop;
          }
          getDeviceOrientation() {
            const t = this.getScreenSize();
            return t.width >= t.height ? Xl.Landscape : Xl.Portrait;
          }
          getScreenSize() {
            return new Wae(window.innerWidth, window.innerHeight);
          }
          getDeviceSize() {
            const t = this.getScreenSize();
            return t.width >= this.getBreakpointValue(ha.Large)
              ? ha.Large
              : t.width >= this.getBreakpointValue(ha.Regular)
              ? ha.Regular
              : ha.Small;
          }
          replaceMarkerClass(t, i) {
            this._document.body.classList.contains(this.prefixedClass(i)) ||
              (this.clearMarkerGroup(t), this.addMarkerClass(i));
          }
          clearMarkerGroup(t) {
            for (const i in t) this.removeMarkerClass(t[i]);
          }
          addMarkerClass(t) {
            this._renderer.addClass(this._document.body, this.prefixedClass(t));
          }
          removeMarkerClass(t) {
            this._renderer.removeClass(
              this._document.body,
              this.prefixedClass(t)
            );
          }
          prefixedClass(t) {
            return e.CLASS_PREFIX + t;
          }
          getBreakpointValue(t) {
            const i = getComputedStyle(
              this._document.documentElement
            ).getPropertyValue(`--breakpoint-${t}`);
            return parseInt(i.match(/\d+/)?.[0] ?? "0", 10);
          }
          static #t = (this.ɵfac = function (i) {
            return new (i || e)(O(Ka), O(Ht));
          });
          static #n = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      class Ei {
        static focusFirstChildElement(n) {
          if ((n.focus(), n)) {
            const t = Array.from(
              n.querySelectorAll(Ei.focussableElements)
            ).filter((i) => i.offsetWidth > 0 || i.offsetHeight > 0 || i === n);
            t.length > 0 && t[0].focus();
          }
        }
        static blurFirstChildElement(n) {
          if ((n.focus(), n)) {
            const t = Array.from(
              n.querySelectorAll(Ei.focussableElements)
            ).filter((i) => i.offsetWidth > 0 || i.offsetHeight > 0 || i === n);
            t.length > 0 && t[0].blur();
          }
        }
        static get focussableElements() {
          return 'a:not([disabled]), button:not([disabled]), input[type=text]:not([disabled]), [tabindex]:not([disabled]):not([tabindex="-1"]):not([aria-hidden=true])';
        }
        static focusNextElement(n = !1) {
          if (document.activeElement) {
            const i = Array.prototype.filter.call(
                document.querySelectorAll(Ei.focussableElements),
                function (o) {
                  return (
                    o.offsetWidth > 0 ||
                    o.offsetHeight > 0 ||
                    o === document.activeElement
                  );
                }
              ),
              r = i.indexOf(document.activeElement);
            r > -1 && (i[r + (n ? -1 : 1)] || i[0]).focus();
          }
        }
      }
      var yn = (function (e) {
        return (
          (e.Auto = "auto"),
          (e.Top = "top"),
          (e.Right = "right"),
          (e.Bottom = "bottom"),
          (e.Left = "left"),
          (e.TopLeft = "top-left"),
          (e.TopRight = "top-right"),
          (e.BottomLeft = "bottom-left"),
          (e.BottomRight = "bottom-right"),
          e
        );
      })(yn || {});
      class To {
        static #e = (this.ARROW_HEIGHT = 14);
        static #t = (this.DEFAULT_PADDING = 10);
        static #n = (this.onOpen = new Ze());
        set maxHeight(n) {
          (this._maxHeight = n), this.update();
        }
        get menuStyle() {
          return this._menuStyle;
        }
        get menuClasses() {
          return this._menuClasses;
        }
        get visible() {
          return !!this._activeHandle;
        }
        constructor(n, t) {
          (this._changeDetector = n),
            (this._document = t),
            (this._alive = !0),
            (this._menuStyle = {}),
            (this._menuClasses = []),
            (this._window = this._document.defaultView),
            (this.menuContentStyle = {}),
            (this.padding = To.DEFAULT_PADDING),
            (this.forceDirection = null),
            (this.closeWithoutInteraction = new le()),
            (this.onExternalClick = (i) => {
              if (this._activeHandle) {
                let r = i.target;
                for (; r; ) {
                  if (r === this._activeHandle.element) return;
                  r = r.parentElement;
                }
                this.closeWithoutInteraction.emit(), this.close();
              }
            }),
            (this.close = () => {
              setTimeout(() => {
                this._activeHandle &&
                  (Ei.focusFirstChildElement(this._activeHandle.element),
                  Ei.blurFirstChildElement(this._activeHandle.element),
                  delete this._activeHandle,
                  this.update());
              });
            });
        }
        ngOnInit() {
          this._container.nativeElement.addEventListener("click", (n) => {
            n.stopPropagation();
          }),
            this._container.nativeElement.addEventListener("keydown", (n) => {
              "Escape" === n.key && this.close();
            }),
            this._document.addEventListener("scroll", this.close),
            this._document.addEventListener("click", this.onExternalClick),
            this._window && this._window.addEventListener("resize", this.close),
            To.onOpen
              .pipe(
                X(() => this._alive),
                zr((n) => n !== this)
              )
              .subscribe(() => this.close()),
            this.update();
        }
        ngOnDestroy() {
          (this._alive = !1),
            this._document.removeEventListener("scroll", this.close),
            this._document.removeEventListener("click", this.onExternalClick),
            this._window &&
              this._window.removeEventListener("resize", this.close);
        }
        bindToHandle(n) {
          this._activeHandle !== n
            ? ((this._activeHandle = n), this.update())
            : this.close();
        }
        focus(n = !0) {
          Ei.focusFirstChildElement(this._container.nativeElement),
            n && Ei.blurFirstChildElement(this._container.nativeElement);
        }
        toggle() {
          this.close();
        }
        onKeyDown(n) {
          "ArrowUp" === n.key
            ? (n.preventDefault(), Ei.focusNextElement(!0))
            : "ArrowDown" === n.key &&
              (n.preventDefault(), Ei.focusNextElement());
        }
        update() {
          if (((this._menuClasses = ["ff-menu"]), this._activeHandle)) {
            let n;
            n = this.forceDirection
              ? this.forceDirection
              : this.resolveDirection();
            const t = this.getAnchorPosition(n);
            this._menuClasses.push("menu-arrow-" + this.revertDirection(n)),
              (this.menuContentStyle = {
                maxHeight: this._maxHeight ? `${this._maxHeight}px` : "",
              }),
              (this._menuStyle = {
                top: `${t.top}px`,
                left: `${t.left}px`,
                visibility: "visible",
                opacity: 1,
              }),
              this._container.nativeElement.focus(),
              To.onOpen.next(this);
          } else this._menuStyle = { visibility: "hidden", opacity: 0 };
          this._changeDetector.detectChanges();
        }
        getAnchorPosition(n) {
          const t = { top: 0, left: 0 };
          if (this._activeHandle) {
            const i = this.padding + To.ARROW_HEIGHT,
              r = this._activeHandle.boundingRect;
            switch (n) {
              case "bottom":
              case "bottom-right":
              case "bottom-left":
                (t.top = r.bottom + this.padding),
                  (t.left = r.left + r.width / 2);
                break;
              case "left":
                (t.top = r.top + r.height / 2), (t.left = r.left - i);
                break;
              case "top":
              case "top-right":
              case "top-left":
                (t.top = r.top - i), (t.left = r.left + r.width / 2);
                break;
              case "right":
                (t.top = r.top + r.height / 2),
                  (t.left = r.right + this.padding);
            }
          }
          return t;
        }
        resolveDirection() {
          if (this._activeHandle) {
            let n = this._activeHandle.direction;
            return (
              n === yn.Auto &&
                (n = this.findBestDirection(this._activeHandle.boundingRect)),
              n
            );
          }
          return yn.Bottom;
        }
        findBestDirection(n) {
          const t = n.top / window.innerHeight,
            i = this._container.nativeElement.getBoundingClientRect();
          return t < 0.5
            ? n.right - n.width / 2 - i.width / 2 < 0
              ? yn.BottomRight
              : n.left + n.width / 2 + i.width / 2 > window.innerWidth
              ? yn.BottomLeft
              : yn.Bottom
            : n.right - n.width / 2 - i.width / 2 < 0
            ? yn.TopRight
            : n.left + n.width / 2 + i.width / 2 > window.innerWidth
            ? yn.TopLeft
            : yn.Top;
        }
        revertDirection(n) {
          switch (n) {
            case "top":
              return yn.Bottom;
            case "bottom":
              return yn.Top;
            case "left":
              return yn.Right;
            case "right":
              return yn.Left;
            case "top-left":
              return yn.BottomRight;
            case "top-right":
              return yn.BottomLeft;
            case "bottom-left":
              return yn.TopRight;
            default:
              return yn.TopLeft;
          }
        }
        static #i = (this.ɵfac = function (t) {
          return new (t || To)(M(Wo), M(Ht));
        });
        static #r = (this.ɵcmp = U({
          type: To,
          selectors: [["ff-menu"]],
          viewQuery: function (t, i) {
            if ((1 & t && wn(iw, 7), 2 & t)) {
              let r;
              an((r = ln())) && (i._container = r.first);
            }
          },
          inputs: {
            padding: "padding",
            maxHeight: "maxHeight",
            forceDirection: "forceDirection",
          },
          outputs: { closeWithoutInteraction: "closeWithoutInteraction" },
          ngContentSelectors: da,
          decls: 4,
          vars: 3,
          consts: [
            [3, "ngClass", "ngStyle"],
            ["container", ""],
            ["cdkTrapFocus", "", 1, "menu-content", 3, "ngStyle", "keydown"],
          ],
          template: function (t, i) {
            1 & t &&
              (Er(),
              p(0, "div", 0, 1)(2, "div", 2),
              F("keydown", function (o) {
                return i.onKeyDown(o);
              }),
              ir(3),
              d()()),
              2 & t &&
                (x("ngClass", i.menuClasses)("ngStyle", i.menuStyle),
                b(2),
                x("ngStyle", i.menuContentStyle));
          },
          dependencies: [qo, Di],
          encapsulation: 2,
        }));
      }
      class Jl {
        static isActionKey(n) {
          return " " === n.key || "Enter" === n.key;
        }
        static isSpaceKey(n) {
          return " " === n.key;
        }
        static isEnterKey(n) {
          return "Enter" === n.key;
        }
        static isArrowKey(n) {
          return (
            "ArrowUp" === n.key ||
            "ArrowLeft" === n.key ||
            "ArrowRight" === n.key ||
            "ArrowDown" === n.key
          );
        }
        static isNumber(n) {
          return (
            "0" === n.key ||
            "1" === n.key ||
            "2" === n.key ||
            "3" === n.key ||
            "4" === n.key ||
            "5" === n.key ||
            "6" === n.key ||
            "7" === n.key ||
            "8" === n.key ||
            "9" === n.key
          );
        }
        static isKeyWithoutImpact(n) {
          return (
            "Shift" === n.key ||
            "Control" === n.key ||
            "Alt" === n.key ||
            "OS" === n.key ||
            "AltGraph" === n.key ||
            "ContextMenu" === n.key ||
            "PrintScreen" === n.key
          );
        }
      }
      function Kae(e) {
        return () => e.initialize();
      }
      let Zae = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({
              providers: [
                { provide: hf, multi: !0, deps: [sw], useFactory: Kae },
              ],
            }));
          }
          return e;
        })(),
        yF = (() => {
          class e {
            constructor() {
              (this.actionKey = new le()),
                (this.enterKey = new le()),
                (this.spaceKey = new le()),
                (this.arrowKey = new le());
            }
            onKeyPress(t) {
              Jl.isActionKey(t) &&
                (t.stopPropagation(), this.actionKey.emit(t)),
                Jl.isEnterKey(t) && this.enterKey.emit(t),
                Jl.isSpaceKey(t) && this.spaceKey.emit(t),
                Jl.isArrowKey(t) && this.arrowKey.emit(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["", "ffKey", ""]],
              hostBindings: function (i, r) {
                1 & i &&
                  F("keydown", function (s) {
                    return r.onKeyPress(s);
                  });
              },
              outputs: {
                actionKey: "actionKey",
                enterKey: "enterKey",
                spaceKey: "spaceKey",
                arrowKey: "arrowKey",
              },
            }));
          }
          return e;
        })(),
        aw = (() => {
          class e {
            constructor() {
              (this.clicked = new le()),
                (this.disabled = !1),
                (this.isFocused = !1),
                (this.isSelected = !1);
            }
            get getLabel() {
              return (
                this.label ?? this.selectOption.nativeElement.innerText ?? ""
              );
            }
            onClick(t = !0) {
              this.disabled ||
                this.clicked.emit({ selectOption: this, isMouse: t });
            }
            focus() {
              this.selectOption.nativeElement.focus();
            }
            blur() {
              this.selectOption.nativeElement.blur();
            }
            onFocus() {
              this.isFocused = !0;
            }
            onBlur() {
              this.isFocused = !1;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["ff-select-option"]],
              viewQuery: function (i, r) {
                if ((1 & i && wn(oae, 7), 2 & i)) {
                  let o;
                  an((o = ln())) && (r.selectOption = o.first);
                }
              },
              inputs: { value: "value", label: "label", disabled: "disabled" },
              ngContentSelectors: da,
              decls: 4,
              vars: 7,
              consts: [
                [
                  "ffKey",
                  "",
                  1,
                  "select-option",
                  3,
                  "tabindex",
                  "actionKey",
                  "click",
                ],
                ["selectOption", ""],
                [4, "ngIf"],
              ],
              template: function (i, r) {
                1 & i &&
                  (Er(),
                  p(0, "a", 0, 1),
                  F("actionKey", function () {
                    return r.onClick(!1);
                  })("click", function () {
                    return r.onClick();
                  }),
                  E(2, sae, 2, 1, "span", 2),
                  E(3, aae, 1, 0, "ng-content", 2),
                  d()),
                  2 & i &&
                    (Le("selected", r.isSelected)("disabled", r.disabled),
                    x("tabindex", r.disabled ? -1 : 0),
                    b(2),
                    x("ngIf", r.label),
                    b(1),
                    x("ngIf", !r.label));
              },
              dependencies: [be, yF],
            }));
          }
          return e;
        })(),
        vF = (() => {
          class e {
            get label() {
              return this.selectedselectOption?.getLabel ?? "";
            }
            get value() {
              return this._value;
            }
            constructor(t, i, r) {
              (this._cd = t),
                (this._hostElement = i),
                (this._document = r),
                (this._value = null),
                (this._optionSubscriptions = []),
                (this.selectedselectOption = null),
                (this.visible = !1),
                (this.disabled = !1),
                (this.fullWidth = !0),
                (this.deselectOnSame = !1),
                (this.placeholder = ""),
                (this.hideMenu = () => {
                  this.visible = !1;
                });
            }
            ngAfterViewInit() {
              this.subscribeToOption(),
                this.selectOption?.changes.subscribe(() => {
                  this.subscribeToOption(),
                    (this.selectedselectOption = this.findSelect(this._value));
                }),
                this.value &&
                  ((this.selectedselectOption = this.findSelect(this.value)),
                  this._cd.detectChanges()),
                this._hostElement.nativeElement.addEventListener(
                  "click",
                  (t) => {
                    t.stopPropagation();
                  }
                ),
                this._document.addEventListener("click", this.hideMenu);
            }
            subscribeToOption() {
              for (let t of this._optionSubscriptions) t.unsubscribe();
              (this._optionSubscriptions = []),
                this.selectOption?.forEach((t) => {
                  this._optionSubscriptions.push(
                    t.clicked.subscribe((i) => {
                      this.selectItem(i.selectOption.value),
                        this.deselectOnSame &&
                        this._value === i.selectOption.value
                          ? ((this._value = null),
                            (this.selectedselectOption = null))
                          : ((this._value = i.selectOption.value),
                            (this.selectedselectOption = this.findSelect(
                              i.selectOption.value
                            ))),
                        this.toggle(i.isMouse),
                        this._onChange && this._onChange(this._value),
                        this._onTouch && this._onTouch();
                    })
                  );
                });
            }
            ngOnDestroy() {
              this._document.removeEventListener("click", this.hideMenu);
            }
            writeValue(t = null) {
              (this.selectedselectOption = this.findSelect(t)),
                this.selectItem(t),
                (this._value = t);
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouch = t;
            }
            setDisabledState(t) {
              this.disabled = t;
            }
            toggle(t = !0) {
              if (!this.disabled)
                if (((this.visible = !this.visible), this.visible)) {
                  const i =
                    this.selectOption?.find((r) => r.value === this._value) ??
                    this.selectOption?.get(0);
                  i &&
                    setTimeout(() => {
                      i.focus(), t && i.blur();
                    }, 100);
                } else
                  setTimeout(() => {
                    this.select.nativeElement.focus(),
                      t && this.select.nativeElement.blur();
                  }, 100);
            }
            selectItem(t) {
              if (this.selectOption) {
                this.selectOption.forEach((r) => (r.isSelected = !1));
                const i = this.selectOption.find((r) => `${r.value}` == `${t}`);
                i && (i.isSelected = !0);
              }
            }
            findSelect(t) {
              if (this.selectOption) {
                const i = this.selectOption.find((r) => `${r.value}` == `${t}`);
                if (i) return i;
              }
              return null;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(Wo), M(pn), M(Ht));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["ff-select"]],
              contentQueries: function (i, r, o) {
                if (
                  (1 & i &&
                    (function ry(e, n, t, i) {
                      const r = Ye();
                      if (r.firstCreatePass) {
                        const o = An();
                        yS(r, new gS(n, t, i), o.index),
                          (function dz(e, n) {
                            const t =
                              e.contentQueries || (e.contentQueries = []);
                            n !== (t.length ? t[t.length - 1] : -1) &&
                              t.push(e.queries.length - 1, n);
                          })(r, e),
                          2 == (2 & t) && (r.staticContentQueries = !0);
                      }
                      _S(r, B(), t);
                    })(o, aw, 4),
                  2 & i)
                ) {
                  let s;
                  an((s = ln())) && (r.selectOption = s);
                }
              },
              viewQuery: function (i, r) {
                if ((1 & i && wn(lae, 7), 2 & i)) {
                  let o;
                  an((o = ln())) && (r.select = o.first);
                }
              },
              inputs: {
                fullWidth: "fullWidth",
                deselectOnSame: "deselectOnSame",
                placeholder: "placeholder",
                ariaLabelSelectedIs: "ariaLabelSelectedIs",
                iconBefore: "iconBefore",
              },
              features: [it([{ provide: Pn, useExisting: e, multi: !0 }])],
              ngContentSelectors: hae,
              decls: 8,
              vars: 10,
              consts: [
                [1, "selection"],
                ["tabindex", "0", 1, "selected-item", 3, "click"],
                ["select", ""],
                ["aria-hidden", "true", 1, "label-value"],
                [4, "ngIf"],
                ["name", "keyboard_arrow_down"],
                ["class", "select-list", 4, "ngIf"],
                [1, "select-list"],
                ["cdkTrapFocus", "", 1, "select-list-content"],
              ],
              template: function (i, r) {
                1 & i &&
                  (Er(dae),
                  p(0, "div", 0)(1, "div", 1, 2),
                  F("click", function () {
                    return r.toggle();
                  }),
                  p(3, "div", 3),
                  h(4),
                  E(5, cae, 2, 1, "ng-container", 4),
                  d(),
                  k(6, "ff-icon", 5),
                  d(),
                  E(7, uae, 3, 0, "div", 6),
                  d()),
                  2 & i &&
                    (Le("disabled", r.disabled)("full-width", r.fullWidth),
                    b(1),
                    sn("aria-label", r.label),
                    b(3),
                    ne(" ", r.label, " "),
                    b(1),
                    x("ngIf", !r.label),
                    b(1),
                    Le("upsidedown", r.visible && !r.disabled),
                    b(1),
                    x("ngIf", r.visible && !r.disabled));
              },
              dependencies: [be, Ql],
            }));
          }
          return e;
        })(),
        Jae = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr] }));
          }
          return e;
        })(),
        ele = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr, Jae, Uae] }));
          }
          return e;
        })();
      class tle {
        constructor(n, t, i) {
          (this.x = n), (this.y = t), (this.on = i);
        }
      }
      class wF {
        constructor(n, t, i) {
          (this.width = n),
            (this.height = t),
            (this.cellSize = i),
            (this.cells = []);
          for (let r = 0; r < this.height; r++)
            for (let o = 0; o < this.width; o++)
              this.cells.push(new tle(o, r, !1));
        }
        get gridWith() {
          return this.width * this.cellSize;
        }
        get gridHeight() {
          return this.height * this.cellSize;
        }
        gridX(n) {
          return n * this.cellSize;
        }
        gridY(n) {
          return n * this.cellSize;
        }
        getCell(n, t) {
          return this.cells[t * this.width + n];
        }
        getCenterCell() {
          return this.getCell(
            Math.floor(this.width / 2),
            Math.floor(this.height / 2)
          );
        }
        getCellAbs(n, t, i = !1) {
          let r = 0,
            o = 0;
          for (let s = 0; this.gridX(s) < n; s++) r = s;
          for (let s = 0; this.gridY(s) < t; s++) o = s;
          return this.getCell(r, o);
        }
        getNeighbours(n) {
          const t = [];
          return (
            n.x > 0 && t.push(this.getCell(n.x - 1, n.y)),
            n.x < this.width - 1 && t.push(this.getCell(n.x + 1, n.y)),
            n.y > 0 && t.push(this.getCell(n.x, n.y - 1)),
            n.y < this.height - 1 && t.push(this.getCell(n.x, n.y + 1)),
            t
          );
        }
        turnOn() {
          const n = [];
          for (let t of this.cells)
            if (t.on) {
              const i = this.getNeighbours(t);
              n.push(...i);
            }
          for (let t of n) t.on = !0;
        }
        turnOffInstant() {
          for (let t of this.cells) t.on = !1;
        }
      }
      let nle = (() => {
        class e {
          constructor() {
            this.state = new ct();
          }
          start() {
            this.state.next(!0);
          }
          stop() {
            this.state.next(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      class Io {
        static #e = (this.WAIT_BEFORE_START = 200);
        static #t = (this.MIN_LOADING_DURATION = 1400 + Io.WAIT_BEFORE_START);
        constructor(n) {
          (this._rippleGridService = n),
            (this.cellAmountX = window.innerWidth < 800 ? 9 : 21),
            (this.cellSize = 50),
            (this._alive = !0),
            (this.visible = !1),
            (this.lastStart = 0),
            (this._grid = new wF(10, 10, 10)),
            this.calcGridSize();
        }
        ngOnInit() {
          this._rippleGridService.state
            .pipe(X(() => this._alive))
            .subscribe((n) => {
              n
                ? ((this.visible = !0),
                  (this.lastStart = Date.now()),
                  this.turnAllOn())
                : setTimeout(() => {
                    this.visible = !1;
                  }, Math.min(Io.MIN_LOADING_DURATION, Io.MIN_LOADING_DURATION - (this.lastStart - Date.now())));
            });
        }
        turnAllOn() {
          this._grid.turnOffInstant();
          const n = this._grid.getCenterCell();
          setTimeout(() => {
            n.on = !0;
          }, 50 + Io.WAIT_BEFORE_START);
          for (let t = 0; t < this.cellAmountX; t++)
            setTimeout(() => {
              this._grid.turnOn();
            }, 80 * t + 80 + Io.WAIT_BEFORE_START);
        }
        calcGridSize() {
          const n = window.innerWidth,
            t = window.innerHeight;
          this.cellSize = n / this.cellAmountX;
          const i = Math.ceil(t / this.cellSize);
          this._grid = new wF(this.cellAmountX, i, this.cellSize);
        }
        get cells() {
          return this._grid.cells;
        }
        ngOnDestroy() {
          this._alive = !1;
        }
        static #n = (this.ɵfac = function (t) {
          return new (t || Io)(M(nle));
        });
        static #i = (this.ɵcmp = U({
          type: Io,
          selectors: [["ff-ripple-grid"]],
          decls: 2,
          vars: 3,
          consts: [
            [1, "ripple-grid-container"],
            [
              "class",
              "cell",
              3,
              "active",
              "top",
              "left",
              "height",
              "width",
              4,
              "ngFor",
              "ngForOf",
            ],
            [1, "cell"],
          ],
          template: function (t, i) {
            1 & t && (p(0, "div", 0), E(1, xae, 1, 10, "div", 1), d()),
              2 & t && (Le("visible", i.visible), b(1), x("ngForOf", i.cells));
          },
          dependencies: [Qe],
        }));
      }
      let rle = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["ff-imprint"]],
              decls: 11,
              vars: 0,
              consts: [
                ["id", "m3"],
                ["href", "mailto:bagsofcode@gmail.com"],
              ],
              template: function (i, r) {
                1 & i &&
                  (p(0, "h2", 0),
                  h(1, "Impressum"),
                  d(),
                  p(2, "p"),
                  h(3, "Matthias Renner"),
                  k(4, "br"),
                  h(5, "Weizenstra\xdfe 23"),
                  k(6, "br"),
                  h(7, "86199 Augsburg"),
                  k(8, "br"),
                  p(9, "a", 1),
                  h(10, "bagsofcode@gmail.com"),
                  d()());
              },
            }));
          }
          return e;
        })(),
        ole = (() => {
          class e {
            constructor() {
              this.lang = "en";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["ff-privacy"]],
              decls: 8,
              vars: 3,
              consts: [
                [3, "ngModel", "ngModelChange"],
                ["value", "de"],
                ["value", "en"],
                [4, "ngIf"],
                [1, "index"],
                ["href", "#m4158", 1, "index-link"],
                ["href", "#m3", 1, "index-link"],
                ["href", "#mOverview", 1, "index-link"],
                ["href", "#m13", 1, "index-link"],
                ["href", "#m27", 1, "index-link"],
                ["href", "#m25", 1, "index-link"],
                ["href", "#m24", 1, "index-link"],
                ["href", "#m12", 1, "index-link"],
                ["href", "#m134", 1, "index-link"],
                ["href", "#m225", 1, "index-link"],
                ["href", "#m367", 1, "index-link"],
                ["href", "#m451", 1, "index-link"],
                ["href", "#m182", 1, "index-link"],
                ["href", "#m391", 1, "index-link"],
                ["href", "#m408", 1, "index-link"],
                ["href", "#m263", 1, "index-link"],
                ["href", "#m299", 1, "index-link"],
                ["href", "#m136", 1, "index-link"],
                ["href", "#m15", 1, "index-link"],
                ["href", "#m10", 1, "index-link"],
                ["id", "m3"],
                ["href", "mailto:bagsofcode@gmail.com"],
                ["id", "mOverview"],
                ["id", "m13"],
                ["id", "m27"],
                ["id", "m25"],
                ["id", "m24"],
                [
                  "href",
                  "https://ec.europa.eu/info/law/law-topic/data-protection/international-dimension-data-protection_en",
                  "target",
                  "_blank",
                ],
                ["id", "m12"],
                ["id", "m134"],
                ["href", "https://optout.aboutads.info", "target", "_blank"],
                [
                  "href",
                  "https://www.youronlinechoices.com/",
                  "target",
                  "_blank",
                ],
                [1, "m-elements"],
                ["id", "m225"],
                ["href", "https://www.hetzner.com", "target", "_blank"],
                [
                  "href",
                  "https://www.hetzner.com/de/rechtliches/datenschutz",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://docs.hetzner.com/de/general/general-terms-and-conditions/data-privacy-faq/",
                  "target",
                  "_blank",
                ],
                ["id", "m367"],
                ["id", "m451"],
                ["href", "https://www.facebook.com", "target", "_blank"],
                [
                  "href",
                  "https://www.facebook.com/about/privacy",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://www.facebook.com/legal/terms/dataprocessing",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://www.facebook.com/legal/EU_data_transfer_addendum",
                  "target",
                  "_blank",
                ],
                ["href", "https://www.google.de", "target", "_blank"],
                [
                  "href",
                  "https://policies.google.com/privacy",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://adssettings.google.com/authenticated",
                  "target",
                  "_blank",
                ],
                ["href", "https://twitter.com", "target", "_blank"],
                ["href", "https://twitter.com/privacy", "target", "_blank"],
                [
                  "href",
                  "https://twitter.com/personalization",
                  "target",
                  "_blank",
                ],
                ["id", "m182"],
                ["id", "m391"],
                ["id", "m408"],
                [
                  "href",
                  "https://www.google.de/intl/de/forms",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://cloud.google.com/terms/data-processing-addendum",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://cloud.google.com/terms/eu-model-contract-clause",
                  "target",
                  "_blank",
                ],
                ["id", "m263"],
                [
                  "href",
                  "https://marketingplatform.google.com/intl/de/about/analytics/",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://business.safety.google/adsprocessorterms",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://tools.google.com/dlpage/gaoptout?hl=de",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "https://privacy.google.com/businesses/adsservices",
                  "target",
                  "_blank",
                ],
                ["id", "m299"],
                ["id", "m136"],
                ["id", "m15"],
                ["id", "m10"],
                ["id", "m4158"],
                [
                  "href",
                  "https://ec.europa.eu/info/law/law-topic/data-protection/international-dimension-data-protection_de",
                  "target",
                  "_blank",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (h(0, "Language:\n"),
                  p(1, "ff-select", 0),
                  F("ngModelChange", function (s) {
                    return (r.lang = s);
                  }),
                  p(2, "ff-select-option", 1),
                  h(3, "Deutsch"),
                  d(),
                  p(4, "ff-select-option", 2),
                  h(5, "English"),
                  d()(),
                  E(6, Nae, 743, 0, "div", 3),
                  E(7, Lae, 732, 0, "div", 3)),
                  2 & i &&
                    (b(1),
                    x("ngModel", r.lang),
                    b(5),
                    x("ngIf", "en" === r.lang),
                    b(1),
                    x("ngIf", "de" === r.lang));
              },
              dependencies: [be, _l, vl, vF, aw],
            }));
          }
          return e;
        })(),
        sle = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr, Cv, ele] }));
          }
          return e;
        })();
      class lle {
        static getDirection(n) {
          return "w" === n || "ArrowUp" === n
            ? Ur.top
            : "d" === n || "ArrowRight" === n
            ? Ur.right
            : "s" === n || "ArrowDown" === n
            ? Ur.bottom
            : "a" === n || "ArrowLeft" === n
            ? Ur.left
            : void 0;
        }
      }
      let cle = (() => {
        class e {
          constructor(t) {
            (this._data = t),
              (this.lastFight = Date.now()),
              (this.c = this._data.game.combat);
          }
          getEnemy(t) {
            return this.c.curMenu === he.world
              ? this.c.curWorldMap.getEnemy(t)
              : this.c.curMenu === he.labyrinth
              ? this.c.labyrinth[this.c.openMapI].getEnemy(t)
              : this.c.curMenu === he.dungeon
              ? this.c.dungeons[this.c.openMapI].getEnemy(t)
              : void 0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(O(je));
          });
          static #t = (this.ɵprov = V({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      function ule(e, n) {
        1 & e && k(0, "i", 1);
      }
      let lw = (() => {
        class e {
          get classes() {
            return (
              "cell " +
              this.cell?.wallsToString() +
              (this.cell.deadEnd ? " dead-end" : "") +
              (this.cell.active ? " active" : "") +
              (this.cell.visible ? "" : " hidden") +
              (this.cell.visited ? " visited" : "") +
              (this.cell.looted ? " looted" : "") +
              (this.enemy ? " " + this.enemy.type.type : "")
            );
          }
          constructor(t) {
            (this._attackFieldService = t), (this.eEnemyTypeName = Zt);
          }
          ngOnInit() {
            this.enemy = this._attackFieldService.getEnemy(this.gridIndex);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(cle));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-cell"]],
            inputs: { cell: "cell", gridIndex: "gridIndex" },
            decls: 2,
            vars: 3,
            consts: [
              ["class", "fas fa-skull", 4, "ngIf"],
              [1, "fas", "fa-skull"],
            ],
            template: function (i, r) {
              1 & i && (p(0, "div"), E(1, ule, 1, 0, "i", 0), d()),
                2 & i &&
                  (Te(r.classes),
                  b(1),
                  x(
                    "ngIf",
                    r.enemy &&
                      (r.enemy.type.type === r.eEnemyTypeName.normal ||
                        r.enemy.type.type === r.eEnemyTypeName.smallBoss ||
                        r.enemy.type.type === r.eEnemyTypeName.dungeonEndBoss ||
                        r.enemy.type.type === r.eEnemyTypeName.worldEndBoss ||
                        r.enemy.type.type === r.eEnemyTypeName.boss)
                  ));
            },
            dependencies: [be],
          }));
        }
        return e;
      })();
      const dle = ["player"],
        hle = ["enemy"],
        cw = function (e) {
          return { width: e };
        };
      function fle(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 11, 12)(2, "div", 4),
            h(3),
            pe(4, "titlecase"),
            d(),
            p(5, "div", 13)(6, "div", 6),
            h(7),
            pe(8, "bignumber"),
            pe(9, "bignumber"),
            d(),
            k(10, "div", 7),
            d()()),
          2 & e)
        ) {
          const t = I(2);
          b(3),
            mn(
              "",
              Me(4, 5, t.fight.enemy.type.type),
              " lvl ",
              t.fight.enemy.level,
              ""
            ),
            b(4),
            mn(
              " ",
              Me(8, 7, t.fight.enemy.health),
              " / ",
              Me(9, 9, t.fight.enemy.maxHealth),
              " "
            ),
            b(3),
            x(
              "ngStyle",
              Xn(
                11,
                cw,
                (100 * t.fight.enemy.health) / t.fight.enemy.maxHealth + "%"
              )
            );
        }
      }
      function ple(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 14),
            F("click", function () {
              return oe(t), se(I(2).heal());
            }),
            h(1, " Heal or Wait! "),
            d();
        }
      }
      function gle(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 1)(1, "div", 2, 3)(3, "div", 4),
            h(4),
            d(),
            p(5, "div", 5)(6, "div", 6),
            h(7),
            pe(8, "bignumber"),
            pe(9, "bignumber"),
            d(),
            k(10, "div", 7),
            d(),
            p(11, "div", 8)(12, "div", 6),
            h(13),
            pe(14, "bignumber"),
            pe(15, "bignumber"),
            d(),
            k(16, "div", 7),
            d()(),
            E(17, fle, 11, 13, "div", 9),
            E(18, ple, 2, 0, "div", 10),
            d()),
          2 & e)
        ) {
          const t = I();
          b(4),
            ne("Level ", t.fight.level, ""),
            b(3),
            mn(
              " ",
              Me(8, 9, t.fight.health),
              " / ",
              Me(9, 11, t.fight.maxHealth),
              " "
            ),
            b(3),
            x(
              "ngStyle",
              Xn(17, cw, (100 * t.fight.health) / t.fight.maxHealth + "%")
            ),
            b(3),
            mn(
              " ",
              Me(14, 13, t.fight.ep),
              " / ",
              Me(15, 15, t.fight.maxEP),
              " "
            ),
            b(3),
            x("ngStyle", Xn(19, cw, (100 * t.fight.ep) / t.fight.maxEP + "%")),
            b(1),
            x("ngIf", t.fight.enemy),
            b(1),
            x("ngIf", t.fight.isThrottled);
        }
      }
      let uw = (() => {
        class e {
          constructor(t, i, r, o, s) {
            (this._fightHandlerService = t),
              (this._floatingTextService = i),
              (this._bigNumber = r),
              (this._combatPotionService = o),
              (this._not = s),
              (this._alive = !0);
          }
          ngOnInit() {
            this._fightHandlerService.fightData
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.fight = t)),
              this._fightHandlerService.playerDmg
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  if (this.player) {
                    const i = this.player.nativeElement.getBoundingClientRect();
                    this._floatingTextService.float({
                      x: i.right - 30,
                      y: i.top,
                      text: `${this._bigNumber.transform(t.dmg)}`,
                      height: 10,
                      speed: 1.5 * t.speed,
                    });
                  }
                }),
              this._fightHandlerService.enemyDmg
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  if (this.enemy) {
                    const i = this.enemy.nativeElement.getBoundingClientRect();
                    this._floatingTextService.float({
                      x: i.right - 30,
                      y: i.top,
                      text: `${this._bigNumber.transform(t.dmg)}`,
                      height: 10,
                      speed: 1.5 * t.speed,
                    });
                  }
                }),
              this._fightHandlerService.loot
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  const i = this.enemy.nativeElement.getBoundingClientRect();
                  this._floatingTextService.float({
                    x: i.left + 30,
                    y: i.top - 10,
                    text: "",
                    speed: 5e3,
                    height: 40,
                    items: t,
                  });
                });
          }
          heal() {
            this._combatPotionService.heal() ||
              this._not.show("You need a heal potion");
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(vd), M(R0), M(Qt), M(Q0), M(xg));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-combat-details"]],
            viewQuery: function (i, r) {
              if ((1 & i && (wn(dle, 5), wn(hle, 5)), 2 & i)) {
                let o;
                an((o = ln())) && (r.player = o.first),
                  an((o = ln())) && (r.enemy = o.first);
              }
            },
            decls: 1,
            vars: 1,
            consts: [
              ["class", "details", 4, "ngIf"],
              [1, "details"],
              [1, "player"],
              ["player", ""],
              [1, "prog-label"],
              [1, "prog", "health"],
              [1, "label"],
              [1, "bar", 3, "ngStyle"],
              [1, "prog", "ep"],
              ["class", "enemy", 4, "ngIf"],
              ["class", "throttled", 3, "click", 4, "ngIf"],
              [1, "enemy"],
              ["enemy", ""],
              [1, "prog"],
              [1, "throttled", 3, "click"],
            ],
            template: function (i, r) {
              1 & i && E(0, gle, 19, 21, "div", 0), 2 & i && x("ngIf", r.fight);
            },
            dependencies: [be, Di, Nk, Qt],
            styles: [
              ".details[_ngcontent-%COMP%]{position:relative}.throttled[_ngcontent-%COMP%]{position:absolute;z-index:10;top:0;left:0;width:100%;height:100%;background-color:#000000b3;display:flex;justify-content:center;align-items:center;font-size:54px;font-weight:900;color:#888;transition:.5s;cursor:pointer}.throttled[_ngcontent-%COMP%]:hover{background-color:#000000e6;color:#aaa}",
            ],
          }));
        }
        return e;
      })();
      function mle(e, n) {
        if ((1 & e && k(0, "alchy-cell", 5), 2 & e)) {
          const t = n.$implicit;
          x("gridIndex", I().laby.gridIndex(t.x, t.y))("cell", t);
        }
      }
      function _le(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div")(1, "div", 6)(2, "button", 7),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.action(r.eDirection.top));
            }),
            k(3, "img", 8),
            p(4, "div", 9),
            h(5, "w"),
            d()(),
            p(6, "button", 10),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.action(r.eDirection.left));
            }),
            k(7, "img", 11),
            p(8, "div", 9),
            h(9, "s"),
            d()(),
            p(10, "button", 12),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.action(r.eDirection.bottom));
            }),
            k(11, "img", 13),
            p(12, "div", 9),
            h(13, "a"),
            d()(),
            p(14, "button", 14),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.action(r.eDirection.right));
            }),
            k(15, "img", 15),
            p(16, "div", 9),
            h(17, "d"),
            d()()()();
        }
      }
      let yle = (() => {
        class e {
          constructor(t, i) {
            (this._combatService = t),
              (this._device = i),
              (this.eCombatMenu = he),
              (this.eDirection = Ur),
              (this._alive = !0);
          }
          onKeyDown(t) {
            this._combatService.move(lle.getDirection(t.key));
          }
          action(t) {
            console.log("action", t), this._combatService.move(t);
          }
          ngOnInit() {
            this._combatService.curLaby
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.laby = t)),
              (this.isMobile = this._device.isMobile);
          }
          close() {
            this._combatService.open(he.menu);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki), M(sw));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-labyrinth"]],
            hostBindings: function (i, r) {
              1 & i &&
                F(
                  "keydown",
                  function (s) {
                    return r.onKeyDown(s);
                  },
                  0,
                  ao
                );
            },
            decls: 10,
            vars: 9,
            consts: [
              [1, "btn-row"],
              [1, "title"],
              [1, "close-btn", 3, "click"],
              [3, "gridIndex", "cell", 4, "ngFor", "ngForOf"],
              [4, "ngIf"],
              [3, "gridIndex", "cell"],
              [1, "moving"],
              [1, "up", 3, "click"],
              ["src", "assets/img/icons/walkUp.png"],
              [1, "label"],
              [1, "left", 3, "click"],
              ["src", "assets/img/icons/walkLeft.png"],
              [1, "down", 3, "click"],
              ["src", "assets/img/icons/walkDown.png"],
              [1, "right", 3, "click"],
              ["src", "assets/img/icons/walkRight.png"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                h(2),
                d(),
                p(3, "div", 2),
                F("click", function () {
                  return r.close();
                }),
                k(4, "i"),
                d()(),
                k(5, "alchy-combat-details"),
                p(6, "div"),
                E(7, mle, 1, 2, "alchy-cell", 3),
                d(),
                E(8, _le, 18, 0, "div", 4),
                pe(9, "async")),
                2 & i &&
                  (b(2),
                  ne("Labyrinth ", r.laby.mapLevel, ""),
                  b(2),
                  Te("fas fa-times"),
                  b(2),
                  Te("map is-maze cols-" + r.laby.cols),
                  b(1),
                  x("ngForOf", r.laby.cell),
                  b(1),
                  x("ngIf", Me(9, 7, r.isMobile) || !0));
            },
            dependencies: [Qe, be, lw, uw, Hy],
            styles: [
              ".moving[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.moving[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:relative;background-color:transparent;border:0;overflow:hidden;border-radius:4px;width:60px;padding:4px;cursor:pointer}.moving[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover   img[_ngcontent-%COMP%]{filter:saturate(150%) hue-rotate(30deg) brightness(1.5);box-shadow:0 1px 4px 4px #000}.moving[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:4px;transition:.5s;width:100%;-webkit-user-select:none;user-select:none}.moving[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{position:absolute;bottom:6px;right:6px;font-size:20px;opacity:.6;z-index:3}",
            ],
          }));
        }
        return e;
      })();
      function vle(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 3),
            F("click", function () {
              oe(t);
              const r = I().index,
                o = I();
              return se(o.open(o.eCombatMenu.labyrinth, r));
            }),
            k(1, "img", 8),
            p(2, "div"),
            h(3),
            d()();
        }
        if (2 & e) {
          const t = I().$implicit;
          b(3), ne(" Labyrinth lvl ", t.mapLevel, " ");
        }
      }
      function ble(e, n) {
        if ((1 & e && (Ct(0), E(1, vle, 4, 1, "div", 6), xt()), 2 & e)) {
          const t = n.$implicit,
            i = I();
          b(1), x("ngIf", t.mapLevel <= i.combat.curWorldMap.mapLevel);
        }
      }
      function wle(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 10),
            F("click", function () {
              oe(t);
              const r = I().index,
                o = I();
              return se(o.open(o.eCombatMenu.dungeon, r));
            }),
            k(1, "img", 11),
            p(2, "div", 12)(3, "div", 13)(4, "div"),
            h(5),
            pe(6, "bignumber"),
            d(),
            k(7, "i", 14),
            d(),
            p(8, "div", 13)(9, "div"),
            h(10),
            pe(11, "bignumber"),
            d(),
            k(12, "i", 15),
            d(),
            p(13, "div", 13)(14, "div"),
            h(15),
            d(),
            k(16, "i", 16),
            d()(),
            p(17, "div"),
            h(18),
            d()();
        }
        if (2 & e) {
          const t = I().$implicit,
            i = I();
          b(1),
            x("src", "assets/img/my/" + i.getDungeonTypeImg(t.type), Ho),
            b(4),
            ne("", Me(6, 6, 100 * t.enemyStrength), "%"),
            b(5),
            ne("", Me(11, 8, 100 * t.lootPerc), "%"),
            b(5),
            mn("", t.rows, "", t.cols, ""),
            b(3),
            ne(" Dungeon lvl ", 1 + t.mapLevel, " ");
        }
      }
      function Cle(e, n) {
        if ((1 & e && (Ct(0), E(1, wle, 19, 10, "div", 9), xt()), 2 & e)) {
          const t = n.$implicit,
            i = I();
          b(1), x("ngIf", t.mapLevel <= i.combat.curWorldMap.mapLevel);
        }
      }
      function xle(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 3),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.open(r.eCombatMenu.explore));
            }),
            k(1, "img", 17),
            p(2, "div"),
            h(3, "Explore"),
            d()();
        }
      }
      function Mle(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 3),
            F("click", function () {
              oe(t);
              const r = I();
              return se(r.open(r.eCombatMenu.portal));
            }),
            k(1, "img", 18),
            p(2, "div"),
            h(3, "Portal"),
            d()();
        }
      }
      function Dle(e, n) {
        1 & e &&
          (p(0, "div", 19)(1, "div", 20),
          h(2, "World"),
          d(),
          h(
            3,
            " Here you can progress further to achieve new aims. Completing a Worldzone will give you a key. "
          ),
          p(4, "div", 20),
          h(5, "Labyrinth"),
          d(),
          h(
            6,
            " A Labyrinth can only completed once. If you have enough keys you can create your own Labyrinth. "
          ),
          p(7, "div", 20),
          h(8, "Maps"),
          d(),
          h(
            9,
            " worldmap pro zone 1 labykey Dungeon (Explore) kann erstellt werden, je nachdem welche flasks man reinballert kommen auch diese gegner regler f\xfcr: weniger gegner pro Zone / einfachere gegner / mehr loot pro 100 gegner 1 labykey "
          ),
          d());
      }
      let Sle = (() => {
        class e {
          constructor(t) {
            (this._combatService = t),
              (this.eCombatMenu = he),
              (this.labys = []),
              (this._alive = !0);
          }
          ngOnInit() {
            this._combatService.combat
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                (this.combat = t), (this.labys = t.labyrinth);
              });
          }
          open(t, i = 0) {
            this._combatService.open(t, i);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          getDungeonTypeImg(t) {
            switch (t) {
              case So.slime:
                return "emerald_06.PNG";
              case So.blood:
                return "r_19.png";
              case So.water:
                return "blue_28.PNG";
            }
            return "emerald_06.PNG";
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-combat-menu"]],
            decls: 14,
            vars: 6,
            consts: [
              [1, "info-tooltip", 3, "tooltip", "tooltipTemplate"],
              [1, "fas", "fa-info-circle"],
              [1, "btn-list"],
              [1, "btn", "btn-with-icon", 3, "click"],
              ["src", "assets/img/my/SGI_58.png"],
              [4, "ngFor", "ngForOf"],
              ["class", "btn btn-with-icon", 3, "click", 4, "ngIf"],
              ["tooltipInfo", ""],
              ["src", "assets/img/my/emerald_01.png"],
              [
                "class",
                "btn btn-with-icon dungeon-preview",
                3,
                "click",
                4,
                "ngIf",
              ],
              [1, "btn", "btn-with-icon", "dungeon-preview", 3, "click"],
              [3, "src"],
              [1, "dungeon-info"],
              [1, "dungeon-info-item"],
              [1, "fa", "fa-warning"],
              [1, "fa", "fa-gift"],
              [1, "fa", "fa-square"],
              ["src", "assets/img/my/SGI_89.png"],
              ["src", "assets/img/my/yellow_26.PNG"],
              [1, "tooltip"],
              [1, "title"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                k(1, "i", 1),
                d(),
                k(2, "alchy-combat-loot"),
                p(3, "div", 2)(4, "div", 3),
                F("click", function () {
                  return r.open(r.eCombatMenu.world);
                }),
                k(5, "img", 4),
                p(6, "div"),
                h(7),
                d()(),
                E(8, ble, 2, 1, "ng-container", 5),
                E(9, Cle, 2, 1, "ng-container", 5),
                E(10, xle, 4, 0, "div", 6),
                E(11, Mle, 4, 0, "div", 6),
                d(),
                E(12, Dle, 10, 0, "ng-template", null, 7, hl)),
                2 & i &&
                  (x("tooltipTemplate", ll(13)),
                  b(7),
                  ne("World ", r.combat.curWorldMap.mapLevel + 1, " "),
                  b(1),
                  x("ngForOf", r.labys),
                  b(1),
                  x("ngForOf", r.combat.dungeons),
                  b(1),
                  x("ngIf", r.combat.curWorldMap.mapLevel > 3),
                  b(1),
                  x("ngIf", r.combat.curWorldMap.mapLevel > 19));
            },
            dependencies: [Qe, be, kd, gP, Qt],
            styles: [
              ".btn-with-icon[_ngcontent-%COMP%]{margin:10px;padding:0 0 .5rem;display:inline-flex;justify-content:center;align-items:center;flex-direction:column}.btn-with-icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:32px}.btn-with-icon[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin-top:1rem}.btn-with-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:120px;transition:.5s}.btn-with-icon[_ngcontent-%COMP%]:hover   img[_ngcontent-%COMP%]{filter:brightness(125%)}.btn-with-icon[_ngcontent-%COMP%]:hover   .dungeon-info[_ngcontent-%COMP%]{color:#fff}.btn-list[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center}.info-tooltip[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}.tooltip[_ngcontent-%COMP%]{max-width:350px}.dungeon-preview[_ngcontent-%COMP%]{position:relative}.dungeon-preview[_ngcontent-%COMP%]   .dungeon-info[_ngcontent-%COMP%]{position:absolute;bottom:45px;right:2px;transition:.5s;color:#fff9;text-shadow:1px 1px 4px #000,-1px -1px 4px #000,1px -1px 4px #000,-1px 1px 4px #000}.dungeon-preview[_ngcontent-%COMP%]   .dungeon-info[_ngcontent-%COMP%]   .dungeon-info-item[_ngcontent-%COMP%]{margin:0;display:flex;justify-content:flex-end;align-items:center}.dungeon-preview[_ngcontent-%COMP%]   .dungeon-info[_ngcontent-%COMP%]   .dungeon-info-item[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:12px;width:20px;display:flex;justify-content:center;align-items:center}.dungeon-preview[_ngcontent-%COMP%]   .dungeon-info[_ngcontent-%COMP%]   .dungeon-info-item[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin:0 5px 0 0}",
            ],
          }));
        }
        return e;
      })();
      function kle(e, n) {
        if ((1 & e && k(0, "alchy-cell", 4), 2 & e)) {
          const t = n.$implicit;
          x("gridIndex", I().combat.curWorldMap.gridIndex(t.x, t.y))("cell", t);
        }
      }
      let Tle = (() => {
        class e {
          constructor(t, i) {
            (this._fightService = t),
              (this._combatService = i),
              (this._alive = !0);
          }
          ngOnInit() {
            this._combatService.combat
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.combat = t));
          }
          close() {
            this._combatService.open(he.menu);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(vd), M(Ki));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-worldmap"]],
            decls: 8,
            vars: 6,
            consts: [
              [1, "btn-row"],
              [1, "title"],
              [1, "close-btn", 3, "click"],
              [3, "gridIndex", "cell", 4, "ngFor", "ngForOf"],
              [3, "gridIndex", "cell"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                h(2),
                d(),
                p(3, "div", 2),
                F("click", function () {
                  return r.close();
                }),
                k(4, "i"),
                d()(),
                k(5, "alchy-combat-details"),
                p(6, "div"),
                E(7, kle, 1, 2, "alchy-cell", 3),
                d()),
                2 & i &&
                  (b(2),
                  bn(r.combat.curWorldMap.name),
                  b(2),
                  Te("fas fa-times"),
                  b(2),
                  Te("map is-map cols-" + r.combat.curWorldMap.cols),
                  b(1),
                  x("ngForOf", r.combat.curWorldMap.cell));
            },
            dependencies: [Qe, lw, uw],
          }));
        }
        return e;
      })();
      function Ele(e, n) {
        1 & e &&
          (p(0, "div"),
          h(1, " there is nothing to explore...right now\n"),
          d());
      }
      function Ile(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 8)(1, "div"),
            h(2, " Loot "),
            d(),
            p(3, "alchy-range-input", 9),
            F("input", function (r) {
              return oe(t), se(I(2).moreLootChanged(r.target.value));
            }),
            d()();
        }
        if (2 & e) {
          const t = I(2);
          b(3), x("ngModel", t.combat.labyKeys)("max", t.combat.labyKeys);
        }
      }
      function Ole(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 2)(1, "div", 3),
            h(2, "Explore a new maze"),
            d(),
            E(3, Ile, 4, 2, "div", 4),
            p(4, "div", 5),
            h(5),
            k(6, "img", 6),
            d(),
            p(7, "div"),
            h(8),
            pe(9, "bignumber"),
            d(),
            p(10, "div", 7),
            F("click", function () {
              return oe(t), se(I().explore());
            }),
            h(11, " explore "),
            d()();
        }
        if (2 & e) {
          const t = I();
          b(3),
            x("ngIf", t.combat.labyKeys > 1),
            b(2),
            ne(" total cost: ", t.totalCost, " "),
            b(3),
            ne(
              " clearing this Labyrinth rewards you with +",
              Me(9, 3, t.getLabyBonus),
              " permanent damage "
            );
        }
      }
      let Ale = (() => {
        class e {
          constructor(t) {
            (this._combatService = t),
              (this._alive = !0),
              (this.totalCost = 1),
              (this.getLabyBonus = 0);
          }
          ngOnInit() {
            this._combatService.combat
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                (this.combat = t),
                  (this.totalCost = t.labyKeys),
                  0 === this.getLabyBonus &&
                    (this.getLabyBonus =
                      1 * ut.labyBonus(this.combat.curWorldMap.mapLevel));
              });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          moreLootChanged(t) {
            (this.totalCost = t),
              (this.getLabyBonus =
                ut.labyBonus(this.combat.curWorldMap.mapLevel) * t);
          }
          explore() {
            this._combatService.exploreLaby(this.totalCost),
              this._combatService.open(he.menu);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-explore-laby"]],
            decls: 3,
            vars: 2,
            consts: [
              [4, "ngIf"],
              ["class", "explore-laby", 4, "ngIf"],
              [1, "explore-laby"],
              [1, "title"],
              ["class", "range-wrapper", 4, "ngIf"],
              [1, "total-cost"],
              ["src", "assets/img/my/addons_44_t.png", 1, "icon-img"],
              [1, "btn", 3, "click"],
              [1, "range-wrapper"],
              ["min", "1", "labelPrefix", "x", 3, "ngModel", "max", "input"],
            ],
            template: function (i, r) {
              1 & i &&
                (k(0, "div"),
                E(1, Ele, 2, 0, "div", 0),
                E(2, Ole, 12, 5, "div", 1)),
                2 & i &&
                  (b(1),
                  x("ngIf", !r.combat || !r.combat.labyKeys),
                  b(1),
                  x("ngIf", null == r.combat ? null : r.combat.labyKeys));
            },
            dependencies: [be, _l, vl, K0, Qt],
            styles: [
              ".title[_ngcontent-%COMP%]{font-size:32px;color:#666;text-align:center}.explore-laby[_ngcontent-%COMP%]{text-align:center}.range-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;margin:1rem 0}.range-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin-right:1rem}.total-cost[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.btn[_ngcontent-%COMP%]{margin-top:2rem}",
            ],
          }));
        }
        return e;
      })();
      function Ple(e, n) {
        1 & e && k(0, "alchy-item", 13), 2 & e && x("item", n.$implicit);
      }
      function Fle(e, n) {
        1 & e && k(0, "alchy-item", 13), 2 & e && x("item", n.$implicit);
      }
      let Rle = (() => {
        class e {
          get buyable() {
            return this._buyService.buyable(this.totalCost);
          }
          constructor(t, i, r, o) {
            (this._combatService = t),
              (this._buyService = i),
              (this._data = r),
              (this._fb = o),
              (this.highestMap = 10),
              (this.obsMultiDifficult = new Tn(0)),
              (this.obsMultiLoot = new Tn(0)),
              (this.obsMultiSize = new Tn(0)),
              (this.minDifficult = 100),
              (this.maxDifficult = 100),
              (this.minLoot = 100),
              (this.maxLoot = 100),
              (this.minSize = 100),
              (this.maxSize = 100),
              (this.totalCost = []),
              (this._alive = !0);
          }
          ngOnInit() {
            this.buildForm(),
              (this.dungeon = _0.find((t) => t.type === this.dungeonType)),
              this.difficultChange(0),
              this.lootChange(0),
              this.sizeChange(0),
              this.calcTotalCost(),
              this._combatService.combat
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.highestMap = t.highestMap),
                    this.exploreDungeonForm.get("lvl").patchValue(t.highestMap);
                });
          }
          buildForm() {
            this.exploreDungeonForm = this._fb.group({
              lvl: [11],
              difficult: [0],
              loot: [0],
              size: [0],
            });
          }
          lvlChanged() {
            setTimeout(() => {
              this.difficultChange(
                this.exploreDungeonForm.get("difficult").value
              ),
                this.lootChange(this.exploreDungeonForm.get("loot").value),
                this.sizeChange(this.exploreDungeonForm.get("size").value);
            }, 100);
          }
          difficultChange(t) {
            this.obsMultiDifficult.next(
              pr.getDungeonExploreExtraCostDifficult(
                this.dungeon,
                this.exploreDungeonForm.get("lvl").value,
                t
              )
            );
            const i = pr.exploreDungeonDifficulty(t);
            (this.minDifficult = 100 * i.min),
              (this.maxDifficult = 100 * i.max),
              this.calcTotalCost();
          }
          lootChange(t) {
            this.obsMultiLoot.next(
              pr.getDungeonExploreExtraCostLoot(
                this.dungeon,
                this.exploreDungeonForm.get("lvl").value,
                t
              )
            );
            const i = pr.exploreDungeonLoot(t);
            (this.minLoot = 100 * i.min),
              (this.maxLoot = 100 * i.max),
              this.calcTotalCost();
          }
          sizeChange(t) {
            this.obsMultiSize.next(
              pr.getDungeonExploreExtraCostSize(
                this.dungeon,
                this.exploreDungeonForm.get("lvl").value,
                t
              )
            );
            const i = pr.exploreDungeonSize(t);
            (this.minSize = i.cols.min * i.rows.min),
              (this.maxSize = i.cols.max * i.rows.max),
              this.calcTotalCost();
          }
          exploreDungeon() {
            this._combatService.exploreDungeon(
              this.dungeon,
              this.exploreDungeonForm.get("lvl").value,
              this.exploreDungeonForm.get("difficult").value,
              this.exploreDungeonForm.get("loot").value,
              this.exploreDungeonForm.get("size").value
            ) && this._combatService.open(he.menu);
          }
          calcTotalCost() {
            setTimeout(() => {
              this.totalCost = pr.getDungeonExploreTotalCost(
                this.dungeon,
                this.exploreDungeonForm.get("lvl").value,
                this.exploreDungeonForm.get("difficult").value,
                this.exploreDungeonForm.get("loot").value,
                this.exploreDungeonForm.get("size").value
              );
            }, 100);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki), M(Wn), M(je), M(iW));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-explore-dungeon"]],
            inputs: { dungeonType: "dungeonType" },
            decls: 34,
            vars: 42,
            consts: [
              [3, "formGroup"],
              [1, "title"],
              ["formControlName", "lvl", 3, "min", "max", "valueInputChanged"],
              [1, "init-costs"],
              [3, "item", 4, "ngFor", "ngForOf"],
              [1, "range-info"],
              [1, "sutitle"],
              [
                "formControlName",
                "difficult",
                3,
                "obsMulti",
                "itemCost",
                "min",
                "max",
                "thumbWidth",
                "valueInputChanged",
              ],
              [
                "formControlName",
                "loot",
                3,
                "obsMulti",
                "itemCost",
                "min",
                "max",
                "thumbWidth",
                "valueInputChanged",
              ],
              [
                "formControlName",
                "size",
                3,
                "obsMulti",
                "itemCost",
                "min",
                "max",
                "thumbWidth",
                "valueInputChanged",
              ],
              [1, "total-cost"],
              [1, "subtitle"],
              [1, "btn", 3, "click"],
              [3, "item"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "form", 0)(1, "div", 1),
                h(2),
                d(),
                p(3, "alchy-range-input", 2),
                F("valueInputChanged", function () {
                  return r.lvlChanged();
                }),
                d(),
                p(4, "div", 3),
                h(5, " initial Costs: "),
                E(6, Ple, 1, 1, "alchy-item", 4),
                d(),
                p(7, "div", 5)(8, "div", 6),
                h(9, " Enemy difficulty "),
                d(),
                h(10),
                pe(11, "bignumber"),
                pe(12, "bignumber"),
                d(),
                p(13, "alchy-range-input", 7),
                F("valueInputChanged", function (s) {
                  return r.difficultChange(s);
                }),
                d(),
                p(14, "div", 5)(15, "div", 6),
                h(16, " Loot "),
                d(),
                h(17),
                pe(18, "bignumber"),
                pe(19, "bignumber"),
                d(),
                p(20, "alchy-range-input", 8),
                F("valueInputChanged", function (s) {
                  return r.lootChange(s);
                }),
                d(),
                p(21, "div", 5)(22, "div", 6),
                h(23, " Dungeon Size "),
                d(),
                h(24),
                pe(25, "bignumber"),
                pe(26, "bignumber"),
                d(),
                p(27, "alchy-range-input", 9),
                F("valueInputChanged", function (s) {
                  return r.sizeChange(s);
                }),
                d(),
                p(28, "div", 10)(29, "div", 11),
                h(30, "total cost"),
                d(),
                E(31, Fle, 1, 1, "alchy-item", 4),
                d(),
                p(32, "div", 12),
                F("click", function () {
                  return r.exploreDungeon();
                }),
                h(33, " Explore "),
                d()()),
                2 & i &&
                  (x("formGroup", r.exploreDungeonForm),
                  b(2),
                  mn(
                    " ",
                    r.dungeon.name,
                    " Level ",
                    r.exploreDungeonForm.get("lvl").value,
                    " "
                  ),
                  b(1),
                  x("min", r.dungeon.minLvl)("max", r.highestMap),
                  b(3),
                  x("ngForOf", r.dungeon.cost),
                  b(4),
                  mn(
                    " ",
                    Me(11, 30, r.minDifficult),
                    "% - ",
                    Me(12, 32, r.maxDifficult),
                    "% "
                  ),
                  b(3),
                  x("obsMulti", r.obsMultiDifficult)(
                    "itemCost",
                    r.dungeon.extraCost.difficult
                  )("min", 0)("max", 100)("thumbWidth", 80),
                  b(4),
                  mn(
                    " ",
                    Me(18, 34, r.minLoot),
                    "% - ",
                    Me(19, 36, r.maxLoot),
                    "% "
                  ),
                  b(3),
                  x("obsMulti", r.obsMultiLoot)(
                    "itemCost",
                    r.dungeon.extraCost.loot
                  )("min", 0)("max", 100)("thumbWidth", 80),
                  b(4),
                  mn(
                    " ",
                    Me(25, 38, r.minSize),
                    " - ",
                    Me(26, 40, r.maxSize),
                    " enemies "
                  ),
                  b(3),
                  x("obsMulti", r.obsMultiSize)(
                    "itemCost",
                    r.dungeon.extraCost.size
                  )("min", 0)("max", 100)("thumbWidth", 80),
                  b(4),
                  x("ngForOf", r.totalCost),
                  b(1),
                  Le("buyable", r.buyable));
            },
            dependencies: [Qe, XT, _l, VT, $f, yv, Gi, K0, Qt],
            styles: [
              ".title[_ngcontent-%COMP%]{font-size:32px;color:#666;text-align:center}.init-costs[_ngcontent-%COMP%], .total-cost[_ngcontent-%COMP%]{margin:2rem 0}.btn.buyable[_ngcontent-%COMP%]{background-color:#363}.btn.buyable[_ngcontent-%COMP%]   .btn-add[_ngcontent-%COMP%]:hover{background-color:#484}",
            ],
          }));
        }
        return e;
      })();
      function Nle(e, n) {
        1 & e && (p(0, "option", 8), h(1, "Laby"), d());
      }
      function Lle(e, n) {
        if ((1 & e && (p(0, "option", 10), h(1), d()), 2 & e)) {
          const t = I().$implicit;
          x("value", t.type), b(1), ne(" ", t.name, " ");
        }
      }
      function Ble(e, n) {
        if ((1 & e && (Ct(0), E(1, Lle, 2, 2, "option", 9), xt()), 2 & e)) {
          const t = n.$implicit,
            i = I(2);
          b(1), x("ngIf", i.unlockedMaps.includes(t.type));
        }
      }
      function Vle(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "select", 5),
            F("change", function (r) {
              return oe(t), se(I().selectMapType(r.target.value));
            }),
            E(1, Nle, 2, 0, "option", 6),
            E(2, Ble, 2, 1, "ng-container", 7),
            d();
        }
        if (2 & e) {
          const t = I();
          b(1),
            x("ngIf", null == t.combat ? null : t.combat.labyKeys),
            b(1),
            x("ngForOf", t.dungeonTypes);
        }
      }
      function zle(e, n) {
        1 & e && k(0, "alchy-explore-laby");
      }
      function Hle(e, n) {
        1 & e && k(0, "alchy-explore-dungeon", 11),
          2 & e && x("dungeonType", I().exploreType);
      }
      let jle = (() => {
        class e {
          constructor(t, i) {
            (this._combatService = t),
              (this._upgradeService = i),
              (this._alive = !0),
              (this.eDungeonTypeName = So),
              (this.dungeonTypes = _0),
              (this.exploreType = "laby");
          }
          ngOnInit() {
            Ju([
              this._combatService.combat,
              this._upgradeService.boughtUpgrades,
            ])
              .pipe(X(() => this._alive))
              .subscribe(([t, i]) => {
                (this.combat = t),
                  (this.unlockedMaps = i
                    .filter((r) => "dungeonUnlock" === r.type)
                    .map((r) => r.subType)),
                  0 === t.labyKeys &&
                    this.unlockedMaps.length > 0 &&
                    (this.exploreType = this.unlockedMaps[0]);
              });
          }
          close() {
            this._combatService.open(he.menu);
          }
          selectMapType(t) {
            null !== t && (this.exploreType = "laby" === t ? "laby" : t);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki), M(mr));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-explore"]],
            decls: 6,
            vars: 5,
            consts: [
              [1, "btn-row"],
              [1, "close-btn", 3, "click"],
              [3, "change", 4, "ngIf"],
              [4, "ngIf"],
              [3, "dungeonType", 4, "ngIf"],
              [3, "change"],
              ["value", "laby", 4, "ngIf"],
              [4, "ngFor", "ngForOf"],
              ["value", "laby"],
              [3, "value", 4, "ngIf"],
              [3, "value"],
              [3, "dungeonType"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                F("click", function () {
                  return r.close();
                }),
                k(2, "i"),
                d()(),
                E(3, Vle, 3, 2, "select", 2),
                E(4, zle, 1, 0, "alchy-explore-laby", 3),
                E(5, Hle, 1, 1, "alchy-explore-dungeon", 4)),
                2 & i &&
                  (b(2),
                  Te("fas fa-times"),
                  b(1),
                  x(
                    "ngIf",
                    (r.unlockedMaps.length > 0 &&
                      (null == r.combat ? null : r.combat.labyKeys) > 0) ||
                      r.unlockedMaps.length > 1
                  ),
                  b(1),
                  x("ngIf", "laby" === r.exploreType),
                  b(1),
                  x("ngIf", "laby" !== r.exploreType));
            },
            dependencies: [Qe, be, oE, aE, Ale, Rle],
            styles: [
              ".btn-row[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center}",
            ],
          }));
        }
        return e;
      })();
      function Ule(e, n) {
        if ((1 & e && k(0, "alchy-cell", 4), 2 & e)) {
          const t = n.$implicit;
          x("gridIndex", I().dungeon.gridIndex(t.x, t.y))("cell", t);
        }
      }
      let Wle = (() => {
        class e {
          constructor(t) {
            (this._combatService = t), (this._alive = !0);
          }
          ngOnInit() {
            this._combatService.combat
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.combat = t)),
              this._combatService.curDungeon
                .pipe(X(() => this._alive))
                .subscribe((t) => (this.dungeon = t));
          }
          close() {
            this._combatService.open(he.menu);
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-dungeon"]],
            decls: 8,
            vars: 6,
            consts: [
              [1, "btn-row"],
              [1, "title"],
              [1, "close-btn", 3, "click"],
              [3, "gridIndex", "cell", 4, "ngFor", "ngForOf"],
              [3, "gridIndex", "cell"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                h(2),
                d(),
                p(3, "div", 2),
                F("click", function () {
                  return r.close();
                }),
                k(4, "i"),
                d()(),
                k(5, "alchy-combat-details"),
                p(6, "div"),
                E(7, Ule, 1, 2, "alchy-cell", 3),
                d()),
                2 & i &&
                  (b(2),
                  bn(r.dungeon.name),
                  b(2),
                  Te("fas fa-times"),
                  b(2),
                  Te("map is-map cols-" + r.dungeon.cols),
                  b(1),
                  x("ngForOf", r.dungeon.cell));
            },
            dependencies: [Qe, lw, uw],
          }));
        }
        return e;
      })();
      function $le(e, n) {
        if ((1 & e && (Ct(0), k(1, "alchy-item", 11), xt()), 2 & e)) {
          const t = n.$implicit,
            i = I();
          b(1),
            x("item", t)("value", i.blueprint.costIncrease(i.upgrade.level));
        }
      }
      let qle = (() => {
        class e {
          get blueprint() {
            return sa.find((t) => t.id === this.upgrade.id);
          }
          get buyable() {
            return this._buyService.buyable(
              this.blueprint.cost,
              this.blueprint.costIncrease(this.upgrade.level)
            );
          }
          constructor(t, i) {
            (this._portalUpgradeService = t), (this._buyService = i);
          }
          add(t) {
            this.buyable &&
              this._portalUpgradeService.reserve(t.id, t.level + 1);
          }
          remove(t) {
            t.level > 0 &&
              this._portalUpgradeService.reserve(t.id, t.level - 1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(F0), M(Wn));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-portal-upgrade"]],
            inputs: { upgrade: "upgrade" },
            decls: 13,
            vars: 5,
            consts: [
              [1, "upgrade"],
              [1, "content"],
              [1, "level"],
              [1, "text"],
              [1, "costs"],
              [4, "ngFor", "ngForOf"],
              [1, "btn-col"],
              [1, "btn", "btn-add", 3, "click"],
              [1, "fas", "fa-plus"],
              [1, "btn", "btn-remove", 3, "click"],
              [1, "fas", "fa-minus"],
              [3, "item", "value"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1)(2, "div", 2),
                h(3),
                d(),
                p(4, "div", 3),
                h(5),
                d(),
                p(6, "div", 4),
                E(7, $le, 2, 2, "ng-container", 5),
                d()(),
                p(8, "div", 6)(9, "div", 7),
                F("click", function () {
                  return r.add(r.upgrade);
                }),
                k(10, "i", 8),
                d(),
                p(11, "div", 9),
                F("click", function () {
                  return r.remove(r.upgrade);
                }),
                k(12, "i", 10),
                d()()()),
                2 & i &&
                  (Le("buyable", r.buyable),
                  b(3),
                  ne(" Level ", r.upgrade.level, " "),
                  b(2),
                  ne(" ", r.upgrade.text, " "),
                  b(2),
                  x("ngForOf", r.blueprint.cost));
            },
            dependencies: [Qe, Gi],
            styles: [
              ".upgrade[_ngcontent-%COMP%]{margin:10px 0;position:relative;display:flex;justify-content:stretch;align-items:stretch;border:1px solid #000;transition:.3s;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}.upgrade[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{padding:10px;margin-right:10px;width:100%}.upgrade[_ngcontent-%COMP%]   .level[_ngcontent-%COMP%]{position:absolute;bottom:2px;left:2px;font-size:24px;color:#666}.upgrade[_ngcontent-%COMP%]   .costs[_ngcontent-%COMP%]{text-align:right}.upgrade.buyable[_ngcontent-%COMP%]{background-color:#363}.upgrade.buyable[_ngcontent-%COMP%]   .level[_ngcontent-%COMP%]{color:#aaa}.upgrade.buyable[_ngcontent-%COMP%]   .btn-add[_ngcontent-%COMP%]:hover{background-color:#484}.upgrade[_ngcontent-%COMP%]   .btn-col[_ngcontent-%COMP%]{margin-left:auto;display:flex;height:60px;flex-direction:column;justify-content:stretch;align-items:stretch}.upgrade[_ngcontent-%COMP%]   .btn-col[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{margin:0;height:50%;padding:4px 12px;display:flex;justify-content:center;align-items:center;border:none;border-left:1px solid #000}.upgrade[_ngcontent-%COMP%]   .btn-col[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:not(:first-of-type){border-top:1px solid #000}.upgrade[_ngcontent-%COMP%]   .btn-col[_ngcontent-%COMP%]   .btn.btn-remove[_ngcontent-%COMP%]:hover{background-color:#422}",
            ],
          }));
        }
        return e;
      })();
      function Gle(e, n) {
        1 & e && k(0, "alchy-portal-upgrade", 6),
          2 & e && x("upgrade", n.$implicit);
      }
      function Yle(e, n) {
        1 & e && k(0, "alchy-item", 7), 2 & e && x("item", n.$implicit);
      }
      let Kle = (() => {
        class e {
          constructor(t, i, r, o) {
            (this._combatService = t),
              (this._portalService = i),
              (this._portalUpgradeService = r),
              (this._data = o),
              (this.reservedUpgrades = []),
              (this.reservedCosts = []),
              (this._alive = !0);
          }
          ngOnInit() {
            this._portalUpgradeService.obsReservedUpgrades
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                (this.reservedUpgrades = t.upgrades),
                  (this.reservedCosts = t.cost);
              }),
              this._portalUpgradeService.calcReservedCosts();
          }
          close() {
            this._combatService.open(he.menu);
          }
          resetGame() {
            this._portalService.resetGame();
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki), M(gg), M(F0), M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-portal"]],
            decls: 9,
            vars: 4,
            consts: [
              [1, "btn-row"],
              [1, "title"],
              [1, "close-btn", 3, "click"],
              [3, "upgrade", 4, "ngFor", "ngForOf"],
              [3, "item", 4, "ngFor", "ngForOf"],
              [1, "btn", 3, "click"],
              [3, "upgrade"],
              [3, "item"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                h(2, "Portal"),
                d(),
                p(3, "div", 2),
                F("click", function () {
                  return r.close();
                }),
                k(4, "i"),
                d()(),
                E(5, Gle, 1, 1, "alchy-portal-upgrade", 3),
                E(6, Yle, 1, 1, "alchy-item", 4),
                p(7, "div", 5),
                F("click", function () {
                  return r.resetGame();
                }),
                h(8, " reset game\n"),
                d()),
                2 & i &&
                  (b(4),
                  Te("fas fa-times"),
                  b(1),
                  x("ngForOf", r.reservedUpgrades),
                  b(1),
                  x("ngForOf", r.reservedCosts));
            },
            dependencies: [Qe, Gi, qle],
          }));
        }
        return e;
      })();
      function Zle(e, n) {
        1 & e && k(0, "alchy-combat-menu");
      }
      function Qle(e, n) {
        1 & e && k(0, "alchy-worldmap");
      }
      function Xle(e, n) {
        1 & e && k(0, "alchy-labyrinth");
      }
      function Jle(e, n) {
        1 & e && k(0, "alchy-dungeon");
      }
      function ece(e, n) {
        1 & e && k(0, "alchy-explore");
      }
      function tce(e, n) {
        1 & e && k(0, "alchy-portal");
      }
      let nce = (() => {
        class e {
          constructor(t, i) {
            (this._combatService = t),
              (this._autoCombat = i),
              (this.eCombatMenu = he),
              (this._alive = !0);
          }
          ngOnInit() {
            this._combatService.combat
              .pipe(X(() => this._alive))
              .subscribe((t) => (this.combat = t));
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ki), M(Qoe));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-combat"]],
            decls: 7,
            vars: 6,
            consts: [
              [1, "combat"],
              [4, "ngIf"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                E(1, Zle, 1, 0, "alchy-combat-menu", 1),
                E(2, Qle, 1, 0, "alchy-worldmap", 1),
                E(3, Xle, 1, 0, "alchy-labyrinth", 1),
                E(4, Jle, 1, 0, "alchy-dungeon", 1),
                E(5, ece, 1, 0, "alchy-explore", 1),
                E(6, tce, 1, 0, "alchy-portal", 1),
                d()),
                2 & i &&
                  (b(1),
                  x(
                    "ngIf",
                    (null == r.combat ? null : r.combat.curMenu) ===
                      r.eCombatMenu.menu
                  ),
                  b(1),
                  x(
                    "ngIf",
                    (null == r.combat ? null : r.combat.curMenu) ===
                      r.eCombatMenu.world
                  ),
                  b(1),
                  x(
                    "ngIf",
                    (null == r.combat ? null : r.combat.curMenu) ===
                      r.eCombatMenu.labyrinth
                  ),
                  b(1),
                  x(
                    "ngIf",
                    (null == r.combat ? null : r.combat.curMenu) ===
                      r.eCombatMenu.dungeon
                  ),
                  b(1),
                  x(
                    "ngIf",
                    (null == r.combat ? null : r.combat.curMenu) ===
                      r.eCombatMenu.explore
                  ),
                  b(1),
                  x(
                    "ngIf",
                    (null == r.combat ? null : r.combat.curMenu) ===
                      r.eCombatMenu.portal
                  ));
            },
            dependencies: [be, yle, Sle, Tle, jle, Wle, Kle],
          }));
        }
        return e;
      })();
      function ice(e, n) {
        1 & e &&
          (p(0, "div", 7),
          h(
            1,
            " None available. You have to buy the first one in the upgrades tab. "
          ),
          d());
      }
      function rce(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 8),
            F("click", function (r) {
              const s = oe(t).$implicit;
              return se(I(3).changeReactorType(r, s));
            }),
            p(1, "div", 9),
            h(2),
            d(),
            p(3, "div"),
            h(4),
            d()();
        }
        if (2 & e) {
          const t = n.$implicit;
          b(2),
            bn(t.name),
            b(1),
            Te("prod" + t.output.name),
            b(1),
            ne("Produce: ", t.output.name, "");
        }
      }
      function oce(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 3)(1, "div", 4),
            h(2, "ETERNAL REACTOR - Choose a Production"),
            d(),
            E(3, ice, 2, 0, "div", 5),
            E(4, rce, 5, 4, "div", 6),
            d()),
          2 & e)
        ) {
          const t = I(2);
          b(3),
            x("ngIf", 0 === t.availableMagicReactorTypes.length),
            b(1),
            x("ngForOf", t.availableMagicReactorTypes);
        }
      }
      function sce(e, n) {
        1 & e && (p(0, "div", 4), h(1, "Some"), d(), h(2, " Text "));
      }
      function ace(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 3)(1, "div", 10)(2, "div", 11),
            F("click", function () {
              return oe(t), se(I(2).deselect());
            }),
            k(3, "i", 12),
            d(),
            p(4, "div", 13),
            F("click", function () {
              return oe(t), se(I(2).minimize());
            }),
            k(5, "i", 14),
            d(),
            p(6, "div", 15),
            F("click", function () {
              return oe(t), se(I(2).resetType());
            }),
            k(7, "i", 16),
            d(),
            p(8, "div", 4),
            h(9),
            d()(),
            p(10, "div", 17)(11, "div", 4),
            h(12, " Input "),
            p(13, "div", 18),
            k(14, "i", 19),
            d(),
            E(15, sce, 3, 0, "ng-template", null, 20, hl),
            d(),
            h(17, " TODO "),
            d()();
        }
        if (2 & e) {
          const t = ll(16),
            i = I(2);
          b(9), bn(i.magicReactor.curType), b(4), x("tooltipTemplate", t);
        }
      }
      function lce(e, n) {
        if (
          (1 & e &&
            (p(0, "div"),
            E(1, oce, 5, 2, "div", 1),
            E(2, ace, 18, 2, "div", 2),
            d()),
          2 & e)
        ) {
          const t = I();
          b(1),
            x("ngIf", !t.magicReactor.curType),
            b(1),
            x("ngIf", t.magicReactor.curType);
        }
      }
      let cce = (() => {
        class e {
          constructor(t, i) {
            (this._magicReactorsService = t),
              (this._upgradeService = i),
              (this._alive = !0);
          }
          ngOnInit() {
            this._magicReactorsService.obsSelectedReactor
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                if (
                  ((this.magicReactor = t.magicReactor),
                  (this._reactorId = t.i),
                  this.magicReactor?.curType)
                ) {
                  const i = Wl.find(
                    (r) => r.name === this.magicReactor.curType
                  );
                  (this.input = i.input), (this.output = i.output);
                }
              }),
              this._upgradeService.boughtUpgrades
                .pipe(X(() => this._alive))
                .subscribe((t) => this.findAvailableReactorTypes(t));
          }
          changeReactorType(t, i) {
            t.stopPropagation(),
              this._magicReactorsService.changeReactorType(
                this._reactorId,
                i.name
              );
          }
          deselect() {
            this._magicReactorsService.select(null);
          }
          minimize() {
            this._magicReactorsService.toggleMinimize(this._reactorId);
          }
          resetType() {
            this._magicReactorsService.resetType(this._reactorId);
          }
          findAvailableReactorTypes(t) {
            this.availableMagicReactorTypes = [];
            for (const i of t)
              if ("unlockMagicReactor" === i.type) {
                const r = Wl.find((o) => o.name === i.subType);
                r && this.availableMagicReactorTypes.push(r);
              }
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(G0), M(mr));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-magic-reactor-details"]],
            decls: 1,
            vars: 1,
            consts: [
              [4, "ngIf"],
              ["class", "selection ", 4, "ngIf"],
              ["class", "selection", 4, "ngIf"],
              [1, "selection"],
              [1, "title"],
              ["class", "", 4, "ngIf"],
              ["class", "btn", 3, "click", 4, "ngFor", "ngForOf"],
              [1, ""],
              [1, "btn", 3, "click"],
              [1, "name"],
              [1, "btn-row"],
              [1, "close-btn", 3, "click"],
              [1, "fas", "fa-times"],
              [1, "close-btn", "minimize", 3, "click"],
              [1, "fas", "fa-compress"],
              [1, "close-btn", "trash", 3, "click"],
              [1, "fas", "fa-trash"],
              [1, "details"],
              [1, "info-tooltip", 3, "tooltip", "tooltipTemplate"],
              [1, "fas", "fa-info-circle"],
              ["tooltipInfo", ""],
            ],
            template: function (i, r) {
              1 & i && E(0, lce, 3, 2, "div", 0),
                2 & i && x("ngIf", r.magicReactor);
            },
            dependencies: [Qe, be, kd],
            styles: [
              ".selection[_ngcontent-%COMP%]{margin:10px}.btn-row[_ngcontent-%COMP%]{margin:10px 0;display:flex;justify-content:flex-start;align-items:center}.btn-row[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{text-align:center;width:50%}.close-btn[_ngcontent-%COMP%]{background-color:#222;width:40px;height:40px;line-height:40px;text-align:center;border:1px solid #000;cursor:pointer;transition:.3s}.close-btn[_ngcontent-%COMP%]:hover{background-color:#444}.btn[_ngcontent-%COMP%]{margin:10px 0;padding:10px;border:1px solid #000;cursor:pointer;transition:.3s}.btn[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{font-size:20px;font-weight:700}.btn[_ngcontent-%COMP%]:hover{background-color:#444}",
            ],
          }));
        }
        return e;
      })();
      function uce(e, n) {
        1 & e && k(0, "alchy-reactor-details");
      }
      function dce(e, n) {
        1 & e && k(0, "alchy-magic-reactor-details");
      }
      function hce(e, n) {
        1 & e && k(0, "alchy-combat", 2),
          2 & e && x("hidden", null !== I().selectedReactor);
      }
      let fce = (() => {
          class e {
            constructor(t, i, r) {
              (this._reactorsService = t),
                (this._magicReactorsService = i),
                (this._combatUpgradeService = r),
                (this._alive = !0),
                (this.selectedReactor = null),
                (this.selectedReactorType = "reactor"),
                (this.selectedMagicReactor = null),
                (this.combatMapUnlocked = !1);
            }
            ngOnInit() {
              this._reactorsService.obsSelectedReactor
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.selectedReactor = t.i),
                    (this.selectedReactorType = "reactor");
                }),
                this._magicReactorsService.obsSelectedReactor
                  .pipe(X(() => this._alive))
                  .subscribe((t) => {
                    (this.selectedReactor = t.i),
                      (this.selectedReactorType = "magicreactor");
                  }),
                this._combatUpgradeService.boughtUpgrades
                  .pipe(X(() => this._alive))
                  .subscribe((t) => {
                    this.combatMapUnlocked = t.some(
                      (i) => "initialCombatWorldUnlock" === i.type
                    );
                  });
            }
            ngOnDestroy() {
              console.log("destroy"), (this._alive = !1);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(q0), M(G0), M(ql));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-right"]],
              decls: 4,
              vars: 3,
              consts: [
                [4, "ngIf"],
                [3, "hidden", 4, "ngIf"],
                [3, "hidden"],
              ],
              template: function (i, r) {
                1 & i &&
                  (k(0, "alchy-menu"),
                  E(1, uce, 1, 0, "alchy-reactor-details", 0),
                  E(2, dce, 1, 0, "alchy-magic-reactor-details", 0),
                  E(3, hce, 1, 1, "alchy-combat", 1)),
                  2 & i &&
                    (b(1),
                    x(
                      "ngIf",
                      null !== r.selectedReactor &&
                        "reactor" === r.selectedReactorType
                    ),
                    b(1),
                    x(
                      "ngIf",
                      null !== r.selectedReactor &&
                        "magicreactor" === r.selectedReactorType
                    ),
                    b(1),
                    x("ngIf", r.combatMapUnlocked));
              },
              dependencies: [be, Boe, Zoe, nce, cce],
              styles: [
                "[_nghost-%COMP%]{background-color:#282828;display:flex;justify-content:stretch;flex-direction:column;align-items:stretch}[_nghost-%COMP%]   alchy-menu[_ngcontent-%COMP%]{position:relative;overflow-y:auto}@media (min-width: 960px){[_nghost-%COMP%]   alchy-menu[_ngcontent-%COMP%]{height:41%}}[_nghost-%COMP%]   alchy-reactor-details[_ngcontent-%COMP%]{background-color:#2a2c2c;position:relative;overflow-y:auto}[_nghost-%COMP%]   alchy-combat[_ngcontent-%COMP%]{position:relative;overflow-y:auto}@media (min-width: 960px){[_nghost-%COMP%]   alchy-combat[_ngcontent-%COMP%]{height:59%}}",
              ],
            }));
          }
          return e;
        })(),
        pce = (() => {
          class e {
            constructor(t, i) {
              (this._data = t),
                (this._offline = i),
                (this.lastBonusSecondMulti = 1),
                (this.obsRoundTime = new Ze()),
                (this.lastBonusSecondMulti = this._offline.getBonusMulti()),
                this._offline.obsToggleBonus.subscribe((r) => {
                  this.calcTime(r);
                }),
                (this._handler = setTimeout(() => this.calcTime(), 1e3));
            }
            calcTime(t) {
              clearTimeout(this._handler), (this._handler = null);
              const i =
                (Date.now() - this._data.statistic.timing.lastTimeCheck) /
                this.lastBonusSecondMulti;
              (this._data.statistic.timing.timeForRound += i),
                (this._data.statistic.timing.timeTotal += i),
                (this._data.statistic.timing.lastTimeCheck = Date.now()),
                this.obsRoundTime.next(
                  this._data.statistic.timing.timeForRound
                ),
                t && (this.lastBonusSecondMulti = t),
                (this._handler = setTimeout(
                  () => this.calcTime(),
                  1e3 * this._offline.getBonusMulti()
                ));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(O(je), O(Yi));
            });
            static #t = (this.ɵprov = V({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        gce = (() => {
          class e {
            constructor(t) {
              (this._timer = t), (this._alive = !0), (this.roundTime = 0);
            }
            ngOnInit() {
              this._timer.obsRoundTime
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  this.roundTime = t;
                });
            }
            ngOnDestroy() {
              this._alive = !1;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(pce));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-timer"]],
              decls: 2,
              vars: 3,
              template: function (i, r) {
                1 & i && (h(0), pe(1, "duration")),
                  2 & i && bn(Me(1, 1, r.roundTime));
              },
              dependencies: [Z0],
            }));
          }
          return e;
        })(),
        mce = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-version"]],
              decls: 2,
              vars: 0,
              consts: [[1, "info-tooltip"]],
              template: function (i, r) {
                1 & i && (p(0, "div", 0), h(1, " 0.0.1f\n"), d());
              },
              styles: [
                ".info-tooltip[_ngcontent-%COMP%]{cursor:pointer;transition:.2s}.info-tooltip[_ngcontent-%COMP%]:hover{color:#fff}",
              ],
            }));
          }
          return e;
        })();
      function _ce(e, n) {
        1 & e && k(0, "alchy-timer");
      }
      let dw = (() => {
          class e {
            constructor() {
              (this.noTimer = !1), (this.showChangelog = new le());
            }
            ngOnInit() {}
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-footer"]],
              inputs: { noTimer: "noTimer" },
              outputs: { showChangelog: "showChangelog" },
              decls: 10,
              vars: 1,
              consts: [
                [1, "footer"],
                [3, "click"],
                [1, "links"],
                [
                  "href",
                  "/imprint",
                  "routerLink",
                  "/imprint",
                  "target",
                  "_blank",
                ],
                [
                  "href",
                  "/privacy",
                  "routerLink",
                  "/privacy",
                  "target",
                  "_blank",
                ],
                [4, "ngIf"],
              ],
              template: function (i, r) {
                1 & i &&
                  (p(0, "div", 0)(1, "div")(2, "alchy-version", 1),
                  F("click", function () {
                    return r.showChangelog.emit();
                  }),
                  d()(),
                  p(3, "div", 2)(4, "a", 3),
                  h(5, " imprint "),
                  d(),
                  p(6, "a", 4),
                  h(7, " privacy "),
                  d()(),
                  p(8, "div"),
                  E(9, _ce, 1, 0, "alchy-timer", 5),
                  d()()),
                  2 & i && (b(9), x("ngIf", !r.noTimer));
              },
              dependencies: [be, Ul, gce, mce],
              styles: [
                ".footer[_ngcontent-%COMP%]{padding:.125rem .5rem;display:flex;justify-content:space-between;align-items:center;color:#666}.footer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{margin:0 10px}.footer[_ngcontent-%COMP%]   .links[_ngcontent-%COMP%]{margin-right:auto;display:flex;justify-content:center;align-items:center;gap:1rem}.footer[_ngcontent-%COMP%]   .links[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{text-decoration:none;color:#666;transition:.2s}.footer[_ngcontent-%COMP%]   .links[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover{text-decoration:underline;cursor:pointer;color:#fff}",
              ],
            }));
          }
          return e;
        })(),
        yce = (() => {
          class e {
            constructor() {}
            ngOnInit() {}
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-mana"]],
              decls: 0,
              vars: 0,
              template: function (i, r) {},
              styles: [
                ".prog[_ngcontent-%COMP%]{width:100%;height:10px;position:relative}.prog[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{position:absolute;top:6px;width:65%;height:2px;border-radius:4px;background-color:#1b578580;box-shadow:0 0 4px 4px #1b578580}.prog[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{color:#aaa;font-size:10px;width:100%;text-align:center;position:absolute;top:0;left:0}",
              ],
            }));
          }
          return e;
        })();
      function vce(e, n) {
        1 & e &&
          (p(0, "div")(1, "h3"),
          h(2, "There was an Update"),
          d(),
          p(3, "p"),
          h(4, " Upgrades are resetted...sorry about that... "),
          d()());
      }
      let bce = (() => {
        class e {
          constructor(t) {
            (this._data = t),
              (this.closeChangelog = new le()),
              (this.openChangelog = new le()),
              (this.isGameUpdated = !1),
              (this._alive = !0);
          }
          ngOnInit() {
            console.log("huhu"),
              this._data.isGameUpdated
                .pipe(X(() => this._alive))
                .subscribe((t) => {
                  (this.isGameUpdated = t), t && this.openChangelog.emit();
                });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(je));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-changelog"]],
            outputs: {
              closeChangelog: "closeChangelog",
              openChangelog: "openChangelog",
            },
            decls: 90,
            vars: 3,
            consts: [
              [1, "changelog"],
              [1, "close-btn", 3, "click"],
              [4, "ngIf"],
              [1, "title"],
              [1, "hidden"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0)(1, "div", 1),
                F("click", function () {
                  return r.closeChangelog.emit();
                }),
                k(2, "i"),
                d(),
                E(3, vce, 5, 0, "div", 2),
                p(4, "div", 3),
                h(5, "0.0.1g"),
                p(6, "span", 4),
                h(7, " - 14 Apr 2024"),
                d()(),
                p(8, "ul")(9, "li"),
                h(10, "added a save button in the settings"),
                d(),
                p(11, "li"),
                h(
                  12,
                  "added movement buttons for the laby for mobile devices without a keyboard."
                ),
                d()(),
                p(13, "div", 3),
                h(14, "0.0.1f"),
                p(15, "span", 4),
                h(16, " - 13 Apr 2024"),
                d()(),
                p(17, "ul")(18, "li"),
                h(
                  19,
                  "you can now hold Space or Enter or R and dont have to click at the starting phase"
                ),
                d()(),
                p(20, "div", 3),
                h(21, "0.0.1e"),
                p(22, "span", 4),
                h(23, " - 13 Apr 2024"),
                d()(),
                p(24, "ul")(25, "li"),
                h(26, "imprint and privacy opens in new tab"),
                d(),
                p(27, "li"),
                h(28, "adjust fight speed and Throttle/Dead Timer"),
                d(),
                p(29, "li"),
                h(30, "adjust Frog Clicker Upgrade to 80%"),
                d(),
                p(31, "li"),
                h(32, "The Fluid Gauges numbers are now rounded down."),
                d(),
                p(33, "li"),
                h(34, "thank you Peasantine!"),
                d()(),
                p(35, "div", 3),
                h(36, "0.0.1d"),
                p(37, "span", 4),
                h(38, " - 12 Apr 2024"),
                d()(),
                p(39, "ul")(40, "li"),
                h(41, "autoclicker is now the 3rd upgrade"),
                d(),
                p(42, "li"),
                h(
                  43,
                  "Frog Killer Upgrade gives now 90% clicker speed and 70% clicker duration"
                ),
                d(),
                p(44, "li"),
                h(45, "fight speed is now faster"),
                d()(),
                p(46, "div", 3),
                h(47, "0.0.1c"),
                p(48, "span", 4),
                h(49, " - 10 Aug 2021"),
                d()(),
                p(50, "ul")(51, "li"),
                h(52, "adjusted enemy loot mutliplier"),
                d()(),
                p(53, "div", 3),
                h(54, "0.0.1b"),
                p(55, "span", 4),
                h(56, " - 4 Apr 2021"),
                d()(),
                p(57, "ul")(58, "li"),
                h(59, "mobile improvements"),
                d(),
                p(60, "li"),
                h(61, "added soul flasks"),
                d(),
                p(62, "li"),
                h(63, "new dungeon settings"),
                d()(),
                p(64, "div", 3),
                h(65, "0.0.1a"),
                p(66, "span", 4),
                h(67, " - 2 Apr 2021"),
                d()(),
                p(68, "ul")(69, "li"),
                h(
                  70,
                  "added new blue fluids, a new clicker and 2 reactortypes"
                ),
                d(),
                p(71, "li"),
                h(72, "activated portal with 3 settings for prestige"),
                d(),
                p(73, "li"),
                h(74, "added 2 new flasks to brew"),
                d(),
                p(75, "li"),
                h(76, "include many images"),
                d(),
                p(77, "li"),
                h(78, "much calculations..."),
                d()(),
                p(79, "div", 3),
                h(80, "0.0.1 "),
                d(),
                p(81, "ul")(82, "li"),
                h(83, "changed formular for loot / enemy HP and Attack"),
                d(),
                p(84, "li"),
                h(85, "added range slider to change bonus seconds speed"),
                d(),
                p(86, "li"),
                h(87, "the least open tab will stay after page reload"),
                d(),
                p(88, "li"),
                h(89, "World Enboss now drop soul-fluid"),
                d()()()),
                2 & i &&
                  (b(2), Te("fas fa-times"), b(1), x("ngIf", r.isGameUpdated));
            },
            dependencies: [be],
            styles: [
              ".changelog[_ngcontent-%COMP%]{position:absolute;inset:0;z-index:100;background-color:#131313;padding:2rem;overflow:auto}@media (min-width: 960px){.changelog[_ngcontent-%COMP%]{border-radius:10px;padding:4rem;inset:3rem}}.changelog[_ngcontent-%COMP%]   .close-btn[_ngcontent-%COMP%]{background-color:#222;width:60px;height:60px;position:fixed;top:5px;right:5px;line-height:60px;text-align:center;border:1px solid #000;font-size:38px;color:#888;cursor:pointer;transition:.3s}@media (min-width: 960px){.changelog[_ngcontent-%COMP%]   .close-btn[_ngcontent-%COMP%]{top:4rem;right:4rem}}.changelog[_ngcontent-%COMP%]   .close-btn[_ngcontent-%COMP%]:hover{background-color:#444}.hidden[_ngcontent-%COMP%]{display:none}",
            ],
          }));
        }
        return e;
      })();
      function wce(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div", 3)(1, "div", 4),
            k(2, "alchy-left")(3, "alchy-center")(4, "alchy-right")(
              5,
              "alchy-mana"
            ),
            p(6, "alchy-footer", 5),
            F("showChangelog", function () {
              return oe(t), se(I().toggleChangelog());
            }),
            d()()();
        }
      }
      function Cce(e, n) {
        1 & e && (Ct(0), h(1, " waiting...\n"), xt());
      }
      const xce = [
        {
          path: "",
          component: (() => {
            class e {
              constructor(t) {
                (this._dataService = t),
                  (this.gameLoaded = !1),
                  (this.showChangelog = !1);
              }
              ngOnInit() {
                var t = this;
                return fr(function* () {
                  yield t._dataService.load(), (t.gameLoaded = !0);
                })();
              }
              toggleChangelog() {
                this.showChangelog = !this.showChangelog;
              }
              static #e = (this.ɵfac = function (i) {
                return new (i || e)(M(je));
              });
              static #t = (this.ɵcmp = U({
                type: e,
                selectors: [["alchy-main"]],
                decls: 3,
                vars: 3,
                consts: [
                  ["class", "container", 3, "alchyKey", 4, "ngIf"],
                  [3, "hidden", "openChangelog", "closeChangelog"],
                  [4, "ngIf"],
                  [1, "container", 3, "alchyKey"],
                  [1, "main"],
                  [3, "showChangelog"],
                ],
                template: function (i, r) {
                  1 & i &&
                    (E(0, wce, 7, 0, "div", 0),
                    p(1, "alchy-changelog", 1),
                    F("openChangelog", function () {
                      return r.toggleChangelog();
                    })("closeChangelog", function () {
                      return r.toggleChangelog();
                    }),
                    d(),
                    E(2, Cce, 2, 0, "ng-container", 2)),
                    2 & i &&
                      (x("ngIf", r.gameLoaded),
                      b(1),
                      x("hidden", !r.showChangelog),
                      b(1),
                      x("ngIf", !r.gameLoaded));
                },
                dependencies: [be, hP, yte, Fre, fce, dw, yce, bce],
                styles: [
                  ".container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:flex-start;align-items:stretch}@media (min-width: 960px){.container[_ngcontent-%COMP%]{height:100vh}}.main[_ngcontent-%COMP%]{display:grid;height:100%;grid-template-columns:auto}.main[_ngcontent-%COMP%]   alchy-mana[_ngcontent-%COMP%]{grid-row-start:1;width:100%;overflow:visible;-webkit-user-select:none;user-select:none}.main[_ngcontent-%COMP%]   alchy-center[_ngcontent-%COMP%]{overflow:auto;grid-row-start:3}.main[_ngcontent-%COMP%]   alchy-right[_ngcontent-%COMP%]{overflow:auto;grid-row-start:2}.main[_ngcontent-%COMP%]   alchy-left[_ngcontent-%COMP%]{grid-row-start:4;overflow:auto}.main[_ngcontent-%COMP%]   alchy-footer[_ngcontent-%COMP%]{grid-row-start:5;width:100%;max-height:23px}@media (min-width: 960px){.main[_ngcontent-%COMP%]{grid-template-columns:20% 47% 33%;grid-template-rows:auto 8px 23px;justify-content:center;align-items:stretch;flex-wrap:nowrap;flex-direction:row}.main[_ngcontent-%COMP%]   alchy-mana[_ngcontent-%COMP%]{grid-column-start:1;grid-column-end:4;grid-row-start:2;width:100%;overflow:visible}.main[_ngcontent-%COMP%]   alchy-center[_ngcontent-%COMP%]{overflow:auto;grid-column-start:2;grid-row-start:1}.main[_ngcontent-%COMP%]   alchy-right[_ngcontent-%COMP%]{overflow:auto;grid-column-start:3;grid-row-start:1}.main[_ngcontent-%COMP%]   alchy-left[_ngcontent-%COMP%]{grid-column-start:1;grid-row-start:1;overflow:auto}.main[_ngcontent-%COMP%]   alchy-footer[_ngcontent-%COMP%]{grid-column-start:1;grid-column-end:4;grid-row-start:3;width:100%;max-height:23px}}",
                ],
              }));
            }
            return e;
          })(),
        },
        {
          path: "imprint",
          component: (() => {
            class e {
              static #e = (this.ɵfac = function (i) {
                return new (i || e)();
              });
              static #t = (this.ɵcmp = U({
                type: e,
                selectors: [["alchy-imprint"]],
                decls: 2,
                vars: 1,
                consts: [[3, "noTimer"]],
                template: function (i, r) {
                  1 & i && k(0, "ff-imprint")(1, "alchy-footer", 0),
                    2 & i && (b(1), x("noTimer", !0));
                },
                dependencies: [rle, dw],
                styles: ["alchy-footer[_ngcontent-%COMP%]{margin-top:auto}"],
              }));
            }
            return e;
          })(),
        },
        {
          path: "privacy",
          component: (() => {
            class e {
              static #e = (this.ɵfac = function (i) {
                return new (i || e)();
              });
              static #t = (this.ɵcmp = U({
                type: e,
                selectors: [["alchy-privacy"]],
                decls: 2,
                vars: 1,
                consts: [[3, "noTimer"]],
                template: function (i, r) {
                  1 & i && k(0, "ff-privacy")(1, "alchy-footer", 0),
                    2 & i && (b(1), x("noTimer", !0));
                },
                dependencies: [ole, dw],
              }));
            }
            return e;
          })(),
        },
      ];
      let Mce = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({
              imports: [tP.forRoot(xce, {}), tP],
            }));
          }
          return e;
        })(),
        CF = (() => {
          class e {
            constructor(t) {
              this.viewContainerRef = t;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(Vn));
            });
            static #t = (this.ɵdir = re({
              type: e,
              selectors: [["", "alchyFloatingTextDirective", ""]],
            }));
          }
          return e;
        })();
      function Dce(e, n) {
        1 & e && k(0, "i"),
          2 & e && Te("fas fa-tint " + I(2).$implicit.name.replace(" ", "-"));
      }
      function Sce(e, n) {
        1 & e && k(0, "i"),
          2 & e && Te("fas fa-flask " + I(2).$implicit.name.replace(" ", "-"));
      }
      function kce(e, n) {
        if (
          (1 & e &&
            (Ct(0),
            h(1),
            pe(2, "bignumber"),
            E(3, Dce, 1, 2, "i", 4),
            E(4, Sce, 1, 2, "i", 4),
            xt()),
          2 & e)
        ) {
          const t = I().$implicit,
            i = I(2);
          b(1),
            ne(" ", Me(2, 3, void 0 !== i.value ? i.value : t.value), " "),
            b(2),
            x("ngIf", "fluid" === t.type),
            b(1),
            x("ngIf", "flask" === t.type);
        }
      }
      function Tce(e, n) {
        if ((1 & e && k(0, "img", 7), 2 & e)) {
          const t = I(2).$implicit,
            i = I(2);
          Te("eternal-" + t.name), x("src", i.eternityImg, Ho);
        }
      }
      function Ece(e, n) {
        if (
          (1 & e &&
            (p(0, "div", 5),
            h(1),
            pe(2, "bignumber"),
            E(3, Tce, 1, 3, "img", 6),
            d()),
          2 & e)
        ) {
          const t = I().$implicit,
            i = I(2);
          b(1),
            ne(" ", Me(2, 2, void 0 !== i.value ? i.value : t.value), " "),
            b(2),
            x("ngIf", "eternity" === t.type);
        }
      }
      function Ice(e, n) {
        if (
          (1 & e &&
            (p(0, "div"),
            E(1, kce, 5, 5, "ng-container", 1),
            E(2, Ece, 4, 4, "div", 3),
            d()),
          2 & e)
        ) {
          const t = n.$implicit;
          b(1),
            x("ngIf", "eternity" !== t.type),
            b(1),
            x("ngIf", "eternity" === t.type);
        }
      }
      function Oce(e, n) {
        if ((1 & e && (Ct(0), E(1, Ice, 3, 2, "div", 2), xt()), 2 & e)) {
          const t = I();
          b(1), x("ngForOf", t.data.items);
        }
      }
      const Ace = function (e, n) {
          return { top: e, left: n };
        },
        Pce = function (e, n, t) {
          return { height: e, centerHeight: n, speed: t };
        },
        Fce = function (e) {
          return { value: !0, params: e };
        };
      let Rce = (() => {
        class e {
          constructor() {
            (this.height = 70), (this.speed = 1e3), (this.centerHeight = 35);
          }
          ngOnInit() {
            void 0 !== this.data.height &&
              ((this.height = this.data.height),
              (this.centerHeight = this.data.height / 2)),
              (this.speed = this.data.speed ?? 1e3);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-floating-text"]],
            inputs: { data: "data" },
            decls: 3,
            vars: 13,
            consts: [
              [1, "floating-text", 3, "ngStyle"],
              [4, "ngIf"],
              [4, "ngFor", "ngForOf"],
              ["class", "eternity", 4, "ngIf"],
              [3, "class", 4, "ngIf"],
              [1, "eternity"],
              [3, "class", "src", 4, "ngIf"],
              [3, "src"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0), h(1), E(2, Oce, 2, 1, "ng-container", 1), d()),
                2 & i &&
                  (x(
                    "ngStyle",
                    Ar(4, Ace, r.data.y - r.height + "px", r.data.x + "px")
                  )(
                    "@floatTop",
                    Xn(
                      11,
                      Fce,
                      (function Z_(e, n, t, i, r, o) {
                        return nS(B(), Yn(), e, n, t, i, r, o);
                      })(
                        7,
                        Pce,
                        r.height + "px",
                        r.centerHeight + "px",
                        r.speed / 2
                      )
                    )
                  ),
                  b(1),
                  ne(" ", r.data.text, " "),
                  b(1),
                  x("ngIf", null == r.data.items ? null : r.data.items.length));
            },
            dependencies: [Qe, be, Di, Qt],
            styles: [
              ".floating-text[_ngcontent-%COMP%]{position:absolute;opacity:0;min-width:100px}.floating-text[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]{display:inline}",
            ],
            data: { animation: [Ste] },
          }));
        }
        return e;
      })();
      function Nce(e, n) {}
      let Lce = (() => {
        class e {
          constructor(t, i) {
            (this._componentFactoryResolver = t),
              (this._floatingTextService = i),
              (this._alive = !0);
          }
          ngOnInit() {
            this._floatingTextService.nextFloat
              .pipe(X(() => this._alive))
              .subscribe((t) => {
                this.loadComponent(t);
              });
          }
          ngOnDestroy() {
            this._alive = !1;
          }
          loadComponent(t) {
            const i =
                this._componentFactoryResolver.resolveComponentFactory(Rce),
              o = this.adHost.viewContainerRef.createComponent(i);
            (o.instance.data = t),
              setTimeout(
                () => {
                  o.destroy();
                },
                t.speed ? t.speed + 5e3 : 5e3
              );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(Ga), M(R0));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["alchy-floating-text-factory"]],
            viewQuery: function (i, r) {
              if ((1 & i && wn(CF, 7), 2 & i)) {
                let o;
                an((o = ln())) && (r.adHost = o.first);
              }
            },
            decls: 2,
            vars: 0,
            consts: [
              [1, "floating-text-container"],
              [3, "alchyFloatingTextDirective"],
            ],
            template: function (i, r) {
              1 & i && (p(0, "div", 0), E(1, Nce, 0, 0, "ng-template", 1), d());
            },
            dependencies: [CF],
            styles: [
              "[_nghost-%COMP%]{position:absolute;inset:0;pointer-events:none;-webkit-user-select:none;user-select:none;overflow:hidden}",
            ],
          }));
        }
        return e;
      })();
      function Bce(e, n) {
        if ((1 & e && (p(0, "div", 5), k(1, "img", 6), d()), 2 & e)) {
          const t = I();
          b(1), x("src", t.message.icon, Ho);
        }
      }
      let Vce = (() => {
        class e {
          constructor() {
            this.closeMessage = new le();
          }
          ngOnInit() {}
          onCloseMessage() {
            this.closeMessage.emit();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)();
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["notification"]],
            inputs: { message: "message" },
            outputs: { closeMessage: "closeMessage" },
            decls: 6,
            vars: 3,
            consts: [
              [3, "ngClass"],
              ["class", "icon", 4, "ngIf"],
              [1, "message"],
              [1, "btn-close", 3, "click"],
              [1, "fa", "fa-times"],
              [1, "icon"],
              [3, "src"],
            ],
            template: function (i, r) {
              1 & i &&
                (p(0, "div", 0),
                E(1, Bce, 2, 1, "div", 1),
                p(2, "div", 2),
                h(3),
                d(),
                p(4, "div", 3),
                F("click", function () {
                  return r.onCloseMessage();
                }),
                k(5, "i", 4),
                d()()),
                2 & i &&
                  (x("ngClass", "notification " + r.message.type),
                  b(1),
                  x("ngIf", r.message.icon),
                  b(2),
                  ne(" ", r.message.message, " "));
            },
            dependencies: [qo, be],
            styles: [
              ".notification[_ngcontent-%COMP%]{pointer-events:all;border-radius:4px;display:flex;justify-content:flex-start;align-items:center;background-color:#444;position:relative;padding:10px 12px;width:100%;min-width:400px;max-width:600px;font-size:22px;box-shadow:0 2px 2px #00000024,0 3px 1px -2px #0000001f,0 1px 5px #0003;margin:10px 0}.notification[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{z-index:2;width:60px}.notification[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%}.notification[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{padding:10px;z-index:1}.notification[_ngcontent-%COMP%]   .btn-close[_ngcontent-%COMP%]{background:none;position:absolute;top:0;right:0;z-index:3;font-size:20px;color:#fffc;height:40px;width:40px;display:flex;justify-content:center;align-items:center;background-color:#00000026;cursor:pointer;transition:all .5s,border-radius .7s ease .3s}.notification[_ngcontent-%COMP%]   .btn-close[_ngcontent-%COMP%]:hover{border-bottom-left-radius:4px;background:rgba(255,255,255,.2);color:#fff}",
            ],
          }));
        }
        return e;
      })();
      function zce(e, n) {
        if (1 & e) {
          const t = Ne();
          p(0, "div")(1, "notification", 2),
            F("closeMessage", function () {
              const o = oe(t).$implicit;
              return se(I().closeMessage(o));
            }),
            d()();
        }
        if (2 & e) {
          const t = n.$implicit;
          x("@toggleHeight", void 0), b(1), x("message", t);
        }
      }
      let Hce = (() => {
        class e {
          constructor(t) {
            (this.notificationService = t),
              (this.messages = []),
              (this.isAlive = !0);
          }
          ngOnInit() {
            this.notificationService.notifications
              .pipe(X(() => this.isAlive))
              .subscribe((t) => {
                this.messages.splice(0, 0, t),
                  t.duration > 0 &&
                    setTimeout(() => this.removeNotification(t), t.duration);
              });
          }
          removeNotification(t) {
            const i = this.messages.indexOf(t);
            -1 !== i && this.messages.splice(i, 1);
          }
          closeMessage(t) {
            this.removeNotification(t);
          }
          ngOnDestroy() {
            this.isAlive = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || e)(M(xg));
          });
          static #t = (this.ɵcmp = U({
            type: e,
            selectors: [["notification-factory"]],
            decls: 2,
            vars: 1,
            consts: [
              [1, "notificationWrapper"],
              [4, "ngFor", "ngForOf"],
              [1, "notification", 3, "message", "closeMessage"],
            ],
            template: function (i, r) {
              1 & i && (p(0, "div", 0), E(1, zce, 2, 2, "div", 1), d()),
                2 & i && (b(1), x("ngForOf", r.messages));
            },
            dependencies: [Qe, Vce],
            styles: [
              ".notificationWrapper[_ngcontent-%COMP%]{position:fixed;top:10px;left:0;z-index:1000;width:100%;display:flex;justify-content:center;align-items:center;flex-direction:column;pointer-events:none}@media (min-width: 960px){.notificationWrapper[_ngcontent-%COMP%]{top:50px}}",
            ],
            data: { animation: [Dte] },
          }));
        }
        return e;
      })();
      const jce = ["tooltipWrapper"];
      function Uce(e, n) {
        if (
          (1 & e && (Ct(0), p(1, "div", 3), h(2), d(), k(3, "div", 4), xt()),
          2 & e)
        ) {
          const t = I();
          b(2),
            ne(" ", t.tooltip.title, " "),
            b(1),
            x("innerHTML", t.tooltip.text, zo);
        }
      }
      function Wce(e, n) {
        1 & e && Zc(0);
      }
      function $ce(e, n) {
        if (
          (1 & e && (p(0, "div"), E(1, Wce, 1, 0, "ng-container", 5), d()),
          2 & e)
        ) {
          const t = I();
          b(1), x("ngTemplateOutlet", t.tooltipTemplate);
        }
      }
      const qce = function (e) {
          return { visible: e };
        },
        Gce = function (e, n) {
          return { "left.px": e, "top.px": n };
        };
      let Yce = (() => {
          class e {
            constructor(t) {
              (this.tooltipService = t),
                (this.isAlive = !0),
                (this.beautifulPosition = new Wr());
            }
            ngOnInit() {
              this.tooltipService.tooltipState
                .pipe(X(() => this.isAlive))
                .subscribe((t) => {
                  (this.tooltip = t.tooltip),
                    (this.visible = t.visible),
                    (this.tooltipTemplate = t.tooltipTemplate),
                    (this.beautifulPosition = this.getBeautifulPosition(
                      t.position
                    ));
                });
            }
            close() {
              this.tooltipService.hideTooltip();
            }
            ngOnDestroy() {
              this.isAlive = !1;
            }
            getBeautifulPosition(t) {
              const i = window.innerWidth < 600 ? 0.5 : 0.25,
                r = this.tooltipWrapper.nativeElement.getBoundingClientRect(),
                o = new Wr(t.x / window.innerWidth, t.y / window.innerHeight);
              return new Wr(
                o.x < i ? t.x + 10 : t.x - r.width - 10,
                o.y < i ? t.y + 10 : t.y - r.height - 10
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)(M(YP));
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["alchy-tooltip"]],
              viewQuery: function (i, r) {
                if ((1 & i && wn(jce, 7), 2 & i)) {
                  let o;
                  an((o = ln())) && (r.tooltipWrapper = o.first);
                }
              },
              decls: 4,
              vars: 9,
              consts: [
                [1, "tooltip", 3, "ngClass", "ngStyle"],
                ["tooltipWrapper", ""],
                [4, "ngIf"],
                [1, "title"],
                [1, "descr", 3, "innerHTML"],
                [4, "ngTemplateOutlet"],
              ],
              template: function (i, r) {
                1 & i &&
                  (p(0, "div", 0, 1),
                  E(2, Uce, 4, 2, "ng-container", 2),
                  E(3, $ce, 2, 1, "div", 2),
                  d()),
                  2 & i &&
                    (x(
                      "ngClass",
                      Xn(
                        4,
                        qce,
                        r.visible &&
                          ((null == r.tooltip ? null : r.tooltip.text) ||
                            r.tooltipTemplate)
                      )
                    )(
                      "ngStyle",
                      Ar(6, Gce, r.beautifulPosition.x, r.beautifulPosition.y)
                    ),
                    b(2),
                    x("ngIf", r.tooltip),
                    b(1),
                    x("ngIf", r.tooltipTemplate));
              },
              dependencies: [qo, be, zy, Di],
              styles: [
                ".tooltip[_ngcontent-%COMP%]{position:absolute;top:100%;left:10%;opacity:0;visibility:hidden;transition:opacity .5s;pointer-events:none;background-color:#111111eb;padding:10px 20px;border-radius:4px}.tooltip.visible[_ngcontent-%COMP%]{opacity:1;visibility:visible;box-shadow:0 2px 2px #0003,0 3px 1px -2px #00000029,0 1px 5px #0000004d;z-index:100}.tooltip[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-size:18px;margin:10px 50px 10px 0}.tooltip[_ngcontent-%COMP%]   .descr[_ngcontent-%COMP%]{font-size:14px}",
              ],
            }));
          }
          return e;
        })(),
        Kce = (() => {
          class e {
            constructor() {
              this.title = "alchy-angular";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵcmp = U({
              type: e,
              selectors: [["app-root"]],
              decls: 4,
              vars: 0,
              template: function (i, r) {
                1 & i &&
                  k(0, "router-outlet")(1, "notification-factory")(
                    2,
                    "alchy-floating-text-factory"
                  )(3, "alchy-tooltip");
              },
              dependencies: [a0, Lce, Hce, Yce],
            }));
          }
          return e;
        })(),
        Zce = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr] }));
          }
          return e;
        })(),
        Qce = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr] }));
          }
          return e;
        })(),
        Xce = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr] }));
          }
          return e;
        })(),
        xF = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr] }));
          }
          return e;
        })(),
        Jce = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e }));
            static #n = (this.ɵinj = Rt({ imports: [Pr, xF] }));
          }
          return e;
        })(),
        eue = (() => {
          class e {
            static #e = (this.ɵfac = function (i) {
              return new (i || e)();
            });
            static #t = (this.ɵmod = Vt({ type: e, bootstrap: [Kce] }));
            static #n = (this.ɵinj = Rt({
              providers: [Qt],
              imports: [
                oT,
                e$,
                Mce,
                cX,
                Jce,
                Zce,
                Cv,
                xF,
                rW,
                Zae,
                Qce,
                Cv,
                Xce,
                sle,
              ],
            }));
          }
          return e;
        })();
      Zj()
        .bootstrapModule(eue)
        .catch((e) => console.error(e));
    },
    167: (Qi, Xi, Zr) => {
      var qe,
        ii = (function () {
          var Ke = String.fromCharCode,
            Qr =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
            qt =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",
            _r = {};
          function yr(J, te) {
            if (!_r[J]) {
              _r[J] = {};
              for (var Ee = 0; Ee < J.length; Ee++) _r[J][J.charAt(Ee)] = Ee;
            }
            return _r[J][te];
          }
          var Ut = {
            compressToBase64: function (J) {
              if (null == J) return "";
              var te = Ut._compress(J, 6, function (Ee) {
                return Qr.charAt(Ee);
              });
              switch (te.length % 4) {
                default:
                case 0:
                  return te;
                case 1:
                  return te + "===";
                case 2:
                  return te + "==";
                case 3:
                  return te + "=";
              }
            },
            decompressFromBase64: function (J) {
              return null == J
                ? ""
                : "" == J
                ? null
                : Ut._decompress(J.length, 32, function (te) {
                    return yr(Qr, J.charAt(te));
                  });
            },
            compressToUTF16: function (J) {
              return null == J
                ? ""
                : Ut._compress(J, 15, function (te) {
                    return Ke(te + 32);
                  }) + " ";
            },
            decompressFromUTF16: function (J) {
              return null == J
                ? ""
                : "" == J
                ? null
                : Ut._decompress(J.length, 16384, function (te) {
                    return J.charCodeAt(te) - 32;
                  });
            },
            compressToUint8Array: function (J) {
              for (
                var te = Ut.compress(J),
                  Ee = new Uint8Array(2 * te.length),
                  A = 0,
                  R = te.length;
                A < R;
                A++
              ) {
                var N = te.charCodeAt(A);
                (Ee[2 * A] = N >>> 8), (Ee[2 * A + 1] = N % 256);
              }
              return Ee;
            },
            decompressFromUint8Array: function (J) {
              if (null == J) return Ut.decompress(J);
              for (
                var te = new Array(J.length / 2), Ee = 0, A = te.length;
                Ee < A;
                Ee++
              )
                te[Ee] = 256 * J[2 * Ee] + J[2 * Ee + 1];
              var R = [];
              return (
                te.forEach(function (N) {
                  R.push(Ke(N));
                }),
                Ut.decompress(R.join(""))
              );
            },
            compressToEncodedURIComponent: function (J) {
              return null == J
                ? ""
                : Ut._compress(J, 6, function (te) {
                    return qt.charAt(te);
                  });
            },
            decompressFromEncodedURIComponent: function (J) {
              return null == J
                ? ""
                : "" == J
                ? null
                : ((J = J.replace(/ /g, "+")),
                  Ut._decompress(J.length, 32, function (te) {
                    return yr(qt, J.charAt(te));
                  }));
            },
            compress: function (J) {
              return Ut._compress(J, 16, function (te) {
                return Ke(te);
              });
            },
            _compress: function (J, te, Ee) {
              if (null == J) return "";
              var A,
                R,
                St,
                N = {},
                H = {},
                j = "",
                at = "",
                tt = "",
                ie = 2,
                fe = 3,
                de = 2,
                Ve = [],
                ee = 0,
                Z = 0;
              for (St = 0; St < J.length; St += 1)
                if (
                  ((j = J.charAt(St)),
                  Object.prototype.hasOwnProperty.call(N, j) ||
                    ((N[j] = fe++), (H[j] = !0)),
                  (at = tt + j),
                  Object.prototype.hasOwnProperty.call(N, at))
                )
                  tt = at;
                else {
                  if (Object.prototype.hasOwnProperty.call(H, tt)) {
                    if (tt.charCodeAt(0) < 256) {
                      for (A = 0; A < de; A++)
                        (ee <<= 1),
                          Z == te - 1
                            ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                            : Z++;
                      for (R = tt.charCodeAt(0), A = 0; A < 8; A++)
                        (ee = (ee << 1) | (1 & R)),
                          Z == te - 1
                            ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                            : Z++,
                          (R >>= 1);
                    } else {
                      for (R = 1, A = 0; A < de; A++)
                        (ee = (ee << 1) | R),
                          Z == te - 1
                            ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                            : Z++,
                          (R = 0);
                      for (R = tt.charCodeAt(0), A = 0; A < 16; A++)
                        (ee = (ee << 1) | (1 & R)),
                          Z == te - 1
                            ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                            : Z++,
                          (R >>= 1);
                    }
                    0 == --ie && ((ie = Math.pow(2, de)), de++), delete H[tt];
                  } else
                    for (R = N[tt], A = 0; A < de; A++)
                      (ee = (ee << 1) | (1 & R)),
                        Z == te - 1
                          ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                          : Z++,
                        (R >>= 1);
                  0 == --ie && ((ie = Math.pow(2, de)), de++),
                    (N[at] = fe++),
                    (tt = String(j));
                }
              if ("" !== tt) {
                if (Object.prototype.hasOwnProperty.call(H, tt)) {
                  if (tt.charCodeAt(0) < 256) {
                    for (A = 0; A < de; A++)
                      (ee <<= 1),
                        Z == te - 1
                          ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                          : Z++;
                    for (R = tt.charCodeAt(0), A = 0; A < 8; A++)
                      (ee = (ee << 1) | (1 & R)),
                        Z == te - 1
                          ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                          : Z++,
                        (R >>= 1);
                  } else {
                    for (R = 1, A = 0; A < de; A++)
                      (ee = (ee << 1) | R),
                        Z == te - 1
                          ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                          : Z++,
                        (R = 0);
                    for (R = tt.charCodeAt(0), A = 0; A < 16; A++)
                      (ee = (ee << 1) | (1 & R)),
                        Z == te - 1
                          ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0))
                          : Z++,
                        (R >>= 1);
                  }
                  0 == --ie && ((ie = Math.pow(2, de)), de++), delete H[tt];
                } else
                  for (R = N[tt], A = 0; A < de; A++)
                    (ee = (ee << 1) | (1 & R)),
                      Z == te - 1 ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0)) : Z++,
                      (R >>= 1);
                0 == --ie && ((ie = Math.pow(2, de)), de++);
              }
              for (R = 2, A = 0; A < de; A++)
                (ee = (ee << 1) | (1 & R)),
                  Z == te - 1 ? ((Z = 0), Ve.push(Ee(ee)), (ee = 0)) : Z++,
                  (R >>= 1);
              for (;;) {
                if (((ee <<= 1), Z == te - 1)) {
                  Ve.push(Ee(ee));
                  break;
                }
                Z++;
              }
              return Ve.join("");
            },
            decompress: function (J) {
              return null == J
                ? ""
                : "" == J
                ? null
                : Ut._decompress(J.length, 32768, function (te) {
                    return J.charCodeAt(te);
                  });
            },
            _decompress: function (J, te, Ee) {
              var ie,
                fe,
                de,
                Ve,
                ee,
                Z,
                St,
                A = [],
                N = 4,
                H = 4,
                j = 3,
                at = "",
                tt = [],
                ce = { val: Ee(0), position: te, index: 1 };
              for (ie = 0; ie < 3; ie += 1) A[ie] = ie;
              for (de = 0, ee = Math.pow(2, 2), Z = 1; Z != ee; )
                (Ve = ce.val & ce.position),
                  (ce.position >>= 1),
                  0 == ce.position &&
                    ((ce.position = te), (ce.val = Ee(ce.index++))),
                  (de |= (Ve > 0 ? 1 : 0) * Z),
                  (Z <<= 1);
              switch (de) {
                case 0:
                  for (de = 0, ee = Math.pow(2, 8), Z = 1; Z != ee; )
                    (Ve = ce.val & ce.position),
                      (ce.position >>= 1),
                      0 == ce.position &&
                        ((ce.position = te), (ce.val = Ee(ce.index++))),
                      (de |= (Ve > 0 ? 1 : 0) * Z),
                      (Z <<= 1);
                  St = Ke(de);
                  break;
                case 1:
                  for (de = 0, ee = Math.pow(2, 16), Z = 1; Z != ee; )
                    (Ve = ce.val & ce.position),
                      (ce.position >>= 1),
                      0 == ce.position &&
                        ((ce.position = te), (ce.val = Ee(ce.index++))),
                      (de |= (Ve > 0 ? 1 : 0) * Z),
                      (Z <<= 1);
                  St = Ke(de);
                  break;
                case 2:
                  return "";
              }
              for (A[3] = St, fe = St, tt.push(St); ; ) {
                if (ce.index > J) return "";
                for (de = 0, ee = Math.pow(2, j), Z = 1; Z != ee; )
                  (Ve = ce.val & ce.position),
                    (ce.position >>= 1),
                    0 == ce.position &&
                      ((ce.position = te), (ce.val = Ee(ce.index++))),
                    (de |= (Ve > 0 ? 1 : 0) * Z),
                    (Z <<= 1);
                switch ((St = de)) {
                  case 0:
                    for (de = 0, ee = Math.pow(2, 8), Z = 1; Z != ee; )
                      (Ve = ce.val & ce.position),
                        (ce.position >>= 1),
                        0 == ce.position &&
                          ((ce.position = te), (ce.val = Ee(ce.index++))),
                        (de |= (Ve > 0 ? 1 : 0) * Z),
                        (Z <<= 1);
                    (A[H++] = Ke(de)), (St = H - 1), N--;
                    break;
                  case 1:
                    for (de = 0, ee = Math.pow(2, 16), Z = 1; Z != ee; )
                      (Ve = ce.val & ce.position),
                        (ce.position >>= 1),
                        0 == ce.position &&
                          ((ce.position = te), (ce.val = Ee(ce.index++))),
                        (de |= (Ve > 0 ? 1 : 0) * Z),
                        (Z <<= 1);
                    (A[H++] = Ke(de)), (St = H - 1), N--;
                    break;
                  case 2:
                    return tt.join("");
                }
                if ((0 == N && ((N = Math.pow(2, j)), j++), A[St])) at = A[St];
                else {
                  if (St !== H) return null;
                  at = fe + fe.charAt(0);
                }
                tt.push(at),
                  (A[H++] = fe + at.charAt(0)),
                  (fe = at),
                  0 == --N && ((N = Math.pow(2, j)), j++);
              }
            },
          };
          return Ut;
        })();
      void 0 !==
        (qe = function () {
          return ii;
        }.call(Xi, Zr, Xi, Qi)) && (Qi.exports = qe);
    },
    518: function (Qi, Xi, Zr) {
      var qe;
      !(function (ii, Ke) {
        "use strict";
        var yr = "function",
          Ut = "undefined",
          J = "object",
          te = "string",
          A = "model",
          R = "name",
          N = "type",
          H = "vendor",
          j = "version",
          at = "architecture",
          tt = "console",
          ie = "mobile",
          fe = "tablet",
          de = "smarttv",
          Ve = "wearable",
          ee = "embedded",
          St = "Amazon",
          ce = "Apple",
          Rd = "BlackBerry",
          Ji = "Browser",
          pi = "Chrome",
          ws = "Firefox",
          wt = "Google",
          ic = "Microsoft",
          Nd = "Motorola",
          Ze = "Opera",
          Cs = "Samsung",
          kt = "Sony",
          Tt = "Xiaomi",
          oc = "Zebra",
          Ae = "Facebook",
          ga = "Chromium OS",
          ma = function (Re) {
            for (var nt = {}, Se = 0; Se < Re.length; Se++)
              nt[Re[Se].toUpperCase()] = Re[Se];
            return nt;
          },
          Bd = function (Re, nt) {
            return typeof Re === te && -1 !== xs(nt).indexOf(xs(Re));
          },
          xs = function (Re) {
            return Re.toLowerCase();
          },
          Vd = function (Re, nt) {
            if (typeof Re === te)
              return (
                (Re = Re.replace(/^\s\s*/, "")),
                typeof nt === Ut ? Re : Re.substring(0, 500)
              );
          },
          _a = function (Re, nt) {
            for (var _t, Sn, gi, Je, ge, Ii, Se = 0; Se < nt.length && !ge; ) {
              var lc = nt[Se],
                jd = nt[Se + 1];
              for (_t = Sn = 0; _t < lc.length && !ge && lc[_t]; )
                if ((ge = lc[_t++].exec(Re)))
                  for (gi = 0; gi < jd.length; gi++)
                    (Ii = ge[++Sn]),
                      typeof (Je = jd[gi]) === J && Je.length > 0
                        ? 2 === Je.length
                          ? (this[Je[0]] =
                              typeof Je[1] == yr ? Je[1].call(this, Ii) : Je[1])
                          : 3 === Je.length
                          ? (this[Je[0]] =
                              typeof Je[1] !== yr || (Je[1].exec && Je[1].test)
                                ? Ii
                                  ? Ii.replace(Je[1], Je[2])
                                  : Ke
                                : Ii
                                ? Je[1].call(this, Ii, Je[2])
                                : Ke)
                          : 4 === Je.length &&
                            (this[Je[0]] = Ii
                              ? Je[3].call(this, Ii.replace(Je[1], Je[2]))
                              : Ke)
                        : (this[Je] = Ii || Ke);
              Se += 2;
            }
          },
          zd = function (Re, nt) {
            for (var Se in nt)
              if (typeof nt[Se] === J && nt[Se].length > 0) {
                for (var _t = 0; _t < nt[Se].length; _t++)
                  if (Bd(nt[Se][_t], Re)) return "?" === Se ? Ke : Se;
              } else if (Bd(nt[Se], Re)) return "?" === Se ? Ke : Se;
            return Re;
          },
          ac = {
            ME: "4.90",
            "NT 3.11": "NT3.51",
            "NT 4.0": "NT4.0",
            2e3: "NT 5.0",
            XP: ["NT 5.1", "NT 5.2"],
            Vista: "NT 6.0",
            7: "NT 6.1",
            8: "NT 6.2",
            8.1: "NT 6.3",
            10: ["NT 6.4", "NT 10.0"],
            RT: "ARM",
          },
          Hd = {
            browser: [
              [/\b(?:crmo|crios)\/([\w\.]+)/i],
              [j, [R, "Chrome"]],
              [/edg(?:e|ios|a)?\/([\w\.]+)/i],
              [j, [R, "Edge"]],
              [
                /(opera mini)\/([-\w\.]+)/i,
                /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
                /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i,
              ],
              [R, j],
              [/opios[\/ ]+([\w\.]+)/i],
              [j, [R, Ze + " Mini"]],
              [/\bopr\/([\w\.]+)/i],
              [j, [R, Ze]],
              [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],
              [j, [R, "Baidu"]],
              [
                /(kindle)\/([\w\.]+)/i,
                /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i,
                /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i,
                /(?:ms|\()(ie) ([\w\.]+)/i,
                /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i,
                /(heytap|ovi)browser\/([\d\.]+)/i,
                /(weibo)__([\d\.]+)/i,
              ],
              [R, j],
              [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
              [j, [R, "UC" + Ji]],
              [
                /microm.+\bqbcore\/([\w\.]+)/i,
                /\bqbcore\/([\w\.]+).+microm/i,
                /micromessenger\/([\w\.]+)/i,
              ],
              [j, [R, "WeChat"]],
              [/konqueror\/([\w\.]+)/i],
              [j, [R, "Konqueror"]],
              [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
              [j, [R, "IE"]],
              [/ya(?:search)?browser\/([\w\.]+)/i],
              [j, [R, "Yandex"]],
              [/slbrowser\/([\w\.]+)/i],
              [j, [R, "Smart Lenovo " + Ji]],
              [/(avast|avg)\/([\w\.]+)/i],
              [[R, /(.+)/, "$1 Secure " + Ji], j],
              [/\bfocus\/([\w\.]+)/i],
              [j, [R, ws + " Focus"]],
              [/\bopt\/([\w\.]+)/i],
              [j, [R, Ze + " Touch"]],
              [/coc_coc\w+\/([\w\.]+)/i],
              [j, [R, "Coc Coc"]],
              [/dolfin\/([\w\.]+)/i],
              [j, [R, "Dolphin"]],
              [/coast\/([\w\.]+)/i],
              [j, [R, Ze + " Coast"]],
              [/miuibrowser\/([\w\.]+)/i],
              [j, [R, "MIUI " + Ji]],
              [/fxios\/([-\w\.]+)/i],
              [j, [R, ws]],
              [/\bqihu|(qi?ho?o?|360)browser/i],
              [[R, "360 " + Ji]],
              [/(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i],
              [[R, /(.+)/, "$1 " + Ji], j],
              [/samsungbrowser\/([\w\.]+)/i],
              [j, [R, Cs + " Internet"]],
              [/(comodo_dragon)\/([\w\.]+)/i],
              [[R, /_/g, " "], j],
              [/metasr[\/ ]?([\d\.]+)/i],
              [j, [R, "Sogou Explorer"]],
              [/(sogou)mo\w+\/([\d\.]+)/i],
              [[R, "Sogou Mobile"], j],
              [
                /(electron)\/([\w\.]+) safari/i,
                /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
                /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i,
              ],
              [R, j],
              [/(lbbrowser)/i, /\[(linkedin)app\]/i],
              [R],
              [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
              [[R, Ae], j],
              [
                /(Klarna)\/([\w\.]+)/i,
                /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
                /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
                /safari (line)\/([\w\.]+)/i,
                /\b(line)\/([\w\.]+)\/iab/i,
                /(alipay)client\/([\w\.]+)/i,
                /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i,
              ],
              [R, j],
              [/\bgsa\/([\w\.]+) .*safari\//i],
              [j, [R, "GSA"]],
              [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],
              [j, [R, "TikTok"]],
              [/headlesschrome(?:\/([\w\.]+)| )/i],
              [j, [R, pi + " Headless"]],
              [/ wv\).+(chrome)\/([\w\.]+)/i],
              [[R, pi + " WebView"], j],
              [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
              [j, [R, "Android " + Ji]],
              [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
              [R, j],
              [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
              [j, [R, "Mobile Safari"]],
              [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
              [j, R],
              [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
              [
                R,
                [
                  j,
                  zd,
                  {
                    "1.0": "/8",
                    1.2: "/1",
                    1.3: "/3",
                    "2.0": "/412",
                    "2.0.2": "/416",
                    "2.0.3": "/417",
                    "2.0.4": "/419",
                    "?": "/",
                  },
                ],
              ],
              [/(webkit|khtml)\/([\w\.]+)/i],
              [R, j],
              [/(navigator|netscape\d?)\/([-\w\.]+)/i],
              [[R, "Netscape"], j],
              [/mobile vr; rv:([\w\.]+)\).+firefox/i],
              [j, [R, ws + " Reality"]],
              [
                /ekiohf.+(flow)\/([\w\.]+)/i,
                /(swiftfox)/i,
                /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i,
                /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
                /(firefox)\/([\w\.]+)/i,
                /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
                /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
                /(links) \(([\w\.]+)/i,
                /panasonic;(viera)/i,
              ],
              [R, j],
              [/(cobalt)\/([\w\.]+)/i],
              [R, [j, /master.|lts./, ""]],
            ],
            cpu: [
              [/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
              [[at, "amd64"]],
              [/(ia32(?=;))/i],
              [[at, xs]],
              [/((?:i[346]|x)86)[;\)]/i],
              [[at, "ia32"]],
              [/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
              [[at, "arm64"]],
              [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
              [[at, "armhf"]],
              [/windows (ce|mobile); ppc;/i],
              [[at, "arm"]],
              [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
              [[at, /ower/, "", xs]],
              [/(sun4\w)[;\)]/i],
              [[at, "sparc"]],
              [
                /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i,
              ],
              [[at, xs]],
            ],
            device: [
              [
                /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i,
              ],
              [A, [H, Cs], [N, fe]],
              [
                /\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
                /samsung[- ]([-\w]+)/i,
                /sec-(sgh\w+)/i,
              ],
              [A, [H, Cs], [N, ie]],
              [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],
              [A, [H, ce], [N, ie]],
              [
                /\((ipad);[-\w\),; ]+apple/i,
                /applecoremedia\/[\w\.]+ \((ipad)/i,
                /\b(ipad)\d\d?,\d\d?[;\]].+ios/i,
              ],
              [A, [H, ce], [N, fe]],
              [/(macintosh);/i],
              [A, [H, ce]],
              [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
              [A, [H, "Sharp"], [N, ie]],
              [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
              [A, [H, "Huawei"], [N, fe]],
              [
                /(?:huawei|honor)([-\w ]+)[;\)]/i,
                /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i,
              ],
              [A, [H, "Huawei"], [N, ie]],
              [
                /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
                /\b; (\w+) build\/hm\1/i,
                /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
                /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
                /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
                /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i,
              ],
              [
                [A, /_/g, " "],
                [H, Tt],
                [N, ie],
              ],
              [
                /oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
                /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i,
              ],
              [
                [A, /_/g, " "],
                [H, Tt],
                [N, fe],
              ],
              [
                /; (\w+) bui.+ oppo/i,
                /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i,
              ],
              [A, [H, "OPPO"], [N, ie]],
              [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
              [A, [H, "Vivo"], [N, ie]],
              [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],
              [A, [H, "Realme"], [N, ie]],
              [
                /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
                /\bmot(?:orola)?[- ](\w*)/i,
                /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i,
              ],
              [A, [H, Nd], [N, ie]],
              [/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
              [A, [H, Nd], [N, fe]],
              [/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],
              [A, [H, "LG"], [N, fe]],
              [
                /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
                /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
                /\blg-?([\d\w]+) bui/i,
              ],
              [A, [H, "LG"], [N, ie]],
              [
                /(ideatab[-\w ]+)/i,
                /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i,
              ],
              [A, [H, "Lenovo"], [N, fe]],
              [/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i],
              [
                [A, /_/g, " "],
                [H, "Nokia"],
                [N, ie],
              ],
              [/(pixel c)\b/i],
              [A, [H, wt], [N, fe]],
              [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
              [A, [H, wt], [N, ie]],
              [
                /droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i,
              ],
              [A, [H, kt], [N, ie]],
              [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
              [
                [A, "Xperia Tablet"],
                [H, kt],
                [N, fe],
              ],
              [
                / (kb2005|in20[12]5|be20[12][59])\b/i,
                /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i,
              ],
              [A, [H, "OnePlus"], [N, ie]],
              [
                /(alexa)webm/i,
                /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i,
                /(kf[a-z]+)( bui|\)).+silk\//i,
              ],
              [A, [H, St], [N, fe]],
              [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
              [
                [A, /(.+)/g, "Fire Phone $1"],
                [H, St],
                [N, ie],
              ],
              [/(playbook);[-\w\),; ]+(rim)/i],
              [A, H, [N, fe]],
              [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
              [A, [H, Rd], [N, ie]],
              [
                /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i,
              ],
              [A, [H, "ASUS"], [N, fe]],
              [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
              [A, [H, "ASUS"], [N, ie]],
              [/(nexus 9)/i],
              [A, [H, "HTC"], [N, fe]],
              [
                /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
                /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
                /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i,
              ],
              [H, [A, /_/g, " "], [N, ie]],
              [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
              [A, [H, "Acer"], [N, fe]],
              [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
              [A, [H, "Meizu"], [N, ie]],
              [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],
              [A, [H, "Ulefone"], [N, ie]],
              [
                /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i,
                /(hp) ([\w ]+\w)/i,
                /(asus)-?(\w+)/i,
                /(microsoft); (lumia[\w ]+)/i,
                /(lenovo)[-_ ]?([-\w]+)/i,
                /(jolla)/i,
                /(oppo) ?([\w ]+) bui/i,
              ],
              [H, A, [N, ie]],
              [
                /(kobo)\s(ereader|touch)/i,
                /(archos) (gamepad2?)/i,
                /(hp).+(touchpad(?!.+tablet)|tablet)/i,
                /(kindle)\/([\w\.]+)/i,
                /(nook)[\w ]+build\/(\w+)/i,
                /(dell) (strea[kpr\d ]*[\dko])/i,
                /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
                /(trinity)[- ]*(t\d{3}) bui/i,
                /(gigaset)[- ]+(q\w{1,9}) bui/i,
                /(vodafone) ([\w ]+)(?:\)| bui)/i,
              ],
              [H, A, [N, fe]],
              [/(surface duo)/i],
              [A, [H, ic], [N, fe]],
              [/droid [\d\.]+; (fp\du?)(?: b|\))/i],
              [A, [H, "Fairphone"], [N, ie]],
              [/(u304aa)/i],
              [A, [H, "AT&T"], [N, ie]],
              [/\bsie-(\w*)/i],
              [A, [H, "Siemens"], [N, ie]],
              [/\b(rct\w+) b/i],
              [A, [H, "RCA"], [N, fe]],
              [/\b(venue[\d ]{2,7}) b/i],
              [A, [H, "Dell"], [N, fe]],
              [/\b(q(?:mv|ta)\w+) b/i],
              [A, [H, "Verizon"], [N, fe]],
              [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
              [A, [H, "Barnes & Noble"], [N, fe]],
              [/\b(tm\d{3}\w+) b/i],
              [A, [H, "NuVision"], [N, fe]],
              [/\b(k88) b/i],
              [A, [H, "ZTE"], [N, fe]],
              [/\b(nx\d{3}j) b/i],
              [A, [H, "ZTE"], [N, ie]],
              [/\b(gen\d{3}) b.+49h/i],
              [A, [H, "Swiss"], [N, ie]],
              [/\b(zur\d{3}) b/i],
              [A, [H, "Swiss"], [N, fe]],
              [/\b((zeki)?tb.*\b) b/i],
              [A, [H, "Zeki"], [N, fe]],
              [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
              [[H, "Dragon Touch"], A, [N, fe]],
              [/\b(ns-?\w{0,9}) b/i],
              [A, [H, "Insignia"], [N, fe]],
              [/\b((nxa|next)-?\w{0,9}) b/i],
              [A, [H, "NextBook"], [N, fe]],
              [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
              [[H, "Voice"], A, [N, ie]],
              [/\b(lvtel\-)?(v1[12]) b/i],
              [[H, "LvTel"], A, [N, ie]],
              [/\b(ph-1) /i],
              [A, [H, "Essential"], [N, ie]],
              [/\b(v(100md|700na|7011|917g).*\b) b/i],
              [A, [H, "Envizen"], [N, fe]],
              [/\b(trio[-\w\. ]+) b/i],
              [A, [H, "MachSpeed"], [N, fe]],
              [/\btu_(1491) b/i],
              [A, [H, "Rotor"], [N, fe]],
              [/(shield[\w ]+) b/i],
              [A, [H, "Nvidia"], [N, fe]],
              [/(sprint) (\w+)/i],
              [H, A, [N, ie]],
              [/(kin\.[onetw]{3})/i],
              [
                [A, /\./g, " "],
                [H, ic],
                [N, ie],
              ],
              [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
              [A, [H, oc], [N, fe]],
              [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
              [A, [H, oc], [N, ie]],
              [/smart-tv.+(samsung)/i],
              [H, [N, de]],
              [/hbbtv.+maple;(\d+)/i],
              [
                [A, /^/, "SmartTV"],
                [H, Cs],
                [N, de],
              ],
              [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
              [
                [H, "LG"],
                [N, de],
              ],
              [/(apple) ?tv/i],
              [H, [A, ce + " TV"], [N, de]],
              [/crkey/i],
              [
                [A, pi + "cast"],
                [H, wt],
                [N, de],
              ],
              [/droid.+aft(\w+)( bui|\))/i],
              [A, [H, St], [N, de]],
              [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
              [A, [H, "Sharp"], [N, de]],
              [/(bravia[\w ]+)( bui|\))/i],
              [A, [H, kt], [N, de]],
              [/(mitv-\w{5}) bui/i],
              [A, [H, Tt], [N, de]],
              [/Hbbtv.*(technisat) (.*);/i],
              [H, A, [N, de]],
              [
                /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
                /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i,
              ],
              [
                [H, Vd],
                [A, Vd],
                [N, de],
              ],
              [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
              [[N, de]],
              [/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
              [H, A, [N, tt]],
              [/droid.+; (shield) bui/i],
              [A, [H, "Nvidia"], [N, tt]],
              [/(playstation [345portablevi]+)/i],
              [A, [H, kt], [N, tt]],
              [/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
              [A, [H, ic], [N, tt]],
              [/((pebble))app/i],
              [H, A, [N, Ve]],
              [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],
              [A, [H, ce], [N, Ve]],
              [/droid.+; (glass) \d/i],
              [A, [H, wt], [N, Ve]],
              [/droid.+; (wt63?0{2,3})\)/i],
              [A, [H, oc], [N, Ve]],
              [/(quest( 2| pro)?)/i],
              [A, [H, Ae], [N, Ve]],
              [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
              [H, [N, ee]],
              [/(aeobc)\b/i],
              [A, [H, St], [N, ee]],
              [
                /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i,
              ],
              [A, [N, ie]],
              [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
              [A, [N, fe]],
              [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
              [[N, fe]],
              [
                /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i,
              ],
              [[N, ie]],
              [/(android[-\w\. ]{0,9});.+buil/i],
              [A, [H, "Generic"]],
            ],
            engine: [
              [/windows.+ edge\/([\w\.]+)/i],
              [j, [R, "EdgeHTML"]],
              [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
              [j, [R, "Blink"]],
              [
                /(presto)\/([\w\.]+)/i,
                /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
                /ekioh(flow)\/([\w\.]+)/i,
                /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
                /(icab)[\/ ]([23]\.[\d\.]+)/i,
                /\b(libweb)/i,
              ],
              [R, j],
              [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
              [j, R],
            ],
            os: [
              [/microsoft (windows) (vista|xp)/i],
              [R, j],
              [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],
              [R, [j, zd, ac]],
              [
                /windows nt 6\.2; (arm)/i,
                /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
                /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i,
              ],
              [
                [j, zd, ac],
                [R, "Windows"],
              ],
              [
                /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
                /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
                /cfnetwork\/.+darwin/i,
              ],
              [
                [j, /_/g, "."],
                [R, "iOS"],
              ],
              [
                /(mac os x) ?([\w\. ]*)/i,
                /(macintosh|mac_powerpc\b)(?!.+haiku)/i,
              ],
              [
                [R, "Mac OS"],
                [j, /_/g, "."],
              ],
              [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
              [j, R],
              [
                /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,
                /(blackberry)\w*\/([\w\.]*)/i,
                /(tizen|kaios)[\/ ]([\w\.]+)/i,
                /\((series40);/i,
              ],
              [R, j],
              [/\(bb(10);/i],
              [j, [R, Rd]],
              [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
              [j, [R, "Symbian"]],
              [
                /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i,
              ],
              [j, [R, ws + " OS"]],
              [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
              [j, [R, "webOS"]],
              [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],
              [j, [R, "watchOS"]],
              [/crkey\/([\d\.]+)/i],
              [j, [R, pi + "cast"]],
              [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],
              [[R, ga], j],
              [
                /panasonic;(viera)/i,
                /(netrange)mmh/i,
                /(nettv)\/(\d+\.[\w\.]+)/i,
                /(nintendo|playstation) ([wids345portablevuch]+)/i,
                /(xbox); +xbox ([^\);]+)/i,
                /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
                /(mint)[\/\(\) ]?(\w*)/i,
                /(mageia|vectorlinux)[; ]/i,
                /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
                /(hurd|linux) ?([\w\.]*)/i,
                /(gnu) ?([\w\.]*)/i,
                /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
                /(haiku) (\w+)/i,
              ],
              [R, j],
              [/(sunos) ?([\w\.\d]*)/i],
              [[R, "Solaris"], j],
              [
                /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
                /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
                /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
                /(unix) ?([\w\.]*)/i,
              ],
              [R, j],
            ],
          },
          Dn = function (Re, nt) {
            if (
              (typeof Re === J && ((nt = Re), (Re = Ke)), !(this instanceof Dn))
            )
              return new Dn(Re, nt).getResult();
            var Se = typeof ii !== Ut && ii.navigator ? ii.navigator : Ke,
              _t = Re || (Se && Se.userAgent ? Se.userAgent : ""),
              Sn = Se && Se.userAgentData ? Se.userAgentData : Ke,
              gi = nt
                ? (function (Re, nt) {
                    var Se = {};
                    for (var _t in Re)
                      Se[_t] =
                        nt[_t] && nt[_t].length % 2 == 0
                          ? nt[_t].concat(Re[_t])
                          : Re[_t];
                    return Se;
                  })(Hd, nt)
                : Hd,
              Je = Se && Se.userAgent == _t;
            return (
              (this.getBrowser = function () {
                var ge = {};
                return (
                  (ge[R] = Ke),
                  (ge[j] = Ke),
                  _a.call(ge, _t, gi.browser),
                  (ge.major = (function (Re) {
                    return typeof Re === te
                      ? Re.replace(/[^\d\.]/g, "").split(".")[0]
                      : Ke;
                  })(ge[j])),
                  Je &&
                    Se &&
                    Se.brave &&
                    typeof Se.brave.isBrave == yr &&
                    (ge[R] = "Brave"),
                  ge
                );
              }),
              (this.getCPU = function () {
                var ge = {};
                return (ge[at] = Ke), _a.call(ge, _t, gi.cpu), ge;
              }),
              (this.getDevice = function () {
                var ge = {};
                return (
                  (ge[H] = Ke),
                  (ge[A] = Ke),
                  (ge[N] = Ke),
                  _a.call(ge, _t, gi.device),
                  Je && !ge[N] && Sn && Sn.mobile && (ge[N] = ie),
                  Je &&
                    "Macintosh" == ge[A] &&
                    Se &&
                    typeof Se.standalone !== Ut &&
                    Se.maxTouchPoints &&
                    Se.maxTouchPoints > 2 &&
                    ((ge[A] = "iPad"), (ge[N] = fe)),
                  ge
                );
              }),
              (this.getEngine = function () {
                var ge = {};
                return (
                  (ge[R] = Ke), (ge[j] = Ke), _a.call(ge, _t, gi.engine), ge
                );
              }),
              (this.getOS = function () {
                var ge = {};
                return (
                  (ge[R] = Ke),
                  (ge[j] = Ke),
                  _a.call(ge, _t, gi.os),
                  Je &&
                    !ge[R] &&
                    Sn &&
                    "Unknown" != Sn.platform &&
                    (ge[R] = Sn.platform
                      .replace(/chrome os/i, ga)
                      .replace(/macos/i, "Mac OS")),
                  ge
                );
              }),
              (this.getResult = function () {
                return {
                  ua: this.getUA(),
                  browser: this.getBrowser(),
                  engine: this.getEngine(),
                  os: this.getOS(),
                  device: this.getDevice(),
                  cpu: this.getCPU(),
                };
              }),
              (this.getUA = function () {
                return _t;
              }),
              (this.setUA = function (ge) {
                return (
                  (_t = typeof ge === te && ge.length > 500 ? Vd(ge, 500) : ge),
                  this
                );
              }),
              this.setUA(_t),
              this
            );
          };
        (Dn.VERSION = "0.7.37"),
          (Dn.BROWSER = ma([R, j, "major"])),
          (Dn.CPU = ma([at])),
          (Dn.DEVICE = ma([A, H, N, tt, ie, de, fe, Ve, ee])),
          (Dn.ENGINE = Dn.OS = ma([R, j])),
          typeof Xi !== Ut
            ? (Qi.exports && (Xi = Qi.exports = Dn), (Xi.UAParser = Dn))
            : Zr.amdO
            ? (qe = function () {
                return Dn;
              }.call(Xi, Zr, Xi, Qi)) !== Ke && (Qi.exports = qe)
            : typeof ii !== Ut && (ii.UAParser = Dn);
        var Oo = typeof ii !== Ut && (ii.jQuery || ii.Zepto);
        if (Oo && !Oo.ua) {
          var Ao = new Dn();
          (Oo.ua = Ao.getResult()),
            (Oo.ua.get = function () {
              return Ao.getUA();
            }),
            (Oo.ua.set = function (Re) {
              Ao.setUA(Re);
              var nt = Ao.getResult();
              for (var Se in nt) Oo.ua[Se] = nt[Se];
            });
        }
      })("object" == typeof window ? window : this);
    },
  },
  (Qi) => {
    Qi((Qi.s = 915));
  },
]);
